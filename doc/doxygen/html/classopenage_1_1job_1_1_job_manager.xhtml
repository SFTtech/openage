<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::job::JobManager Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1job_1_1_job_manager.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1job_1_1_job_manager-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::job::JobManager Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::job::JobManager:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager__coll__graph.svg" width="186" height="411"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a523d19942779f3f34be97a8d56325196"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a523d19942779f3f34be97a8d56325196">JobManager</a> (int <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a>)</td></tr>
<tr class="separator:a523d19942779f3f34be97a8d56325196"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4478894f90499d1f560284a194e83a4f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a4478894f90499d1f560284a194e83a4f">~JobManager</a> ()</td></tr>
<tr class="separator:a4478894f90499d1f560284a194e83a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff7199a24223a2035252f1e40551d7b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a9ff7199a24223a2035252f1e40551d7b">JobManager</a> (const <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;)=delete</td></tr>
<tr class="separator:a9ff7199a24223a2035252f1e40551d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15828c010f14d1431aca51e57a264e55"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a15828c010f14d1431aca51e57a264e55">JobManager</a> (<a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:a15828c010f14d1431aca51e57a264e55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de8ff68186848c7635b2a4708d78d0c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a2de8ff68186848c7635b2a4708d78d0c">operator=</a> (const <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;)=delete</td></tr>
<tr class="separator:a2de8ff68186848c7635b2a4708d78d0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac043c6d8be13ad950dd598832a103f96"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ac043c6d8be13ad950dd598832a103f96">operator=</a> (<a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&amp;)=delete</td></tr>
<tr class="separator:ac043c6d8be13ad950dd598832a103f96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2bf41f6b397b1acf10665ad93425b5e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ab2bf41f6b397b1acf10665ad93425b5e">start</a> ()</td></tr>
<tr class="separator:ab2bf41f6b397b1acf10665ad93425b5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2cd8aa519595a5b0f50e796d5d00208"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ac2cd8aa519595a5b0f50e796d5d00208">stop</a> ()</td></tr>
<tr class="separator:ac2cd8aa519595a5b0f50e796d5d00208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab12ca59d9b54653a1106a405a23721b2"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:ab12ca59d9b54653a1106a405a23721b2"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ab12ca59d9b54653a1106a405a23721b2">enqueue</a> (<a class="el" href="namespaceopenage_1_1job.xhtml#a3e3a23d8e117aba5577c273f75ed630e">job_function_t</a>&lt; T &gt; function, <a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt; callback={})</td></tr>
<tr class="separator:ab12ca59d9b54653a1106a405a23721b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dff8502e9fd71030a50832953bbdb83"><td class="memTemplParams" colspan="2">template&lt;class T &gt; </td></tr>
<tr class="memitem:a1dff8502e9fd71030a50832953bbdb83"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a1dff8502e9fd71030a50832953bbdb83">enqueue</a> (<a class="el" href="namespaceopenage_1_1job.xhtml#aae93538aa9f8440cd9bbd3fe67d88e75">abortable_function_t</a>&lt; T &gt; function, <a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt; callback={})</td></tr>
<tr class="separator:a1dff8502e9fd71030a50832953bbdb83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26dd9d9c12b38ca0d7bf4c7e3c17ee36"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1job_1_1_job_group.xhtml">JobGroup</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a26dd9d9c12b38ca0d7bf4c7e3c17ee36">create_job_group</a> ()</td></tr>
<tr class="separator:a26dd9d9c12b38ca0d7bf4c7e3c17ee36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81b425a182f26b155c9f31de6b74d63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ae81b425a182f26b155c9f31de6b74d63">execute_callbacks</a> ()</td></tr>
<tr class="separator:ae81b425a182f26b155c9f31de6b74d63"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a0f13eaafaebb859ca13dad1884c18031"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a0f13eaafaebb859ca13dad1884c18031">enqueue_state</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt; state)</td></tr>
<tr class="separator:a0f13eaafaebb859ca13dad1884c18031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adefba3f5fb9db0931cca54c27ab31041"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#adefba3f5fb9db0931cca54c27ab31041">fetch_job</a> ()</td></tr>
<tr class="separator:adefba3f5fb9db0931cca54c27ab31041"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc81fa6e3be5780014ced15942a48fa2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#afc81fa6e3be5780014ced15942a48fa2">has_job</a> ()</td></tr>
<tr class="separator:afc81fa6e3be5780014ced15942a48fa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e5e1a95045cef58acd980ebdabc6285"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a9e5e1a95045cef58acd980ebdabc6285">finish_job</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt; job)</td></tr>
<tr class="separator:a9e5e1a95045cef58acd980ebdabc6285"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aabb63639d8326d816988f150aab64732"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a></td></tr>
<tr class="separator:aabb63639d8326d816988f150aab64732"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a572906422c0f2a770a1ba36f76e2a8cc"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">group_index</a></td></tr>
<tr class="separator:a572906422c0f2a770a1ba36f76e2a8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0854e76d52b714a2d7af57f333ea4e0e"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_worker.xhtml">Worker</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a></td></tr>
<tr class="separator:a0854e76d52b714a2d7af57f333ea4e0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69c457e906f144c30338f2bd2e2ca2ec"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">pending_jobs_mutex</a></td></tr>
<tr class="separator:a69c457e906f144c30338f2bd2e2ca2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac53233115d6b82623630131775aca1e8"><td class="memItemLeft" align="right" valign="top">std::queue&lt; std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a></td></tr>
<tr class="separator:ac53233115d6b82623630131775aca1e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c5ab0694cd354dc3f02ee94ab0fbbc1"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a8c5ab0694cd354dc3f02ee94ab0fbbc1">finished_jobs_mutex</a></td></tr>
<tr class="separator:a8c5ab0694cd354dc3f02ee94ab0fbbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4f9aa57c80b620acd97107ad7a7308e"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; size_t, std::vector&lt; std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt; &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a></td></tr>
<tr class="separator:ab4f9aa57c80b620acd97107ad7a7308e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49ed9cbf861e5492e4295399827ab22d"><td class="memItemLeft" align="right" valign="top">std::atomic_bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a></td></tr>
<tr class="separator:a49ed9cbf861e5492e4295399827ab22d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a9de4a9533dff2ecc0919852d4c05a67b"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml#a9de4a9533dff2ecc0919852d4c05a67b">Worker</a></td></tr>
<tr class="separator:a9de4a9533dff2ecc0919852d4c05a67b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A job manager can be used to execute functions within separate worker threads. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00029">29</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a523d19942779f3f34be97a8d56325196"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a523d19942779f3f34be97a8d56325196">&#9670;&nbsp;</a></span>JobManager() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::job::JobManager::JobManager </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>number_of_workers</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Create a new job manager with a specified number of worker threads. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    :</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a>{<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a>},</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">group_index</a>{0},</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a>{<span class="keyword">false</span>} {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a>; i++) {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a>.emplace_back(<span class="keyword">new</span> <a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a9de4a9533dff2ecc0919852d4c05a67b">Worker</a>{<span class="keyword">this</span>});</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    }</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a49ed9cbf861e5492e4295399827ab22d"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">openage::job::JobManager::is_running</a></div><div class="ttdeci">std::atomic_bool is_running</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00059">job_manager.h:59</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0854e76d52b714a2d7af57f333ea4e0e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">openage::job::JobManager::workers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Worker &gt; &gt; workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00041">job_manager.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a572906422c0f2a770a1ba36f76e2a8cc"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">openage::job::JobManager::group_index</a></div><div class="ttdeci">int group_index</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00038">job_manager.h:38</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_aabb63639d8326d816988f150aab64732"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">openage::job::JobManager::number_of_workers</a></div><div class="ttdeci">int number_of_workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00032">job_manager.h:32</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a9de4a9533dff2ecc0919852d4c05a67b"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a9de4a9533dff2ecc0919852d4c05a67b">openage::job::JobManager::Worker</a></div><div class="ttdeci">friend class Worker</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00152">job_manager.h:152</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8h_source.xhtml#l00032">number_of_workers</a>.</p>

</div>
</div>
<a id="a4478894f90499d1f560284a194e83a4f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4478894f90499d1f560284a194e83a4f">&#9670;&nbsp;</a></span>~JobManager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::job::JobManager::~JobManager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Destructor that stops the job manager if it is still running. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;                        {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac2cd8aa519595a5b0f50e796d5d00208">stop</a>();</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ac2cd8aa519595a5b0f50e796d5d00208"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ac2cd8aa519595a5b0f50e796d5d00208">openage::job::JobManager::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00043">job_manager.cpp:43</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8cpp_source.xhtml#l00043">stop()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_a4478894f90499d1f560284a194e83a4f_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a9ff7199a24223a2035252f1e40551d7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ff7199a24223a2035252f1e40551d7b">&#9670;&nbsp;</a></span>JobManager() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::job::JobManager::JobManager </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a15828c010f14d1431aca51e57a264e55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15828c010f14d1431aca51e57a264e55">&#9670;&nbsp;</a></span>JobManager() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::job::JobManager::JobManager </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a26dd9d9c12b38ca0d7bf4c7e3c17ee36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26dd9d9c12b38ca0d7bf4c7e3c17ee36">&#9670;&nbsp;</a></span>create_job_group()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job_group.xhtml">JobGroup</a> openage::job::JobManager::create_job_group </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates a job group, in order to be able to execute multiple jobs on the same worker thread. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00083">83</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                      {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">auto</span> index = this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">group_index</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">group_index</a> = (this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">group_index</a> + 1) % this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">return</span> JobGroup{this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a>[index].get()};</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0854e76d52b714a2d7af57f333ea4e0e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">openage::job::JobManager::workers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Worker &gt; &gt; workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00041">job_manager.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a572906422c0f2a770a1ba36f76e2a8cc"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a572906422c0f2a770a1ba36f76e2a8cc">openage::job::JobManager::group_index</a></div><div class="ttdeci">int group_index</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00038">job_manager.h:38</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_aabb63639d8326d816988f150aab64732"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">openage::job::JobManager::number_of_workers</a></div><div class="ttdeci">int number_of_workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00032">job_manager.h:32</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8h_source.xhtml#l00038">group_index</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00041">workers</a>.</p>

<p class="reference">Referenced by <a class="el" href="dynamic__resource_8cpp_source.xhtml#l00039">openage::audio::DynamicResource::use()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_a26dd9d9c12b38ca0d7bf4c7e3c17ee36_icgraph.svg" width="487" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab12ca59d9b54653a1106a405a23721b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab12ca59d9b54653a1106a405a23721b2">&#9670;&nbsp;</a></span>enqueue() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a>&lt;T&gt; openage::job::JobManager::enqueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#a3e3a23d8e117aba5577c273f75ed630e">job_function_t</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>callback</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Enqueues the given function into the job manager's queue, so that it will be dispatched by one of the worker threads. A lightweight <a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a> object is returned, that allows to keep track of the job's state.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">function</td><td>the function that is executed as background job </td></tr>
    <tr><td class="paramname">callback</td><td>the callback function that is executed, when the background job has finished </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00093">93</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                                                   {}) {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">auto</span> state = std::make_shared&lt;JobState&lt;T&gt;&gt;(<span class="keyword">function</span>, callback);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0f13eaafaebb859ca13dad1884c18031">enqueue_state</a>(state);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> Job&lt;T&gt;{state};</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0f13eaafaebb859ca13dad1884c18031"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0f13eaafaebb859ca13dad1884c18031">openage::job::JobManager::enqueue_state</a></div><div class="ttdeci">void enqueue_state(std::shared_ptr&lt; JobStateBase &gt; state)</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00090">job_manager.cpp:90</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="screenshot_8cpp_source.xhtml#l00051">openage::ScreenshotManager::save_screenshot()</a>, and <a class="el" href="game__spec_8cpp_source.xhtml#l00510">openage::GameSpecHandle::start_load_job()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ab12ca59d9b54653a1106a405a23721b2_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a1dff8502e9fd71030a50832953bbdb83"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dff8502e9fd71030a50832953bbdb83">&#9670;&nbsp;</a></span>enqueue() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a>&lt;T&gt; openage::job::JobManager::enqueue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#aae93538aa9f8440cd9bbd3fe67d88e75">abortable_function_t</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>callback</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Enqueues the given function into the job manager's queue, so that it will be dispatched by one of the worker threads. A lightweight job object is returned, that allows to keep track of the job's state. The passed function must accept a function object that returns, whether the job should be aborted at any time. Further it must accept a function that can be used to abort the execution of the function.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">function</td><td>the function that is executed as background job </td></tr>
    <tr><td class="paramname">callback</td><td>the callback function that is executed, when the background job has finished </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00113">113</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                   {}) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keyword">auto</span> state = std::make_shared&lt;AbortableJobState&lt;T&gt;&gt;(<span class="keyword">function</span>, callback);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0f13eaafaebb859ca13dad1884c18031">enqueue_state</a>(state);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> Job&lt;T&gt;{state};</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0f13eaafaebb859ca13dad1884c18031"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0f13eaafaebb859ca13dad1884c18031">openage::job::JobManager::enqueue_state</a></div><div class="ttdeci">void enqueue_state(std::shared_ptr&lt; JobStateBase &gt; state)</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00090">job_manager.cpp:90</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0f13eaafaebb859ca13dad1884c18031"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f13eaafaebb859ca13dad1884c18031">&#9670;&nbsp;</a></span>enqueue_state()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::JobManager::enqueue_state </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt;&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Enqueues the given job into the internal job queue. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00090">90</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                                                                {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">pending_jobs_mutex</a>};</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a>.push(state);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;worker : this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a>) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">worker</a>-&gt;notify();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ac53233115d6b82623630131775aca1e8"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">openage::job::JobManager::pending_jobs</a></div><div class="ttdeci">std::queue&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; pending_jobs</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00047">job_manager.h:47</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0854e76d52b714a2d7af57f333ea4e0e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">openage::job::JobManager::workers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Worker &gt; &gt; workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00041">job_manager.h:41</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::attr_type::worker</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a69c457e906f144c30338f2bd2e2ca2ec"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">openage::job::JobManager::pending_jobs_mutex</a></div><div class="ttdeci">std::mutex pending_jobs_mutex</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00044">job_manager.h:44</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>, <a class="el" href="job__manager_8h_source.xhtml#l00047">pending_jobs</a>, <a class="el" href="job__manager_8h_source.xhtml#l00044">pending_jobs_mutex</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::worker</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00041">workers</a>.</p>

</div>
</div>
<a id="ae81b425a182f26b155c9f31de6b74d63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae81b425a182f26b155c9f31de6b74d63">&#9670;&nbsp;</a></span>execute_callbacks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::JobManager::execute_callbacks </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Executes callbacks for all job's, that were created by the current thread and have finished. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00059">59</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                   {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment">// run callbacks for finished jobs on this thread id.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">size_t</span> <span class="keywordtype">id</span> = <a class="code" href="namespaceopenage_1_1util.xhtml#ac99f61e1d0c06d9b83650a71cff2f02f">util::get_current_thread_id</a>();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a8c5ab0694cd354dc3f02ee94ab0fbbc1">finished_jobs_mutex</a>};</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a>.find(<span class="keywordtype">id</span>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">if</span> (it != std::end(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a>)) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// move the  the finished job list here so we can disable the lock</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        std::vector&lt;std::shared_ptr&lt;JobStateBase&gt;&gt; jobs;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        std::swap(jobs, it-&gt;second);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// clear the worker&#39;s old finished job list</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        it-&gt;second.clear();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>.unlock();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;job : jobs) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="comment">// the job may throw an exception here</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;            job-&gt;execute_callback();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1util_xhtml_ac99f61e1d0c06d9b83650a71cff2f02f"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#ac99f61e1d0c06d9b83650a71cff2f02f">openage::util::get_current_thread_id</a></div><div class="ttdeci">size_t get_current_thread_id()</div><div class="ttdef"><b>Definition:</b> <a href="thread__id_8cpp_source.xhtml#l00044">thread_id.cpp:44</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a8c5ab0694cd354dc3f02ee94ab0fbbc1"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a8c5ab0694cd354dc3f02ee94ab0fbbc1">openage::job::JobManager::finished_jobs_mutex</a></div><div class="ttdeci">std::mutex finished_jobs_mutex</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00050">job_manager.h:50</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ab4f9aa57c80b620acd97107ad7a7308e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">openage::job::JobManager::finished_jobs</a></div><div class="ttdeci">std::unordered_map&lt; size_t, std::vector&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; &gt; finished_jobs</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00056">job_manager.h:56</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8h_source.xhtml#l00056">finished_jobs</a>, <a class="el" href="job__manager_8h_source.xhtml#l00050">finished_jobs_mutex</a>, <a class="el" href="thread__id_8cpp_source.xhtml#l00044">openage::util::get_current_thread_id()</a>, and <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>.</p>

<p class="reference">Referenced by <a class="el" href="engine_8cpp_source.xhtml#l00315">openage::Engine::loop()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ae81b425a182f26b155c9f31de6b74d63_cgraph.svg" width="363" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ae81b425a182f26b155c9f31de6b74d63_icgraph.svg" width="578" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="adefba3f5fb9db0931cca54c27ab31041"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adefba3f5fb9db0931cca54c27ab31041">&#9670;&nbsp;</a></span>fetch_job()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt; openage::job::JobManager::fetch_job </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns a job from the internal job queue. If the queue is empty, a nullptr is returned. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00099">99</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                                  {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">pending_jobs_mutex</a>};</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a>.empty()) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="keywordflow">return</span> std::shared_ptr&lt;JobStateBase&gt;{};</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    }</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">auto</span> job = this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a>.front();</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a>.pop();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> job;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ac53233115d6b82623630131775aca1e8"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">openage::job::JobManager::pending_jobs</a></div><div class="ttdeci">std::queue&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; pending_jobs</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00047">job_manager.h:47</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a69c457e906f144c30338f2bd2e2ca2ec"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">openage::job::JobManager::pending_jobs_mutex</a></div><div class="ttdeci">std::mutex pending_jobs_mutex</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00044">job_manager.h:44</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>, <a class="el" href="job__manager_8h_source.xhtml#l00047">pending_jobs</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00044">pending_jobs_mutex</a>.</p>

<p class="reference">Referenced by <a class="el" href="worker_8cpp_source.xhtml#l00065">openage::job::Worker::process()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_adefba3f5fb9db0931cca54c27ab31041_icgraph.svg" width="575" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9e5e1a95045cef58acd980ebdabc6285"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e5e1a95045cef58acd980ebdabc6285">&#9670;&nbsp;</a></span>finish_job()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::JobManager::finish_job </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a> &gt;&#160;</td>
          <td class="paramname"><em>job</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Adds a finished job to the internal finished job map. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                                           {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a8c5ab0694cd354dc3f02ee94ab0fbbc1">finished_jobs_mutex</a>};</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a>.find(job-&gt;get_thread_id());</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment">// if there hasn&#39;t been a finished job for the thread_id, create a new</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="comment">// entry</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keywordflow">if</span> (it == std::end(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a>)) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">finished_jobs</a>.insert({job-&gt;get_thread_id(), {job}});</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">// otherwise, we append the job to the existing entry</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        it-&gt;second.push_back(job);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a8c5ab0694cd354dc3f02ee94ab0fbbc1"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a8c5ab0694cd354dc3f02ee94ab0fbbc1">openage::job::JobManager::finished_jobs_mutex</a></div><div class="ttdeci">std::mutex finished_jobs_mutex</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00050">job_manager.h:50</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ab4f9aa57c80b620acd97107ad7a7308e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ab4f9aa57c80b620acd97107ad7a7308e">openage::job::JobManager::finished_jobs</a></div><div class="ttdeci">std::unordered_map&lt; size_t, std::vector&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; &gt; finished_jobs</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00056">job_manager.h:56</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8h_source.xhtml#l00056">finished_jobs</a>, <a class="el" href="job__manager_8h_source.xhtml#l00050">finished_jobs_mutex</a>, and <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>.</p>

<p class="reference">Referenced by <a class="el" href="worker_8cpp_source.xhtml#l00051">openage::job::Worker::execute_job()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_a9e5e1a95045cef58acd980ebdabc6285_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="afc81fa6e3be5780014ced15942a48fa2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc81fa6e3be5780014ced15942a48fa2">&#9670;&nbsp;</a></span>has_job()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::job::JobManager::has_job </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns whether there are jobs to be executed. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00111">111</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                         {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">pending_jobs_mutex</a>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> not this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">pending_jobs</a>.empty();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_ac53233115d6b82623630131775aca1e8"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#ac53233115d6b82623630131775aca1e8">openage::job::JobManager::pending_jobs</a></div><div class="ttdeci">std::queue&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; pending_jobs</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00047">job_manager.h:47</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a69c457e906f144c30338f2bd2e2ca2ec"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a69c457e906f144c30338f2bd2e2ca2ec">openage::job::JobManager::pending_jobs_mutex</a></div><div class="ttdeci">std::mutex pending_jobs_mutex</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00044">job_manager.h:44</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>, <a class="el" href="job__manager_8h_source.xhtml#l00047">pending_jobs</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00044">pending_jobs_mutex</a>.</p>

<p class="reference">Referenced by <a class="el" href="worker_8cpp_source.xhtml#l00065">openage::job::Worker::process()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_afc81fa6e3be5780014ced15942a48fa2_icgraph.svg" width="575" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2de8ff68186848c7635b2a4708d78d0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2de8ff68186848c7635b2a4708d78d0c">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a>&amp; openage::job::JobManager::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ac043c6d8be13ad950dd598832a103f96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac043c6d8be13ad950dd598832a103f96">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a>&amp; openage::job::JobManager::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> &amp;&amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ab2bf41f6b397b1acf10665ad93425b5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2bf41f6b397b1acf10665ad93425b5e">&#9670;&nbsp;</a></span>start()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::JobManager::start </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Start the job manager's worker threads. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                       {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// if the workers have not been started, start them now</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">if</span> (not this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a>.load()) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a>.store(<span class="keyword">true</span>);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;worker : this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a>) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">worker</a>-&gt;start();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a> &lt;&lt; <span class="stringliteral">&quot;Started JobManager with &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a> &lt;&lt; <span class="stringliteral">&quot; worker threads&quot;</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a49ed9cbf861e5492e4295399827ab22d"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">openage::job::JobManager::is_running</a></div><div class="ttdeci">std::atomic_bool is_running</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00059">job_manager.h:59</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0854e76d52b714a2d7af57f333ea4e0e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">openage::job::JobManager::workers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Worker &gt; &gt; workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00041">job_manager.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_aabb63639d8326d816988f150aab64732"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">openage::job::JobManager::number_of_workers</a></div><div class="ttdeci">int number_of_workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00032">job_manager.h:32</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::attr_type::worker</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_a49606be7356624568932ec81c0d429f4"><div class="ttname"><a href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a></div><div class="ttdeci">#define DBG</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00176">message.h:176</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00176">DBG</a>, <a class="el" href="job__manager_8h_source.xhtml#l00059">is_running</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::worker</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00041">workers</a>.</p>

<p class="reference">Referenced by <a class="el" href="engine_8cpp_source.xhtml#l00298">openage::Engine::run()</a>, <a class="el" href="job_2tests_8cpp_source.xhtml#l00015">openage::job::tests::test_simple_job()</a>, and <a class="el" href="job_2tests_8cpp_source.xhtml#l00049">openage::job::tests::test_simple_job_with_exception()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ab2bf41f6b397b1acf10665ad93425b5e_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ab2bf41f6b397b1acf10665ad93425b5e_icgraph.svg" width="566" height="184"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac2cd8aa519595a5b0f50e796d5d00208"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2cd8aa519595a5b0f50e796d5d00208">&#9670;&nbsp;</a></span>stop()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::JobManager::stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Stop the job manager's worker threads. This method blocks until all currently working threads have finished. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                      {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// set is_running to false, notify and join all workers</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a>.load()) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">is_running</a>.store(<span class="keyword">false</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;worker : this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">workers</a>) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">worker</a>-&gt;stop();</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;worker : this-&gt;workers) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">worker</a>-&gt;join();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a> &lt;&lt; <span class="stringliteral">&quot;Stopped JobManager with &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">number_of_workers</a> &lt;&lt; <span class="stringliteral">&quot; worker threads&quot;</span>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a49ed9cbf861e5492e4295399827ab22d"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a49ed9cbf861e5492e4295399827ab22d">openage::job::JobManager::is_running</a></div><div class="ttdeci">std::atomic_bool is_running</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00059">job_manager.h:59</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a0854e76d52b714a2d7af57f333ea4e0e"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a0854e76d52b714a2d7af57f333ea4e0e">openage::job::JobManager::workers</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; Worker &gt; &gt; workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00041">job_manager.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_aabb63639d8326d816988f150aab64732"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#aabb63639d8326d816988f150aab64732">openage::job::JobManager::number_of_workers</a></div><div class="ttdeci">int number_of_workers</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00032">job_manager.h:32</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::attr_type::worker</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_a49606be7356624568932ec81c0d429f4"><div class="ttname"><a href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a></div><div class="ttdeci">#define DBG</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00176">message.h:176</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00176">DBG</a>, <a class="el" href="job__manager_8h_source.xhtml#l00059">is_running</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::worker</a>, and <a class="el" href="job__manager_8h_source.xhtml#l00041">workers</a>.</p>

<p class="reference">Referenced by <a class="el" href="engine_8cpp_source.xhtml#l00298">openage::Engine::run()</a>, <a class="el" href="engine_8cpp_source.xhtml#l00310">openage::Engine::stop()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00026">~JobManager()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ac2cd8aa519595a5b0f50e796d5d00208_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job_manager_ac2cd8aa519595a5b0f50e796d5d00208_icgraph.svg" width="100%" height="397"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a9de4a9533dff2ecc0919852d4c05a67b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9de4a9533dff2ecc0919852d4c05a67b">&#9670;&nbsp;</a></span>Worker</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classopenage_1_1job_1_1_worker.xhtml">Worker</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A worker has to be a friend of the job manager in order to call the private finish_job method. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00152">152</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ab4f9aa57c80b620acd97107ad7a7308e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4f9aa57c80b620acd97107ad7a7308e">&#9670;&nbsp;</a></span>finished_jobs</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;size_t, std::vector&lt;std::shared_ptr&lt;<a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a>&gt; &gt; &gt; openage::job::JobManager::finished_jobs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Mapping from thread id's to a list of jobs, that have been created by the corresponding thread and have finished. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00056">56</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00059">execute_callbacks()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00117">finish_job()</a>.</p>

</div>
</div>
<a id="a8c5ab0694cd354dc3f02ee94ab0fbbc1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c5ab0694cd354dc3f02ee94ab0fbbc1">&#9670;&nbsp;</a></span>finished_jobs_mutex</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex openage::job::JobManager::finished_jobs_mutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A mutex to synchronize the finished job map. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00050">50</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00059">execute_callbacks()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00117">finish_job()</a>.</p>

</div>
</div>
<a id="a572906422c0f2a770a1ba36f76e2a8cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a572906422c0f2a770a1ba36f76e2a8cc">&#9670;&nbsp;</a></span>group_index</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int openage::job::JobManager::group_index</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The index of the worker thread, that is used for the next returned job group. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00038">38</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00083">create_job_group()</a>.</p>

</div>
</div>
<a id="a49ed9cbf861e5492e4295399827ab22d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49ed9cbf861e5492e4295399827ab22d">&#9670;&nbsp;</a></span>is_running</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic_bool openage::job::JobManager::is_running</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Whether the job manager is currently running. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00059">59</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00031">start()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00043">stop()</a>.</p>

</div>
</div>
<a id="aabb63639d8326d816988f150aab64732"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabb63639d8326d816988f150aab64732">&#9670;&nbsp;</a></span>number_of_workers</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int openage::job::JobManager::number_of_workers</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The number of internal worker threads. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00032">32</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00014">JobManager()</a>.</p>

</div>
</div>
<a id="ac53233115d6b82623630131775aca1e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac53233115d6b82623630131775aca1e8">&#9670;&nbsp;</a></span>pending_jobs</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::queue&lt;std::shared_ptr&lt;<a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">JobStateBase</a>&gt; &gt; openage::job::JobManager::pending_jobs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A queue of jobs that are to be executed. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00047">47</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00090">enqueue_state()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00099">fetch_job()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00111">has_job()</a>.</p>

</div>
</div>
<a id="a69c457e906f144c30338f2bd2e2ca2ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69c457e906f144c30338f2bd2e2ca2ec">&#9670;&nbsp;</a></span>pending_jobs_mutex</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex openage::job::JobManager::pending_jobs_mutex</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A mutex to synchronize accesses to the internal job queue. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00044">44</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00090">enqueue_state()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00099">fetch_job()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00111">has_job()</a>.</p>

</div>
</div>
<a id="a0854e76d52b714a2d7af57f333ea4e0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0854e76d52b714a2d7af57f333ea4e0e">&#9670;&nbsp;</a></span>workers</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classopenage_1_1job_1_1_worker.xhtml">Worker</a>&gt; &gt; openage::job::JobManager::workers</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>A vector of all worker threads. </p>

<p class="definition">Definition at line <a class="el" href="job__manager_8h_source.xhtml#l00041">41</a> of file <a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job__manager_8cpp_source.xhtml#l00083">create_job_group()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00090">enqueue_state()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00031">start()</a>, and <a class="el" href="job__manager_8cpp_source.xhtml#l00043">stop()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/<a class="el" href="job__manager_8h_source.xhtml">job_manager.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/<a class="el" href="job__manager_8cpp_source.xhtml">job_manager.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1job.xhtml">job</a></li><li class="navelem"><a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
