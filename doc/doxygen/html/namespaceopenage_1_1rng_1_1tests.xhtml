<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::rng::tests Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1rng_1_1tests.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">openage::rng::tests Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:acad40865d58b96a35f6f453e04642f00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#acad40865d58b96a35f6f453e04642f00">freq_dist</a> ()</td></tr>
<tr class="separator:acad40865d58b96a35f6f453e04642f00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab46fd4b091c16460f3ed825fe2ec269b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#ab46fd4b091c16460f3ed825fe2ec269b">bool_dist</a> ()</td></tr>
<tr class="separator:ab46fd4b091c16460f3ed825fe2ec269b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1270464ae98991431da5e3fa6ee60ab5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a1270464ae98991431da5e3fa6ee60ab5">real_dist</a> ()</td></tr>
<tr class="separator:a1270464ae98991431da5e3fa6ee60ab5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77427d76c14080c4993edd5b79a293e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#aa77427d76c14080c4993edd5b79a293e">reproduce</a> ()</td></tr>
<tr class="separator:aa77427d76c14080c4993edd5b79a293e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a265e3eddfd2efda00d3f1d1d9291469d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a265e3eddfd2efda00d3f1d1d9291469d">serialize</a> ()</td></tr>
<tr class="separator:a265e3eddfd2efda00d3f1d1d9291469d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c865b312f955cab3ff9ea078fd0cc95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a7c865b312f955cab3ff9ea078fd0cc95">fill</a> ()</td></tr>
<tr class="separator:a7c865b312f955cab3ff9ea078fd0cc95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b24c3f995bfb45b9d833030720bd88f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a3b24c3f995bfb45b9d833030720bd88f">fill_real</a> ()</td></tr>
<tr class="separator:a3b24c3f995bfb45b9d833030720bd88f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae22d2c6364226e0169f0eed1c9701592"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#ae22d2c6364226e0169f0eed1c9701592">run</a> ()</td></tr>
<tr class="separator:ae22d2c6364226e0169f0eed1c9701592"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a55fc432b6842a4bfc68b95c5ab41dc01"><td class="memItemLeft" align="right" valign="top">constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a> = (1 &lt;&lt; 18)</td></tr>
<tr class="separator:a55fc432b6842a4bfc68b95c5ab41dc01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d64f9421e625efe391f7261e17d621"><td class="memItemLeft" align="right" valign="top">constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">difference_factor</a> = 0.1</td></tr>
<tr class="separator:a77d64f9421e625efe391f7261e17d621"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ab46fd4b091c16460f3ed825fe2ec269b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab46fd4b091c16460f3ed825fe2ec269b">&#9670;&nbsp;</a></span>bool_dist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::bool_dist </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests the distribution of the boolean generation.</p>
<p>For n draws it should result in n/2 trues and n/2 falses. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                 {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    constexpr <span class="keywordtype">float</span> expected = <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a> / 2;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    constexpr <span class="keywordtype">float</span> max_diff = expected * <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">difference_factor</a>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    RNG mybool{<a class="code" href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">random_seed</a>()};</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">size_t</span> num_true = 0;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">if</span> (mybool() &amp; 1) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            num_true += 1;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(num_true - expected) &gt; max_diff and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a510f1a8aa7487e18b60b1844cd2af86a"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">openage::rng::random_seed</a></div><div class="ttdeci">uint64_t random_seed()</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00222">rng.cpp:222</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a77d64f9421e625efe391f7261e17d621"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">openage::rng::tests::difference_factor</a></div><div class="ttdeci">constexpr float difference_factor</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00026">rng_tests.cpp:26</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00491">std::abs()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00026">difference_factor</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="rng_8cpp_source.xhtml#l00222">openage::rng::random_seed()</a>, and <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_ab46fd4b091c16460f3ed825fe2ec269b_cgraph.svg" width="100%" height="456"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_ab46fd4b091c16460f3ed825fe2ec269b_icgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7c865b312f955cab3ff9ea078fd0cc95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7c865b312f955cab3ff9ea078fd0cc95">&#9670;&nbsp;</a></span>fill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::fill </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests filling integers. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00194">194</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    constexpr <span class="keywordtype">size_t</span> n = 1 &lt;&lt; 7;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    uint64_t data[n];</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    RNG test0{<a class="code" href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">random_seed</a>()};</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    RNG test1{test0};</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    test0.fill(data, n);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; n; i++) {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        test1() == data[i] or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    }</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a510f1a8aa7487e18b60b1844cd2af86a"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">openage::rng::random_seed</a></div><div class="ttdeci">uint64_t random_seed()</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00222">rng.cpp:222</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="rng_8cpp_source.xhtml#l00120">openage::rng::RNG::fill()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="rng_8cpp_source.xhtml#l00222">openage::rng::random_seed()</a>, and <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00281">openage::util::compress::HuffmanTable&lt; LZX_PRETREE_MAXSYMBOLS, LZX_PRETREE_TABLEBITS &gt;::try_make_decode_table()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a7c865b312f955cab3ff9ea078fd0cc95_cgraph.svg" width="100%" height="396"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a7c865b312f955cab3ff9ea078fd0cc95_icgraph.svg" width="487" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3b24c3f995bfb45b9d833030720bd88f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b24c3f995bfb45b9d833030720bd88f">&#9670;&nbsp;</a></span>fill_real()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::fill_real </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests filling doubles. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00216">216</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                 {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    constexpr <span class="keywordtype">size_t</span> n = 1 &lt;&lt; 7;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    RNG test0{<a class="code" href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">time_seed</a>()};</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    RNG test1{test0};</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordtype">double</span> data[n];</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    test1.fill_real(data, n);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; n; i++) {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        test0.real() == data[i] or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    }</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a4bdd2cc5c7f7f5d81ff514287f65eef0"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">openage::rng::time_seed</a></div><div class="ttdeci">static uint64_t time_seed(bool randomize)</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00207">rng.cpp:207</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="rng_8cpp_source.xhtml#l00138">openage::rng::RNG::fill_real()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>, and <a class="el" href="rng_8cpp_source.xhtml#l00207">openage::rng::time_seed()</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a3b24c3f995bfb45b9d833030720bd88f_cgraph.svg" width="100%" height="465"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a3b24c3f995bfb45b9d833030720bd88f_icgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="acad40865d58b96a35f6f453e04642f00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acad40865d58b96a35f6f453e04642f00">&#9670;&nbsp;</a></span>freq_dist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::freq_dist </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests the distribution of the bit generator.</p>
<p>We generate many many random numbers, and select a bucket by it. After n random numbers, each bucket should have been selected n/bucket_count times. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00036">36</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                 {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// one random sample from the generator.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    uint64_t sample;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// number of possible chars, likely 256.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="comment">// this is bucket_count.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    constexpr <span class="keywordtype">size_t</span> dsize = <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;unsigned char&gt;::max</a>() + 1;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// each bucket should be selected n/bucket_count times.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// each sample contains multiple chars.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    constexpr <span class="keywordtype">float</span> mean = (<span class="keyword">sizeof</span>(sample) * <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>) / dsize;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="comment">// maximum difference from the expected mean.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    constexpr <span class="keywordtype">float</span> max_diff = mean * <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">difference_factor</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// holds one entry for each char bit.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordtype">size_t</span> buckets[dsize];</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;dat : buckets) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        dat = 0;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    RNG myrng{<a class="code" href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">time_seed</a>()};</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        sample = myrng();  <span class="comment">// get a random value</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *valptr = reinterpret_cast&lt;unsigned char*&gt;(&amp;sample);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// for each bit of the generated value:</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment">// increment the &quot;weight&quot; of the bit.</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; <span class="keyword">sizeof</span>(sample); j++) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="comment">// randomly increment one of the buckets</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> rbyte = valptr[j];</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            buckets[rbyte] += 1;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        }</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="comment">// test if each bucket was selected the amount we expected.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> count : buckets) {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(mean - count) &gt; max_diff and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a4bdd2cc5c7f7f5d81ff514287f65eef0"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">openage::rng::time_seed</a></div><div class="ttdeci">static uint64_t time_seed(bool randomize)</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00207">rng.cpp:207</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a77d64f9421e625efe391f7261e17d621"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">openage::rng::tests::difference_factor</a></div><div class="ttdeci">constexpr float difference_factor</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00026">rng_tests.cpp:26</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00491">std::abs()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00026">difference_factor</a>, <a class="el" href="console_2tests_8cpp_source.xhtml#l00031">openage::console::tests::max()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>, and <a class="el" href="rng_8cpp_source.xhtml#l00207">openage::rng::time_seed()</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_acad40865d58b96a35f6f453e04642f00_cgraph.svg" width="100%" height="499"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_acad40865d58b96a35f6f453e04642f00_icgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a1270464ae98991431da5e3fa6ee60ab5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1270464ae98991431da5e3fa6ee60ab5">&#9670;&nbsp;</a></span>real_dist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::real_dist </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests the distribution of the floating point numbers.</p>
<p>Perform the test by placing the [0, 1] range into buckets. each bucket should be drawn n/bucket_count times.</p>
<p>Also, the sum of all numbers drawn should be n/2. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00108">108</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                 {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    constexpr <span class="keywordtype">size_t</span> bckt_cnt    = <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a> &gt;&gt; 11;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    constexpr <span class="keywordtype">float</span>  mean        = <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a> / bckt_cnt;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    constexpr <span class="keywordtype">float</span>  max_diff    = mean * <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">difference_factor</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    constexpr <span class="keywordtype">float</span>  max_sumdiff = (<a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>/2) * <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">difference_factor</a>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    ssize_t          buckets[bckt_cnt+1];</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;dat : buckets) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        dat = 0;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">double</span> sum = 0;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    RNG myrng{<a class="code" href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">time_seed</a>()};</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordtype">double</span> <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a> = myrng.real();</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        sum += <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        buckets[static_cast&lt;size_t&gt;(<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a> * bckt_cnt)] += 1;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(sum - (<a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a> / 2)) &gt; max_sumdiff and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; bckt_cnt; i++) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(mean - buckets[i]) &gt; max_diff and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    buckets[bckt_cnt] and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a4bdd2cc5c7f7f5d81ff514287f65eef0"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">openage::rng::time_seed</a></div><div class="ttdeci">static uint64_t time_seed(bool randomize)</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00207">rng.cpp:207</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aa0ccb5ee6d882ee3605ff47745c6467b"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a></div><div class="ttdeci">int val</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00017">constinit_vector.cpp:17</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a77d64f9421e625efe391f7261e17d621"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a77d64f9421e625efe391f7261e17d621">openage::rng::tests::difference_factor</a></div><div class="ttdeci">constexpr float difference_factor</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00026">rng_tests.cpp:26</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00491">std::abs()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00026">difference_factor</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>, <a class="el" href="rng_8cpp_source.xhtml#l00207">openage::rng::time_seed()</a>, and <a class="el" href="constinit__vector_8cpp_source.xhtml#l00017">val</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a1270464ae98991431da5e3fa6ee60ab5_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a1270464ae98991431da5e3fa6ee60ab5_icgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aa77427d76c14080c4993edd5b79a293e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa77427d76c14080c4993edd5b79a293e">&#9670;&nbsp;</a></span>reproduce()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::reproduce </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests reproducibility. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                 {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">auto</span> <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a> = <a class="code" href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">time_seed</a>();</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    RNG test0{<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>};</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    RNG test1{<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>};</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    }</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="comment">// seed both rngs</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">char</span> initstr[] = &quot;abcdefghijk&quot;;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    test0.seed(initstr, sizeof(initstr));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    test1.seed(initstr, sizeof(initstr));</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    for (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="comment">// same result expected, as we only use the first 3 chars as seed.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">char</span> initstr2[] = &quot;abcqq&quot;;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    test0.seed(initstr, 3);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    test1.seed(initstr2, 3);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    for (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="comment">// make sure that seeding with nullptr fails.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(test0.seed(<span class="keywordtype">nullptr</span>, 0));</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a4bdd2cc5c7f7f5d81ff514287f65eef0"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a4bdd2cc5c7f7f5d81ff514287f65eef0">openage::rng::time_seed</a></div><div class="ttdeci">static uint64_t time_seed(bool randomize)</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00207">rng.cpp:207</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aa0ccb5ee6d882ee3605ff47745c6467b"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a></div><div class="ttdeci">int val</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00017">constinit_vector.cpp:17</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ad3ad66a2f3c40aa0744570ab803b903f"><div class="ttname"><a href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a></div><div class="ttdeci">#define TESTTHROWS(expression)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00087">testing.h:87</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>, <a class="el" href="testing_8h_source.xhtml#l00087">TESTTHROWS</a>, <a class="el" href="rng_8cpp_source.xhtml#l00207">openage::rng::time_seed()</a>, and <a class="el" href="constinit__vector_8cpp_source.xhtml#l00017">val</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">run()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_aa77427d76c14080c4993edd5b79a293e_cgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_aa77427d76c14080c4993edd5b79a293e_icgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ae22d2c6364226e0169f0eed1c9701592"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae22d2c6364226e0169f0eed1c9701592">&#9670;&nbsp;</a></span>run()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::run </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00233">233</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;           {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#acad40865d58b96a35f6f453e04642f00">freq_dist</a>();</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#ab46fd4b091c16460f3ed825fe2ec269b">bool_dist</a>();</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a1270464ae98991431da5e3fa6ee60ab5">real_dist</a>();</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#aa77427d76c14080c4993edd5b79a293e">reproduce</a>();</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a7c865b312f955cab3ff9ea078fd0cc95">fill</a>();</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a3b24c3f995bfb45b9d833030720bd88f">fill_real</a>();</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a1270464ae98991431da5e3fa6ee60ab5"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a1270464ae98991431da5e3fa6ee60ab5">openage::rng::tests::real_dist</a></div><div class="ttdeci">void real_dist()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00108">rng_tests.cpp:108</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a3b24c3f995bfb45b9d833030720bd88f"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a3b24c3f995bfb45b9d833030720bd88f">openage::rng::tests::fill_real</a></div><div class="ttdeci">void fill_real()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00216">rng_tests.cpp:216</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_acad40865d58b96a35f6f453e04642f00"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#acad40865d58b96a35f6f453e04642f00">openage::rng::tests::freq_dist</a></div><div class="ttdeci">void freq_dist()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00036">rng_tests.cpp:36</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_aa77427d76c14080c4993edd5b79a293e"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#aa77427d76c14080c4993edd5b79a293e">openage::rng::tests::reproduce</a></div><div class="ttdeci">void reproduce()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00143">rng_tests.cpp:143</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a7c865b312f955cab3ff9ea078fd0cc95"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a7c865b312f955cab3ff9ea078fd0cc95">openage::rng::tests::fill</a></div><div class="ttdeci">void fill()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00194">rng_tests.cpp:194</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_ab46fd4b091c16460f3ed825fe2ec269b"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#ab46fd4b091c16460f3ed825fe2ec269b">openage::rng::tests::bool_dist</a></div><div class="ttdeci">void bool_dist()</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00084">rng_tests.cpp:84</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="rng__tests_8cpp_source.xhtml#l00084">bool_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00194">fill()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00216">fill_real()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00036">freq_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00108">real_dist()</a>, and <a class="el" href="rng__tests_8cpp_source.xhtml#l00143">reproduce()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_ae22d2c6364226e0169f0eed1c9701592_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a265e3eddfd2efda00d3f1d1d9291469d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a265e3eddfd2efda00d3f1d1d9291469d">&#9670;&nbsp;</a></span>serialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::tests::serialize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Tests the serializing functionality. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00175">175</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                 {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="comment">// create seeded rng</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// and duplicate state to another one.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    RNG test0{<a class="code" href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">random_seed</a>()};</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    RNG test1{test0.to_string()};</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">num_rand</a>; i++) {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        test0() == test1() or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(test0.from_string(&quot;100 aa&quot;));</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(test0.from_string(&quot;&quot;));</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(test0.from_string(&quot;100&quot;));</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(test0.from_string(&quot;100 &quot;));</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_1_1tests_xhtml_a55fc432b6842a4bfc68b95c5ab41dc01"><div class="ttname"><a href="namespaceopenage_1_1rng_1_1tests.xhtml#a55fc432b6842a4bfc68b95c5ab41dc01">openage::rng::tests::num_rand</a></div><div class="ttdeci">constexpr size_t num_rand</div><div class="ttdef"><b>Definition:</b> <a href="rng__tests_8cpp_source.xhtml#l00020">rng_tests.cpp:20</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ad3ad66a2f3c40aa0744570ab803b903f"><div class="ttname"><a href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a></div><div class="ttdeci">#define TESTTHROWS(expression)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00087">testing.h:87</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_a510f1a8aa7487e18b60b1844cd2af86a"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#a510f1a8aa7487e18b60b1844cd2af86a">openage::rng::random_seed</a></div><div class="ttdeci">uint64_t random_seed()</div><div class="ttdef"><b>Definition:</b> <a href="rng_8cpp_source.xhtml#l00222">rng.cpp:222</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">num_rand</a>, <a class="el" href="rng_8cpp_source.xhtml#l00222">openage::rng::random_seed()</a>, <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>, <a class="el" href="testing_8h_source.xhtml#l00087">TESTTHROWS</a>, and <a class="el" href="rng_8cpp_source.xhtml#l00166">openage::rng::RNG::to_string()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1rng_1_1tests_a265e3eddfd2efda00d3f1d1d9291469d_cgraph.svg" width="100%" height="408"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a77d64f9421e625efe391f7261e17d621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77d64f9421e625efe391f7261e17d621">&#9670;&nbsp;</a></span>difference_factor</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float openage::rng::tests::difference_factor = 0.1</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Allow the result to be in this range of the expected perfect distribution. </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00026">26</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00084">bool_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00036">freq_dist()</a>, and <a class="el" href="rng__tests_8cpp_source.xhtml#l00108">real_dist()</a>.</p>

</div>
</div>
<a id="a55fc432b6842a4bfc68b95c5ab41dc01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55fc432b6842a4bfc68b95c5ab41dc01">&#9670;&nbsp;</a></span>num_rand</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">constexpr size_t openage::rng::tests::num_rand = (1 &lt;&lt; 18)</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This is the number of generation repetitions </p>

<p class="definition">Definition at line <a class="el" href="rng__tests_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="rng__tests_8cpp_source.xhtml">rng_tests.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="rng__tests_8cpp_source.xhtml#l00084">bool_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00194">fill()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00216">fill_real()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00036">freq_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00108">real_dist()</a>, <a class="el" href="rng__tests_8cpp_source.xhtml#l00143">reproduce()</a>, and <a class="el" href="rng__tests_8cpp_source.xhtml#l00175">serialize()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1rng.xhtml">rng</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1rng_1_1tests.xhtml">tests</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
