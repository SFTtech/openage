<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::renderer::vulkan::VlkGraphicsDevice Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::renderer::vulkan::VlkGraphicsDevice Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Owns a device capable of graphics operations and surface presentation using WSI.  
 <a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::renderer::vulkan::VlkGraphicsDevice:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device__coll__graph.svg" width="186" height="220"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6df789786ae44a2914cdb488bfbb7de3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a6df789786ae44a2914cdb488bfbb7de3">VlkGraphicsDevice</a> (VkPhysicalDevice dev, std::vector&lt; uint32_t &gt; const &amp;q_fams)</td></tr>
<tr class="memdesc:a6df789786ae44a2914cdb488bfbb7de3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a physical device and a list of queue family indices in that device, instantiates a logical device with a queue per each of the families.  <a href="#a6df789786ae44a2914cdb488bfbb7de3">More...</a><br /></td></tr>
<tr class="separator:a6df789786ae44a2914cdb488bfbb7de3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a556f0778edd592a69b5d7091966099f5"><td class="memItemLeft" align="right" valign="top">VkPhysicalDevice&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a556f0778edd592a69b5d7091966099f5">get_physical_device</a> () const</td></tr>
<tr class="separator:a556f0778edd592a69b5d7091966099f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19d43547d0fa2d45ae1b9299637c2f8e"><td class="memItemLeft" align="right" valign="top">VkDevice&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a19d43547d0fa2d45ae1b9299637c2f8e">get_device</a> () const</td></tr>
<tr class="separator:a19d43547d0fa2d45ae1b9299637c2f8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94443fbae944ba5163514c6ea7397099"><td class="memItemLeft" align="right" valign="top">VkQueue&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a94443fbae944ba5163514c6ea7397099">get_queue</a> (size_t idx) const</td></tr>
<tr class="separator:a94443fbae944ba5163514c6ea7397099"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b09aa54c6f71565308faabdacc12f6c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a8b09aa54c6f71565308faabdacc12f6c">~VlkGraphicsDevice</a> ()</td></tr>
<tr class="separator:a8b09aa54c6f71565308faabdacc12f6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5d8a1353bad85bd21c733fc21d8bef76"><td class="memItemLeft" align="right" valign="top">static std::optional&lt; <a class="el" href="structopenage_1_1renderer_1_1vulkan_1_1_surface_support_details.xhtml">SurfaceSupportDetails</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a5d8a1353bad85bd21c733fc21d8bef76">find_device_surface_support</a> (VkPhysicalDevice, VkSurfaceKHR)</td></tr>
<tr class="memdesc:a5d8a1353bad85bd21c733fc21d8bef76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Given a physical device and a surface, checks whether the device is capable of presenting to the surface.  <a href="#a5d8a1353bad85bd21c733fc21d8bef76">More...</a><br /></td></tr>
<tr class="separator:a5d8a1353bad85bd21c733fc21d8bef76"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a77edd4a9a9a7eea1920c8fec848b25d8"><td class="memItemLeft" align="right" valign="top">VkPhysicalDevice&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">phys_device</a></td></tr>
<tr class="memdesc:a77edd4a9a9a7eea1920c8fec848b25d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">The underlying physical device.  <a href="#a77edd4a9a9a7eea1920c8fec848b25d8">More...</a><br /></td></tr>
<tr class="separator:a77edd4a9a9a7eea1920c8fec848b25d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><td class="memItemLeft" align="right" valign="top">VkDevice&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">device</a></td></tr>
<tr class="memdesc:ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logical device, owned by this object.  <a href="#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">More...</a><br /></td></tr>
<tr class="separator:ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabfea62d48c4b0dd2845fab343c17bc7"><td class="memItemLeft" align="right" valign="top">std::vector&lt; VkQueue &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">queues</a></td></tr>
<tr class="memdesc:aabfea62d48c4b0dd2845fab343c17bc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">The queues instantiated for this device.  <a href="#aabfea62d48c4b0dd2845fab343c17bc7">More...</a><br /></td></tr>
<tr class="separator:aabfea62d48c4b0dd2845fab343c17bc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Owns a device capable of graphics operations and surface presentation using WSI. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8h_source.xhtml#l00042">42</a> of file <a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a6df789786ae44a2914cdb488bfbb7de3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6df789786ae44a2914cdb488bfbb7de3">&#9670;&nbsp;</a></span>VlkGraphicsDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::vulkan::VlkGraphicsDevice::VlkGraphicsDevice </td>
          <td>(</td>
          <td class="paramtype">VkPhysicalDevice&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; uint32_t &gt; const &amp;&#160;</td>
          <td class="paramname"><em>q_fams</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Given a physical device and a list of queue family indices in that device, instantiates a logical device with a queue per each of the families. </p>
<p>The device has to support the swapchain extension. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    : <a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">phys_device</a>(dev)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;{</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment">// Prepare queue creation info for each family requested</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::vector&lt;VkDeviceQueueCreateInfo&gt; q_infos(q_fams.size());</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> p = 1.0f;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; q_fams.size(); i++) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        q_infos[i].sType = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        q_infos[i].queueFamilyIndex = q_fams[i];</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        q_infos[i].queueCount = 1;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        q_infos[i].pQueuePriorities = &amp;p;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// Request these extensions</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::vector&lt;const char*&gt; ext_names = { VK_KHR_SWAPCHAIN_EXTENSION_NAME };</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="comment">// Check if extensions are available</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">auto</span> exts = <a class="code" href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a>(vkEnumerateDeviceExtensionProperties, dev, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> ext : ext_names) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> (std::count_if(exts.begin(), exts.end(), [=] (VkExtensionProperties <span class="keyword">const</span>&amp; p) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                                                        <span class="keywordflow">return</span> std::strcmp(p.extensionName, ext) == 0;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                                                    } ) == 0</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        ) {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Tried to instantiate device, but it&#39;s missing this extension: &quot;</span> &lt;&lt; ext);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    }</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="preprocessor">#ifndef NDEBUG</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        VkPhysicalDeviceProperties dev_props;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        vkGetPhysicalDeviceProperties(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">phys_device</a>, &amp;dev_props);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Chosen Vulkan graphics device: &quot;</span> &lt;&lt; dev_props.deviceName);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Device extensions:&quot;</span>);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; ext : exts) {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; ext.extensionName);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Prepare device creation</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    VkDeviceCreateInfo create_dev {};</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    create_dev.sType = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    create_dev.queueCreateInfoCount = q_infos.size();</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    create_dev.pQueueCreateInfos = q_infos.data();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    create_dev.enabledExtensionCount = ext_names.size();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    create_dev.ppEnabledExtensionNames = ext_names.data();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    VkPhysicalDeviceFeatures features {};</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// \todo request features</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    create_dev.pEnabledFeatures = &amp;features;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <a class="code" href="util_8h.xhtml#a6be5ebed2b0abfd022e22c9ca2dab4b6">VK_CALL_CHECKED</a>(vkCreateDevice, this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">phys_device</a>, &amp;create_dev, <span class="keyword">nullptr</span>, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">device</a>);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="comment">// Obtain handles for the created queues</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">queues</a>.resize(q_fams.size());</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; q_fams.size(); i++) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        vkGetDeviceQueue(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">device</a>, q_fams[i], 0, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">queues</a>[i]);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_a77edd4a9a9a7eea1920c8fec848b25d8"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">openage::renderer::vulkan::VlkGraphicsDevice::phys_device</a></div><div class="ttdeci">VkPhysicalDevice phys_device</div><div class="ttdoc">The underlying physical device.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00044">graphics_device.h:44</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_aabfea62d48c4b0dd2845fab343c17bc7"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">openage::renderer::vulkan::VlkGraphicsDevice::queues</a></div><div class="ttdeci">std::vector&lt; VkQueue &gt; queues</div><div class="ttdoc">The queues instantiated for this device.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00050">graphics_device.h:50</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">openage::renderer::vulkan::VlkGraphicsDevice::device</a></div><div class="ttdeci">VkDevice device</div><div class="ttdoc">Logical device, owned by this object.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00047">graphics_device.h:47</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdoc">Convenience method that makes use of the 'general' LogSource.</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="util_8h_xhtml_a6be5ebed2b0abfd022e22c9ca2dab4b6"><div class="ttname"><a href="util_8h.xhtml#a6be5ebed2b0abfd022e22c9ca2dab4b6">VK_CALL_CHECKED</a></div><div class="ttdeci">#define VK_CALL_CHECKED(fun,...)</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.xhtml#l00050">util.h:50</a></div></div>
<div class="ttc" id="util_8h_xhtml_a856371a624dd7d99cc9da19f0d7889f0"><div class="ttname"><a href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a></div><div class="ttdeci">std::vector&lt; R &gt; vk_do_ritual(R2(*func)(uint32_t *, R *))</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.xhtml#l00011">util.h:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log::dbg()</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00047">device</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00044">phys_device</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00050">queues</a>, <a class="el" href="util_8h_source.xhtml#l00050">VK_CALL_CHECKED</a>, and <a class="el" href="util_8h_source.xhtml#l00011">vk_do_ritual()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_a6df789786ae44a2914cdb488bfbb7de3_cgraph.svg" width="100%" height="470"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a8b09aa54c6f71565308faabdacc12f6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b09aa54c6f71565308faabdacc12f6c">&#9670;&nbsp;</a></span>~VlkGraphicsDevice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::vulkan::VlkGraphicsDevice::~VlkGraphicsDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                      {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    vkDestroyDevice(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">device</a>, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">openage::renderer::vulkan::VlkGraphicsDevice::device</a></div><div class="ttdeci">VkDevice device</div><div class="ttdoc">Logical device, owned by this object.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00047">graphics_device.h:47</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graphics__device_8h_source.xhtml#l00047">device</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5d8a1353bad85bd21c733fc21d8bef76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d8a1353bad85bd21c733fc21d8bef76">&#9670;&nbsp;</a></span>find_device_surface_support()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt; <a class="el" href="structopenage_1_1renderer_1_1vulkan_1_1_surface_support_details.xhtml">SurfaceSupportDetails</a> &gt; openage::renderer::vulkan::VlkGraphicsDevice::find_device_surface_support </td>
          <td>(</td>
          <td class="paramtype">VkPhysicalDevice&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">VkSurfaceKHR&#160;</td>
          <td class="paramname"><em>surf</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Given a physical device and a surface, checks whether the device is capable of presenting to the surface. </p>
<p>If it is, returns information about its presentation capabilities, otherwise returns an empty optional. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00017">17</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;                                                                                                                         {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="comment">// Search for queue families in the device</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keyword">auto</span> q_fams = <a class="code" href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a>(vkGetPhysicalDeviceQueueFamilyProperties, dev);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    std::optional&lt;uint32_t&gt; maybe_graphics_fam = {};</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    std::optional&lt;uint32_t&gt; maybe_present_fam = {};</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// Figure out if any of the families supports graphics</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; q_fams.size(); i++) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keyword">auto</span> <span class="keyword">const</span>&amp; q_fam = q_fams[i];</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">if</span> (q_fam.queueCount &gt; 0) {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">if</span> ((q_fam.queueFlags &amp; VK_QUEUE_GRAPHICS_BIT) != 0u) {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                maybe_graphics_fam = i;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                <span class="comment">// See if it also supports present</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                VkBool32 support = VK_FALSE;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                vkGetPhysicalDeviceSurfaceSupportKHR(dev, i, surf, &amp;support);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                <span class="keywordflow">if</span> (support != VK_FALSE) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                    <span class="comment">// This family support both, we&#39;re done</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                    maybe_present_fam = i;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                }</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            }</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> (!maybe_graphics_fam) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment">// This device has no graphics queue family that works with the surface</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    SurfaceSupportDetails details = {};</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    details.phys_device = dev;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    details.surface = surf;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// If we have found a family that support both graphics and present</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (maybe_present_fam) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        details.graphics_fam = *maybe_graphics_fam;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        details.maybe_present_fam = {};</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment">// Otherwise look for a present-only queue</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; q_fams.size(); i++) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keyword">auto</span> <span class="keyword">const</span>&amp; q_fam = q_fams[i];</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordflow">if</span> (q_fam.queueCount &gt; 0) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                VkBool32 support = VK_FALSE;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                vkGetPhysicalDeviceSurfaceSupportKHR(dev, i, surf, &amp;support);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordflow">if</span> (support != VK_FALSE) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    maybe_present_fam = i;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> (!maybe_present_fam) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="comment">// This device has no present queue family that works with the surface</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        details.graphics_fam = *maybe_graphics_fam;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        details.maybe_present_fam = maybe_present_fam;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// Obtain other information</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    details.surface_formats = <a class="code" href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a>(vkGetPhysicalDeviceSurfaceFormatsKHR, dev, surf);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    details.present_modes = <a class="code" href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a>(vkGetPhysicalDeviceSurfacePresentModesKHR, dev, surf);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    vkGetPhysicalDeviceSurfaceCapabilitiesKHR(dev, surf, &amp;details.surface_caps);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="comment">// Finally, check that we have at least one format and present mode</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordflow">if</span> (details.surface_formats.empty() || details.present_modes.empty()) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> details;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="ttc" id="util_8h_xhtml_a856371a624dd7d99cc9da19f0d7889f0"><div class="ttname"><a href="util_8h.xhtml#a856371a624dd7d99cc9da19f0d7889f0">vk_do_ritual</a></div><div class="ttdeci">std::vector&lt; R &gt; vk_do_ritual(R2(*func)(uint32_t *, R *))</div><div class="ttdef"><b>Definition:</b> <a href="util_8h_source.xhtml#l00011">util.h:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graphics__device_8h_source.xhtml#l00034">openage::renderer::vulkan::SurfaceSupportDetails::graphics_fam</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00038">openage::renderer::vulkan::SurfaceSupportDetails::maybe_present_fam</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00019">openage::renderer::vulkan::SurfaceSupportDetails::phys_device</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00025">openage::renderer::vulkan::SurfaceSupportDetails::present_modes</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00022">openage::renderer::vulkan::SurfaceSupportDetails::surface</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00031">openage::renderer::vulkan::SurfaceSupportDetails::surface_caps</a>, <a class="el" href="graphics__device_8h_source.xhtml#l00028">openage::renderer::vulkan::SurfaceSupportDetails::surface_formats</a>, and <a class="el" href="util_8h_source.xhtml#l00011">vk_do_ritual()</a>.</p>

<p class="reference">Referenced by <a class="el" href="vulkan_2renderer_8cpp_source.xhtml#l00020">openage::renderer::vulkan::VlkRenderer::do_the_thing()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_a5d8a1353bad85bd21c733fc21d8bef76_cgraph.svg" width="342" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_a5d8a1353bad85bd21c733fc21d8bef76_icgraph.svg" width="388" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a19d43547d0fa2d45ae1b9299637c2f8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19d43547d0fa2d45ae1b9299637c2f8e">&#9670;&nbsp;</a></span>get_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">VkDevice openage::renderer::vulkan::VlkGraphicsDevice::get_device </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00158">158</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                                             {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">device</a>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_ae3ce45b1d6a9a7b759dd1d8800d9fe1d"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">openage::renderer::vulkan::VlkGraphicsDevice::device</a></div><div class="ttdeci">VkDevice device</div><div class="ttdoc">Logical device, owned by this object.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00047">graphics_device.h:47</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graphics__device_8h_source.xhtml#l00047">device</a>.</p>

<p class="reference">Referenced by <a class="el" href="vulkan_2renderer_8cpp_source.xhtml#l00020">openage::renderer::vulkan::VlkRenderer::do_the_thing()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_a19d43547d0fa2d45ae1b9299637c2f8e_icgraph.svg" width="371" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a556f0778edd592a69b5d7091966099f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a556f0778edd592a69b5d7091966099f5">&#9670;&nbsp;</a></span>get_physical_device()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">VkPhysicalDevice openage::renderer::vulkan::VlkGraphicsDevice::get_physical_device </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00154">154</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                                                              {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">phys_device</a>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_a77edd4a9a9a7eea1920c8fec848b25d8"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#a77edd4a9a9a7eea1920c8fec848b25d8">openage::renderer::vulkan::VlkGraphicsDevice::phys_device</a></div><div class="ttdeci">VkPhysicalDevice phys_device</div><div class="ttdoc">The underlying physical device.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00044">graphics_device.h:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graphics__device_8h_source.xhtml#l00044">phys_device</a>.</p>

</div>
</div>
<a id="a94443fbae944ba5163514c6ea7397099"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94443fbae944ba5163514c6ea7397099">&#9670;&nbsp;</a></span>get_queue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">VkQueue openage::renderer::vulkan::VlkGraphicsDevice::get_queue </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="graphics__device_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                     {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">queues</a>[idx];</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_xhtml_aabfea62d48c4b0dd2845fab343c17bc7"><div class="ttname"><a href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml#aabfea62d48c4b0dd2845fab343c17bc7">openage::renderer::vulkan::VlkGraphicsDevice::queues</a></div><div class="ttdeci">std::vector&lt; VkQueue &gt; queues</div><div class="ttdoc">The queues instantiated for this device.</div><div class="ttdef"><b>Definition:</b> <a href="graphics__device_8h_source.xhtml#l00050">graphics_device.h:50</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="graphics__device_8h_source.xhtml#l00050">queues</a>.</p>

<p class="reference">Referenced by <a class="el" href="vulkan_2renderer_8cpp_source.xhtml#l00020">openage::renderer::vulkan::VlkRenderer::do_the_thing()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device_a94443fbae944ba5163514c6ea7397099_icgraph.svg" width="371" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae3ce45b1d6a9a7b759dd1d8800d9fe1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3ce45b1d6a9a7b759dd1d8800d9fe1d">&#9670;&nbsp;</a></span>device</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">VkDevice openage::renderer::vulkan::VlkGraphicsDevice::device</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Logical device, owned by this object. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8h_source.xhtml#l00047">47</a> of file <a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="graphics__device_8cpp_source.xhtml#l00158">get_device()</a>, <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">VlkGraphicsDevice()</a>, and <a class="el" href="graphics__device_8cpp_source.xhtml#l00166">~VlkGraphicsDevice()</a>.</p>

</div>
</div>
<a id="a77edd4a9a9a7eea1920c8fec848b25d8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77edd4a9a9a7eea1920c8fec848b25d8">&#9670;&nbsp;</a></span>phys_device</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">VkPhysicalDevice openage::renderer::vulkan::VlkGraphicsDevice::phys_device</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The underlying physical device. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8h_source.xhtml#l00044">44</a> of file <a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="graphics__device_8cpp_source.xhtml#l00154">get_physical_device()</a>, and <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">VlkGraphicsDevice()</a>.</p>

</div>
</div>
<a id="aabfea62d48c4b0dd2845fab343c17bc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabfea62d48c4b0dd2845fab343c17bc7">&#9670;&nbsp;</a></span>queues</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;VkQueue&gt; openage::renderer::vulkan::VlkGraphicsDevice::queues</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The queues instantiated for this device. </p>

<p class="definition">Definition at line <a class="el" href="graphics__device_8h_source.xhtml#l00050">50</a> of file <a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="graphics__device_8cpp_source.xhtml#l00162">get_queue()</a>, and <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">VlkGraphicsDevice()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/vulkan/<a class="el" href="graphics__device_8h_source.xhtml">graphics_device.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/vulkan/<a class="el" href="graphics__device_8cpp_source.xhtml">graphics_device.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer.xhtml">renderer</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer_1_1vulkan.xhtml">vulkan</a></li><li class="navelem"><a class="el" href="classopenage_1_1renderer_1_1vulkan_1_1_vlk_graphics_device.xhtml">VlkGraphicsDevice</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
