<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.dataformat.struct_definition.StructDefinition Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.dataformat.struct_definition.StructDefinition Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>input data read from the data files.  
 <a href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage.convert.dataformat.struct_definition.StructDefinition:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition__inherit__graph.svg" width="238" height="507"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage.convert.dataformat.struct_definition.StructDefinition:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition__coll__graph.svg" width="238" height="294"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a069ed656c684dddc3594fbaa20fef1ee"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a069ed656c684dddc3594fbaa20fef1ee">__init__</a> (self, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a72ad756bf8c043ab5aa5ab839110377e">target</a>)</td></tr>
<tr class="memdesc:a069ed656c684dddc3594fbaa20fef1ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">create a struct definition from an Exportable  <a href="#a069ed656c684dddc3594fbaa20fef1ee">More...</a><br /></td></tr>
<tr class="separator:a069ed656c684dddc3594fbaa20fef1ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca19f3e93e9752476b46506e5423046b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#aca19f3e93e9752476b46506e5423046b">dynamic_ref_update</a> (self, lookup_ref_data)</td></tr>
<tr class="memdesc:aca19f3e93e9752476b46506e5423046b"><td class="mdescLeft">&#160;</td><td class="mdescRight">update ourself the with the given reference data.  <a href="#aca19f3e93e9752476b46506e5423046b">More...</a><br /></td></tr>
<tr class="separator:aca19f3e93e9752476b46506e5423046b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a497aa98fbdddacc2b623b5bedd161f5e"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a497aa98fbdddacc2b623b5bedd161f5e">generate_struct</a> (self, genfile)</td></tr>
<tr class="separator:a497aa98fbdddacc2b623b5bedd161f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25563a8e16af5b93eac7fc52e4f8e733"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a25563a8e16af5b93eac7fc52e4f8e733">generate_struct_implementation</a> (self, genfile)</td></tr>
<tr class="separator:a25563a8e16af5b93eac7fc52e4f8e733"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381c562b66a8185c569778ee982fca1b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a381c562b66a8185c569778ee982fca1b">__str__</a> (self)</td></tr>
<tr class="separator:a381c562b66a8185c569778ee982fca1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09caba3631e9613aa48899149d860e18"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a09caba3631e9613aa48899149d860e18">__repr__</a> (self)</td></tr>
<tr class="separator:a09caba3631e9613aa48899149d860e18"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ac626664222bc73ed8b73f81022961088"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#ac626664222bc73ed8b73f81022961088">name_struct_file</a></td></tr>
<tr class="separator:ac626664222bc73ed8b73f81022961088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa13844debc7b828a99b8600e49261c3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#aaa13844debc7b828a99b8600e49261c3">name_struct</a></td></tr>
<tr class="separator:aaa13844debc7b828a99b8600e49261c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eb9d6203cd0f16196b0d2312062d95c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a7eb9d6203cd0f16196b0d2312062d95c">struct_description</a></td></tr>
<tr class="separator:a7eb9d6203cd0f16196b0d2312062d95c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29dc8ea0de6193496c5afb006aa029ad"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a29dc8ea0de6193496c5afb006aa029ad">prefix</a></td></tr>
<tr class="separator:a29dc8ea0de6193496c5afb006aa029ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62b61f7005f0b916642562db97e7e62d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a62b61f7005f0b916642562db97e7e62d">single_output</a></td></tr>
<tr class="separator:a62b61f7005f0b916642562db97e7e62d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72ad756bf8c043ab5aa5ab839110377e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a72ad756bf8c043ab5aa5ab839110377e">target</a></td></tr>
<tr class="separator:a72ad756bf8c043ab5aa5ab839110377e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0d107c9d094dc7f9000470b7fe27a01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#aa0d107c9d094dc7f9000470b7fe27a01">members</a></td></tr>
<tr class="separator:aa0d107c9d094dc7f9000470b7fe27a01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a688b947e963cc34456c26ef97ca6d279"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a688b947e963cc34456c26ef97ca6d279">inherited_members</a></td></tr>
<tr class="separator:a688b947e963cc34456c26ef97ca6d279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98a8258aa3b8fdc4e8b5bcc99b8c8f9e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml#a98a8258aa3b8fdc4e8b5bcc99b8c8f9e">parent_classes</a></td></tr>
<tr class="separator:a98a8258aa3b8fdc4e8b5bcc99b8c8f9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>input data read from the data files. </p>
<p>one data set roughly represents one struct in the gamedata dat file. it consists of multiple DataMembers, they define the struct members. </p>

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00031">31</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a069ed656c684dddc3594fbaa20fef1ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a069ed656c684dddc3594fbaa20fef1ee">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>create a struct definition from an Exportable </p>

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00035">35</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="comment"># name of file where generated struct will be placed</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        self.name_struct_file   = target.name_struct_file</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="comment"># name of generated C struct</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        self.name_struct        = target.name_struct</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="comment"># comment placed above generated C struct</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        self.struct_description = target.struct_description</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment"># if not None, a prefix will be added to the final path</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        self.prefix             = <span class="keywordtype">None</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="comment"># if not None, will be packed with other files into a single one</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        self.single_output      = <span class="keywordtype">None</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="comment"># target Exportable class that defines the data format</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        self.target             = target</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="comment"># create ordered dict of member type objects from structure definition</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        self.members = OrderedDict()</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        self.inherited_members = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        self.parent_classes = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        target_members = target.get_data_format(</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            allowed_modes=(<span class="keyword">True</span>, READ_EXPORT, NOREAD_EXPORT),</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            flatten_includes=<span class="keyword">True</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        )</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">for</span> is_parent, _, member_name, member_type <span class="keywordflow">in</span> target_members:</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">if</span> isinstance(member_type, IncludeMembers):</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;something went very wrong, &quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                <span class="stringliteral">&quot;inheritance should be flattened at this point.&quot;</span>)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(member_name, str):</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;member name has to be a string, &quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                                <span class="stringliteral">&quot;currently: %s&lt;%s&gt;&quot;</span> % (<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(member_name),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                       type(member_name)))</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="comment"># create member type class according to the defined member type</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            <span class="keywordflow">if</span> isinstance(member_type, str):</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                array_match = vararray_match.match(member_type)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">if</span> array_match:</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    array_type   = array_match.group(1)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                    array_length = array_match.group(2)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                    <span class="keywordflow">if</span> array_type == <span class="stringliteral">&quot;char&quot;</span>:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                        member = CharArrayMember(array_length)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                    <span class="keywordflow">elif</span> array_type <span class="keywordflow">in</span> NumberMember.type_scan_lookup:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                        <span class="comment"># member = ArrayMember(ref_type=NumberMember,</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                        <span class="comment">#                      length=array_length,</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                        <span class="comment">#                      ref_type_params=[array_type])</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                        <span class="comment"># BIG BIG TODO</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;implement exporting arrays!&quot;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                        <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;member %s has unknown array type %s&quot;</span> % (member_name, member_type))</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">elif</span> member_type == <span class="stringliteral">&quot;std::string&quot;</span>:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                    member = StringMember()</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                    member = NumberMember(member_type)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">elif</span> isinstance(member_type, DataMember):</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                member = member_type</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;unknown member type specification!&quot;</span>)</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">if</span> member <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;member %s of struct %s is None&quot;</span> % (member_name,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                                                                    self.name_struct))</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            self.members[member_name] = member</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="keywordflow">if</span> is_parent:</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                self.inherited_members.append(member_name)</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        members = target.get_data_format(flatten_includes=<span class="keyword">False</span>)</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">for</span> _, _, _, member_type <span class="keywordflow">in</span> members:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">if</span> isinstance(member_type, IncludeMembers):</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                self.parent_classes.append(member_type.cls)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">def </span>dynamic_ref_update(self, lookup_ref_data):</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a09caba3631e9613aa48899149d860e18"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09caba3631e9613aa48899149d860e18">&#9670;&nbsp;</a></span>__repr__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.__repr__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__definition_1_1_data_definition.xhtml#ac09e6c33a6e513d8e880fec2422c4c7a">openage.convert.dataformat.data_definition.DataDefinition</a>.</p>

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00235">235</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"></div><!-- fragment -->
<p class="reference">References <a class="el" href="colortable_8py_source.xhtml#l00016">openage.convert.colortable.ColorTable.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00018">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct</a>, <a class="el" href="exportable_8py_source.xhtml#l00032">openage.convert.dataformat.exportable.Exportable.name_struct</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00041">openage.convert.dataformat.struct_definition.StructDefinition.name_struct</a>, and <a class="el" href="blendomatic_8py_source.xhtml#l00204">openage.convert.blendomatic.Blendomatic.name_struct</a>.</p>

</div>
</div>
<a id="a381c562b66a8185c569778ee982fca1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a381c562b66a8185c569778ee982fca1b">&#9670;&nbsp;</a></span>__str__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.__str__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__definition_1_1_data_definition.xhtml#acf2c82022f9b36751161b85d5b1fc269">openage.convert.dataformat.data_definition.DataDefinition</a>.</p>

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00226">226</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="stringliteral">&quot;\n\tstruct file name: &quot;</span>, self.name_struct_file,</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="stringliteral">&quot;\n\tstruct name: &quot;</span>, self.name_struct,</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;            <span class="stringliteral">&quot;\n\tstruct description: &quot;</span>, self.struct_description,</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        ]</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>.join(ret)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">def </span>__repr__(self):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;StructDefinition&lt;%s&gt;&quot;</span> % self.name_struct</div><div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="colortable_8py_source.xhtml#l00016">openage.convert.colortable.ColorTable.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00018">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct</a>, <a class="el" href="exportable_8py_source.xhtml#l00032">openage.convert.dataformat.exportable.Exportable.name_struct</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00041">openage.convert.dataformat.struct_definition.StructDefinition.name_struct</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00204">openage.convert.blendomatic.Blendomatic.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00017">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct_file</a>, <a class="el" href="colortable_8py_source.xhtml#l00017">openage.convert.colortable.ColorTable.name_struct_file</a>, <a class="el" href="exportable_8py_source.xhtml#l00035">openage.convert.dataformat.exportable.Exportable.name_struct_file</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00038">openage.convert.dataformat.struct_definition.StructDefinition.name_struct_file</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00205">openage.convert.blendomatic.Blendomatic.name_struct_file</a>, <a class="el" href="repr_8cpp_source.xhtml#l00012">openage::util.repr()</a>, <a class="el" href="colortable_8py_source.xhtml#l00018">openage.convert.colortable.ColorTable.struct_description</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00019">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.struct_description</a>, <a class="el" href="exportable_8py_source.xhtml#l00038">openage.convert.dataformat.exportable.Exportable.struct_description</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00044">openage.convert.dataformat.struct_definition.StructDefinition.struct_description</a>, and <a class="el" href="blendomatic_8py_source.xhtml#l00206">openage.convert.blendomatic.Blendomatic.struct_description</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition_a381c562b66a8185c569778ee982fca1b_cgraph.svg" width="646" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aca19f3e93e9752476b46506e5423046b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aca19f3e93e9752476b46506e5423046b">&#9670;&nbsp;</a></span>dynamic_ref_update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.dynamic_ref_update </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>lookup_ref_data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>update ourself the with the given reference data. </p>
<pre class="fragment">   data members can be cross references to definitions somewhere else.
   this symbol resolution is done here by replacing the references.
</pre> 
<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00127">127</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">for</span> _, member_type <span class="keywordflow">in</span> self.members.items():</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(member_type, RefMember):</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="comment"># this member of self is already resolved</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            <span class="keywordflow">if</span> member_type.resolved:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            type_name = member_type.get_effective_type()</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment"># replace the xref with the real definition</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            self.members[type_name] = lookup_ref_data[type_name]</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">def </span>generate_struct(self, genfile):</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"></div><!-- fragment -->
<p class="reference">References <a class="el" href="struct__definition_8py_source.xhtml#l00056">openage.convert.dataformat.struct_definition.StructDefinition.members</a>, and <a class="el" href="team_8h_source.xhtml#l00071">openage::Team.members</a>.</p>

</div>
</div>
<a id="a497aa98fbdddacc2b623b5bedd161f5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a497aa98fbdddacc2b623b5bedd161f5e">&#9670;&nbsp;</a></span>generate_struct()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.generate_struct </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>genfile</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00146">146</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        parents = [parent_class.get_effective_type()</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                   <span class="keywordflow">for</span> parent_class <span class="keywordflow">in</span> self.parent_classes]</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        snippet = StructSnippet(self.name_struct_file,</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                self.name_struct,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                self.struct_description,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                parents)</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        snippet.typedefs.add(self.name_struct)</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="comment"># add struct members and inheritance parents</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">for</span> member_name, member_type <span class="keywordflow">in</span> self.members.items():</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">if</span> member_name <span class="keywordflow">in</span> self.inherited_members:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="comment"># inherited members don&#39;t need to be added as they&#39;re stored in the superclass</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            snippet.includes |= member_type.get_headers(<span class="stringliteral">&quot;struct&quot;</span>)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            snippet.typerefs |= member_type.get_typerefs()</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            snippet.add_members(member_type.get_struct_entries(member_name))</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment"># append member count variable</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        snippet.add_member(<span class="stringliteral">&quot;static constexpr size_t member_count = %d;&quot;</span> % len(self.members))</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        snippet.includes |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;size_t&quot;</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment"># add filling function prototypes</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">for</span> _, member <span class="keywordflow">in</span> sorted(genfile.member_methods.items()):</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            snippet.add_member(<span class="stringliteral">&quot;%s;&quot;</span> % member.get_signature())</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            snippet.includes |= member.get_headers()</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">def </span>generate_struct_implementation(self, genfile):</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="util_8py_source.xhtml#l00071">openage.convert.dataformat.util.determine_header()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00057">openage.convert.dataformat.struct_definition.StructDefinition.inherited_members</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00056">openage.convert.dataformat.struct_definition.StructDefinition.members</a>, <a class="el" href="team_8h_source.xhtml#l00071">openage::Team.members</a>, <a class="el" href="colortable_8py_source.xhtml#l00016">openage.convert.colortable.ColorTable.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00018">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct</a>, <a class="el" href="exportable_8py_source.xhtml#l00032">openage.convert.dataformat.exportable.Exportable.name_struct</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00041">openage.convert.dataformat.struct_definition.StructDefinition.name_struct</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00204">openage.convert.blendomatic.Blendomatic.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00017">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct_file</a>, <a class="el" href="colortable_8py_source.xhtml#l00017">openage.convert.colortable.ColorTable.name_struct_file</a>, <a class="el" href="exportable_8py_source.xhtml#l00035">openage.convert.dataformat.exportable.Exportable.name_struct_file</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00038">openage.convert.dataformat.struct_definition.StructDefinition.name_struct_file</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00205">openage.convert.blendomatic.Blendomatic.name_struct_file</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00058">openage.convert.dataformat.struct_definition.StructDefinition.parent_classes</a>, <a class="el" href="colortable_8py_source.xhtml#l00018">openage.convert.colortable.ColorTable.struct_description</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00019">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.struct_description</a>, <a class="el" href="exportable_8py_source.xhtml#l00038">openage.convert.dataformat.exportable.Exportable.struct_description</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00044">openage.convert.dataformat.struct_definition.StructDefinition.struct_description</a>, and <a class="el" href="blendomatic_8py_source.xhtml#l00206">openage.convert.blendomatic.Blendomatic.struct_description</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition_a497aa98fbdddacc2b623b5bedd161f5e_cgraph.svg" width="588" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a25563a8e16af5b93eac7fc52e4f8e733"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25563a8e16af5b93eac7fc52e4f8e733">&#9670;&nbsp;</a></span>generate_struct_implementation()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.struct_definition.StructDefinition.generate_struct_implementation </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>genfile</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00184">184</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="comment"># returned snippets</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        ret = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment"># constexpr member count definition</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        ret.append(ContentSnippet(</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            data=<span class="stringliteral">&quot;constexpr size_t %s::member_count;&quot;</span> % self.name_struct,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            file_name=self.name_struct_file,</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            section=SectionType.section_body,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            orderby=self.name_struct,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        ))</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment"># variables to be replaced in the function template</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        template_args = {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            <span class="stringliteral">&quot;member_count&quot;</span>:  self.name_struct + <span class="stringliteral">&quot;::member_count&quot;</span>,</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="stringliteral">&quot;delimiter&quot;</span>:     genfile.DELIMITER,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="stringliteral">&quot;struct_name&quot;</span>:   self.name_struct,</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="comment"># create a list of lines for each parser</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment"># a parser converts one csv line to struct entries</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        parsers = {key: [] <span class="keywordflow">for</span> key <span class="keywordflow">in</span> genfile.member_methods}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="comment"># place all needed parsers into their requested member function destination</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keywordflow">for</span> idx, (member_name, member_type) <span class="keywordflow">in</span> enumerate(self.members.items()):</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;            <span class="keywordflow">for</span> parser <span class="keywordflow">in</span> member_type.get_parsers(idx, member_name):</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                parsers[parser.destination].append(parser)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        <span class="comment"># create parser snippets and return them</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">for</span> parser_type, parser_list <span class="keywordflow">in</span> parsers.items():</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            ret.append(</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                genfile.member_methods[parser_type].get_snippet(</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                    parser_list,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                    file_name  = self.name_struct_file,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                    class_name = self.name_struct,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                    data       = template_args,</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;                )</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            )</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keyword">def </span>__str__(self):</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        ret = [</div><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00056">openage.convert.dataformat.struct_definition.StructDefinition.members</a>, <a class="el" href="team_8h_source.xhtml#l00071">openage::Team.members</a>, <a class="el" href="colortable_8py_source.xhtml#l00016">openage.convert.colortable.ColorTable.name_struct</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00018">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct</a>, <a class="el" href="exportable_8py_source.xhtml#l00032">openage.convert.dataformat.exportable.Exportable.name_struct</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00041">openage.convert.dataformat.struct_definition.StructDefinition.name_struct</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00204">openage.convert.blendomatic.Blendomatic.name_struct</a>, <a class="el" href="colortable_8py_source.xhtml#l00017">openage.convert.colortable.ColorTable.name_struct_file</a>, <a class="el" href="multisubtype__base_8py_source.xhtml#l00017">openage.convert.dataformat.multisubtype_base.MultisubtypeBaseFile.name_struct_file</a>, <a class="el" href="exportable_8py_source.xhtml#l00035">openage.convert.dataformat.exportable.Exportable.name_struct_file</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00038">openage.convert.dataformat.struct_definition.StructDefinition.name_struct_file</a>, and <a class="el" href="blendomatic_8py_source.xhtml#l00205">openage.convert.blendomatic.Blendomatic.name_struct_file</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition_a25563a8e16af5b93eac7fc52e4f8e733_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a688b947e963cc34456c26ef97ca6d279"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a688b947e963cc34456c26ef97ca6d279">&#9670;&nbsp;</a></span>inherited_members</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.inherited_members</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00057">57</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>.</p>

</div>
</div>
<a id="aa0d107c9d094dc7f9000470b7fe27a01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0d107c9d094dc7f9000470b7fe27a01">&#9670;&nbsp;</a></span>members</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.members</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00056">56</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="struct__definition_8py_source.xhtml#l00127">openage.convert.dataformat.struct_definition.StructDefinition.dynamic_ref_update()</a>, <a class="el" href="struct__snippet_8py_source.xhtml#l00088">openage.convert.dataformat.struct_snippet.StructSnippet.generate_content()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition.generate_csv()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>, and <a class="el" href="struct__definition_8py_source.xhtml#l00184">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct_implementation()</a>.</p>

</div>
</div>
<a id="aaa13844debc7b828a99b8600e49261c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa13844debc7b828a99b8600e49261c3">&#9670;&nbsp;</a></span>name_struct</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.name_struct</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00041">41</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="data__definition_8py_source.xhtml#l00136">openage.convert.dataformat.data_definition.DataDefinition.__repr__()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00235">openage.convert.dataformat.struct_definition.StructDefinition.__repr__()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00226">openage.convert.dataformat.struct_definition.StructDefinition.__str__()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition.generate_csv()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>, and <a class="el" href="struct__definition_8py_source.xhtml#l00184">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct_implementation()</a>.</p>

</div>
</div>
<a id="ac626664222bc73ed8b73f81022961088"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac626664222bc73ed8b73f81022961088">&#9670;&nbsp;</a></span>name_struct_file</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.name_struct_file</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00038">38</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="struct__definition_8py_source.xhtml#l00226">openage.convert.dataformat.struct_definition.StructDefinition.__str__()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>, and <a class="el" href="struct__definition_8py_source.xhtml#l00184">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct_implementation()</a>.</p>

</div>
</div>
<a id="a98a8258aa3b8fdc4e8b5bcc99b8c8f9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98a8258aa3b8fdc4e8b5bcc99b8c8f9e">&#9670;&nbsp;</a></span>parent_classes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.parent_classes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00058">58</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>.</p>

</div>
</div>
<a id="a29dc8ea0de6193496c5afb006aa029ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29dc8ea0de6193496c5afb006aa029ad">&#9670;&nbsp;</a></span>prefix</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.prefix</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00047">47</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

</div>
</div>
<a id="a62b61f7005f0b916642562db97e7e62d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62b61f7005f0b916642562db97e7e62d">&#9670;&nbsp;</a></span>single_output</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.single_output</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00050">50</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition.generate_csv()</a>.</p>

</div>
</div>
<a id="a7eb9d6203cd0f16196b0d2312062d95c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eb9d6203cd0f16196b0d2312062d95c">&#9670;&nbsp;</a></span>struct_description</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.struct_description</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00044">44</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="struct__definition_8py_source.xhtml#l00226">openage.convert.dataformat.struct_definition.StructDefinition.__str__()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition.generate_csv()</a>, and <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>.</p>

</div>
</div>
<a id="a72ad756bf8c043ab5aa5ab839110377e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72ad756bf8c043ab5aa5ab839110377e">&#9670;&nbsp;</a></span>target</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.struct_definition.StructDefinition.target</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="struct__definition_8py_source.xhtml#l00053">53</a> of file <a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/<a class="el" href="struct__definition_8py_source.xhtml">struct_definition.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1struct__definition.xhtml">struct_definition</a></li><li class="navelem"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1struct__definition_1_1_struct_definition.xhtml">StructDefinition</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
