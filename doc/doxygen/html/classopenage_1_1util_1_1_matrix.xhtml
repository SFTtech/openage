<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::Matrix&lt; M, N, T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1_matrix.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1util_1_1_matrix-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::Matrix&lt; M, N, T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> class with arithmetic.  
 <a href="classopenage_1_1util_1_1_matrix.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="matrix_8h_source.xhtml">matrix.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::util::Matrix&lt; M, N, T &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix__inherit__graph.svg" width="155" height="478"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::Matrix&lt; M, N, T &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix__coll__graph.svg" width="155" height="478"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a5ea0a61c6ed750526162578bb981ee24"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> = <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; M, N, T &gt;</td></tr>
<tr class="separator:a5ea0a61c6ed750526162578bb981ee24"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac4b352fc7e312facc880e5715bd42f01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#ac4b352fc7e312facc880e5715bd42f01">Matrix</a> ()</td></tr>
<tr class="memdesc:ac4b352fc7e312facc880e5715bd42f01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize the matrix to zeroes.  <a href="#ac4b352fc7e312facc880e5715bd42f01">More...</a><br /></td></tr>
<tr class="separator:ac4b352fc7e312facc880e5715bd42f01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aceff6c42bedce3eb5850b05ab6145112"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#aceff6c42bedce3eb5850b05ab6145112">~Matrix</a> ()=default</td></tr>
<tr class="separator:aceff6c42bedce3eb5850b05ab6145112"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf3e43eed1934588bcf877c435502934"><td class="memTemplParams" colspan="2">template&lt;bool cond = is_column_vector, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </td></tr>
<tr class="memitem:aaf3e43eed1934588bcf877c435502934"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#aaf3e43eed1934588bcf877c435502934">Matrix</a> (const <a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt; M, T &gt; &amp;vec)</td></tr>
<tr class="memdesc:aaf3e43eed1934588bcf877c435502934"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor from <a class="el" href="classopenage_1_1util_1_1_vector.xhtml" title="Vector class with arithmetic.">Vector</a>.  <a href="#aaf3e43eed1934588bcf877c435502934">More...</a><br /></td></tr>
<tr class="separator:aaf3e43eed1934588bcf877c435502934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19707201a8fcd11cbeb9f91f72f7ccfd"><td class="memTemplParams" colspan="2">template&lt;typename ... Ts&gt; </td></tr>
<tr class="memitem:a19707201a8fcd11cbeb9f91f72f7ccfd"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a19707201a8fcd11cbeb9f91f72f7ccfd">Matrix</a> (Ts ... args)</td></tr>
<tr class="memdesc:a19707201a8fcd11cbeb9f91f72f7ccfd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor with N*M values.  <a href="#a19707201a8fcd11cbeb9f91f72f7ccfd">More...</a><br /></td></tr>
<tr class="separator:a19707201a8fcd11cbeb9f91f72f7ccfd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1bc212dbfd151ce922ba27cad25a074"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a> (const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;other, float eps=<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a17a9f1eb11a77fa366b55f0a1143b541">default_eps</a>) const</td></tr>
<tr class="memdesc:ac1bc212dbfd151ce922ba27cad25a074"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if both matrices contain the same values within epsilon.  <a href="#ac1bc212dbfd151ce922ba27cad25a074">More...</a><br /></td></tr>
<tr class="separator:ac1bc212dbfd151ce922ba27cad25a074"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23f79a50b5b6c3461e674e7b07432ff7"><td class="memTemplParams" colspan="2">template&lt;size_t P&gt; </td></tr>
<tr class="memitem:a23f79a50b5b6c3461e674e7b07432ff7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; M, P, T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a23f79a50b5b6c3461e674e7b07432ff7">operator *</a> (const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; N, P, T &gt; &amp;other) const</td></tr>
<tr class="memdesc:a23f79a50b5b6c3461e674e7b07432ff7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> multiplication.  <a href="#a23f79a50b5b6c3461e674e7b07432ff7">More...</a><br /></td></tr>
<tr class="separator:a23f79a50b5b6c3461e674e7b07432ff7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa58e34206c0925efc722483e34ada587"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; M, 1, T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#aa58e34206c0925efc722483e34ada587">operator *</a> (const <a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt; M, T &gt; &amp;vec) const</td></tr>
<tr class="memdesc:aa58e34206c0925efc722483e34ada587"><td class="mdescLeft">&#160;</td><td class="mdescRight">Matrix-Vector multiplication.  <a href="#aa58e34206c0925efc722483e34ada587">More...</a><br /></td></tr>
<tr class="separator:aa58e34206c0925efc722483e34ada587"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b100e3972d47f11b30e241809ec29a4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a7b100e3972d47f11b30e241809ec29a4">operator+</a> (const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;other) const</td></tr>
<tr class="memdesc:a7b100e3972d47f11b30e241809ec29a4"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> addition.  <a href="#a7b100e3972d47f11b30e241809ec29a4">More...</a><br /></td></tr>
<tr class="separator:a7b100e3972d47f11b30e241809ec29a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad13f1ffce8d8f40098cb63cb8a609330"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#ad13f1ffce8d8f40098cb63cb8a609330">operator -</a> (const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;other) const</td></tr>
<tr class="memdesc:ad13f1ffce8d8f40098cb63cb8a609330"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> subtraction.  <a href="#ad13f1ffce8d8f40098cb63cb8a609330">More...</a><br /></td></tr>
<tr class="separator:ad13f1ffce8d8f40098cb63cb8a609330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e2887f1612a7a82733967b1856434ac"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a7e2887f1612a7a82733967b1856434ac">operator *=</a> (T other)</td></tr>
<tr class="memdesc:a7e2887f1612a7a82733967b1856434ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scalar multiplication with assignment.  <a href="#a7e2887f1612a7a82733967b1856434ac">More...</a><br /></td></tr>
<tr class="separator:a7e2887f1612a7a82733967b1856434ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b93d69889c489a4137c3f7a07708050"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a7b93d69889c489a4137c3f7a07708050">operator *</a> (T other) const</td></tr>
<tr class="memdesc:a7b93d69889c489a4137c3f7a07708050"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scalar multiplication.  <a href="#a7b93d69889c489a4137c3f7a07708050">More...</a><br /></td></tr>
<tr class="separator:a7b93d69889c489a4137c3f7a07708050"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d5d06bd34e0a9eea626b00b080ad3d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a3d5d06bd34e0a9eea626b00b080ad3d2">operator/=</a> (T other)</td></tr>
<tr class="memdesc:a3d5d06bd34e0a9eea626b00b080ad3d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scalar division with assignment.  <a href="#a3d5d06bd34e0a9eea626b00b080ad3d2">More...</a><br /></td></tr>
<tr class="separator:a3d5d06bd34e0a9eea626b00b080ad3d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47559fde49b3a9634d95596d87fbea98"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a47559fde49b3a9634d95596d87fbea98">operator/</a> (T other) const</td></tr>
<tr class="memdesc:a47559fde49b3a9634d95596d87fbea98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scalar division.  <a href="#a47559fde49b3a9634d95596d87fbea98">More...</a><br /></td></tr>
<tr class="separator:a47559fde49b3a9634d95596d87fbea98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4950945a55363fd77668b983001d55b5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; N, M, T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a4950945a55363fd77668b983001d55b5">transpose</a> () const</td></tr>
<tr class="memdesc:a4950945a55363fd77668b983001d55b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transposition.  <a href="#a4950945a55363fd77668b983001d55b5">More...</a><br /></td></tr>
<tr class="separator:a4950945a55363fd77668b983001d55b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58d27b46e7ceaddc0c7ff2e0e9f2a6cf"><td class="memTemplParams" colspan="2">template&lt;bool cond = is_column_vector, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </td></tr>
<tr class="memitem:a58d27b46e7ceaddc0c7ff2e0e9f2a6cf"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt; M, T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a58d27b46e7ceaddc0c7ff2e0e9f2a6cf">to_vector</a> () const</td></tr>
<tr class="memdesc:a58d27b46e7ceaddc0c7ff2e0e9f2a6cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="classopenage_1_1util_1_1_vector.xhtml" title="Vector class with arithmetic.">Vector</a>.  <a href="#a58d27b46e7ceaddc0c7ff2e0e9f2a6cf">More...</a><br /></td></tr>
<tr class="separator:a58d27b46e7ceaddc0c7ff2e0e9f2a6cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8e23f59ac0793b10d8487abac1e2edb"><td class="memTemplParams" colspan="2">template&lt;bool cond = is_square, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </td></tr>
<tr class="memitem:ae8e23f59ac0793b10d8487abac1e2edb"><td class="memTemplItemLeft" align="right" valign="top">T&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#ae8e23f59ac0793b10d8487abac1e2edb">trace</a> () const</td></tr>
<tr class="memdesc:ae8e23f59ac0793b10d8487abac1e2edb"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> trace: the sum of all diagonal entries.  <a href="#ae8e23f59ac0793b10d8487abac1e2edb">More...</a><br /></td></tr>
<tr class="separator:ae8e23f59ac0793b10d8487abac1e2edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0ba437147db630d1ca901f870764a024"><td class="memTemplParams" colspan="2">template&lt;bool cond = is_square, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </td></tr>
<tr class="memitem:a0ba437147db630d1ca901f870764a024"><td class="memTemplItemLeft" align="right" valign="top">static <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a0ba437147db630d1ca901f870764a024">identity</a> ()</td></tr>
<tr class="memdesc:a0ba437147db630d1ca901f870764a024"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs the identity matrix for the current size.  <a href="#a0ba437147db630d1ca901f870764a024">More...</a><br /></td></tr>
<tr class="separator:a0ba437147db630d1ca901f870764a024"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a17a9f1eb11a77fa366b55f0a1143b541"><td class="memItemLeft" align="right" valign="top">static constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a17a9f1eb11a77fa366b55f0a1143b541">default_eps</a> = 1e-5</td></tr>
<tr class="separator:a17a9f1eb11a77fa366b55f0a1143b541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05cddcbaea57d38a247fc3f6bfe9732b"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a05cddcbaea57d38a247fc3f6bfe9732b">rows</a> = M</td></tr>
<tr class="separator:a05cddcbaea57d38a247fc3f6bfe9732b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e6ca60e377f5be70baace533d677b79"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5e6ca60e377f5be70baace533d677b79">cols</a> = N</td></tr>
<tr class="separator:a5e6ca60e377f5be70baace533d677b79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a775ebdbef36a23cf8a7e62d7517f9303"><td class="memItemLeft" align="right" valign="top">static constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a775ebdbef36a23cf8a7e62d7517f9303">is_square</a> = (M == N)</td></tr>
<tr class="separator:a775ebdbef36a23cf8a7e62d7517f9303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797428914210319763ae300a914e9177"><td class="memItemLeft" align="right" valign="top">static constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a797428914210319763ae300a914e9177">is_row_vector</a> = (M == 1)</td></tr>
<tr class="separator:a797428914210319763ae300a914e9177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7eeb76d6d746657e82580bca16bd0b95"><td class="memItemLeft" align="right" valign="top">static constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a7eeb76d6d746657e82580bca16bd0b95">is_column_vector</a> = (N == 1)</td></tr>
<tr class="separator:a7eeb76d6d746657e82580bca16bd0b95"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a256d8ad5c2e631d1727aae6e813289f0"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a256d8ad5c2e631d1727aae6e813289f0">operator&lt;&lt;</a> (std::ostream &amp;o, const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;mat)</td></tr>
<tr class="memdesc:a256d8ad5c2e631d1727aae6e813289f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Print to output stream using '&lt;&lt;'.  <a href="#a256d8ad5c2e631d1727aae6e813289f0">More...</a><br /></td></tr>
<tr class="separator:a256d8ad5c2e631d1727aae6e813289f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;size_t M, size_t N, typename T&gt;<br />
class openage::util::Matrix&lt; M, N, T &gt;</h3>

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> class with arithmetic. </p>
<p>M rows, N columns. T = underlying single value type (float, double, ...) </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00020">20</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a5ea0a61c6ed750526162578bb981ee24"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ea0a61c6ed750526162578bb981ee24">&#9670;&nbsp;</a></span>this_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> =  <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt;M, N, T&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00024">24</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ac4b352fc7e312facc880e5715bd42f01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4b352fc7e312facc880e5715bd42f01">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initialize the matrix to zeroes. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00037">37</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;             {</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                (*this)[i][j] = 0;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        }</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aceff6c42bedce3eb5850b05ab6145112"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aceff6c42bedce3eb5850b05ab6145112">&#9670;&nbsp;</a></span>~Matrix()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::~<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="aaf3e43eed1934588bcf877c435502934"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf3e43eed1934588bcf877c435502934">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;bool cond = is_column_vector, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt; M, T &gt; &amp;&#160;</td>
          <td class="paramname"><em>vec</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor from <a class="el" href="classopenage_1_1util_1_1_vector.xhtml" title="Vector class with arithmetic.">Vector</a>. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00052">52</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                                    {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            (*this)[i][0] = vec[i];</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a19707201a8fcd11cbeb9f91f72f7ccfd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19707201a8fcd11cbeb9f91f72f7ccfd">&#9670;&nbsp;</a></span>Matrix() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;typename ... Ts&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::<a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a> </td>
          <td>(</td>
          <td class="paramtype">Ts ...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructor with N*M values. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00062">62</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                        {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        static_assert(<span class="keyword">sizeof</span>...(args) == N*M, <span class="stringliteral">&quot;not all values supplied&quot;</span>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        std::array&lt;float, N*M&gt; temp{{static_cast&lt;T&gt;(args)...}};</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N*M; i++) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            (*this)[i / (N*M)][i % (N*M)] = temp[i];</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac1bc212dbfd151ce922ba27cad25a074"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1bc212dbfd151ce922ba27cad25a074">&#9670;&nbsp;</a></span>equals()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::equals </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>eps</em> = <code><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a17a9f1eb11a77fa366b55f0a1143b541">default_eps</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Test if both matrices contain the same values within epsilon. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00089">89</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                                     {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N; i++) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; M; j++) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                <span class="keywordflow">if</span> (<a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>((*<span class="keyword">this</span>)[i][j] - other[i][j]) &gt;= eps) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00491">std::abs()</a>.</p>

<p class="reference">Referenced by <a class="el" href="quaternion__test_8cpp_source.xhtml#l00016">openage::util::tests::quaternion()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix_ac1bc212dbfd151ce922ba27cad25a074_cgraph.svg" width="483" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix_ac1bc212dbfd151ce922ba27cad25a074_icgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0ba437147db630d1ca901f870764a024"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ba437147db630d1ca901f870764a024">&#9670;&nbsp;</a></span>identity()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;bool cond = is_square, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::identity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Constructs the identity matrix for the current size. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00076">76</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> res;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N; i++) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            res[i][i] = 1;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a5ea0a61c6ed750526162578bb981ee24"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">openage::util::Matrix::this_type</a></div><div class="ttdeci">Matrix&lt; M, N, T &gt; this_type</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00024">matrix.h:24</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="quaternion__test_8cpp_source.xhtml#l00016">openage::util::tests::quaternion()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix_a0ba437147db630d1ca901f870764a024_icgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23f79a50b5b6c3461e674e7b07432ff7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23f79a50b5b6c3461e674e7b07432ff7">&#9670;&nbsp;</a></span>operator *() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;size_t P&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt;M, P, T&gt; <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt; N, P, T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> multiplication. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00104">104</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;                                                                   {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        Matrix&lt;M, P, T&gt; res;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; P; j++) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                res[i][j] = 0;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> k = 0; k &lt; N; k++) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                    res[i][j] += (*this)[i][k] * other[k][j];</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="aa58e34206c0925efc722483e34ada587"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa58e34206c0925efc722483e34ada587">&#9670;&nbsp;</a></span>operator *() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt;M, 1, T&gt; <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt; M, T &gt; &amp;&#160;</td>
          <td class="paramname"><em>vec</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Matrix-Vector multiplication. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00120">120</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                               {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">return</span> (*<span class="keyword">this</span>) * <span class="keyword">static_cast&lt;</span>Matrix&lt;M, 1, T&gt;<span class="keyword">&gt;</span>(vec);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a7b93d69889c489a4137c3f7a07708050"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b93d69889c489a4137c3f7a07708050">&#9670;&nbsp;</a></span>operator *() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator * </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scalar multiplication. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00164">164</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                        {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> res(*<span class="keyword">this</span>);</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        res *= other;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a5ea0a61c6ed750526162578bb981ee24"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">openage::util::Matrix::this_type</a></div><div class="ttdeci">Matrix&lt; M, N, T &gt; this_type</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00024">matrix.h:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7e2887f1612a7a82733967b1856434ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e2887f1612a7a82733967b1856434ac">&#9670;&nbsp;</a></span>operator *=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scalar multiplication with assignment. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00153">153</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                              {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                (*this)[i][j] *= other;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ad13f1ffce8d8f40098cb63cb8a609330"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad13f1ffce8d8f40098cb63cb8a609330">&#9670;&nbsp;</a></span>operator -()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator - </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> subtraction. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00140">140</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                                       {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> res;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                res[i][j] = (*this)[i][j] - other[i][j];</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;            }</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        }</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a5ea0a61c6ed750526162578bb981ee24"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">openage::util::Matrix::this_type</a></div><div class="ttdeci">Matrix&lt; M, N, T &gt; this_type</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00024">matrix.h:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a7b100e3972d47f11b30e241809ec29a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b100e3972d47f11b30e241809ec29a4">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator+ </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> addition. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00127">127</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                                       {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> res;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                res[i][j] = (*this)[i][j] + other[i][j];</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a5ea0a61c6ed750526162578bb981ee24"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">openage::util::Matrix::this_type</a></div><div class="ttdeci">Matrix&lt; M, N, T &gt; this_type</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00024">matrix.h:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a47559fde49b3a9634d95596d87fbea98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47559fde49b3a9634d95596d87fbea98">&#9670;&nbsp;</a></span>operator/()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator/ </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scalar division. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00184">184</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                                        {</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> res(*<span class="keyword">this</span>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        res /= other;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a5ea0a61c6ed750526162578bb981ee24"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">openage::util::Matrix::this_type</a></div><div class="ttdeci">Matrix&lt; M, N, T &gt; this_type</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00024">matrix.h:24</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a3d5d06bd34e0a9eea626b00b080ad3d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d5d06bd34e0a9eea626b00b080ad3d2">&#9670;&nbsp;</a></span>operator/=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Scalar division with assignment. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00173">173</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                              {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                (*this)[i][j] /= other;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            }</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a58d27b46e7ceaddc0c7ff2e0e9f2a6cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58d27b46e7ceaddc0c7ff2e0e9f2a6cf">&#9670;&nbsp;</a></span>to_vector()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;bool cond = is_column_vector, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_vector.xhtml">Vector</a>&lt;M, T&gt; <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::to_vector </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Conversion to <a class="el" href="classopenage_1_1util_1_1_vector.xhtml" title="Vector class with arithmetic.">Vector</a>. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00208">208</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                                   {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        Vector&lt;M, T&gt; res{};</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            res[i] = (*this)[i][0];</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="ae8e23f59ac0793b10d8487abac1e2edb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8e23f59ac0793b10d8487abac1e2edb">&#9670;&nbsp;</a></span>trace()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<div class="memtemplate">
template&lt;bool cond = is_square, typename  = typename std::enable_if&lt;cond&gt;::type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::trace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml" title="Matrix class with arithmetic.">Matrix</a> trace: the sum of all diagonal entries. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00221">221</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                    {</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        T res = 0;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N; i++) {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            res += (*this)[i][i];</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        }</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="quaternion_8h_source.xhtml#l00066">openage::util::Quaternion&lt; T &gt;::Quaternion()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix_ae8e23f59ac0793b10d8487abac1e2edb_icgraph.svg" width="366" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4950945a55363fd77668b983001d55b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4950945a55363fd77668b983001d55b5">&#9670;&nbsp;</a></span>transpose()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a>&lt;N, M, T&gt; <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::transpose </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Transposition. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00193">193</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                                      {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        Matrix &lt;N, M, T&gt; res;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; M; i++) {</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; N; j++) {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                res[j][i] = (*this)[i][j];</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            }</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="matrix__test_8cpp_source.xhtml#l00012">openage::util::tests::matrix()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_matrix_a4950945a55363fd77668b983001d55b5_icgraph.svg" width="332" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a256d8ad5c2e631d1727aae6e813289f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a256d8ad5c2e631d1727aae6e813289f0">&#9670;&nbsp;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>o</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml#a5ea0a61c6ed750526162578bb981ee24">this_type</a> &amp;&#160;</td>
          <td class="paramname"><em>mat</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Print to output stream using '&lt;&lt;'. </p>

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00234">234</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                                           {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        o &lt;&lt; <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> j = 0; j &lt; M-1; j++) {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            o &lt;&lt; <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N-1; i++) {</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                o &lt;&lt; mat[j][i] &lt;&lt; <span class="stringliteral">&quot;,\t&quot;</span>;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            }</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            o &lt;&lt; mat[j][N-1] &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            o &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; std::endl &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        }</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        o &lt;&lt; <span class="stringliteral">&quot;(&quot;</span>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; N-1; i++) {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;            o &lt;&lt; mat[M-1][i] &lt;&lt; <span class="stringliteral">&quot;,\t&quot;</span>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        o &lt;&lt; mat[M-1][N-1] &lt;&lt; <span class="stringliteral">&quot;))&quot;</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">return</span> o;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a5e6ca60e377f5be70baace533d677b79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e6ca60e377f5be70baace533d677b79">&#9670;&nbsp;</a></span>cols</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr size_t <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::cols = N</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00029">29</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<a id="a17a9f1eb11a77fa366b55f0a1143b541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17a9f1eb11a77fa366b55f0a1143b541">&#9670;&nbsp;</a></span>default_eps</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::default_eps = 1e-5</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00026">26</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<a id="a7eeb76d6d746657e82580bca16bd0b95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7eeb76d6d746657e82580bca16bd0b95">&#9670;&nbsp;</a></span>is_column_vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::is_column_vector = (N == 1)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00032">32</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<a id="a797428914210319763ae300a914e9177"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a797428914210319763ae300a914e9177">&#9670;&nbsp;</a></span>is_row_vector</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::is_row_vector = (M == 1)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00031">31</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<a id="a775ebdbef36a23cf8a7e62d7517f9303"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a775ebdbef36a23cf8a7e62d7517f9303">&#9670;&nbsp;</a></span>is_square</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::is_square = (M == N)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00030">30</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<a id="a05cddcbaea57d38a247fc3f6bfe9732b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05cddcbaea57d38a247fc3f6bfe9732b">&#9670;&nbsp;</a></span>rows</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;size_t M, size_t N, typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr size_t <a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a>&lt; M, N, T &gt;::rows = M</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="matrix_8h_source.xhtml#l00028">28</a> of file <a class="el" href="matrix_8h_source.xhtml">matrix.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="matrix_8h_source.xhtml">matrix.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
