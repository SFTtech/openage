<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/path.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('util_2path_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">path.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="util_2path_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * C++ wrappers for openage.util.fslikeobject</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// pxd: from libcpp.string cimport string</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">// pxd: from libcpp.vector cimport vector</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// pxd: from libopenage.pyinterface.pyobject cimport PyObj</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &quot;../pyinterface/pyobject.h&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="file_8h.xhtml">file.h</a>&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fslike_2native_8h.xhtml">fslike/native.h</a>&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">// pxd: from libopenage.util.fslike.fslike cimport FSLike</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span>fslike {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span>FSLike;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml">   46</a></span>&#160;<span class="keyword">class </span><a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">   53</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> = std::string;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">   59</a></span>&#160;    <span class="keyword">using</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> = std::vector&lt;part_t&gt;;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a>();</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> fslike,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;         <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> &amp;parts={});</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a>(<span class="keyword">const</span> std::shared_ptr&lt;fslike::FSLike&gt; &amp;fslike,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;         <span class="keyword">const</span> parts_t &amp;parts={});</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">virtual</span> ~Path() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordtype">bool</span> exists() <span class="keyword">const</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordtype">bool</span> is_file() <span class="keyword">const</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">bool</span> is_dir() <span class="keyword">const</span>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordtype">bool</span> writable() <span class="keyword">const</span>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::vector&lt;part_t&gt; <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    std::vector&lt;Path&gt; iterdir();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordtype">bool</span> mkdirs();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    File open(<span class="keyword">const</span> std::string &amp;mode=<span class="stringliteral">&quot;r&quot;</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    File open_r() <span class="keyword">const</span>;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    File open_w() <span class="keyword">const</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    File open_rw() <span class="keyword">const</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    File open_a() <span class="keyword">const</span>;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    File open_ar() <span class="keyword">const</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    std::string resolve_native_path(<span class="keyword">const</span> std::string &amp;mode=<span class="stringliteral">&quot;r&quot;</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    std::string resolve_native_path_r() <span class="keyword">const</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::string resolve_native_path_w() <span class="keyword">const</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">bool</span> rename(<span class="keyword">const</span> Path &amp;target_path);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordtype">bool</span> rmdir();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keywordtype">bool</span> touch();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">bool</span> unlink();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordtype">void</span> removerecursive();</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">int</span> get_mtime() <span class="keyword">const</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    uint64_t get_filesize() <span class="keyword">const</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// TODO: watching of path with inotify or similar</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment">//       this should get a Watcher*, which manages the multiple events</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">//       otherwise, each file would require an inotify fd.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="comment">//       =&gt; see the AssetManager and move functionality from there.</span></div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="comment">// int watch(std::function&lt;&gt; callback);</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment">// void poll_fs_watches(); // call triggered callbacks</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    Path get_parent() <span class="keyword">const</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keyword">const</span> std::string &amp;get_name() <span class="keyword">const</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    std::string get_suffix() <span class="keyword">const</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    std::vector&lt;std::string&gt; get_suffixes() <span class="keyword">const</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    std::string get_stem() <span class="keyword">const</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    Path joinpath(<span class="keyword">const</span> parts_t &amp;subpaths) <span class="keyword">const</span>;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    Path joinpath(<span class="keyword">const</span> part_t &amp;subpath) <span class="keyword">const</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    Path operator [](<span class="keyword">const</span> parts_t &amp;subpaths) <span class="keyword">const</span>;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    Path operator [](<span class="keyword">const</span> part_t &amp;subpath) <span class="keyword">const</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    Path <a class="code" href="namespaceopenage_1_1util.xhtml#a4e6ea5affdccd958479d0eba1b74ce0f">operator /</a>(<span class="keyword">const</span> part_t &amp;subpath) <span class="keyword">const</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    Path with_name(<span class="keyword">const</span> part_t &amp;name) <span class="keyword">const</span>;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    Path with_suffix(<span class="keyword">const</span> part_t &amp;suffix) <span class="keyword">const</span>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1input.xhtml#a1d09cb9758cee29027f1ddfea81cf1ac">operator ==</a>(<span class="keyword">const</span> Path &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">bool</span> operator !=(<span class="keyword">const</span> Path &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    fslike::FSLike *get_fsobj() <span class="keyword">const</span>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keyword">const</span> parts_t &amp;get_parts() <span class="keyword">const</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    std::string get_native_path() <span class="keyword">const</span>;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">protected</span>:</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">  166</a></span>&#160;    std::shared_ptr&lt;fslike::FSLike&gt; <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">  168</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keyword">friend</span> std::ostream &amp;<a class="code" href="namespaceopenage_1_1util.xhtml#abe7e29a3d1ac620fb9d0eb6830be84cf">operator &lt;&lt;</a>(std::ostream &amp;stream, <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;path);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;};</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="comment">// helper functions, needed for some parts of convert/</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;std::string <a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>(<span class="keyword">const</span> std::string &amp;fullpath);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;std::string <a class="code" href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">dirname</a>(<span class="keyword">const</span> std::string &amp;fullpath);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}} <span class="comment">// openage::util</span></div><div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_abe7e29a3d1ac620fb9d0eb6830be84cf"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#abe7e29a3d1ac620fb9d0eb6830be84cf">openage::util::operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;stream, const File &amp;file)</div><div class="ttdef"><b>Definition:</b> <a href="file_8cpp_source.xhtml#l00122">file.cpp:122</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a954be5116f7af5633dbbc50bac26b0a8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">openage::util::dirname</a></div><div class="ttdeci">std::string dirname(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00374">path.cpp:374</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a01b9e1b6d2f1e72e14265f1b23e102c2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">openage::util::Path::part_t</a></div><div class="ttdeci">std::string part_t</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00053">path.h:53</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_aea581b919984cda327632efe3d11f8b3"><div class="ttname"><a href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a></div><div class="ttdeci">#define OAAPI</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00026">compiler.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml">openage::util::Path</a></div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00046">path.h:46</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a288d8a3dd8a8a7a377f672d9c88b6ca2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">openage::util::Path::fsobj</a></div><div class="ttdeci">std::shared_ptr&lt; fslike::FSLike &gt; fsobj</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00166">path.h:166</a></div></div>
<div class="ttc" id="fslike_2native_8h_xhtml"><div class="ttname"><a href="fslike_2native_8h.xhtml">native.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a42a892625a98126a36cb9c12f4b017f8"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">openage::util::Path::parts</a></div><div class="ttdeci">parts_t parts</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00168">path.h:168</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a45bb33ddb21332a423a5788fc9ee8462"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">openage::util::Path::parts_t</a></div><div class="ttdeci">std::vector&lt; part_t &gt; parts_t</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00059">path.h:59</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a4e6ea5affdccd958479d0eba1b74ce0f"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a4e6ea5affdccd958479d0eba1b74ce0f">openage::util::operator/</a></div><div class="ttdeci">constexpr FixedPoint&lt; I, F &gt; operator/(const FixedPoint&lt; I, F &gt; lhs, const N &amp;rhs)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00459">fixed_point.h:459</a></div></div>
<div class="ttc" id="file_8h_xhtml"><div class="ttname"><a href="file_8h.xhtml">file.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">openage::pyinterface::PyObjectRef</a></div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00049">pyobject.h:49</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a1d09cb9758cee29027f1ddfea81cf1ac"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a1d09cb9758cee29027f1ddfea81cf1ac">openage::input::operator==</a></div><div class="ttdeci">bool operator==(ClassCode a, ClassCode b)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00041">event.cpp:41</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="util_2path_8h.xhtml">path.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
