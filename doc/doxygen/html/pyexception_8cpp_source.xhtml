<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/pyexception.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pyexception_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pyexception.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pyexception_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyexception_8h.xhtml">pyexception.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#ac33230cda520fbd8269fc58154607d29">   11</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#ac33230cda520fbd8269fc58154607d29">PyExceptionBacktrace::get_symbols</a>(std::function&lt;<span class="keywordtype">void</span> (<span class="keyword">const</span> <a class="code" href="structopenage_1_1error_1_1backtrace__symbol.xhtml">error::backtrace_symbol</a> *)&gt; cb, <span class="keywordtype">bool</span> reversed)<span class="keyword"> const </span>{</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    <span class="keywordflow">if</span> (reversed) {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abd497e13d9c1d349faac93274a50dece">pyexception_bt_get_symbols</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#a6fdae658b88f0eee99c803e265d5ae97">ref</a>, cb);</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        <span class="comment">// pyexception_bt_get_symbols gives us the symbols in reverse order, we&#39;ll have to use a std::vector</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;        <span class="comment">// to flip it.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        std::vector&lt;error::backtrace_symbol&gt; symbols;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abd497e13d9c1d349faac93274a50dece">pyexception_bt_get_symbols</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#a6fdae658b88f0eee99c803e265d5ae97">ref</a>, [&amp;symbols](<span class="keyword">const</span> <a class="code" href="structopenage_1_1error_1_1backtrace__symbol.xhtml">error::backtrace_symbol</a> *symbol) {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            symbols.emplace_back(*symbol);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        });</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> idx = symbols.size(); idx-- &gt; 0;) {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            cb(&amp;symbols[idx]);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        }</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    }</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#aa8b1811a748a3b9098ecea916a925393">   30</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#aa8b1811a748a3b9098ecea916a925393">PyException::init_backtrace</a>() {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a> = std::make_shared&lt;PyExceptionBacktrace&gt;(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#ac541a09011ddd24b3e16700f9979b3fc">py_obj</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">   35</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">PyException::type_name</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    std::string <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>.append(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#ac541a09011ddd24b3e16700f9979b3fc">py_obj</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">modulename</a>());</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    result.push_back(<span class="charliteral">&#39;.&#39;</span>);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>.append(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#ac541a09011ddd24b3e16700f9979b3fc">py_obj</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">classname</a>());</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#abd497e13d9c1d349faac93274a50dece">   46</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, Func&lt;void, const error::backtrace_symbol *&gt;</a>&gt; <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abd497e13d9c1d349faac93274a50dece">pyexception_bt_get_symbols</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}} <span class="comment">// openage::pyinterface</span></div><div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_backtrace_xhtml_a6fdae658b88f0eee99c803e265d5ae97"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#a6fdae658b88f0eee99c803e265d5ae97">openage::pyinterface::PyExceptionBacktrace::ref</a></div><div class="ttdeci">PyObject * ref</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8h_source.xhtml#l00044">pyexception.h:44</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a912e76dc7854f9c1816533f6f8571767"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">openage::pyinterface::PyObjectRef::classname</a></div><div class="ttdeci">std::string classname() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00256">pyobject.cpp:256</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ac75d8f60c25c4a7570dcdf83b601d639"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">openage::pyinterface::PyObjectRef::get_ref</a></div><div class="ttdeci">PyObject * get_ref() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00246">pyobject.h:246</a></div></div>
<div class="ttc" id="structopenage_1_1error_1_1backtrace__symbol_xhtml"><div class="ttname"><a href="structopenage_1_1error_1_1backtrace__symbol.xhtml">openage::error::backtrace_symbol</a></div><div class="ttdef"><b>Definition:</b> <a href="backtrace_8h_source.xhtml#l00034">backtrace.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml_a1352d1476e7824c11aca00df918879e1"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">openage::pyinterface::PyException::type_name</a></div><div class="ttdeci">std::string type_name() const override</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00035">pyexception.cpp:35</a></div></div>
<div class="ttc" id="pyexception_8h_xhtml"><div class="ttname"><a href="pyexception_8h.xhtml">pyexception.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_abd497e13d9c1d349faac93274a50dece"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#abd497e13d9c1d349faac93274a50dece">openage::pyinterface::pyexception_bt_get_symbols</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, Func&lt; void, const error::backtrace_symbol * &gt; &gt; pyexception_bt_get_symbols</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00046">pyexception.cpp:46</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afd545e1817cad9ab9f5c84934d83e428"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">openage::pyinterface::PyObjectRef::modulename</a></div><div class="ttdeci">std::string modulename() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00251">pyobject.cpp:251</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml_aa8b1811a748a3b9098ecea916a925393"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#aa8b1811a748a3b9098ecea916a925393">openage::pyinterface::PyException::init_backtrace</a></div><div class="ttdeci">void init_backtrace()</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00030">pyexception.cpp:30</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a8ad0320b8e32d6f187d0f4a74bd89d69"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">openage::error::Error::backtrace</a></div><div class="ttdeci">std::shared_ptr&lt; Backtrace &gt; backtrace</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00097">error.h:97</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_backtrace_xhtml_ac33230cda520fbd8269fc58154607d29"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception_backtrace.xhtml#ac33230cda520fbd8269fc58154607d29">openage::pyinterface::PyExceptionBacktrace::get_symbols</a></div><div class="ttdeci">void get_symbols(std::function&lt; void(const error::backtrace_symbol *)&gt; cb, bool reversed) const override</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00011">pyexception.cpp:11</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml_ac541a09011ddd24b3e16700f9979b3fc"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#ac541a09011ddd24b3e16700f9979b3fc">openage::pyinterface::PyException::py_obj</a></div><div class="ttdeci">PyObjectRef py_obj</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8h_source.xhtml#l00071">pyexception.h:71</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_if_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">openage::pyinterface::PyIfFunc</a></div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00407">functional.h:407</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="pyexception_8cpp.xhtml">pyexception.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
