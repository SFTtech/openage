<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/eventstore.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('eventstore_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">eventstore.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eventstore_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2018-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="eventstore_8h.xhtml">eventstore.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="event_2event_8h.xhtml">event.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../util/compiler.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage_1_1event.xhtml">openage::event</a> {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#ae17679f5da2da238bc0f423befda3850">   15</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#ae17679f5da2da238bc0f423befda3850">EventStore::push</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;event) {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(event == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;inserting nullptr event to queue&quot;</span>};</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    }</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">heap_t::element_t</a> order = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a75e9e7602b59aeee47a2fd84a10c8f74">push</a>(event);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.emplace(event, order);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">size</a>() == this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size(),</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;           <span class="stringliteral">&quot;heap and event set are inconsistent&quot;</span>);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#a6758260ffbc439c15c70590979acb2f9">   28</a></span>&#160;std::shared_ptr&lt;Event&gt; <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a6758260ffbc439c15c70590979acb2f9">EventStore::pop</a>() {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">size</a>() == this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size(),</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;           <span class="stringliteral">&quot;heap and event set are inconsistent 0&quot;</span>);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordtype">size_t</span> heap_s = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">size</a>();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">size_t</span> evnt_s = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size();</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::shared_ptr&lt;Event&gt; <span class="keyword">event</span> = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ac6bcfcb890dd8d546b1b4c466cf09009">pop</a>();</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.erase(event);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">size</a>() != this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size()) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;inconsistent: prev_heap=&quot;</span> &lt;&lt; heap_s</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot; prev_map=&quot;</span> &lt;&lt; evnt_s};</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">//ENSURE(this-&gt;heap.size() == this-&gt;events.size(),</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="comment">//   &quot;heap and event set are inconsistent 1&quot;);</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> event;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#abbad60ac960f4020d813237260867dcb">   49</a></span>&#160;<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abbad60ac960f4020d813237260867dcb">EventStore::top</a>() {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ad22ca21f8e7319ea14cd3e14cf5274c4">top</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#acf182eb2f89c80bb6c790a24d192398f">   54</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#acf182eb2f89c80bb6c790a24d192398f">EventStore::erase</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;event) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="keywordtype">bool</span> erased = <span class="keyword">false</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.find(event);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> (it != std::end(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>)) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a8f6c87e73e47397b92a2766989a30c0f">unlink_node</a>(it-&gt;second);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.erase(it);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        erased = <span class="keyword">true</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> erased;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#ae8a67463b44b369d9402186cf332e247">   67</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#ae8a67463b44b369d9402186cf332e247">EventStore::update</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;event) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.find(event);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(it != std::end(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>))) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aab81daeebac3d236ced4a85117483d76">update</a>(it-&gt;second);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;event to update not found in store&quot;</span>};</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#a4be75c01219e59abd20b9f906c8b7154">   78</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a4be75c01219e59abd20b9f906c8b7154">EventStore::contains</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;event)<span class="keyword"> const </span>{</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> (this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.find(event) != std::end(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#a5085887950c62e1061fea8e2edaf76cb">   83</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a5085887950c62e1061fea8e2edaf76cb">EventStore::clear</a>() {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">heap</a>.<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a012519defd709aacae622b276c3f85eb">clear</a>();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.clear();</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#a895a291c20860520abba447e1cd48fd0">   89</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#a895a291c20860520abba447e1cd48fd0">EventStore::size</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#ad91190c9873619a057d067282966d68c">   94</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#ad91190c9873619a057d067282966d68c">EventStore::empty</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.empty();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_store.xhtml#af94747a58143a4d16b0f94bd184444be">   99</a></span>&#160;std::vector&lt;std::shared_ptr&lt;Event&gt;&gt; <a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#af94747a58143a4d16b0f94bd184444be">EventStore::get_sorted_events</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    std::vector&lt;std::shared_ptr&lt;Event&gt;&gt; ret;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    ret.reserve(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>.size());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::transform(</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        std::begin(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        std::end(this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">events</a>),</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        std::back_inserter(ret),</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        [](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;elem) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">return</span> elem.first;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        }</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    );</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    std::sort(</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        std::begin(ret),</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        std::end(ret),</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        [](<span class="keyword">const</span> <span class="keyword">auto</span> &amp;a, <span class="keyword">const</span> <span class="keyword">auto</span> &amp;b) {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keywordflow">return</span> *a &lt; *b;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    );</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;} <span class="comment">// openage::event</span></div><div class="ttc" id="event_2event_8h_xhtml"><div class="ttname"><a href="event_2event_8h.xhtml">event.h</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af89a07b90150d0d4606787f0ac202242"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::element_t</a></div><div class="ttdeci">std::shared_ptr&lt; node_t &gt; element_t</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00198">pairing_heap.h:198</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_ad22ca21f8e7319ea14cd3e14cf5274c4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ad22ca21f8e7319ea14cd3e14cf5274c4">openage::datastructure::PairingHeap::top</a></div><div class="ttdeci">const T &amp; top() const</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00358">pairing_heap.h:358</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_xhtml"><div class="ttname"><a href="namespaceopenage_1_1event.xhtml">openage::event</a></div><div class="ttdef"><b>Definition:</b> <a href="aicontroller_8cpp_source.xhtml#l00005">aicontroller.cpp:5</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a8f6c87e73e47397b92a2766989a30c0f"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a8f6c87e73e47397b92a2766989a30c0f">openage::datastructure::PairingHeap::unlink_node</a></div><div class="ttdeci">void unlink_node(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00334">pairing_heap.h:334</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_ad91190c9873619a057d067282966d68c"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#ad91190c9873619a057d067282966d68c">openage::event::EventStore::empty</a></div><div class="ttdeci">bool empty() const</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00094">eventstore.cpp:94</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_ae8a67463b44b369d9402186cf332e247"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#ae8a67463b44b369d9402186cf332e247">openage::event::EventStore::update</a></div><div class="ttdeci">void update(const std::shared_ptr&lt; Event &gt; &amp;event)</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00067">eventstore.cpp:67</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a45599db3b89b27ad5c53ca900a67df85"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">openage::datastructure::PairingHeap::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00422">pairing_heap.h:422</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_a6758260ffbc439c15c70590979acb2f9"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#a6758260ffbc439c15c70590979acb2f9">openage::event::EventStore::pop</a></div><div class="ttdeci">std::shared_ptr&lt; Event &gt; pop()</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00028">eventstore.cpp:28</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_ae17679f5da2da238bc0f423befda3850"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#ae17679f5da2da238bc0f423befda3850">openage::event::EventStore::push</a></div><div class="ttdeci">void push(const std::shared_ptr&lt; Event &gt; &amp;event)</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00015">eventstore.cpp:15</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_ac6bcfcb890dd8d546b1b4c466cf09009"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ac6bcfcb890dd8d546b1b4c466cf09009">openage::datastructure::PairingHeap::pop</a></div><div class="ttdeci">T pop()</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00236">pairing_heap.h:236</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a75e9e7602b59aeee47a2fd84a10c8f74"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a75e9e7602b59aeee47a2fd84a10c8f74">openage::datastructure::PairingHeap::push</a></div><div class="ttdeci">element_t push(const T &amp;item)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00217">pairing_heap.h:217</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_aab81daeebac3d236ced4a85117483d76"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aab81daeebac3d236ced4a85117483d76">openage::datastructure::PairingHeap::update</a></div><div class="ttdeci">void update(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00397">pairing_heap.h:397</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_af94747a58143a4d16b0f94bd184444be"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#af94747a58143a4d16b0f94bd184444be">openage::event::EventStore::get_sorted_events</a></div><div class="ttdeci">std::vector&lt; std::shared_ptr&lt; Event &gt; &gt; get_sorted_events() const</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00099">eventstore.cpp:99</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_a4be75c01219e59abd20b9f906c8b7154"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#a4be75c01219e59abd20b9f906c8b7154">openage::event::EventStore::contains</a></div><div class="ttdeci">bool contains(const std::shared_ptr&lt; Event &gt; &amp;event) const</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00078">eventstore.cpp:78</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_a895a291c20860520abba447e1cd48fd0"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#a895a291c20860520abba447e1cd48fd0">openage::event::EventStore::size</a></div><div class="ttdeci">size_t size() const</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00089">eventstore.cpp:89</a></div></div>
<div class="ttc" id="eventstore_8h_xhtml"><div class="ttname"><a href="eventstore_8h.xhtml">eventstore.h</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_abbad60ac960f4020d813237260867dcb"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#abbad60ac960f4020d813237260867dcb">openage::event::EventStore::top</a></div><div class="ttdeci">const std::shared_ptr&lt; Event &gt; &amp; top()</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00049">eventstore.cpp:49</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_a03483370a9104e396d014f7cba7caf1c"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#a03483370a9104e396d014f7cba7caf1c">openage::event::EventStore::heap</a></div><div class="ttdeci">heap_t heap</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8h_source.xhtml#l00046">eventstore.h:46</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_a5085887950c62e1061fea8e2edaf76cb"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#a5085887950c62e1061fea8e2edaf76cb">openage::event::EventStore::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00083">eventstore.cpp:83</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_acf182eb2f89c80bb6c790a24d192398f"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#acf182eb2f89c80bb6c790a24d192398f">openage::event::EventStore::erase</a></div><div class="ttdeci">bool erase(const std::shared_ptr&lt; Event &gt; &amp;event)</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8cpp_source.xhtml#l00054">eventstore.cpp:54</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a012519defd709aacae622b276c3f85eb"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a012519defd709aacae622b276c3f85eb">openage::datastructure::PairingHeap::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00411">pairing_heap.h:411</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_store_xhtml_abc046823b545ca825388800a22302ccd"><div class="ttname"><a href="classopenage_1_1event_1_1_event_store.xhtml#abc046823b545ca825388800a22302ccd">openage::event::EventStore::events</a></div><div class="ttdeci">elemmap_t events</div><div class="ttdef"><b>Definition:</b> <a href="eventstore_8h_source.xhtml#l00047">eventstore.h:47</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_906fd80251564c07ab43a732fc1e9e78.xhtml">event</a></li><li class="navelem"><a class="el" href="eventstore_8cpp.xhtml">eventstore.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
