<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::job::Job&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1job_1_1_job.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1job_1_1_job-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::job::Job&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A job is a wrapper around a shared job state object and is returned by the job manager.  
 <a href="classopenage_1_1job_1_1_job.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="job_8h_source.xhtml">job.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::job::Job&lt; T &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_job__coll__graph.svg" width="166" height="132"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af7910b0b4f4390767944a3f30ba6cc0c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#af7910b0b4f4390767944a3f30ba6cc0c">Job</a> ()=default</td></tr>
<tr class="memdesc:af7910b0b4f4390767944a3f30ba6cc0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty job object that is not bound to any state.  <a href="#af7910b0b4f4390767944a3f30ba6cc0c">More...</a><br /></td></tr>
<tr class="separator:af7910b0b4f4390767944a3f30ba6cc0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a924f2e282168a5f742f3decdf68e5e0a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#a924f2e282168a5f742f3decdf68e5e0a">is_finished</a> () const</td></tr>
<tr class="memdesc:a924f2e282168a5f742f3decdf68e5e0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this job has finished.  <a href="#a924f2e282168a5f742f3decdf68e5e0a">More...</a><br /></td></tr>
<tr class="separator:a924f2e282168a5f742f3decdf68e5e0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac41518839741ad0ef16c7e69cb2b4bbf"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#ac41518839741ad0ef16c7e69cb2b4bbf">get_result</a> ()</td></tr>
<tr class="memdesc:ac41518839741ad0ef16c7e69cb2b4bbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns this job's result if the background execution was successful.  <a href="#ac41518839741ad0ef16c7e69cb2b4bbf">More...</a><br /></td></tr>
<tr class="separator:ac41518839741ad0ef16c7e69cb2b4bbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a625402a18d1d29e348ff2c9a1fc757fb"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#a625402a18d1d29e348ff2c9a1fc757fb">Job</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a>&lt; T &gt;&gt; <a class="el" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>)</td></tr>
<tr class="memdesc:a625402a18d1d29e348ff2c9a1fc757fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a job with the given shared state.  <a href="#a625402a18d1d29e348ff2c9a1fc757fb">More...</a><br /></td></tr>
<tr class="separator:a625402a18d1d29e348ff2c9a1fc757fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a4b96e587e819347412f944b10d0fa38a"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a>&lt; T &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a></td></tr>
<tr class="memdesc:a4b96e587e819347412f944b10d0fa38a"><td class="mdescLeft">&#160;</td><td class="mdescRight">A shared pointer to the job's shared state.  <a href="#a4b96e587e819347412f944b10d0fa38a">More...</a><br /></td></tr>
<tr class="separator:a4b96e587e819347412f944b10d0fa38a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a809a08e92b20b20ec93b9aef661b6931"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#a809a08e92b20b20ec93b9aef661b6931">JobGroup</a></td></tr>
<tr class="separator:a809a08e92b20b20ec93b9aef661b6931"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22d5e96819bc7c0bff8d135a21e67b42"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job.xhtml#a22d5e96819bc7c0bff8d135a21e67b42">JobManager</a></td></tr>
<tr class="separator:a22d5e96819bc7c0bff8d135a21e67b42"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class openage::job::Job&lt; T &gt;</h3>

<p>A job is a wrapper around a shared job state object and is returned by the job manager. </p>
<p>It can be used to retrieve the current state of the job and its result. A job is a lightweight object which only contains a pointer to its internal shared state. Thus it can be copied around without worrying about performance. Further it is not necessary to create or pass pointers to job objects.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">T</td><td>the job's result type </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00028">28</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af7910b0b4f4390767944a3f30ba6cc0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af7910b0b4f4390767944a3f30ba6cc0c">&#9670;&nbsp;</a></span>Job() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">openage::job::Job</a>&lt; T &gt;::<a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an empty job object that is not bound to any state. </p>
<p>Should only be used as dummy object. </p>

</div>
</div>
<a id="a625402a18d1d29e348ff2c9a1fc757fb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a625402a18d1d29e348ff2c9a1fc757fb">&#9670;&nbsp;</a></span>Job() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">openage::job::Job</a>&lt; T &gt;::<a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a> </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a>&lt; T &gt;&gt;&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a job with the given shared state. </p>
<p>This method may only be called by the job manager. </p>

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00071">71</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        :</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>{<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>} {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_job_xhtml_a4b96e587e819347412f944b10d0fa38a"><div class="ttname"><a href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">openage::job::Job::state</a></div><div class="ttdeci">std::shared_ptr&lt; TypedJobStateBase&lt; T &gt; &gt; state</div><div class="ttdoc">A shared pointer to the job's shared state.</div><div class="ttdef"><b>Definition:</b> <a href="job_8h_source.xhtml#l00031">job.h:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job_8h_source.xhtml#l00031">openage::job::Job&lt; T &gt;::state</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac41518839741ad0ef16c7e69cb2b4bbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac41518839741ad0ef16c7e69cb2b4bbf">&#9670;&nbsp;</a></span>get_result()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classopenage_1_1job_1_1_job.xhtml">openage::job::Job</a>&lt; T &gt;::get_result </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns this job's result if the background execution was successful. </p>
<p>If an exception has happened, it will be rethrown. This method must not be called, if the job's execution has not yet finished. </p>

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00056">56</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                   {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>, <span class="stringliteral">&quot;getting result of a destroyed or uninitialised job&quot;</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>-&gt;finished.load(), <span class="stringliteral">&quot;trying to report a result of an unfinished job&quot;</span>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>-&gt;exception != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            std::rethrow_exception(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>-&gt;exception);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>-&gt;result);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_xhtml_a4b96e587e819347412f944b10d0fa38a"><div class="ttname"><a href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">openage::job::Job::state</a></div><div class="ttdeci">std::shared_ptr&lt; TypedJobStateBase&lt; T &gt; &gt; state</div><div class="ttdoc">A shared pointer to the job's shared state.</div><div class="ttdef"><b>Definition:</b> <a href="job_8h_source.xhtml#l00031">job.h:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="error_2error_8h_source.xhtml#l00155">ENSURE</a>, and <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

</div>
</div>
<a id="a924f2e282168a5f742f3decdf68e5e0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a924f2e282168a5f742f3decdf68e5e0a">&#9670;&nbsp;</a></span>is_finished()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classopenage_1_1job_1_1_job.xhtml">openage::job::Job</a>&lt; T &gt;::is_finished </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether this job has finished. </p>
<p>If this job wrapper has no assigned background job, true will be returned. </p>

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00044">44</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                             {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">state</a>-&gt;finished.load();</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_job_xhtml_a4b96e587e819347412f944b10d0fa38a"><div class="ttname"><a href="classopenage_1_1job_1_1_job.xhtml#a4b96e587e819347412f944b10d0fa38a">openage::job::Job::state</a></div><div class="ttdeci">std::shared_ptr&lt; TypedJobStateBase&lt; T &gt; &gt; state</div><div class="ttdoc">A shared pointer to the job's shared state.</div><div class="ttdef"><b>Definition:</b> <a href="job_8h_source.xhtml#l00031">job.h:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a809a08e92b20b20ec93b9aef661b6931"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a809a08e92b20b20ec93b9aef661b6931">&#9670;&nbsp;</a></span>JobGroup</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classopenage_1_1job_1_1_job_group.xhtml">JobGroup</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00080">80</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>

</div>
</div>
<a id="a22d5e96819bc7c0bff8d135a21e67b42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22d5e96819bc7c0bff8d135a21e67b42">&#9670;&nbsp;</a></span>JobManager</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00081">81</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a4b96e587e819347412f944b10d0fa38a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b96e587e819347412f944b10d0fa38a">&#9670;&nbsp;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a>&lt;T&gt; &gt; <a class="el" href="classopenage_1_1job_1_1_job.xhtml">openage::job::Job</a>&lt; T &gt;::state</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>A shared pointer to the job's shared state. </p>

<p class="definition">Definition at line <a class="el" href="job_8h_source.xhtml#l00031">31</a> of file <a class="el" href="job_8h_source.xhtml">job.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="job_8h_source.xhtml#l00071">openage::job::Job&lt; T &gt;::Job()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/<a class="el" href="job_8h_source.xhtml">job.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1job.xhtml">job</a></li><li class="navelem"><a class="el" href="classopenage_1_1job_1_1_job.xhtml">Job</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
