<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/opengl/shader_program.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('shader__program_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">shader_program.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="shader__program_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2013-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="opengl_2shader__program_8h.xhtml">shader_program.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;unordered_set&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../../error/error.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../../log/log.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../../datastructure/constexpr_map.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="renderer_2opengl_2texture_8h.xhtml">texture.h</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="renderer_2opengl_2shader_8h.xhtml">shader.h</a>&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="opengl_2geometry_8h.xhtml">geometry.h</a>&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="lookup_8h.xhtml">lookup.h</a>&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span>renderer {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span>opengl {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">   22</a></span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">check_program_status</a>(GLuint <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">program</a>, GLenum what_to_check) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    GLint status;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    glGetProgramiv(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">program</a>, what_to_check, &amp;status);</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> (status != GL_TRUE) {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        GLint loglen;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        glGetProgramiv(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">program</a>, GL_INFO_LOG_LENGTH, &amp;loglen);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        std::vector&lt;char&gt; infolog(loglen);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        glGetProgramInfoLog(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">program</a>, loglen, <span class="keyword">nullptr</span>, infolog.data());</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> *what_str = [=] {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="keywordflow">switch</span> (what_to_check) {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="keywordflow">case</span> GL_LINK_STATUS:</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;linking&quot;</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            <span class="keywordflow">case</span> GL_VALIDATE_STATUS:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;validation&quot;</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="keywordflow">case</span> GL_COMPILE_STATUS:</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;compilation&quot;</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;unknown shader creation task&quot;</span>;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        }();</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;OpenGL shader program &quot;</span> &lt;&lt; what_str &lt;&lt; <span class="stringliteral">&quot; failed:\n&quot;</span> &lt;&lt; infolog.data(), <span class="keyword">true</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa779365799f67daace32b90e4a4fde5e">   50</a></span>&#160;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa779365799f67daace32b90e4a4fde5e">GlShaderProgram::GlShaderProgram</a>(<span class="keyword">const</span> std::vector&lt;resources::ShaderSource&gt; &amp;srcs, <span class="keyword">const</span> <a class="code" href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml">gl_context_capabilities</a> &amp;caps)</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    : <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml">GlSimpleObject</a>([] (GLuint handle) { glDeleteProgram(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>); } )</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    , validated(<span class="keyword">false</span>) {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    GLuint <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a> = glCreateProgram();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    this-&gt;handle = <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    std::vector&lt;GlShader&gt; shaders;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; <a class="code" href="gui_2gui_8cpp.xhtml#ad18da19e3399b061b9e06fa5a1a2c761">src</a> : srcs) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader.xhtml">GlShader</a> shader(<a class="code" href="gui_2gui_8cpp.xhtml#ad18da19e3399b061b9e06fa5a1a2c761">src</a>);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        glAttachShader(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, shader.get_handle());</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        shaders.push_back(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(shader));</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    glLinkProgram(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">check_program_status</a>(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_LINK_STATUS);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// after linking we can delete the shaders</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; shdr : shaders) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        glDetachShader(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, shdr.get_handle());</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="comment">// query program information</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    GLint <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_ATTRIBUTES, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">size_t</span> attrib_count = <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordtype">size_t</span> max_name_len = <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_UNIFORMS, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordtype">size_t</span> unif_count = <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_UNIFORM_MAX_LENGTH, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    max_name_len = <a class="code" href="namespacestd.xhtml#a1c0bc145caf5f0b2af8d16d29d952180">std::max</a>(<span class="keywordtype">size_t</span>(<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>), max_name_len);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_UNIFORM_BLOCKS, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">size_t</span> unif_block_count = <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    glGetProgramiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    max_name_len = <a class="code" href="namespacestd.xhtml#a1c0bc145caf5f0b2af8d16d29d952180">std::max</a>(<span class="keywordtype">size_t</span>(<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>), max_name_len);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    std::vector&lt;char&gt; name(max_name_len);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment">// Indices of uniforms within named blocks.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::unordered_set&lt;GLuint&gt; in_block_unifs;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    GLuint block_binding = 0;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="comment">// Extract uniform block descriptions.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">for</span> (GLuint i_unif_block = 0; i_unif_block &lt; unif_block_count; ++i_unif_block) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        glGetActiveUniformBlockName(</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            i_unif_block,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            name.size(),</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            name.data()</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        );</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        std::string block_name(name.data());</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        GLint data_size;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        glGetActiveUniformBlockiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, i_unif_block, GL_UNIFORM_BLOCK_DATA_SIZE, &amp;data_size);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        glGetActiveUniformBlockiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, i_unif_block, GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        std::vector&lt;GLint&gt; uniform_indices(<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        glGetActiveUniformBlockiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, i_unif_block, GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES, uniform_indices.data());</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        std::unordered_map&lt;std::string, GlInBlockUniform&gt; <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ab934cf9cbfdbf6edd165ababf491ee36">uniforms</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">for</span> (GLuint <span class="keyword">const</span> i_unif : uniform_indices) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            in_block_unifs.insert(i_unif);</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            GLenum type;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            GLint offset, count, stride;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            glGetActiveUniform(</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                i_unif,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                name.size(),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                &amp;count,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                &amp;type,</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                name.data()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            );</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            glGetActiveUniformsiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, 1, &amp;i_unif, GL_UNIFORM_OFFSET, &amp;offset);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            glGetActiveUniformsiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, 1, &amp;i_unif, GL_UNIFORM_ARRAY_STRIDE, &amp;stride);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            <span class="keywordflow">if</span> (stride == 0) {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                <span class="comment">// The uniform is not an array, but it&#39;s declared in a named block and hence might</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="comment">// be a matrix whose stride we need to know.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                glGetActiveUniformsiv(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, 1, &amp;i_unif, GL_UNIFORM_MATRIX_STRIDE, &amp;stride);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            }</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="comment">// We do not need to handle sampler types here like in the uniform loop below,</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="comment">// because named blocks cannot contain samplers.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ab934cf9cbfdbf6edd165ababf491ee36">uniforms</a>.insert(std::make_pair(</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                name.data(),</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                GlInBlockUniform {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                    type,</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    size_t(offset),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                    size_t(count) * <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">GL_SHADER_TYPE_SIZE</a>.get(type),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    size_t(stride),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    size_t(count)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            ));</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(block_binding &lt; caps.max_uniform_buffer_bindings,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="stringliteral">&quot;Tried to create an OpenGL shader that uses more uniform blocks &quot;</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            &lt;&lt; <span class="stringliteral">&quot;than there are binding points (&quot;</span> &lt;&lt; caps.max_uniform_buffer_bindings</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            &lt;&lt; <span class="stringliteral">&quot; available).&quot;</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        );</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        glUniformBlockBinding(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, i_unif_block, block_binding);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a864a96bae75aebe3a4733828ae6aa209">uniform_blocks</a>.insert(std::make_pair(</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            block_name,</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            GlUniformBlock {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                i_unif_block,</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                size_t(data_size),</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ab934cf9cbfdbf6edd165ababf491ee36">uniforms</a>),</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                block_binding</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        ));</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        block_binding += 1;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    GLuint tex_unit = 0;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment">// Extract information about uniforms in the default block.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">for</span> (GLuint i_unif = 0; i_unif &lt; unif_count; ++i_unif) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">if</span> (in_block_unifs.count(i_unif) == 1) {</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="comment">// Skip uniforms within named blocks.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        GLint count;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        GLenum type;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        glGetActiveUniform(</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>,</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            i_unif,</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            name.size(),</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            &amp;count,</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            &amp;type,</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            name.data()</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        );</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        GLuint loc = glGetUniformLocation(<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, name.data());</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        this-&gt;uniforms.insert(std::make_pair(</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            name.data(),</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;            GlUniform {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;                type,</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                loc</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            }</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        ));</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">if</span> (type == GL_SAMPLER_2D) {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(tex_unit &lt; caps.max_texture_slots,</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                <span class="stringliteral">&quot;Tried to create an OpenGL shader that uses more texture sampler uniforms &quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;than there are texture unit slots (&quot;</span> &lt;&lt; caps.max_texture_slots &lt;&lt; <span class="stringliteral">&quot; available).&quot;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            );</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a85e89a2db0c89ce5e2855942ddeccd4c">texunits_per_unifs</a>.insert(std::make_pair(name.data(), tex_unit));</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            tex_unit += 1;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        }</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="comment">// Extract vertex attribute descriptions.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">for</span> (GLuint i_attrib = 0; i_attrib &lt; attrib_count; ++i_attrib) {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        GLint size;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        GLenum type;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        glGetActiveAttrib(</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>,</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;            i_attrib,</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            name.size(),</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keyword">nullptr</span>,</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            &amp;size,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            &amp;type,</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            name.data()</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        );</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a11bedf8c840e53515d77a1babbff5446">attribs</a>.insert(std::make_pair(</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            name.data(),</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            GlVertexAttrib {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;                type,</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;                GLint(i_attrib),</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                size,</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        ));</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>) &lt;&lt; <span class="stringliteral">&quot;Created OpenGL shader program&quot;</span>);</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a864a96bae75aebe3a4733828ae6aa209">uniform_blocks</a>.empty()) {</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Uniform blocks: &quot;</span>);</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; pair : this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a864a96bae75aebe3a4733828ae6aa209">uniform_blocks</a>) {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; pair.second.index &lt;&lt; <span class="stringliteral">&quot;) &quot;</span> &lt;&lt; pair.first</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;                              &lt;&lt; <span class="stringliteral">&quot; (size: &quot;</span> &lt;&lt; pair.second.data_size &lt;&lt; <span class="stringliteral">&quot;) {&quot;</span>);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; unif_pair : pair.second.uniforms) {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;\t+&quot;</span> &lt;&lt; unif_pair.second.offset</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;                                  &lt;&lt; <span class="stringliteral">&quot; &quot;</span> &lt;&lt; unif_pair.first &lt;&lt; <span class="stringliteral">&quot;: &quot;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;                                  &lt;&lt; <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">GLSL_TYPE_NAME</a>.get(unif_pair.second.type));</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;}&quot;</span>);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        }</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;uniforms.empty()) {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Uniforms: &quot;</span>);</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; pair : this-&gt;uniforms) {</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; pair.second.location &lt;&lt; <span class="stringliteral">&quot;) &quot;</span> &lt;&lt; pair.first &lt;&lt; <span class="stringliteral">&quot;: &quot;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;                              &lt;&lt; <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">GLSL_TYPE_NAME</a>.get(pair.second.type));</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        }</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    }</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a11bedf8c840e53515d77a1babbff5446">attribs</a>.empty()) {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Vertex attributes: &quot;</span>);</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; pair : this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a11bedf8c840e53515d77a1babbff5446">attribs</a>) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; pair.second.location &lt;&lt; <span class="stringliteral">&quot;) &quot;</span> &lt;&lt; pair.first &lt;&lt; <span class="stringliteral">&quot;: &quot;</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                              &lt;&lt; <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">GLSL_TYPE_NAME</a>.get(pair.second.type));</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        }</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aadce87ffc66b0d5fb4a4ab08fb50a545">  272</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aadce87ffc66b0d5fb4a4ab08fb50a545">GlShaderProgram::use</a>() {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a23caf208d074869ce8015e4722157b24">validated</a>) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">// TODO(Vtec234): validation depends on the context state, so this might be worth calling</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="comment">// more than once. However, once per frame is probably too much.</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        glValidateProgram(*this-&gt;handle);</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">check_program_status</a>(*this-&gt;handle, GL_VALIDATE_STATUS);</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a23caf208d074869ce8015e4722157b24">validated</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    }</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    glUseProgram(*this-&gt;handle);</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span> &amp;pair : this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a586120e648ad9c41d5c0b4742615e40b">textures_per_texunits</a>) {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="comment">// We have to bind the texture to their texture units here because</span></div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="comment">// the texture unit bindings are global to the context. Each time</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="comment">// the shader switches, it is possible that some other shader overwrote</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="comment">// these, and since we want the uniform values to persist across execute_with</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="comment">// calls, we have to set them more often than just on execute_with.</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        glActiveTexture(GL_TEXTURE0 + pair.first);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        glBindTexture(GL_TEXTURE_2D, pair.second);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        <span class="comment">// By the time we call bind, the texture may have been deleted, but if it&#39;s fixed</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        <span class="comment">// afterwards using execute_with, the render state will still be fine, so we can ignore</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="comment">// this error.</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="comment">// TODO this will swallow actual errors elsewhere, and should be avoided. how?</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        glGetError();</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4344b9058a349eaa6a8f3fd2ea4a0425">  301</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4344b9058a349eaa6a8f3fd2ea4a0425">GlShaderProgram::execute_with</a>(<span class="keyword">const</span> <a class="code" href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml">GlUniformInput</a> *unif_in, <span class="keyword">const</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml">GlGeometry</a> *geom) {</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(unif_in-&gt;<a class="code" href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#a97ec775bc0df936b473a998f2ca14ddd">program</a> == <span class="keyword">this</span>, <span class="stringliteral">&quot;Uniform input passed to different shader than it was created with.&quot;</span>);</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aadce87ffc66b0d5fb4a4ab08fb50a545">use</a>();</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    uint8_t <span class="keyword">const</span>* data = unif_in-&gt;<a class="code" href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#abab70be3d013034cab65a970726eb450">update_data</a>.data();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span> &amp;pair : unif_in-&gt;<a class="code" href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#acbcaed98236468d6a7644bf193d94926">update_offs</a>) {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        uint8_t <span class="keyword">const</span>* ptr = data + pair.second;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keyword">auto</span> loc = this-&gt;uniforms[pair.first].location;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">switch</span> (this-&gt;uniforms[pair.first].type) {</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">case</span> GL_INT:</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            glUniform1i(loc, *reinterpret_cast&lt;const GLint*&gt;(ptr));</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;        <span class="keywordflow">case</span> GL_UNSIGNED_INT:</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            glUniform1ui(loc, *reinterpret_cast&lt;const GLuint*&gt;(ptr));</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT:</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;            glUniform1f(loc, *reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="keywordflow">case</span> GL_DOUBLE:</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="comment">// TODO requires an extension</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;            glUniform1d(loc, *reinterpret_cast&lt;const double*&gt;(ptr));</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT_VEC2:</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            glUniform2fv(loc, 1, reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT_VEC3:</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            glUniform3fv(loc, 1, reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT_VEC4:</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;            glUniform4fv(loc, 1, reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT_MAT3:</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            glUniformMatrix3fv(loc, 1, GLboolean(<span class="keyword">false</span>), reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">case</span> GL_FLOAT_MAT4:</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            glUniformMatrix4fv(loc, 1, GLboolean(<span class="keyword">false</span>), reinterpret_cast&lt;const float*&gt;(ptr));</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">case</span> GL_INT_VEC2:</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            glUniform2iv(loc, 1, reinterpret_cast&lt;const GLint*&gt;(ptr));</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        <span class="keywordflow">case</span> GL_INT_VEC3:</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;            glUniform3iv(loc, 1, reinterpret_cast&lt;const GLint*&gt;(ptr));</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;        <span class="keywordflow">case</span> GL_SAMPLER_2D: {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            GLuint tex_unit = this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a85e89a2db0c89ce5e2855942ddeccd4c">texunits_per_unifs</a>[pair.first];</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            GLuint tex = *reinterpret_cast&lt;const GLuint*&gt;(ptr);</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;            glActiveTexture(GL_TEXTURE0 + tex_unit);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            glBindTexture(GL_TEXTURE_2D, tex);</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;            <span class="comment">// TODO: maybe call this at a more appropriate position</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;            glUniform1i(loc, tex_unit);</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a586120e648ad9c41d5c0b4742615e40b">textures_per_texunits</a>[tex_unit] = tex;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        }</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Tried to upload unknown uniform type to GL shader.&quot;</span>);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    }</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="keywordflow">if</span> (geom != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;        <span class="comment">// TODO read obj.blend + family</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        geom-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml#a99c9999b09c6cf8916a8f8bc82dcdee5">draw</a>();</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;}</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;</div><div class="line"><a name="l00367"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9a35d65a5b9222e45bb82d4d7f5c4af4">  367</a></span>&#160;std::map&lt;size_t, resources::vertex_input_t&gt; <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9a35d65a5b9222e45bb82d4d7f5c4af4">GlShaderProgram::vertex_attributes</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    std::map&lt;size_t, resources::vertex_input_t&gt; attrib_map;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> <span class="keyword">const</span>&amp; attr : this-&gt;attribs) {</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        attrib_map[attr.second.location] = <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">GL_VERT_IN_TYPE</a>.get(attr.second.type);</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    }</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    <span class="keywordflow">return</span> attrib_map;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;</div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa5b47b1078193b018446825b5bee10a6">  377</a></span>&#160;std::unique_ptr&lt;UniformInput&gt; <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa5b47b1078193b018446825b5bee10a6">GlShaderProgram::new_unif_in</a>() {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    <span class="keyword">auto</span> in = std::make_unique&lt;GlUniformInput&gt;();</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    in-&gt;program = <span class="keyword">this</span>;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">return</span> in;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aea8b57a81d42b380e63a35497e9004e4">  383</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aea8b57a81d42b380e63a35497e9004e4">GlShaderProgram::has_uniform</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">return</span> this-&gt;uniforms.count(name) == 1;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;}</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">  387</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">GlShaderProgram::set_unif</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <span class="keywordtype">void</span> <span class="keyword">const</span>* <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GLenum type) {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">auto</span> *unif_in = static_cast&lt;GlUniformInput*&gt;(in);</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;uniforms.count(unif) != 0,</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;        <span class="stringliteral">&quot;Tried to set uniform &quot;</span> &lt;&lt; unif &lt;&lt; <span class="stringliteral">&quot; that does not exist in the shader program.&quot;</span></div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    );</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keyword">auto</span> <span class="keyword">const</span>&amp; unif_data = this-&gt;uniforms.at(unif);</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(type == unif_data.type,</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="stringliteral">&quot;Tried to set uniform &quot;</span> &lt;&lt; unif &lt;&lt; <span class="stringliteral">&quot; to a value of the wrong type.&quot;</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    );</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keywordtype">size_t</span> size = <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">GL_SHADER_TYPE_SIZE</a>.get(unif_data.type);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;    <span class="keywordflow">if</span> (unif_in-&gt;update_offs.count(unif) == 1) {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        <span class="comment">// already wrote to this uniform since last upload</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        <span class="keywordtype">size_t</span> off = unif_in-&gt;update_offs[unif];</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        memcpy(unif_in-&gt;update_data.data() + off, <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, size);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="comment">// first time writing to this uniform since last upload, so</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;        <span class="comment">// extend the buffer before storing the uniform value</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        <span class="keywordtype">size_t</span> prev_size = unif_in-&gt;update_data.size();</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;        unif_in-&gt;update_data.resize(prev_size + size);</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        memcpy(unif_in-&gt;update_data.data() + prev_size, <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, size);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        unif_in-&gt;update_offs.emplace(unif, prev_size);</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a06cac47db0c579b51be9ac4649dc1c53">  416</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a06cac47db0c579b51be9ac4649dc1c53">GlShaderProgram::set_i32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, int32_t <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_INT);</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;}</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a0a1f0bc1b71441622f0def25f9f9da75">  420</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a0a1f0bc1b71441622f0def25f9f9da75">GlShaderProgram::set_u32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, uint32_t <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_UNSIGNED_INT);</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;}</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac4f75b2618cef42e6c899fb6a07e0962">  424</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac4f75b2618cef42e6c899fb6a07e0962">GlShaderProgram::set_f32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <span class="keywordtype">float</span> <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_FLOAT);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;}</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#afb9b54743349d81a09d78c7737d34cf8">  428</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#afb9b54743349d81a09d78c7737d34cf8">GlShaderProgram::set_f64</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <span class="keywordtype">double</span> <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    <span class="comment">// TODO requires extension</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_DOUBLE);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;}</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9359707c420fd0a161a5896e77a6e550">  433</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9359707c420fd0a161a5896e77a6e550">GlShaderProgram::set_v2f32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <a class="code" href="namespaceopenage_1_1util.xhtml#a285db29af032ad3b2a79f810faaf65d3">Eigen::Vector2f</a> <span class="keyword">const</span>&amp; <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_FLOAT_VEC2);</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;}</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a17b135a0127d7a818e166b9affa66bb1">  437</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a17b135a0127d7a818e166b9affa66bb1">GlShaderProgram::set_v3f32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <a class="code" href="namespaceopenage_1_1util.xhtml#ab7bb49fe673b7a4d72fb6fb91aba44c8">Eigen::Vector3f</a> <span class="keyword">const</span>&amp; <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_FLOAT_VEC3);</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;}</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a506af6aebdc55843bc6f2b60c24276c9">  441</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a506af6aebdc55843bc6f2b60c24276c9">GlShaderProgram::set_v4f32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <a class="code" href="namespaceopenage_1_1util.xhtml#af3c02e2c02d3b68c87d58b867e609bbf">Eigen::Vector4f</a> <span class="keyword">const</span>&amp; <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>, GL_FLOAT_VEC4);</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4849d33ea8bf0da94f320e1f6bc4a0d7">  445</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4849d33ea8bf0da94f320e1f6bc4a0d7">GlShaderProgram::set_m4f32</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <a class="code" href="namespaceopenage_1_1util.xhtml#afd42b418dc20fcb64677b2f75ecd97b8">Eigen::Matrix4f</a> <span class="keyword">const</span>&amp; <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>.data(), GL_FLOAT_MAT4);</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;}</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac57749f4580137a2dea2c7ffa38ce4d6">  449</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac57749f4580137a2dea2c7ffa38ce4d6">GlShaderProgram::set_tex</a>(<a class="code" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> *in, <span class="keyword">const</span> <span class="keywordtype">char</span> *unif, <a class="code" href="classopenage_1_1renderer_1_1_texture2d.xhtml">Texture2d</a> <span class="keyword">const</span>* <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>) {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keyword">auto</span> <span class="keyword">const</span>&amp; tex = *static_cast&lt;const GlTexture2d*&gt;(<a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;    GLuint <a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a> = tex.get_handle();</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">set_unif</a>(in, unif, &amp;<a class="code" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">handle</a>, GL_SAMPLER_2D);</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;}</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}}} <span class="comment">// openage::renderer::opengl</span></div><div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a4849d33ea8bf0da94f320e1f6bc4a0d7"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4849d33ea8bf0da94f320e1f6bc4a0d7">openage::renderer::opengl::GlShaderProgram::set_m4f32</a></div><div class="ttdeci">void set_m4f32(UniformInput *, const char *, Eigen::Matrix4f const &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00445">shader_program.cpp:445</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a4b7dfc749fd189a6bd8d12bf2bd89a62"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">openage::texturefont_shader::program</a></div><div class="ttdeci">shader::Program * program</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00015">text.cpp:15</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_aa5b47b1078193b018446825b5bee10a6"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa5b47b1078193b018446825b5bee10a6">openage::renderer::opengl::GlShaderProgram::new_unif_in</a></div><div class="ttdeci">std::unique_ptr&lt; UniformInput &gt; new_unif_in() override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00377">shader_program.cpp:377</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_aea8b57a81d42b380e63a35497e9004e4"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aea8b57a81d42b380e63a35497e9004e4">openage::renderer::opengl::GlShaderProgram::has_uniform</a></div><div class="ttdeci">bool has_uniform(const char *) override</div><div class="ttdoc">Returns whether the shader program contains a uniform variable with the given name.</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00383">shader_program.cpp:383</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_af3c02e2c02d3b68c87d58b867e609bbf"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af3c02e2c02d3b68c87d58b867e609bbf">openage::util::Vector4f</a></div><div class="ttdeci">Vector&lt; 4, float &gt; Vector4f</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00223">vector.h:223</a></div></div>
<div class="ttc" id="lookup_8h_xhtml"><div class="ttname"><a href="lookup_8h.xhtml">lookup.h</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="gui_2gui_8cpp_xhtml_ad18da19e3399b061b9e06fa5a1a2c761"><div class="ttname"><a href="gui_2gui_8cpp.xhtml#ad18da19e3399b061b9e06fa5a1a2c761">src</a></div><div class="ttdeci">GLint src</div><div class="ttdef"><b>Definition:</b> <a href="gui_2gui_8cpp_source.xhtml#l00155">gui.cpp:155</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a586120e648ad9c41d5c0b4742615e40b"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a586120e648ad9c41d5c0b4742615e40b">openage::renderer::opengl::GlShaderProgram::textures_per_texunits</a></div><div class="ttdeci">std::unordered_map&lt; GLuint, GLuint &gt; textures_per_texunits</div><div class="ttdoc">Maps texture units to the texture handles that are currently bound to them.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00115">shader_program.h:115</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input_xhtml_abab70be3d013034cab65a970726eb450"><div class="ttname"><a href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#abab70be3d013034cab65a970726eb450">openage::renderer::opengl::GlUniformInput::update_data</a></div><div class="ttdeci">std::vector&lt; uint8_t &gt; update_data</div><div class="ttdoc">Buffer containing untyped uniform update data.</div><div class="ttdef"><b>Definition:</b> <a href="uniform__input_8h_source.xhtml#l00029">uniform_input.h:29</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_ab934cf9cbfdbf6edd165ababf491ee36"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ab934cf9cbfdbf6edd165ababf491ee36">openage::renderer::opengl::GlShaderProgram::uniforms</a></div><div class="ttdeci">std::unordered_map&lt; std::string, GlUniform &gt; uniforms</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00104">shader_program.h:104</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="renderer_2opengl_2shader_8h_xhtml"><div class="ttname"><a href="renderer_2opengl_2shader_8h.xhtml">shader.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a285db29af032ad3b2a79f810faaf65d3"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a285db29af032ad3b2a79f810faaf65d3">openage::util::Vector2f</a></div><div class="ttdeci">Vector&lt; 2, float &gt; Vector2f</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00221">vector.h:221</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input_xhtml_acbcaed98236468d6a7644bf193d94926"><div class="ttname"><a href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#acbcaed98236468d6a7644bf193d94926">openage::renderer::opengl::GlUniformInput::update_offs</a></div><div class="ttdeci">std::unordered_map&lt; std::string, size_t &gt; update_offs</div><div class="ttdef"><b>Definition:</b> <a href="uniform__input_8h_source.xhtml#l00026">uniform_input.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a506af6aebdc55843bc6f2b60c24276c9"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a506af6aebdc55843bc6f2b60c24276c9">openage::renderer::opengl::GlShaderProgram::set_v4f32</a></div><div class="ttdeci">void set_v4f32(UniformInput *, const char *, Eigen::Vector4f const &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00441">shader_program.cpp:441</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a17b135a0127d7a818e166b9affa66bb1"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a17b135a0127d7a818e166b9affa66bb1">openage::renderer::opengl::GlShaderProgram::set_v3f32</a></div><div class="ttdeci">void set_v3f32(UniformInput *, const char *, Eigen::Vector3f const &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00437">shader_program.cpp:437</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aa0ccb5ee6d882ee3605ff47745c6467b"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a></div><div class="ttdeci">int val</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00017">constinit_vector.cpp:17</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a90b98ae7a652b647771a559e61cb5e56"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">openage::renderer::opengl::GLSL_TYPE_NAME</a></div><div class="ttdeci">static constexpr auto GLSL_TYPE_NAME</div><div class="ttdoc">GL types with corresponding GLSL type strings.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00059">lookup.h:59</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a9105a627b5951e8d1fbcae421166407f"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">openage::renderer::opengl::GL_SHADER_TYPE_SIZE</a></div><div class="ttdeci">static constexpr auto GL_SHADER_TYPE_SIZE</div><div class="ttdoc">Sizes of various uniform/vertex input types in shaders.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00031">lookup.h:31</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_uniform_input_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1_uniform_input.xhtml">openage::renderer::UniformInput</a></div><div class="ttdef"><b>Definition:</b> <a href="renderer_8h_source.xhtml#l00025">renderer.h:25</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_afd42b418dc20fcb64677b2f75ecd97b8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#afd42b418dc20fcb64677b2f75ecd97b8">openage::util::Matrix4f</a></div><div class="ttdeci">Matrix&lt; 4, 4, float &gt; Matrix4f</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00289">matrix.h:289</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_ac57749f4580137a2dea2c7ffa38ce4d6"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac57749f4580137a2dea2c7ffa38ce4d6">openage::renderer::opengl::GlShaderProgram::set_tex</a></div><div class="ttdeci">void set_tex(UniformInput *, const char *, Texture2d const *) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00449">shader_program.cpp:449</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_afb9b54743349d81a09d78c7737d34cf8"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#afb9b54743349d81a09d78c7737d34cf8">openage::renderer::opengl::GlShaderProgram::set_f64</a></div><div class="ttdeci">void set_f64(UniformInput *, const char *, double) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00428">shader_program.cpp:428</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a864a96bae75aebe3a4733828ae6aa209"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a864a96bae75aebe3a4733828ae6aa209">openage::renderer::opengl::GlShaderProgram::uniform_blocks</a></div><div class="ttdeci">std::unordered_map&lt; std::string, GlUniformBlock &gt; uniform_blocks</div><div class="ttdoc">Maps uniform block names to their descriptions.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00107">shader_program.h:107</a></div></div>
<div class="ttc" id="opengl_2geometry_8h_xhtml"><div class="ttname"><a href="opengl_2geometry_8h.xhtml">geometry.h</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader.xhtml">openage::renderer::opengl::GlShader</a></div><div class="ttdoc">A single OpenGL shader stage.</div><div class="ttdef"><b>Definition:</b> <a href="renderer_2opengl_2shader_8h_source.xhtml#l00014">shader.h:14</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a9a35d65a5b9222e45bb82d4d7f5c4af4"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9a35d65a5b9222e45bb82d4d7f5c4af4">openage::renderer::opengl::GlShaderProgram::vertex_attributes</a></div><div class="ttdeci">std::map&lt; size_t, resources::vertex_input_t &gt; vertex_attributes() const override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00367">shader_program.cpp:367</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry_xhtml_a99c9999b09c6cf8916a8f8bc82dcdee5"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml#a99c9999b09c6cf8916a8f8bc82dcdee5">openage::renderer::opengl::GlGeometry::draw</a></div><div class="ttdeci">void draw() const</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2geometry_8cpp_source.xhtml#l00054">geometry.cpp:54</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a85e89a2db0c89ce5e2855942ddeccd4c"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a85e89a2db0c89ce5e2855942ddeccd4c">openage::renderer::opengl::GlShaderProgram::texunits_per_unifs</a></div><div class="ttdeci">std::unordered_map&lt; std::string, GLuint &gt; texunits_per_unifs</div><div class="ttdoc">Maps sampler uniform names to their assigned texture units.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00113">shader_program.h:113</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_ac4f75b2618cef42e6c899fb6a07e0962"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#ac4f75b2618cef42e6c899fb6a07e0962">openage::renderer::opengl::GlShaderProgram::set_f32</a></div><div class="ttdeci">void set_f32(UniformInput *, const char *, float) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00424">shader_program.cpp:424</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a870cc53f47bfd0a6398f23667fa2d2e3"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">openage::renderer::opengl::check_program_status</a></div><div class="ttdeci">static void check_program_status(GLuint program, GLenum what_to_check)</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00022">shader_program.cpp:22</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_aadce87ffc66b0d5fb4a4ab08fb50a545"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aadce87ffc66b0d5fb4a4ab08fb50a545">openage::renderer::opengl::GlShaderProgram::use</a></div><div class="ttdeci">void use()</div><div class="ttdoc">Bind this program as the currently used one in the OpenGL context.</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00272">shader_program.cpp:272</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a11bedf8c840e53515d77a1babbff5446"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a11bedf8c840e53515d77a1babbff5446">openage::renderer::opengl::GlShaderProgram::attribs</a></div><div class="ttdeci">std::unordered_map&lt; std::string, GlVertexAttrib &gt; attribs</div><div class="ttdoc">Maps per-vertex attribute names to their descriptions.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00110">shader_program.h:110</a></div></div>
<div class="ttc" id="renderer_2opengl_2texture_8h_xhtml"><div class="ttname"><a href="renderer_2opengl_2texture_8h.xhtml">texture.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a2367c8152b9e322f4177cb25dfd35359"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">openage::renderer::opengl::GL_VERT_IN_TYPE</a></div><div class="ttdeci">static constexpr auto GL_VERT_IN_TYPE</div><div class="ttdoc">Generic vertex input types from GL types.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00124">lookup.h:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_ab7bb49fe673b7a4d72fb6fb91aba44c8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#ab7bb49fe673b7a4d72fb6fb91aba44c8">openage::util::Vector3f</a></div><div class="ttdeci">Vector&lt; 3, float &gt; Vector3f</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00222">vector.h:222</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a0a1f0bc1b71441622f0def25f9f9da75"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a0a1f0bc1b71441622f0def25f9f9da75">openage::renderer::opengl::GlShaderProgram::set_u32</a></div><div class="ttdeci">void set_u32(UniformInput *, const char *, uint32_t) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00420">shader_program.cpp:420</a></div></div>
<div class="ttc" id="opengl_2shader__program_8h_xhtml"><div class="ttname"><a href="opengl_2shader__program_8h.xhtml">shader_program.h</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities_xhtml"><div class="ttname"><a href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml">openage::renderer::opengl::gl_context_capabilities</a></div><div class="ttdoc">Stores information about context capabilities and limitations.</div><div class="ttdef"><b>Definition:</b> <a href="context_8h_source.xhtml#l00013">context.h:13</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input_xhtml_a97ec775bc0df936b473a998f2ca14ddd"><div class="ttname"><a href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#a97ec775bc0df936b473a998f2ca14ddd">openage::renderer::opengl::GlUniformInput::program</a></div><div class="ttdeci">GlShaderProgram * program</div><div class="ttdoc">The program that this was created for.</div><div class="ttdef"><b>Definition:</b> <a href="uniform__input_8h_source.xhtml#l00020">uniform_input.h:20</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml">openage::renderer::opengl::GlGeometry</a></div><div class="ttdoc">The OpenGL class representing geometry to be passed to a draw call.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2geometry_8h_source.xhtml#l00019">geometry.h:19</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml">openage::renderer::opengl::GlSimpleObject</a></div><div class="ttdef"><b>Definition:</b> <a href="simple__object_8h_source.xhtml#l00019">simple_object.h:19</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a06cac47db0c579b51be9ac4649dc1c53"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a06cac47db0c579b51be9ac4649dc1c53">openage::renderer::opengl::GlShaderProgram::set_i32</a></div><div class="ttdeci">void set_i32(UniformInput *, const char *, int32_t) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00416">shader_program.cpp:416</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input_xhtml"><div class="ttname"><a href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml">openage::renderer::opengl::GlUniformInput</a></div><div class="ttdoc">Describes OpenGL-specific uniform valuations.</div><div class="ttdef"><b>Definition:</b> <a href="uniform__input_8h_source.xhtml#l00018">uniform_input.h:18</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a4344b9058a349eaa6a8f3fd2ea4a0425"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a4344b9058a349eaa6a8f3fd2ea4a0425">openage::renderer::opengl::GlShaderProgram::execute_with</a></div><div class="ttdeci">void execute_with(const GlUniformInput *, const GlGeometry *)</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00301">shader_program.cpp:301</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_texture2d_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1_texture2d.xhtml">openage::renderer::Texture2d</a></div><div class="ttdef"><b>Definition:</b> <a href="renderer_2texture_8h_source.xhtml#l00013">texture.h:13</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3f1815b698faf5786fc5e20bcac7704b"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">openage::log.info</a></div><div class="ttdeci">def info(msg, *args, **kwargs)</div><div class="ttdoc">info message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00114">__init__.py:114</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a109abb04920b505341184fc0a313dcbb"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a109abb04920b505341184fc0a313dcbb">openage::renderer::opengl::GlShaderProgram::set_unif</a></div><div class="ttdeci">void set_unif(UniformInput *, const char *, void const *, GLenum)</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00387">shader_program.cpp:387</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a1c0bc145caf5f0b2af8d16d29d952180"><div class="ttname"><a href="namespacestd.xhtml#a1c0bc145caf5f0b2af8d16d29d952180">std::max</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; max(openage::util::FixedPoint&lt; I, F &gt; x, openage::util::FixedPoint&lt; I, F &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00483">fixed_point.h:483</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a23caf208d074869ce8015e4722157b24"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a23caf208d074869ce8015e4722157b24">openage::renderer::opengl::GlShaderProgram::validated</a></div><div class="ttdeci">bool validated</div><div class="ttdoc">Whether this program has been validated.</div><div class="ttdef"><b>Definition:</b> <a href="opengl_2shader__program_8h_source.xhtml#l00118">shader_program.h:118</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_xhtml_ad59150afddeb64a473f500edee2f63f5"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml#ad59150afddeb64a473f500edee2f63f5">openage::renderer::opengl::GlSimpleObject::handle</a></div><div class="ttdeci">std::optional&lt; GLuint &gt; handle</div><div class="ttdoc">The handle to the OpenGL Object that this class represents.</div><div class="ttdef"><b>Definition:</b> <a href="simple__object_8h_source.xhtml#l00041">simple_object.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_a9359707c420fd0a161a5896e77a6e550"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#a9359707c420fd0a161a5896e77a6e550">openage::renderer::opengl::GlShaderProgram::set_v2f32</a></div><div class="ttdeci">void set_v2f32(UniformInput *, const char *, Eigen::Vector2f const &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00433">shader_program.cpp:433</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program_xhtml_aa779365799f67daace32b90e4a4fde5e"><div class="ttname"><a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#aa779365799f67daace32b90e4a4fde5e">openage::renderer::opengl::GlShaderProgram::GlShaderProgram</a></div><div class="ttdeci">GlShaderProgram(const std::vector&lt; resources::ShaderSource &gt; &amp;, const gl_context_capabilities &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="shader__program_8cpp_source.xhtml#l00050">shader_program.cpp:50</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_4a01dee474130c13b802372087a79ed7.xhtml">renderer</a></li><li class="navelem"><a class="el" href="dir_50129a17799df7b67570c4983a7bc841.xhtml">opengl</a></li><li class="navelem"><a class="el" href="shader__program_8cpp.xhtml">shader_program.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
