<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage/convert/slp_converter_pool.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('slp__converter__pool_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">slp_converter_pool.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="slp__converter__pool_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1slp__converter__pool.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Multiprocessing-based SLP-to-texture converter service.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"># TODO This is a temporary workaround for the fact that the SLP conversion</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">#      requires the GIL, and is really slow right now.</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">#      Ideally, time-intemsive parts of SLP.py should be re-written as</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">#      optimized nogil Cython functions, entirely removing the need for</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">#      multiprocessing.</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">import</span> multiprocessing</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">import</span> queue</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">from</span> threading <span class="keyword">import</span> Lock</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">from</span> ..log <span class="keyword">import</span> warn, err, get_loglevel</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> ..util.system <span class="keyword">import</span> free_memory</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">from</span> .slp <span class="keyword">import</span> SLP</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> .texture <span class="keyword">import</span> Texture</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml">SLPConverterPool</a>:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">    Multiprocessing-based pool of SLP converter processes.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">def </span>__init__(self, palette, jobs=None):</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml">   31</a></span>&#160;        <span class="keywordflow">if</span> jobs <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a23af83e63aa7db225c65bc947cb7ad3c">   32</a></span>&#160;            jobs = os.cpu_count()</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">palette</a> = palette</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">   36</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">fake</a> = (jobs == 1)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">fake</a>:</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">   38</a></span>&#160;            <span class="comment"># don&#39;t actually create the entire multiprocessing thing.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="comment"># self.convert() will just do the conversion directly.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment"># Holds the queues for all currently-idle processes.</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="comment"># those queues accept slpdata (bytes) objects, and provide</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="comment"># Texture objects in return.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="comment"># Note that this is a queue.Queue, not a multiprocessing.Queue.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">idle</a> = queue.Queue()</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">   48</a></span>&#160;        <span class="comment"># guards new job submission so we can &quot;throttle&quot; it.</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">job_mutex</a> = Lock()</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">   51</a></span>&#160;        <span class="comment"># Holds tuples of (process, queue) for all processes.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment"># Needed for proper termination in close().</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">processes</a> = []</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">   55</a></span>&#160;        <span class="comment"># spawn worker processes,</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment"># each has a queue where data is pushed to the process.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(jobs):</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            inqueue = multiprocessing.Queue()</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            outqueue = multiprocessing.Queue()</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            process = multiprocessing.Process(</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                target=converter_process,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                args=(inqueue, outqueue)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            )</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            process.start()</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">processes</a>.append((process, inqueue))</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            <span class="comment"># send initial configuration to process</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            inqueue.put(<a class="code" href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">get_loglevel</a>())</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            inqueue.put(palette)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">idle</a>.put((inqueue, outqueue))</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a157e465a75a721fa7b2f805ff57c4d5f">close</a>(self):</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">        Closes the converter pool, quitting all the processes.</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">fake</a>:</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a157e465a75a721fa7b2f805ff57c4d5f">   80</a></span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">for</span> process, inqueue <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">processes</a>:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            inqueue.put(StopIteration)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            process.join()</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0649d9cd9eb94e284420c7a3c734904a">convert</a>(self, slpdata, custom_cutter=None):</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">        Submits slpdata to one of the converter processes, and returns</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        a Texture object (or throws an Exception).</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">fake</a>:</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0649d9cd9eb94e284420c7a3c734904a">   92</a></span>&#160;            <span class="comment"># convert right here, without entering the thread.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1convert_1_1texture_1_1_texture.xhtml">Texture</a>(SLP(slpdata), self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">palette</a>, custom_cutter)</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">if</span> <a class="code" href="namespaceopenage_1_1util_1_1system.xhtml#a72914597dbcbffe50aec0047eb97f3db">free_memory</a>() &lt; 2**30:</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="comment"># TODO print the warn only once</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a>(<span class="stringliteral">&quot;Low on memory; disabling parallel SLP conversion&quot;</span>)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="comment"># acquire job_mutex in order to block any concurrent activity until</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="comment"># this job is done.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keyword">with</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">job_mutex</a>:  <span class="comment"># pylint: disable=not-context-manager</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1convert_1_1texture_1_1_texture.xhtml">Texture</a>(SLP(slpdata), self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">palette</a>, custom_cutter)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment"># get the data queue for an idle worker process</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        inqueue, outqueue = self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">idle</a>.get()</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment"># restrict new job submission by free memory (see above)</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keyword">with</span> self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">job_mutex</a>:  <span class="comment"># pylint: disable=not-context-manager</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            inqueue.put((slpdata, custom_cutter))</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        result = outqueue.get()</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment"># the process is idle again.</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">idle</a>.put((inqueue, outqueue))</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> isinstance(result, BaseException):</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(<span class="stringliteral">&quot;exception in worker process: %s&quot;</span>, result)</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">raise</span> result</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">return</span> result</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0790584c87c48bf95738b2b2f4ca2f14">__enter__</a>(self):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> self</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0790584c87c48bf95738b2b2f4ca2f14">  124</a></span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a39703847165efd7f5527553633bd9e91">__exit__</a>(self, exctype, value, traceback):</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        del exctype, value, traceback  <span class="comment"># unused</span></div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a39703847165efd7f5527553633bd9e91">  127</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a157e465a75a721fa7b2f805ff57c4d5f">close</a>()</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1slp__converter__pool.xhtml#a1f2e2c95486ce8b8bc86342dd862afc2">converter_process</a>(inqueue, outqueue):</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">    This is the function that runs inside each individual process.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">import</span> sys</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1slp__converter__pool.xhtml#a1f2e2c95486ce8b8bc86342dd862afc2">  135</a></span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">from</span> ..log <span class="keyword">import</span> set_loglevel</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="comment"># prevent writes to sys.stdout</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    sys.stdout.write = sys.stderr.write</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment"># receive initial configuration</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    loglevel = inqueue.get()</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    palette = inqueue.get()</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment"># set the loglevel</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">set_loglevel</a>(loglevel)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment"># loop</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">while</span> <span class="keyword">True</span>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        work_item = inqueue.get()</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">if</span> work_item == StopIteration:</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        slpdata, custom_cutter = work_item</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            texture = <a class="code" href="classopenage_1_1convert_1_1texture_1_1_texture.xhtml">Texture</a>(SLP(slpdata), palette, custom_cutter)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            outqueue.put(texture)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">except</span> BaseException <span class="keyword">as</span> exc:</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">import</span> traceback</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            traceback.print_exc()</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            outqueue.put(exc)</div><div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a1f4f313ff0dda07087f2ef915dbb6e6d"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a1f4f313ff0dda07087f2ef915dbb6e6d">openage.convert.slp_converter_pool.SLPConverterPool.fake</a></div><div class="ttdeci">fake</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00038">slp_converter_pool.py:38</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a95f6aaad729ef45ec619b83d848ba296"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a95f6aaad729ef45ec619b83d848ba296">openage.convert.slp_converter_pool.SLPConverterPool.idle</a></div><div class="ttdeci">idle</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00048">slp_converter_pool.py:48</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a39703847165efd7f5527553633bd9e91"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a39703847165efd7f5527553633bd9e91">openage.convert.slp_converter_pool.SLPConverterPool.__exit__</a></div><div class="ttdeci">def __exit__(self, exctype, value, traceback)</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00127">slp_converter_pool.py:127</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_ab8cdaf7c309255571f22a4a494543d1a"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#ab8cdaf7c309255571f22a4a494543d1a">openage.convert.slp_converter_pool.SLPConverterPool.palette</a></div><div class="ttdeci">palette</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00036">slp_converter_pool.py:36</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1system_xhtml_a72914597dbcbffe50aec0047eb97f3db"><div class="ttname"><a href="namespaceopenage_1_1util_1_1system.xhtml#a72914597dbcbffe50aec0047eb97f3db">openage::util.system.free_memory</a></div><div class="ttdeci">def free_memory()</div><div class="ttdef"><b>Definition:</b> <a href="system_8py_source.xhtml#l00022">system.py:22</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a0649d9cd9eb94e284420c7a3c734904a"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0649d9cd9eb94e284420c7a3c734904a">openage.convert.slp_converter_pool.SLPConverterPool.convert</a></div><div class="ttdeci">def convert(self, slpdata, custom_cutter=None)</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00092">slp_converter_pool.py:92</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a157e465a75a721fa7b2f805ff57c4d5f"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a157e465a75a721fa7b2f805ff57c4d5f">openage.convert.slp_converter_pool.SLPConverterPool.close</a></div><div class="ttdeci">def close(self)</div><div class="ttdoc">Closes the converter pool, quitting all the processes.</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00080">slp_converter_pool.py:80</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml">openage.convert.slp_converter_pool.SLPConverterPool</a></div><div class="ttdoc">Multiprocessing-based pool of SLP converter processes.</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00031">slp_converter_pool.py:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a78bab1bc2016bebde4ef3cde06936702"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">openage::log.set_loglevel</a></div><div class="ttdeci">def set_loglevel(level)</div><div class="ttdoc">sets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00091">__init__.py:91</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a0790584c87c48bf95738b2b2f4ca2f14"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a0790584c87c48bf95738b2b2f4ca2f14">openage.convert.slp_converter_pool.SLPConverterPool.__enter__</a></div><div class="ttdeci">def __enter__(self)</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00124">slp_converter_pool.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_a828ee90e56e649ae32451a71388afa02"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#a828ee90e56e649ae32451a71388afa02">openage.convert.slp_converter_pool.SLPConverterPool.processes</a></div><div class="ttdeci">processes</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00055">slp_converter_pool.py:55</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1slp__converter__pool_xhtml_a1f2e2c95486ce8b8bc86342dd862afc2"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1slp__converter__pool.xhtml#a1f2e2c95486ce8b8bc86342dd862afc2">openage.convert.slp_converter_pool.converter_process</a></div><div class="ttdeci">def converter_process(inqueue, outqueue)</div><div class="ttdoc">This is the function that runs inside each individual process.</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00135">slp_converter_pool.py:135</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool_xhtml_aa5583e4dd38e36e03dd67f98da7484e0"><div class="ttname"><a href="classopenage_1_1convert_1_1slp__converter__pool_1_1_s_l_p_converter_pool.xhtml#aa5583e4dd38e36e03dd67f98da7484e0">openage.convert.slp_converter_pool.SLPConverterPool.job_mutex</a></div><div class="ttdeci">job_mutex</div><div class="ttdef"><b>Definition:</b> <a href="slp__converter__pool_8py_source.xhtml#l00051">slp_converter_pool.py:51</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a2b8905069877587c7f8624a11d524bbc"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">openage::log.get_loglevel</a></div><div class="ttdeci">def get_loglevel()</div><div class="ttdoc">gets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00099">__init__.py:99</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1texture_1_1_texture_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1texture_1_1_texture.xhtml">openage.convert.texture.Texture</a></div><div class="ttdef"><b>Definition:</b> <a href="texture_8py_source.xhtml#l00082">texture.py:82</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a7ca418e1b1fcf210ff91cd25dc8e6a36"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">openage::log.warn</a></div><div class="ttdeci">def warn(msg, *args, **kwargs)</div><div class="ttdoc">warning message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00119">__init__.py:119</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_f8c2790f072062ca31393539e9a4c2e7.xhtml">convert</a></li><li class="navelem"><a class="el" href="slp__converter__pool_8py.xhtml">slp_converter_pool.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
