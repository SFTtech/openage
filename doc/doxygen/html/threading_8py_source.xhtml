<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage/util/threading.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('threading_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">threading.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="threading_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1threading.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Threading utilities.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> enum <span class="keyword">import</span> Enum</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">import</span> itertools</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> queue <span class="keyword">import</span> Queue</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>(generators, jobs=None):</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral">    Similar to itertools.chain(), but runs the individual generators in a</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    thread pool. The resulting items may be out of order accordingly.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">    When one generator raises an exception, all other currently-running</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">    generators are stopped (they may run until their next &#39;yield&#39; statement).</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">    The exception is then raised.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">if</span> jobs <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">   24</a></span>&#160;        jobs = os.cpu_count()</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> jobs == 1:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="comment"># we don&#39;t need to do all that threading stuff;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="comment"># let&#39;s just behave _precisely_ like itertools.chain.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">for</span> generator <span class="keywordflow">in</span> generators:</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">yield</span> <span class="keyword">from</span> generator</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">return</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    queue = <a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml">ClosableQueue</a>()</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    running_generator_count = 0</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">with</span> ThreadPoolExecutor(jobs) <span class="keyword">as</span> pool:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">for</span> generator <span class="keywordflow">in</span> generators:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            pool.submit(generator_to_queue, generator, queue)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            running_generator_count += 1</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">while</span> running_generator_count &gt; 0:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            event_type, value = queue.get()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">if</span> event_type == GeneratorEvent.VALUE:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="keywordflow">yield</span> value</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">elif</span> event_type == GeneratorEvent.EXCEPTION:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                queue.close(<span class="stringliteral">&quot;Exception in different generator&quot;</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keywordflow">raise</span> value</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">elif</span> event_type == GeneratorEvent.STOP_ITERATION:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                running_generator_count -= 1</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml">ClosableQueue</a>(Queue):</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">    For use in concurrent_chain.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">    Behaves like Queue until close() has been called.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">    After that, any call to put() raises RuntimeError.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml">   61</a></span>&#160;        super().<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a6eb3656c2e710770dd12433d36598384">__init__</a>()</div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a6eb3656c2e710770dd12433d36598384">   62</a></span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a4e563df7730cc31695251559626fbb15">closed</a> = <span class="keyword">False</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a842af1896a917755abff64f6a0756ab1">close_reason</a> = <span class="keywordtype">None</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a4e563df7730cc31695251559626fbb15">   64</a></span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a842af1896a917755abff64f6a0756ab1">   65</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a7c932a9c234802819392d7d81885192f">put</a>(self, item, block=True, timeout=None):</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a94efea86c7c77550eae76db99d8d5ebf">raise_if_closed</a>()</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a7c932a9c234802819392d7d81885192f">   67</a></span>&#160;        super().<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a7c932a9c234802819392d7d81885192f">put</a>(item, block, timeout)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a84e871a44b8f1af0616947b0701e54e3">close</a>(self, reason=None):</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="stringliteral">        Any subsequent calls to put() or raise_if_closed()</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">        will raise RuntimeError(reason).</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="keyword">with</span> self.mutex:  <span class="comment"># pylint: disable=not-context-manager</span></div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a84e871a44b8f1af0616947b0701e54e3">   75</a></span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a4e563df7730cc31695251559626fbb15">closed</a> = <span class="keyword">True</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a842af1896a917755abff64f6a0756ab1">close_reason</a> = reason</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a94efea86c7c77550eae76db99d8d5ebf">raise_if_closed</a>(self):</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">        Raises RuntimeError(reason) if the queue has been closed.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">        Returns None elsewise.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keyword">with</span> self.mutex:  <span class="comment"># pylint: disable=not-context-manager</span></div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a94efea86c7c77550eae76db99d8d5ebf">   84</a></span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a4e563df7730cc31695251559626fbb15">closed</a>:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                <span class="keywordflow">raise</span> RuntimeError(self.<a class="code" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a842af1896a917755abff64f6a0756ab1">close_reason</a>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml">GeneratorEvent</a>(Enum):</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">    For use by concurrent_chain.</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">    Represents any event that a generator may cause.</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    VALUE = 0</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml">   94</a></span>&#160;    EXCEPTION = 1</div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml#a8cf93dc8b020874389f18dbd55caaa1b">   95</a></span>&#160;    STOP_ITERATION = 2</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml#aa2d089fed1e35f14bbf77161defb161d">   96</a></span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml#ae9e5eeac715ca25471f9f3266d7a4257">   97</a></span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a1f8d251956234d35535fbdc382d49571">generator_to_queue</a>(generator, queue):</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    For use by concurrent_chain.</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">    Appends all of the generator&#39;s events to the queue,</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">    as tuples of (event type, value).</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1threading.xhtml#a1f8d251956234d35535fbdc382d49571">  105</a></span>&#160;        queue.raise_if_closed()</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">for</span> item <span class="keywordflow">in</span> generator:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            queue.put((GeneratorEvent.VALUE, item))</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        queue.put((GeneratorEvent.STOP_ITERATION, <span class="keywordtype">None</span>))</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">except</span> BaseException <span class="keyword">as</span> exc:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        queue.put((GeneratorEvent.EXCEPTION, exc))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">test_concurrent_chain</a>():</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Tests concurrent_chain &quot;&quot;&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">from</span> ..testing.testing <span class="keyword">import</span> assert_value, assert_raises, result</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">  117</a></span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">def </span>errorgen():</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Test generator that raises an exception &quot;&quot;&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">yield</span> <span class="stringliteral">&quot;errorgen&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">raise</span> ValueError()</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([], 2)), [])</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10)], 2)), <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(range(10)))</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        sorted(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10), range(20)], 2))),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        sorted(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(itertools.chain(range(10), range(20))))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    )</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    chain = <a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10), range(20), errorgen(), range(30)], 2)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">with</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">assert_raises</a>(ValueError):</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(chain))</div><div class="ttc" id="classopenage_1_1util_1_1threading_1_1_generator_event_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml">openage::util.threading.GeneratorEvent</a></div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00094">threading.py:94</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a84e871a44b8f1af0616947b0701e54e3"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a84e871a44b8f1af0616947b0701e54e3">openage::util.threading.ClosableQueue.close</a></div><div class="ttdeci">def close(self, reason=None)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00075">threading.py:75</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1threading_xhtml_a1f8d251956234d35535fbdc382d49571"><div class="ttname"><a href="namespaceopenage_1_1util_1_1threading.xhtml#a1f8d251956234d35535fbdc382d49571">openage::util.threading.generator_to_queue</a></div><div class="ttdeci">def generator_to_queue(generator, queue)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00105">threading.py:105</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a6eb3656c2e710770dd12433d36598384"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a6eb3656c2e710770dd12433d36598384">openage::util.threading.ClosableQueue.__init__</a></div><div class="ttdeci">def __init__(self)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00062">threading.py:62</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a1e253d6f2b396e2a0162c7b1c8ab36d9"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">openage::testing.testing.assert_raises</a></div><div class="ttdeci">def assert_raises(expectedexception)</div><div class="ttdoc">Context guard that asserts that a certain exception is raised inside.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00061">testing.py:61</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a7c932a9c234802819392d7d81885192f"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a7c932a9c234802819392d7d81885192f">openage::util.threading.ClosableQueue.put</a></div><div class="ttdeci">def put(self, item, block=True, timeout=None)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00067">threading.py:67</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1threading_xhtml_a95e47e3e6d90915099eb2ee2ebc15260"><div class="ttname"><a href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">openage::util.threading.concurrent_chain</a></div><div class="ttdeci">def concurrent_chain(generators, jobs=None)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00024">threading.py:24</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1threading_xhtml_aaf02a648f9349f36e6ee76f092059ef0"><div class="ttname"><a href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">openage::util.threading.test_concurrent_chain</a></div><div class="ttdeci">def test_concurrent_chain()</div><div class="ttdoc">Tests concurrent_chain.</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00117">threading.py:117</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml">openage::util.threading.ClosableQueue</a></div><div class="ttdoc">For use in concurrent_chain.</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00061">threading.py:61</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a4e563df7730cc31695251559626fbb15"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a4e563df7730cc31695251559626fbb15">openage::util.threading.ClosableQueue.closed</a></div><div class="ttdeci">closed</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00064">threading.py:64</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a842af1896a917755abff64f6a0756ab1"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a842af1896a917755abff64f6a0756ab1">openage::util.threading.ClosableQueue.close_reason</a></div><div class="ttdeci">close_reason</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00065">threading.py:65</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1threading_1_1_closable_queue_xhtml_a94efea86c7c77550eae76db99d8d5ebf"><div class="ttname"><a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#a94efea86c7c77550eae76db99d8d5ebf">openage::util.threading.ClosableQueue.raise_if_closed</a></div><div class="ttdeci">def raise_if_closed(self)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00084">threading.py:84</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a2800c6619c18337197b7ad519bbad072"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">openage::testing.testing.assert_value</a></div><div class="ttdeci">def assert_value(value, expected=None, validator=None)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00025">testing.py:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_add32c31ab2cc20d9f874152de79d6bd.xhtml">util</a></li><li class="navelem"><a class="el" href="threading_8py.xhtml">threading.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
