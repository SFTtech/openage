<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/testing/main.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('testing_2main_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">main.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="testing_2main_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1testing_1_1main.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot; CLI module for running all tests. &quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">import</span> argparse</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">import</span> sys</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> ..util.strings <span class="keyword">import</span> format_progress</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">from</span> .benchmark <span class="keyword">import</span> benchmark</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> .testing <span class="keyword">import</span> TestError</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> .list_processor <span class="keyword">import</span> get_all_targets</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#ad65e95eb8c8bfca61b9df7814aa26ebb">print_test_list</a>(test_list):</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    Prints a list of all tests and demos in test_list.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    namelen = <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">max</a>(len(name) <span class="keywordflow">for</span> name, _ <span class="keywordflow">in</span> test_list.keys())</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1testing_1_1main.xhtml#ad65e95eb8c8bfca61b9df7814aa26ebb">   20</a></span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">for</span> current_type <span class="keywordflow">in</span> [<span class="stringliteral">&#39;test&#39;</span>, <span class="stringliteral">&#39;demo&#39;</span>, <span class="stringliteral">&#39;benchmark&#39;</span>]:</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">for</span> (name, type_), (_, lang, desc, _) <span class="keywordflow">in</span> test_list.items():</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            <span class="keywordflow">if</span> type_ == current_type:</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                print(<span class="stringliteral">&quot;[%s %3s] %-*s  %s&quot;</span> % (type_, lang, namelen, name, desc))</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    print(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    print(<span class="stringliteral">&quot;To see how to run them, add --help to your invocation!&quot;</span>)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    print(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    print(<span class="stringliteral">&quot;Remember: Testing is the future, and the future starts with: You.&quot;</span>)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    print(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#a9e28a7e35264fdcf32c0e92bec6df017">init_subparser</a>(cli):</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Initializes the subparser for the testing command. &quot;&quot;&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    cli.set_defaults(entrypoint=main)</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1testing_1_1main.xhtml#a9e28a7e35264fdcf32c0e92bec6df017">   36</a></span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--list&quot;</span>, <span class="stringliteral">&quot;-l&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                     help=<span class="stringliteral">&quot;list all tests and demos&quot;</span>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--run-all-tests&quot;</span>, <span class="stringliteral">&quot;-a&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;                     help=<span class="stringliteral">&quot;run all tests&quot;</span>)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--have-assets&quot;</span>, action=<span class="stringliteral">&#39;store_true&#39;</span>,</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                     help=<span class="stringliteral">&quot;additionally, run tests that need asset files&quot;</span>)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--demo&quot;</span>, <span class="stringliteral">&quot;-d&quot;</span>, nargs=argparse.REMAINDER,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                     help=(<span class="stringliteral">&quot;run the given demo; the remaining arguments &quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                           <span class="stringliteral">&quot;are passed to the demo.&quot;</span>))</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--benchmark&quot;</span>, <span class="stringliteral">&quot;-b&quot;</span>, nargs=argparse.REMAINDER,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                     help=(<span class="stringliteral">&quot;run the given benchmark&quot;</span>))</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;test&quot;</span>, nargs=<span class="stringliteral">&#39;*&#39;</span>, help=<span class="stringliteral">&quot;run this test&quot;</span>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#a346b6762051aaadb5cc302e1adbf5f1e">process_args</a>(args, error):</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Processes the given args, detecting errors. &quot;&quot;&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> (args.run_all_tests <span class="keywordflow">or</span> args.demo <span class="keywordflow">or</span> args.test <span class="keywordflow">or</span> args.benchmark):</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1testing_1_1main.xhtml#a346b6762051aaadb5cc302e1adbf5f1e">   55</a></span>&#160;        args.list = <span class="keyword">True</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">if</span> args.have_assets <span class="keywordflow">and</span> <span class="keywordflow">not</span> args.run_all_tests:</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        error(<span class="stringliteral">&quot;you have to run all tests, &quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;              <span class="stringliteral">&quot;otherwise I don&#39;t care if you have assets&quot;</span>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> args.run_all_tests <span class="keywordflow">and</span> (args.test <span class="keywordflow">or</span> args.demo <span class="keywordflow">or</span> args.benchmark):</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        error(<span class="stringliteral">&quot;can&#39;t run individual test or demo or benchmark when running &quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;              <span class="stringliteral">&quot;all tests&quot;</span>)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> bool(args.test) + bool(args.demo) + bool(args.benchmark) &gt; 1:</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        error(<span class="stringliteral">&quot;can only run one of demo, benchmarks or tests&quot;</span>)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="comment"># link python and c++ so it hopefully works when testing</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">from</span> <a class="code" href="namespaceopenage_1_1cppinterface_1_1setup.xhtml">openage.cppinterface.setup</a> <span class="keyword">import</span> setup</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="namespaceopenage_1_1cppinterface_1_1setup.xhtml#ae1c256c521da867c4f2ee7e9a7460ad3">setup</a>(args)</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    test_list = <a class="code" href="namespaceopenage_1_1testing_1_1list__processor.xhtml#a9702d9a71efd1d06569d1488b7c05666">get_all_targets</a>()</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment"># the current test environment can have influence on the tests itself.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    test_environment = {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="stringliteral">&quot;has_assets&quot;</span>: args.have_assets,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment"># if we wanna run all the tests, only run the ones that</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment"># are happy with the environment</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> args.run_all_tests:</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        tests = [name <span class="keywordflow">for</span> (name, test_type), (test_condition, _, _, _)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                 <span class="keywordflow">in</span> test_list.items()</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                 <span class="keywordflow">if</span> test_type == <span class="stringliteral">&quot;test&quot;</span> <span class="keywordflow">and</span> test_condition(test_environment)]</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        args.test.extend(tests)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment"># double-check for unknown tests and demos, maybe we can match them</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">for</span> test <span class="keywordflow">in</span> args.test:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        matched = <span class="keyword">False</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">if</span> (test, <span class="stringliteral">&#39;test&#39;</span>) <span class="keywordflow">not</span> <span class="keywordflow">in</span> test_list:</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="comment"># If the test was not found explicit in the testlist, try to find</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="comment"># all prefixed tests and run them instead.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            matched = [elem[0] <span class="keywordflow">for</span> elem <span class="keywordflow">in</span> test_list</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                       <span class="keywordflow">if</span> elem[0].startswith(test) <span class="keywordflow">and</span> elem[1] == <span class="stringliteral">&quot;test&quot;</span>]</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            <span class="keywordflow">if</span> matched:</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                args.test.extend(matched)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                error(<span class="stringliteral">&quot;no such test: &quot;</span> + test)</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            args.test.remove(test)</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> args.demo <span class="keywordflow">and</span> (args.demo[0], <span class="stringliteral">&#39;demo&#39;</span>) <span class="keywordflow">not</span> <span class="keywordflow">in</span> test_list:</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        error(<span class="stringliteral">&quot;no such demo: &quot;</span> + args.demo[0])</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">if</span> args.benchmark <span class="keywordflow">and</span> (args.benchmark[0], <span class="stringliteral">&#39;benchmark&#39;</span>) <span class="keywordflow">not</span> <span class="keywordflow">in</span> test_list:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        error(<span class="stringliteral">&quot;no such benchmark: &quot;</span> + args.benchmark[0])</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> test_list</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#a22daa2dd4990bc8d016d850a9d9fc5fb">main</a>(args, error):</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; CLI main method. &quot;&quot;&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    test_list = <a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#a346b6762051aaadb5cc302e1adbf5f1e">process_args</a>(args, error)</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1testing_1_1main.xhtml#a22daa2dd4990bc8d016d850a9d9fc5fb">  114</a></span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> args.list:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1main.xhtml#ad65e95eb8c8bfca61b9df7814aa26ebb">print_test_list</a>(test_list)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> args.test:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        failed = 0</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">for</span> idx, name <span class="keywordflow">in</span> enumerate(args.test):</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            _, lang, _, testfun = test_list[name, <span class="stringliteral">&#39;test&#39;</span>]</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            print(<span class="stringliteral">&quot;\x1b[32m[%s]\x1b[m %3s %s&quot;</span> % (</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a16e727f3dbbdb651bec86f64231a2d54">format_progress</a>(idx, len(args.test)),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                lang,</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                name))</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">try</span>:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                testfun()</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            <span class="keywordflow">except</span> BaseException <span class="keyword">as</span> exc:</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                print(<span class="stringliteral">&quot;\x1b[31;1mTest failed\x1b[m&quot;</span>)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(exc, TestError):</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    print(<span class="stringliteral">&quot;\x1b[31;1mUnexpected exception\x1b[m&quot;</span>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                failed += 1</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                <span class="keyword">import</span> traceback</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                traceback.print_exc()</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">if</span> failed:</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            print(<span class="stringliteral">&quot;\x1b[31;1m%d out of %d tests have failed\x1b[m&quot;</span> % (</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                failed,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                len(args.test)))</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            sys.exit(1)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> args.demo:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        _, _, _, demofun = test_list[args.demo[0], <span class="stringliteral">&#39;demo&#39;</span>]</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        sys.exit(demofun(args.demo[1:]))</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> args.benchmark:</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        _, _, _, benchmarktest = test_list[args.benchmark[0], <span class="stringliteral">&#39;benchmark&#39;</span>]</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <a class="code" href="namespaceopenage_1_1test.xhtml#a8f98bf82791522f9116e0a3adfd5871a">benchmark</a>(benchmarktest)</div><div class="ttc" id="namespaceopenage_1_1cppinterface_1_1setup_xhtml_ae1c256c521da867c4f2ee7e9a7460ad3"><div class="ttname"><a href="namespaceopenage_1_1cppinterface_1_1setup.xhtml#ae1c256c521da867c4f2ee7e9a7460ad3">openage.cppinterface.setup.setup</a></div><div class="ttdeci">def setup(args)</div><div class="ttdoc">After a call to setup(), the C++ interface is in a usable state.</div><div class="ttdef"><b>Definition:</b> <a href="setup_8py_source.xhtml#l00030">setup.py:30</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1list__processor_xhtml_a9702d9a71efd1d06569d1488b7c05666"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1list__processor.xhtml#a9702d9a71efd1d06569d1488b7c05666">openage::testing.list_processor.get_all_targets</a></div><div class="ttdeci">def get_all_targets()</div><div class="ttdoc">Reads the Python and C++ testspec.</div><div class="ttdef"><b>Definition:</b> <a href="list__processor_8py_source.xhtml#l00083">list_processor.py:83</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1main_xhtml_a22daa2dd4990bc8d016d850a9d9fc5fb"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1main.xhtml#a22daa2dd4990bc8d016d850a9d9fc5fb">openage::testing.main.main</a></div><div class="ttdeci">def main(args, error)</div><div class="ttdoc">CLI main method.</div><div class="ttdef"><b>Definition:</b> <a href="testing_2main_8py_source.xhtml#l00114">main.py:114</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1main_xhtml_a9e28a7e35264fdcf32c0e92bec6df017"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1main.xhtml#a9e28a7e35264fdcf32c0e92bec6df017">openage::testing.main.init_subparser</a></div><div class="ttdeci">def init_subparser(cli)</div><div class="ttdoc">Initializes the subparser for the testing command.</div><div class="ttdef"><b>Definition:</b> <a href="testing_2main_8py_source.xhtml#l00036">main.py:36</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1main_xhtml_a346b6762051aaadb5cc302e1adbf5f1e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1main.xhtml#a346b6762051aaadb5cc302e1adbf5f1e">openage::testing.main.process_args</a></div><div class="ttdeci">def process_args(args, error)</div><div class="ttdoc">Processes the given args, detecting errors.</div><div class="ttdef"><b>Definition:</b> <a href="testing_2main_8py_source.xhtml#l00055">main.py:55</a></div></div>
<div class="ttc" id="namespaceopenage_1_1test_xhtml_a8f98bf82791522f9116e0a3adfd5871a"><div class="ttname"><a href="namespaceopenage_1_1test.xhtml#a8f98bf82791522f9116e0a3adfd5871a">openage::test::benchmark</a></div><div class="ttdeci">void benchmark()</div><div class="ttdef"><b>Definition:</b> <a href="benchmark__test_8cpp_source.xhtml#l00009">benchmark_test.cpp:9</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1main_xhtml_ad65e95eb8c8bfca61b9df7814aa26ebb"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1main.xhtml#ad65e95eb8c8bfca61b9df7814aa26ebb">openage::testing.main.print_test_list</a></div><div class="ttdeci">def print_test_list(test_list)</div><div class="ttdoc">Prints a list of all tests and demos in test_list.</div><div class="ttdef"><b>Definition:</b> <a href="testing_2main_8py_source.xhtml#l00020">main.py:20</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a16e727f3dbbdb651bec86f64231a2d54"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a16e727f3dbbdb651bec86f64231a2d54">openage::util.strings.format_progress</a></div><div class="ttdeci">def format_progress(progress, total)</div><div class="ttdoc">Formats an &quot;x out of y&quot; string with fixed width.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00114">strings.py:114</a></div></div>
<div class="ttc" id="namespaceopenage_1_1cppinterface_1_1setup_xhtml"><div class="ttname"><a href="namespaceopenage_1_1cppinterface_1_1setup.xhtml">openage.cppinterface.setup</a></div><div class="ttdef"><b>Definition:</b> <a href="setup_8py_source.xhtml#l00001">setup.py:1</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_c2131c87632a366a6d52f07ca073ab90.xhtml">testing</a></li><li class="navelem"><a class="el" href="testing_2main_8py.xhtml">main.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
