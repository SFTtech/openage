<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/opengl/lookup.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('lookup_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">lookup.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lookup_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2018-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// Lookup tables for translating between OpenGL-specific values and generic renderer values,</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// as well as mapping things like type sizes within OpenGL.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;epoxy/gl.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../resources/texture_info.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../resources/mesh_data.h&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>renderer {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">namespace </span>opengl {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#af985a42adb068819071031f365ba5cc8">   19</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#af985a42adb068819071031f365ba5cc8">GL_PIXEL_FORMAT</a> = datastructure::create_const_map&lt;resources::pixel_format, std::tuple&lt;GLint, GLenum, GLenum&gt;&gt;(</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment">// \todo check correctness of formats here</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea73c959d144da660efa48a52e564aa633">resources::pixel_format::r16ui</a>, std::tuple(GL_R16UI, GL_RED_INTEGER, GL_UNSIGNED_INT)),</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea939e20bb21f297a3c7be5d44d77904f5">resources::pixel_format::r32ui</a>, std::tuple(GL_R32UI, GL_RED_INTEGER, GL_UNSIGNED_INT)),</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a">resources::pixel_format::rgb8</a>, std::tuple(GL_RGB8, GL_RGB, GL_UNSIGNED_BYTE)),</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39">resources::pixel_format::bgr8</a>, std::tuple(GL_RGB8, GL_BGR, GL_UNSIGNED_BYTE)),</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a">resources::pixel_format::rgba8</a>, std::tuple(GL_RGBA8, GL_RGBA, GL_UNSIGNED_BYTE)),</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaeed8ba7e197acdfba86db426ce2233c">resources::pixel_format::rgba8ui</a>, std::tuple(GL_RGBA8UI, GL_RGBA_INTEGER, GL_UNSIGNED_BYTE)),</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaa2a83ca2f1d2294b7382d933c03cfc70">resources::pixel_format::depth24</a>, std::tuple(GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT, GL_UNSIGNED_BYTE))</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">   31</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">GL_SHADER_TYPE_SIZE</a> = datastructure::create_const_map&lt;GLenum, size_t&gt;(</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    std::pair(GL_FLOAT, 4),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    std::pair(GL_FLOAT_VEC2, 8),</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::pair(GL_FLOAT_VEC3, 12),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::pair(GL_FLOAT_VEC4, 16),</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    std::pair(GL_INT, 4),</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    std::pair(GL_INT_VEC2, 8),</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    std::pair(GL_INT_VEC3, 12),</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    std::pair(GL_INT_VEC4, 16),</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::pair(GL_UNSIGNED_INT, 4),</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC2, 8),</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC3, 12),</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC4, 16),</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    std::pair(GL_BOOL, 1),</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    std::pair(GL_BOOL_VEC2, 2),</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    std::pair(GL_BOOL_VEC3, 3),</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::pair(GL_BOOL_VEC4, 4),</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    std::pair(GL_FLOAT_MAT2, 16),</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::pair(GL_FLOAT_MAT3, 36),</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    std::pair(GL_FLOAT_MAT4, 64),</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::pair(GL_SAMPLER_1D, 4),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    std::pair(GL_SAMPLER_2D, 4),</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    std::pair(GL_SAMPLER_2D_ARRAY, 4),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    std::pair(GL_SAMPLER_3D, 4),</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    std::pair(GL_SAMPLER_CUBE, 4)</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">   59</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">GLSL_TYPE_NAME</a> = datastructure::create_const_map&lt;GLenum, const char*&gt;(</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    std::pair(GL_FLOAT, <span class="stringliteral">&quot;float&quot;</span>),</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    std::pair(GL_FLOAT_VEC2, <span class="stringliteral">&quot;vec2&quot;</span>),</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    std::pair(GL_FLOAT_VEC3, <span class="stringliteral">&quot;vec3&quot;</span>),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    std::pair(GL_FLOAT_VEC4, <span class="stringliteral">&quot;vec4&quot;</span>),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    std::pair(GL_INT, <span class="stringliteral">&quot;int&quot;</span>),</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    std::pair(GL_INT_VEC2, <span class="stringliteral">&quot;ivec2&quot;</span>),</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::pair(GL_INT_VEC3, <span class="stringliteral">&quot;ivec3&quot;</span>),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    std::pair(GL_INT_VEC4, <span class="stringliteral">&quot;ivec4&quot;</span>),</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::pair(GL_UNSIGNED_INT, <span class="stringliteral">&quot;uint&quot;</span>),</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC2, <span class="stringliteral">&quot;uvec2&quot;</span>),</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC3, <span class="stringliteral">&quot;uvec3&quot;</span>),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::pair(GL_UNSIGNED_INT_VEC4, <span class="stringliteral">&quot;uvec4&quot;</span>),</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::pair(GL_BOOL, <span class="stringliteral">&quot;bool&quot;</span>),</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    std::pair(GL_BOOL_VEC2, <span class="stringliteral">&quot;bvec2&quot;</span>),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::pair(GL_BOOL_VEC3, <span class="stringliteral">&quot;bvec3&quot;</span>),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    std::pair(GL_BOOL_VEC4, <span class="stringliteral">&quot;bvec4&quot;</span>),</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::pair(GL_FLOAT_MAT2, <span class="stringliteral">&quot;mat2&quot;</span>),</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    std::pair(GL_FLOAT_MAT3, <span class="stringliteral">&quot;mat3&quot;</span>),</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    std::pair(GL_FLOAT_MAT4, <span class="stringliteral">&quot;mat4&quot;</span>),</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    std::pair(GL_FLOAT_MAT2x3, <span class="stringliteral">&quot;mat2x3&quot;</span>),</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::pair(GL_FLOAT_MAT2x4, <span class="stringliteral">&quot;mat2x4&quot;</span>),</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::pair(GL_FLOAT_MAT3x2, <span class="stringliteral">&quot;mat3x2&quot;</span>),</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::pair(GL_FLOAT_MAT3x4, <span class="stringliteral">&quot;mat3x4&quot;</span>),</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::pair(GL_FLOAT_MAT4x2, <span class="stringliteral">&quot;mat4x2&quot;</span>),</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::pair(GL_FLOAT_MAT4x3, <span class="stringliteral">&quot;mat4x3&quot;</span>),</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    std::pair(GL_SAMPLER_1D, <span class="stringliteral">&quot;sampler1D&quot;</span>),</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    std::pair(GL_SAMPLER_2D, <span class="stringliteral">&quot;sampler2D&quot;</span>),</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    std::pair(GL_SAMPLER_3D, <span class="stringliteral">&quot;sampler3D&quot;</span>),</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::pair(GL_SAMPLER_CUBE, <span class="stringliteral">&quot;samplerCube&quot;</span>),</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    std::pair(GL_SAMPLER_1D_SHADOW, <span class="stringliteral">&quot;sampler1DShadow&quot;</span>),</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    std::pair(GL_SAMPLER_2D_SHADOW, <span class="stringliteral">&quot;sampler2DShadow&quot;</span>),</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    std::pair(GL_SAMPLER_1D_ARRAY, <span class="stringliteral">&quot;sampler1DArray&quot;</span>),</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    std::pair(GL_SAMPLER_2D_ARRAY, <span class="stringliteral">&quot;sampler2DArray&quot;</span>),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    std::pair(GL_SAMPLER_1D_ARRAY_SHADOW, <span class="stringliteral">&quot;sampler1DArrayShadow&quot;</span>),</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::pair(GL_SAMPLER_2D_ARRAY_SHADOW, <span class="stringliteral">&quot;sampler2DArrayShadow&quot;</span>),</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    std::pair(GL_SAMPLER_2D_MULTISAMPLE, <span class="stringliteral">&quot;sampler2DMS&quot;</span>),</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    std::pair(GL_SAMPLER_2D_MULTISAMPLE_ARRAY, <span class="stringliteral">&quot;sampler2DMSArray&quot;</span>),</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::pair(GL_SAMPLER_CUBE_SHADOW, <span class="stringliteral">&quot;samplerCubeShadow&quot;</span>),</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::pair(GL_SAMPLER_BUFFER, <span class="stringliteral">&quot;samplerBuffer&quot;</span>),</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    std::pair(GL_SAMPLER_2D_RECT, <span class="stringliteral">&quot;sampler2DRect&quot;</span>),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    std::pair(GL_SAMPLER_2D_RECT_SHADOW, <span class="stringliteral">&quot;sampler2DRectShadow&quot;</span>),</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::pair(GL_INT_SAMPLER_1D, <span class="stringliteral">&quot;isampler1D&quot;</span>),</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    std::pair(GL_INT_SAMPLER_2D, <span class="stringliteral">&quot;isampler2D&quot;</span>),</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    std::pair(GL_INT_SAMPLER_3D, <span class="stringliteral">&quot;isampler3D&quot;</span>),</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::pair(GL_INT_SAMPLER_CUBE, <span class="stringliteral">&quot;isamplerCube&quot;</span>),</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    std::pair(GL_INT_SAMPLER_1D_ARRAY, <span class="stringliteral">&quot;isampler1DArray&quot;</span>),</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    std::pair(GL_INT_SAMPLER_2D_ARRAY, <span class="stringliteral">&quot;isampler2DArray&quot;</span>),</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    std::pair(GL_INT_SAMPLER_2D_MULTISAMPLE, <span class="stringliteral">&quot;isampler2DMS&quot;</span>),</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    std::pair(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, <span class="stringliteral">&quot;isampler2DMSArray&quot;</span>),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    std::pair(GL_INT_SAMPLER_BUFFER, <span class="stringliteral">&quot;isamplerBuffer&quot;</span>),</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    std::pair(GL_INT_SAMPLER_2D_RECT, <span class="stringliteral">&quot;isampler2DRect&quot;</span>),</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_1D, <span class="stringliteral">&quot;usampler1D&quot;</span>),</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_2D, <span class="stringliteral">&quot;usampler2D&quot;</span>),</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_3D, <span class="stringliteral">&quot;usampler3D&quot;</span>),</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_CUBE, <span class="stringliteral">&quot;usamplerCube&quot;</span>),</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY, <span class="stringliteral">&quot;usampler2DArray&quot;</span>),</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY, <span class="stringliteral">&quot;usampler2DArray&quot;</span>),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE, <span class="stringliteral">&quot;usampler2DMS&quot;</span>),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY, <span class="stringliteral">&quot;usampler2DMSArray&quot;</span>),</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_BUFFER, <span class="stringliteral">&quot;usamplerBuffer&quot;</span>),</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    std::pair(GL_UNSIGNED_INT_SAMPLER_2D_RECT, <span class="stringliteral">&quot;usampler2DRect&quot;</span>)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">  124</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">GL_VERT_IN_TYPE</a> = datastructure::create_const_map&lt;GLenum, resources::vertex_input_t&gt;(</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    std::pair(GL_FLOAT, <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a44ad4ef5a76e6aa6fb3e3fa079a54fda">resources::vertex_input_t::F32</a>),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::pair(GL_FLOAT_VEC2, <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a9caf3b2ab8218762f7e8b6fdcb0435df">resources::vertex_input_t::V2F32</a>),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    std::pair(GL_FLOAT_VEC3, <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a8fd68a94a1f6849a73eb91859e615b42">resources::vertex_input_t::V3F32</a>),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    std::pair(GL_FLOAT_MAT3, <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3ad4b32b9d0206bc9af315653197281946">resources::vertex_input_t::M3F32</a>)</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">  132</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a> = datastructure::create_const_map&lt;resources::vertex_input_t, GLenum&gt;(</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a44ad4ef5a76e6aa6fb3e3fa079a54fda">resources::vertex_input_t::F32</a>, GL_FLOAT),</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a9caf3b2ab8218762f7e8b6fdcb0435df">resources::vertex_input_t::V2F32</a>, GL_FLOAT),</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a8fd68a94a1f6849a73eb91859e615b42">resources::vertex_input_t::V3F32</a>, GL_FLOAT),</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3ad4b32b9d0206bc9af315653197281946">resources::vertex_input_t::M3F32</a>, GL_FLOAT)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#aa1c08cb649fac64ab09cba708fa5cdba">  140</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#aa1c08cb649fac64ab09cba708fa5cdba">GL_PRIMITIVE</a> = datastructure::create_const_map&lt;resources::vertex_primitive_t, GLenum&gt;(</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7a70b71cabeeaf8c2bf473c896d5442ddb">resources::vertex_primitive_t::POINTS</a>, GL_POINTS),</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7ae585142391f356c60bcfe68279ec2727">resources::vertex_primitive_t::LINES</a>, GL_LINES),</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7ae64a4d2159ed46d077e21a505575c814">resources::vertex_primitive_t::LINE_STRIP</a>, GL_LINE_STRIP),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7add3bfee8042d1b85c224f08b42a3fc2e">resources::vertex_primitive_t::TRIANGLES</a>, GL_TRIANGLES),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7a708de017e3b83ccba21dfc9f6367d46f">resources::vertex_primitive_t::TRIANGLE_STRIP</a>, GL_TRIANGLE_STRIP),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7aa9f047dff7e4cd4d8d3bdeafc4029d47">resources::vertex_primitive_t::TRIANGLE_FAN</a>, GL_TRIANGLE_FAN)</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a4ea3d4a79deb9b17eb3acb0e9ff12681">  150</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a4ea3d4a79deb9b17eb3acb0e9ff12681">GL_INDEX_TYPE</a> = datastructure::create_const_map&lt;resources::index_t, GLenum&gt;(</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8a6669348b484e3008dca2bfa8e85e40b5">resources::index_t::U8</a>, GL_UNSIGNED_BYTE),</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8aef9ef3ebca4d2b64b6ec83808bafa5f2">resources::index_t::U16</a>, GL_UNSIGNED_SHORT),</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    std::pair(<a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8ac8bd5bedff8ef192d39a962afc0e19ee">resources::index_t::U32</a>, GL_UNSIGNED_INT)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}}} <span class="comment">// openage::renderer::opengl</span></div><div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a4ea3d4a79deb9b17eb3acb0e9ff12681"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a4ea3d4a79deb9b17eb3acb0e9ff12681">openage::renderer::opengl::GL_INDEX_TYPE</a></div><div class="ttdeci">static constexpr auto GL_INDEX_TYPE</div><div class="ttdoc">Mapping from generic index types to GL types.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00150">lookup.h:150</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea939e20bb21f297a3c7be5d44d77904f5"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea939e20bb21f297a3c7be5d44d77904f5">openage::renderer::resources::pixel_format::r32ui</a></div><div class="ttdoc">32 bits per pixel, unsigned integer, single channel</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426eaa2a83ca2f1d2294b7382d933c03cfc70"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaa2a83ca2f1d2294b7382d933c03cfc70">openage::renderer::resources::pixel_format::depth24</a></div><div class="ttdoc">24 bits per pixel, depth texture</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a54d05175ef647265b520f9e562bb34f8a6669348b484e3008dca2bfa8e85e40b5"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8a6669348b484e3008dca2bfa8e85e40b5">openage::renderer::resources::index_t::U8</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a342b8db8dc29b5bddbb3b4ae987d1ff3a44ad4ef5a76e6aa6fb3e3fa079a54fda"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a44ad4ef5a76e6aa6fb3e3fa079a54fda">openage::renderer::resources::vertex_input_t::F32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7a70b71cabeeaf8c2bf473c896d5442ddb"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7a70b71cabeeaf8c2bf473c896d5442ddb">openage::renderer::resources::vertex_primitive_t::POINTS</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7add3bfee8042d1b85c224f08b42a3fc2e"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7add3bfee8042d1b85c224f08b42a3fc2e">openage::renderer::resources::vertex_primitive_t::TRIANGLES</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea73c959d144da660efa48a52e564aa633"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea73c959d144da660efa48a52e564aa633">openage::renderer::resources::pixel_format::r16ui</a></div><div class="ttdoc">16 bits per pixel, unsigned integer, single channel</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39">openage::renderer::resources::pixel_format::bgr8</a></div><div class="ttdoc">24 bits per pixel, float, BGR order</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7ae585142391f356c60bcfe68279ec2727"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7ae585142391f356c60bcfe68279ec2727">openage::renderer::resources::vertex_primitive_t::LINES</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a342b8db8dc29b5bddbb3b4ae987d1ff3ad4b32b9d0206bc9af315653197281946"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3ad4b32b9d0206bc9af315653197281946">openage::renderer::resources::vertex_input_t::M3F32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a342b8db8dc29b5bddbb3b4ae987d1ff3a8fd68a94a1f6849a73eb91859e615b42"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a8fd68a94a1f6849a73eb91859e615b42">openage::renderer::resources::vertex_input_t::V3F32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7ae64a4d2159ed46d077e21a505575c814"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7ae64a4d2159ed46d077e21a505575c814">openage::renderer::resources::vertex_primitive_t::LINE_STRIP</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a96240e46c046c93700788844c906a684"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">openage::renderer::opengl::GL_VERT_IN_ELEM_TYPE</a></div><div class="ttdeci">static constexpr auto GL_VERT_IN_ELEM_TYPE</div><div class="ttdoc">The type of a single element in a per-vertex attribute.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00132">lookup.h:132</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a342b8db8dc29b5bddbb3b4ae987d1ff3a9caf3b2ab8218762f7e8b6fdcb0435df"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3a9caf3b2ab8218762f7e8b6fdcb0435df">openage::renderer::resources::vertex_input_t::V2F32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a54d05175ef647265b520f9e562bb34f8aef9ef3ebca4d2b64b6ec83808bafa5f2"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8aef9ef3ebca4d2b64b6ec83808bafa5f2">openage::renderer::resources::index_t::U16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a">openage::renderer::resources::pixel_format::rgba8</a></div><div class="ttdoc">32 bits per pixel, float, alpha channel, RGBA order</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a90b98ae7a652b647771a559e61cb5e56"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">openage::renderer::opengl::GLSL_TYPE_NAME</a></div><div class="ttdeci">static constexpr auto GLSL_TYPE_NAME</div><div class="ttdoc">GL types with corresponding GLSL type strings.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00059">lookup.h:59</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a9105a627b5951e8d1fbcae421166407f"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">openage::renderer::opengl::GL_SHADER_TYPE_SIZE</a></div><div class="ttdeci">static constexpr auto GL_SHADER_TYPE_SIZE</div><div class="ttdoc">Sizes of various uniform/vertex input types in shaders.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00031">lookup.h:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a54d05175ef647265b520f9e562bb34f8ac8bd5bedff8ef192d39a962afc0e19ee"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8ac8bd5bedff8ef192d39a962afc0e19ee">openage::renderer::resources::index_t::U32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_af985a42adb068819071031f365ba5cc8"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#af985a42adb068819071031f365ba5cc8">openage::renderer::opengl::GL_PIXEL_FORMAT</a></div><div class="ttdeci">static constexpr auto GL_PIXEL_FORMAT</div><div class="ttdoc">Input and output pixel formats from pixel_format.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00019">lookup.h:19</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a">openage::renderer::resources::pixel_format::rgb8</a></div><div class="ttdoc">24 bits per pixel, float, RGB order</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7aa9f047dff7e4cd4d8d3bdeafc4029d47"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7aa9f047dff7e4cd4d8d3bdeafc4029d47">openage::renderer::resources::vertex_primitive_t::TRIANGLE_FAN</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a2367c8152b9e322f4177cb25dfd35359"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">openage::renderer::opengl::GL_VERT_IN_TYPE</a></div><div class="ttdeci">static constexpr auto GL_VERT_IN_TYPE</div><div class="ttdoc">Generic vertex input types from GL types.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00124">lookup.h:124</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426eaaeed8ba7e197acdfba86db426ce2233c"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaeed8ba7e197acdfba86db426ce2233c">openage::renderer::resources::pixel_format::rgba8ui</a></div><div class="ttdoc">32 bits per pixel, unsigned integer, alpha channel, RGBA order</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_aa1c08cb649fac64ab09cba708fa5cdba"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#aa1c08cb649fac64ab09cba708fa5cdba">openage::renderer::opengl::GL_PRIMITIVE</a></div><div class="ttdeci">static constexpr auto GL_PRIMITIVE</div><div class="ttdoc">Mapping from generic primitive types to GL types.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00140">lookup.h:140</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a3d2603af7637716eccfdfa718f01bcb7a708de017e3b83ccba21dfc9f6367d46f"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7a708de017e3b83ccba21dfc9f6367d46f">openage::renderer::resources::vertex_primitive_t::TRIANGLE_STRIP</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_4a01dee474130c13b802372087a79ed7.xhtml">renderer</a></li><li class="navelem"><a class="el" href="dir_50129a17799df7b67570c4983a7bc841.xhtml">opengl</a></li><li class="navelem"><a class="el" href="lookup_8h.xhtml">lookup.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
