<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/entry_parser.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('entry__parser_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">entry_parser.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="entry__parser_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1dataformat_1_1entry__parser.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Creates templates for parsing contents of the exported</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">data files.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> string <span class="keyword">import</span> Template</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> .content_snippet <span class="keyword">import</span> ContentSnippet, SectionType</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>:</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral">    An entry parser for reading a single column value from a data file.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">   19</a></span>&#160;    <span class="comment"># what, shall i just make up some more?</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment"># pylint: disable=too-few-public-methods</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#afaa1d8386d3d73ab137d7b81d57cc748">__init__</a>(self, lines, headers, typerefs, destination=&quot;fill&quot;):</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a02e4ed64fb404697d072fce1a64bd8cb">lines</a> = lines</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#afaa1d8386d3d73ab137d7b81d57cc748">   24</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ac14db373178cf1050938f3654c8a72c3">headers</a> = headers</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a02e4ed64fb404697d072fce1a64bd8cb">   25</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a17ae96a6c5788c63c74d646c51ea5f78">typerefs</a> = typerefs</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ac14db373178cf1050938f3654c8a72c3">   26</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a8e4dd2d7dee594667ecbfd690a143276">destination</a> = destination</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a17ae96a6c5788c63c74d646c51ea5f78">   27</a></span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a8e4dd2d7dee594667ecbfd690a143276">   28</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ab89b12b87e755a83978ea244595ed54d">get_code</a>(self, indentlevel=1):</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">        Return the parser code, indented correctly.</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        indent = <span class="stringliteral">&quot;    &quot;</span> * indentlevel</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ab89b12b87e755a83978ea244595ed54d">   33</a></span>&#160;        <span class="keywordflow">return</span> indent + (<span class="stringliteral">&quot;\n&quot;</span> + indent).join(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a02e4ed64fb404697d072fce1a64bd8cb">lines</a>)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml">ParserTemplate</a>:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">    Tempalte for a data parser function, its content is generated.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#afaa1d8386d3d73ab137d7b81d57cc748">__init__</a>(self, signature, template, impl_headers, headers):</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml">   41</a></span>&#160;        <span class="comment"># function signature, containing %s as possible namespace prefix</span></div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a7f096617e7e8a1d16a698a9b73f74ac5">   42</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a8d3b2057338fd22c9b58f0a98c8f15a1">signature</a> = signature</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a8d3b2057338fd22c9b58f0a98c8f15a1">   44</a></span>&#160;        <span class="comment"># template text where insertions will be made</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ae083ba52bb61d25153443a06a18fd3d2">template</a> = template</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ae083ba52bb61d25153443a06a18fd3d2">   47</a></span>&#160;        <span class="comment"># headers for the c file</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#adad8bb343ddfd3241b6ff54057d83e00">impl_headers</a> = impl_headers</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#adad8bb343ddfd3241b6ff54057d83e00">   50</a></span>&#160;        <span class="comment"># headers for the header file</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a48291adb50b301e3a67ad5646ad85258">headers</a> = headers</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a48291adb50b301e3a67ad5646ad85258">   53</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ad12901daa5d9f3b804a5f4ab0aa89e57">get_signature</a>(self, class_name):</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">        Return the function signature of this parser.</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a8d3b2057338fd22c9b58f0a98c8f15a1">signature</a>.format(class_name)</div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ad12901daa5d9f3b804a5f4ab0aa89e57">   58</a></span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a2b70018d1b33a419b6db366ecf81e9f6">get_text</a>(self, class_name, data):</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">        Return the template text, where variables were</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">        substituted already. Variables are passed in through `data`.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="stringliteral">        That way, generated code is inserted into the template.</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        data[<span class="stringliteral">&quot;signature&quot;</span>] = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ad12901daa5d9f3b804a5f4ab0aa89e57">get_signature</a>(<span class="stringliteral">&quot;{}::&quot;</span>.format(class_name))</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a2b70018d1b33a419b6db366ecf81e9f6">   67</a></span>&#160;        <span class="keywordflow">return</span> Template(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ae083ba52bb61d25153443a06a18fd3d2">template</a>).substitute(data)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml">ParserMemberFunction</a>:</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="stringliteral">    Define a parsing member function for generated code files.</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">    The parser member function consists of one or multiple ParserTemplates.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">    The templates may vary depending on the member count,</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral">    so that for 0 members the signature can be different to omit arguments.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml">   79</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#acfe5c3c522e9bb2d025971584663dc81">__init__</a>(self, templates, func_name):</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment"># dict: {function_member_count (None=any): ParserTemplate}</span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#acfe5c3c522e9bb2d025971584663dc81">   81</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">templates</a> = templates</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a26ecf1a0aa28fb83dc254e0a1ddae7b0">func_name</a> = func_name</div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">   83</a></span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a26ecf1a0aa28fb83dc254e0a1ddae7b0">   84</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a6b37a56d52a586826fbe9f4d7dc01d61">get_template</a>(self, lookup):</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">        get the appropritate parser member function template</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">        lookup = len(function members)</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral">        -&gt; this allows to generate stub functions without unused variables.</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a6b37a56d52a586826fbe9f4d7dc01d61">   92</a></span>&#160;        <span class="keywordflow">if</span> lookup <span class="keywordflow">not</span> <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">templates</a>.keys():</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            lookup = <span class="keywordtype">None</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">templates</a>[lookup]</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a3eecf35fb402b961cd57607b01e3f5f8">get_snippet</a>(self, parser_list, file_name, class_name, data):</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">        Return a content snippet for this parser function.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">        This is then placed into the generated file.</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        data[<span class="stringliteral">&quot;parsers&quot;</span>] = <span class="stringliteral">&quot;\n&quot;</span>.join(parser.get_code(1) <span class="keywordflow">for</span> parser <span class="keywordflow">in</span> parser_list)</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a3eecf35fb402b961cd57607b01e3f5f8">  102</a></span>&#160;        data[<span class="stringliteral">&quot;class_name&quot;</span>] = class_name</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment"># lookup function for length of parser list.</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment"># if the len is 0, this should provide the stub function.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        template = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a6b37a56d52a586826fbe9f4d7dc01d61">get_template</a>(len(parser_list))</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        snippet = <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet.xhtml">ContentSnippet</a>(</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            template.get_text(class_name, data),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            file_name,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            SectionType.section_body,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            orderby=<span class="stringliteral">&quot;%s_%s&quot;</span> % (class_name, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a26ecf1a0aa28fb83dc254e0a1ddae7b0">func_name</a>),</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            reprtxt=template.get_signature(class_name + <span class="stringliteral">&quot;::&quot;</span>),</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        )</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        snippet.includes |= template.impl_headers | set().union(*(p.headers <span class="keywordflow">for</span> p <span class="keywordflow">in</span> parser_list))</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        snippet.typerefs |= {class_name}.union(*(p.typerefs <span class="keywordflow">for</span> p <span class="keywordflow">in</span> parser_list))</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">return</span> snippet</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a9c64f0ac365057ce1fc48645397df2f5">get_signature</a>(self):</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">        return the function signature for this member function.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">templates</a>[<span class="keywordtype">None</span>].<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a9c64f0ac365057ce1fc48645397df2f5">get_signature</a>(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a9c64f0ac365057ce1fc48645397df2f5">  125</a></span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a5da4a59ad38e883e21ad9da754d01c9e">get_headers</a>(self):</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="stringliteral">        return the needed headers for the function signature of this member function.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">templates</a>[<span class="keywordtype">None</span>].headers</div><div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_acfe5c3c522e9bb2d025971584663dc81"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#acfe5c3c522e9bb2d025971584663dc81">openage.convert.dataformat.entry_parser.ParserMemberFunction.__init__</a></div><div class="ttdeci">def __init__(self, templates, func_name)</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00081">entry_parser.py:81</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_a26ecf1a0aa28fb83dc254e0a1ddae7b0"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a26ecf1a0aa28fb83dc254e0a1ddae7b0">openage.convert.dataformat.entry_parser.ParserMemberFunction.func_name</a></div><div class="ttdeci">func_name</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00084">entry_parser.py:84</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_aab5b5dd38e6e59adcbad6caa219e8f27"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#aab5b5dd38e6e59adcbad6caa219e8f27">openage.convert.dataformat.entry_parser.ParserMemberFunction.templates</a></div><div class="ttdeci">templates</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00083">entry_parser.py:83</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_a5da4a59ad38e883e21ad9da754d01c9e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a5da4a59ad38e883e21ad9da754d01c9e">openage.convert.dataformat.entry_parser.ParserMemberFunction.get_headers</a></div><div class="ttdeci">def get_headers(self)</div><div class="ttdoc">return the needed headers for the function signature of this member function.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00131">entry_parser.py:131</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_a3eecf35fb402b961cd57607b01e3f5f8"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a3eecf35fb402b961cd57607b01e3f5f8">openage.convert.dataformat.entry_parser.ParserMemberFunction.get_snippet</a></div><div class="ttdeci">def get_snippet(self, parser_list, file_name, class_name, data)</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00102">entry_parser.py:102</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml">openage.convert.dataformat.entry_parser.ParserTemplate</a></div><div class="ttdoc">Tempalte for a data parser function, its content is generated.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00041">entry_parser.py:41</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_a8e4dd2d7dee594667ecbfd690a143276"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a8e4dd2d7dee594667ecbfd690a143276">openage.convert.dataformat.entry_parser.EntryParser.destination</a></div><div class="ttdeci">destination</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00028">entry_parser.py:28</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_a48291adb50b301e3a67ad5646ad85258"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a48291adb50b301e3a67ad5646ad85258">openage.convert.dataformat.entry_parser.ParserTemplate.headers</a></div><div class="ttdeci">headers</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00053">entry_parser.py:53</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_a02e4ed64fb404697d072fce1a64bd8cb"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a02e4ed64fb404697d072fce1a64bd8cb">openage.convert.dataformat.entry_parser.EntryParser.lines</a></div><div class="ttdeci">lines</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00025">entry_parser.py:25</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">openage.convert.dataformat.entry_parser.EntryParser</a></div><div class="ttdoc">An entry parser for reading a single column value from a data file.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00019">entry_parser.py:19</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet.xhtml">openage.convert.dataformat.content_snippet.ContentSnippet</a></div><div class="ttdoc">one part of text for generated files to be saved in &quot;file_name&quot;</div><div class="ttdef"><b>Definition:</b> <a href="content__snippet_8py_source.xhtml#l00026">content_snippet.py:26</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_adad8bb343ddfd3241b6ff54057d83e00"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#adad8bb343ddfd3241b6ff54057d83e00">openage.convert.dataformat.entry_parser.ParserTemplate.impl_headers</a></div><div class="ttdeci">impl_headers</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00050">entry_parser.py:50</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_afaa1d8386d3d73ab137d7b81d57cc748"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#afaa1d8386d3d73ab137d7b81d57cc748">openage.convert.dataformat.entry_parser.EntryParser.__init__</a></div><div class="ttdeci">def __init__(self, lines, headers, typerefs, destination=&quot;fill&quot;)</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00024">entry_parser.py:24</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_a17ae96a6c5788c63c74d646c51ea5f78"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#a17ae96a6c5788c63c74d646c51ea5f78">openage.convert.dataformat.entry_parser.EntryParser.typerefs</a></div><div class="ttdeci">typerefs</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00027">entry_parser.py:27</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_a9c64f0ac365057ce1fc48645397df2f5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a9c64f0ac365057ce1fc48645397df2f5">openage.convert.dataformat.entry_parser.ParserMemberFunction.get_signature</a></div><div class="ttdeci">def get_signature(self)</div><div class="ttdoc">return the function signature for this member function.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00125">entry_parser.py:125</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_ab89b12b87e755a83978ea244595ed54d"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ab89b12b87e755a83978ea244595ed54d">openage.convert.dataformat.entry_parser.EntryParser.get_code</a></div><div class="ttdeci">def get_code(self, indentlevel=1)</div><div class="ttdoc">Return the parser code, indented correctly.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00033">entry_parser.py:33</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml_ac14db373178cf1050938f3654c8a72c3"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml#ac14db373178cf1050938f3654c8a72c3">openage.convert.dataformat.entry_parser.EntryParser.headers</a></div><div class="ttdeci">headers</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00026">entry_parser.py:26</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml">openage.convert.dataformat.entry_parser.ParserMemberFunction</a></div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00079">entry_parser.py:79</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_ad12901daa5d9f3b804a5f4ab0aa89e57"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ad12901daa5d9f3b804a5f4ab0aa89e57">openage.convert.dataformat.entry_parser.ParserTemplate.get_signature</a></div><div class="ttdeci">def get_signature(self, class_name)</div><div class="ttdoc">Return the function signature of this parser.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00058">entry_parser.py:58</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_a8d3b2057338fd22c9b58f0a98c8f15a1"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a8d3b2057338fd22c9b58f0a98c8f15a1">openage.convert.dataformat.entry_parser.ParserTemplate.signature</a></div><div class="ttdeci">signature</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00044">entry_parser.py:44</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function_xhtml_a6b37a56d52a586826fbe9f4d7dc01d61"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_member_function.xhtml#a6b37a56d52a586826fbe9f4d7dc01d61">openage.convert.dataformat.entry_parser.ParserMemberFunction.get_template</a></div><div class="ttdeci">def get_template(self, lookup)</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00092">entry_parser.py:92</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_ae083ba52bb61d25153443a06a18fd3d2"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#ae083ba52bb61d25153443a06a18fd3d2">openage.convert.dataformat.entry_parser.ParserTemplate.template</a></div><div class="ttdeci">template</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00047">entry_parser.py:47</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template_xhtml_a2b70018d1b33a419b6db366ecf81e9f6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_parser_template.xhtml#a2b70018d1b33a419b6db366ecf81e9f6">openage.convert.dataformat.entry_parser.ParserTemplate.get_text</a></div><div class="ttdeci">def get_text(self, class_name, data)</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00067">entry_parser.py:67</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_f8c2790f072062ca31393539e9a4c2e7.xhtml">convert</a></li><li class="navelem"><a class="el" href="dir_2220708b3a09db22ca7ba5a5fcfaa7ea.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="entry__parser_8py.xhtml">entry_parser.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
