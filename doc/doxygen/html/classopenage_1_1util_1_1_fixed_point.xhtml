<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::util::FixedPoint&lt; int_type, fractional_bits &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1_fixed_point.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-static-methods">Static Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1util_1_1_fixed_point-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::FixedPoint&lt; int_type, fractional_bits &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for openage::util::FixedPoint&lt; int_type, fractional_bits &gt;:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_fixed_point__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab22d295eb3c55c51a00f584aa783bf7e"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ab22d295eb3c55c51a00f584aa783bf7e">raw_type</a> = int_type</td></tr>
<tr class="separator:ab22d295eb3c55c51a00f584aa783bf7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a428d93899638a0471ea60c5d9850292c"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a428d93899638a0471ea60c5d9850292c">this_type</a> = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt;</td></tr>
<tr class="separator:a428d93899638a0471ea60c5d9850292c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2879fa6f6c8a01ca162ec4f1fdaca57"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">unsigned_int_type</a> = typename std::make_unsigned&lt; int_type &gt;::type</td></tr>
<tr class="separator:ac2879fa6f6c8a01ca162ec4f1fdaca57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42da6bbdfdd34c65db112929c3f94e71"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a42da6bbdfdd34c65db112929c3f94e71">same_type_but_unsigned</a> = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; typename <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">FixedPoint::unsigned_int_type</a>, fractional_bits &gt;</td></tr>
<tr class="separator:a42da6bbdfdd34c65db112929c3f94e71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a50908a8761e19864f030d822856c3227"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a50908a8761e19864f030d822856c3227">FixedPoint</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;other)</td></tr>
<tr class="separator:a50908a8761e19864f030d822856c3227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0e556f78cde2795b26c10709032f3e7"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac0e556f78cde2795b26c10709032f3e7">FixedPoint</a> (<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:ac0e556f78cde2795b26c10709032f3e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e39dbaf3295e64070ba80f9972e3513"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a4e39dbaf3295e64070ba80f9972e3513">operator=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;other)</td></tr>
<tr class="separator:a4e39dbaf3295e64070ba80f9972e3513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65edb5b4e90d9e34dbe44d32890759b9"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a65edb5b4e90d9e34dbe44d32890759b9">operator=</a> (<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&amp;other) noexcept</td></tr>
<tr class="separator:a65edb5b4e90d9e34dbe44d32890759b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a2d3297574a2e5996aefd540a7b0dfb"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a0a2d3297574a2e5996aefd540a7b0dfb">FixedPoint</a> ()</td></tr>
<tr class="separator:a0a2d3297574a2e5996aefd540a7b0dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f8593a8358172f788ee3597c4b5981"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a52f8593a8358172f788ee3597c4b5981">FixedPoint</a> (double n)</td></tr>
<tr class="separator:a52f8593a8358172f788ee3597c4b5981"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe7a3ec44c6f7ac96312875af742f87"><td class="memItemLeft" align="right" valign="top">constexpr int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#affe7a3ec44c6f7ac96312875af742f87">get_raw_value</a> () const</td></tr>
<tr class="separator:affe7a3ec44c6f7ac96312875af742f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12dc86de2b985fdaff044ed9ab38e453"><td class="memItemLeft" align="right" valign="top">constexpr int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a12dc86de2b985fdaff044ed9ab38e453">to_int</a> () const</td></tr>
<tr class="separator:a12dc86de2b985fdaff044ed9ab38e453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8adbb099a4f7a0db820f923e8ffc1a02"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a8adbb099a4f7a0db820f923e8ffc1a02">operator int</a> () const</td></tr>
<tr class="separator:a8adbb099a4f7a0db820f923e8ffc1a02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07a0fa1c13f5aff3f184a2d82574e7e7"><td class="memItemLeft" align="right" valign="top">constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a07a0fa1c13f5aff3f184a2d82574e7e7">to_float</a> () const</td></tr>
<tr class="separator:a07a0fa1c13f5aff3f184a2d82574e7e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a132f65f53a2a87b36f880fc567ec857f"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a132f65f53a2a87b36f880fc567ec857f">operator float</a> () const</td></tr>
<tr class="separator:a132f65f53a2a87b36f880fc567ec857f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d55d1b8ecdb0fd4ff8e7e3da2598554"><td class="memItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a> () const</td></tr>
<tr class="separator:a3d55d1b8ecdb0fd4ff8e7e3da2598554"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4cacca4318bbc4f50a568b1fc1789c"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a0c4cacca4318bbc4f50a568b1fc1789c">operator double</a> () const</td></tr>
<tr class="separator:a0c4cacca4318bbc4f50a568b1fc1789c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff707b86b379bbb8491212631d1df769"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#aff707b86b379bbb8491212631d1df769">str</a> () const</td></tr>
<tr class="separator:aff707b86b379bbb8491212631d1df769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ce8a71883f18088e7876aa8e2600e4"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a42da6bbdfdd34c65db112929c3f94e71">FixedPoint::same_type_but_unsigned</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a41ce8a71883f18088e7876aa8e2600e4">get_fractional_part</a> () const</td></tr>
<tr class="separator:a41ce8a71883f18088e7876aa8e2600e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc8d2dddcdda2d24df395759a4a3f1ab"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#abc8d2dddcdda2d24df395759a4a3f1ab">operator==</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:abc8d2dddcdda2d24df395759a4a3f1ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6bf5d9ab688b4f8b56a0f1e5a68f572"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ad6bf5d9ab688b4f8b56a0f1e5a68f572">operator !=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:ad6bf5d9ab688b4f8b56a0f1e5a68f572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5caaef66c0cf9920f83bfb20524bb2ef"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a5caaef66c0cf9920f83bfb20524bb2ef">operator&lt;</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:a5caaef66c0cf9920f83bfb20524bb2ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1780e721d3db4c21864c9172a63198c6"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a1780e721d3db4c21864c9172a63198c6">operator &gt;</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:a1780e721d3db4c21864c9172a63198c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a211506fc52a7e2a73b6eba2cf6d2f66a"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a211506fc52a7e2a73b6eba2cf6d2f66a">operator&lt;=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:a211506fc52a7e2a73b6eba2cf6d2f66a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97237e56fbe59abeec8469929c0f56b7"><td class="memItemLeft" align="right" valign="top">constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a97237e56fbe59abeec8469929c0f56b7">operator &gt;=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;o) const</td></tr>
<tr class="separator:a97237e56fbe59abeec8469929c0f56b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78cd3057f1c6d052604a7ea7b3f97b8b"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a78cd3057f1c6d052604a7ea7b3f97b8b">operator+</a> () const</td></tr>
<tr class="separator:a78cd3057f1c6d052604a7ea7b3f97b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec3105441d3a31509744116f782fe3e7"><td class="memTemplParams" colspan="2">template&lt;typename inner_int_type  = int_type&gt; </td></tr>
<tr class="memitem:aec3105441d3a31509744116f782fe3e7"><td class="memTemplItemLeft" align="right" valign="top">constexpr std::enable_if&lt; std::is_signed&lt; inner_int_type &gt;::value, typename <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a428d93899638a0471ea60c5d9850292c">FixedPoint::this_type</a> &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#aec3105441d3a31509744116f782fe3e7">operator -</a> () const</td></tr>
<tr class="separator:aec3105441d3a31509744116f782fe3e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0eb736578910b123ea19652c670daab"><td class="memTemplParams" colspan="2">template&lt;typename I , unsigned F&gt; </td></tr>
<tr class="memitem:aa0eb736578910b123ea19652c670daab"><td class="memTemplItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#aa0eb736578910b123ea19652c670daab">hypot</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; I, F &gt; rhs)</td></tr>
<tr class="separator:aa0eb736578910b123ea19652c670daab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36dd5c06bff45023368c192f65f38182"><td class="memTemplParams" colspan="2">template&lt;typename I , unsigned F&gt; </td></tr>
<tr class="memitem:a36dd5c06bff45023368c192f65f38182"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; I, F &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a36dd5c06bff45023368c192f65f38182">hypotfp</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; I, F &gt; rhs)</td></tr>
<tr class="separator:a36dd5c06bff45023368c192f65f38182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1066c5bc35ea84af4566a7950541a7ab"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a1066c5bc35ea84af4566a7950541a7ab">operator+=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;n)</td></tr>
<tr class="separator:a1066c5bc35ea84af4566a7950541a7ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fc27c9ffb04dc23906380db8f228e53"><td class="memItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a0fc27c9ffb04dc23906380db8f228e53">operator -=</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;n)</td></tr>
<tr class="separator:a0fc27c9ffb04dc23906380db8f228e53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf610f0ece81e2c4cbf0a405aba9c7c8"><td class="memTemplParams" colspan="2">template&lt;typename N &gt; </td></tr>
<tr class="memitem:acf610f0ece81e2c4cbf0a405aba9c7c8"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; std::is_arithmetic&lt; N &gt;::value, <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp; &gt;::type constexpr&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#acf610f0ece81e2c4cbf0a405aba9c7c8">operator *=</a> (const N &amp;rhs)</td></tr>
<tr class="separator:acf610f0ece81e2c4cbf0a405aba9c7c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a479bc1182f83c94eecc577eb493d7f"><td class="memTemplParams" colspan="2">template&lt;typename N &gt; </td></tr>
<tr class="memitem:a8a479bc1182f83c94eecc577eb493d7f"><td class="memTemplItemLeft" align="right" valign="top">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a8a479bc1182f83c94eecc577eb493d7f">operator/=</a> (const N &amp;rhs)</td></tr>
<tr class="separator:a8a479bc1182f83c94eecc577eb493d7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2836456e5e71b3c8ddb7815c7040599b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a2836456e5e71b3c8ddb7815c7040599b">swap</a> (<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;rhs)</td></tr>
<tr class="separator:a2836456e5e71b3c8ddb7815c7040599b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae963a0d669b00ec8a65da1bf0041172a"><td class="memItemLeft" align="right" valign="top">constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ae963a0d669b00ec8a65da1bf0041172a">sqrt</a> ()</td></tr>
<tr class="separator:ae963a0d669b00ec8a65da1bf0041172a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac15c9eac48a2d30284089c642f7176b5"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac15c9eac48a2d30284089c642f7176b5">zero</a> ()</td></tr>
<tr class="separator:ac15c9eac48a2d30284089c642f7176b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a703b41f0cb3fb93f1b5dcd20e6c968b4"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a703b41f0cb3fb93f1b5dcd20e6c968b4">from_int</a> (int_type n)</td></tr>
<tr class="separator:a703b41f0cb3fb93f1b5dcd20e6c968b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cc8c2bd1dad2337630abf6f6e42aef3"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a7cc8c2bd1dad2337630abf6f6e42aef3">from_float</a> (float n)</td></tr>
<tr class="separator:a7cc8c2bd1dad2337630abf6f6e42aef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483c36345c5b597c1626162bc96dc52c"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">from_double</a> (double n)</td></tr>
<tr class="separator:a483c36345c5b597c1626162bc96dc52c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6602fc6e0cf22db46a7a2c4d65bbf866"><td class="memTemplParams" colspan="2">template&lt;typename other_int_type , unsigned int other_fractional_bits&gt; </td></tr>
<tr class="memitem:a6602fc6e0cf22db46a7a2c4d65bbf866"><td class="memTemplItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a6602fc6e0cf22db46a7a2c4d65bbf866">from_fixedpoint</a> (const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; other_int_type, other_fractional_bits &gt; &amp;other)</td></tr>
<tr class="separator:a6602fc6e0cf22db46a7a2c4d65bbf866"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1432784032d62a4b43961b88de32ae86"><td class="memItemLeft" align="right" valign="top">static constexpr const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a1432784032d62a4b43961b88de32ae86">min_value</a> ()</td></tr>
<tr class="separator:a1432784032d62a4b43961b88de32ae86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30783d598a6f1a133ba94b3e0bf319a0"><td class="memItemLeft" align="right" valign="top">static constexpr const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a30783d598a6f1a133ba94b3e0bf319a0">max_value</a> ()</td></tr>
<tr class="separator:a30783d598a6f1a133ba94b3e0bf319a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa01c403263c2142c0ce9ce40cde89066"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#aa01c403263c2142c0ce9ce40cde89066">from_raw_value</a> (int_type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3bf715e5d34cd92f0d595d414888f69b">raw_value</a>)</td></tr>
<tr class="separator:aa01c403263c2142c0ce9ce40cde89066"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-methods"></a>
Static Private Member Functions</h2></td></tr>
<tr class="memitem:adbd7a81351040e264df9f0b82bc8e494"><td class="memItemLeft" align="right" valign="top">static constexpr double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#adbd7a81351040e264df9f0b82bc8e494">power_of_two</a> (unsigned int power)</td></tr>
<tr class="separator:adbd7a81351040e264df9f0b82bc8e494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2858e0798bf7e033c56f6ec653180588"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">FixedPoint::unsigned_int_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a2858e0798bf7e033c56f6ec653180588">fractional_part_bitmask</a> ()</td></tr>
<tr class="separator:a2858e0798bf7e033c56f6ec653180588"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f225133013eccb8bbdd9a4628308a59"><td class="memItemLeft" align="right" valign="top">static constexpr int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a5f225133013eccb8bbdd9a4628308a59">raw_value_from_double</a> (double n)</td></tr>
<tr class="separator:a5f225133013eccb8bbdd9a4628308a59"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a3bf715e5d34cd92f0d595d414888f69b"><td class="memItemLeft" align="right" valign="top">int_type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3bf715e5d34cd92f0d595d414888f69b">raw_value</a></td></tr>
<tr class="separator:a3bf715e5d34cd92f0d595d414888f69b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:a970aefe3504ce8bdcb0ad2f8a21e4e57"><td class="memItemLeft" align="right" valign="top">static constexpr const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a970aefe3504ce8bdcb0ad2f8a21e4e57">from_double_factor</a> = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#adbd7a81351040e264df9f0b82bc8e494">power_of_two</a>(fractional_bits)</td></tr>
<tr class="separator:a970aefe3504ce8bdcb0ad2f8a21e4e57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91787091503691b05e2bd1c0df99a326"><td class="memItemLeft" align="right" valign="top">static constexpr const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a91787091503691b05e2bd1c0df99a326">to_double_factor</a> = 1 / <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a970aefe3504ce8bdcb0ad2f8a21e4e57">from_double_factor</a></td></tr>
<tr class="separator:a91787091503691b05e2bd1c0df99a326"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a887393057ecf8e0b2505086842768776"><td class="memItemLeft" align="right" valign="top">static constexpr const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a887393057ecf8e0b2505086842768776">from_float_factor</a> = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a970aefe3504ce8bdcb0ad2f8a21e4e57">from_double_factor</a></td></tr>
<tr class="separator:a887393057ecf8e0b2505086842768776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10ad20f2db009ff3b153a1a5812038a6"><td class="memItemLeft" align="right" valign="top">static constexpr const float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a10ad20f2db009ff3b153a1a5812038a6">to_float_factor</a> = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a91787091503691b05e2bd1c0df99a326">to_double_factor</a></td></tr>
<tr class="separator:a10ad20f2db009ff3b153a1a5812038a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5d7fef738e76cec9c68bc6412acaa5e"><td class="memItemLeft" align="right" valign="top">static constexpr const unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#aa5d7fef738e76cec9c68bc6412acaa5e">approx_decimal_places</a></td></tr>
<tr class="separator:aa5d7fef738e76cec9c68bc6412acaa5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a251133bb4a6195067bf32e242bba0d88"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a251133bb4a6195067bf32e242bba0d88">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;n)</td></tr>
<tr class="separator:a251133bb4a6195067bf32e242bba0d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37518ac1b10368036cfce134555d5512"><td class="memItemLeft" align="right" valign="top">std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a37518ac1b10368036cfce134555d5512">operator &gt;&gt;</a> (std::istream &amp;is, <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;n)</td></tr>
<tr class="separator:a37518ac1b10368036cfce134555d5512"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename int_type, unsigned int fractional_bits&gt;<br />
class openage::util::FixedPoint&lt; int_type, fractional_bits &gt;</h3>

<p>Fixed-point integer class;</p>
<p>this is designed to be used instead of floats in places where guaranteed precision is required.</p>
<p>For example, FixedPoint&lt;int64_t, 32&gt; can store values from -2**32 to +2**32 with a constant precision of 2**-32. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00086">86</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ab22d295eb3c55c51a00f584aa783bf7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab22d295eb3c55c51a00f584aa783bf7e">&#9670;&nbsp;</a></span>raw_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ab22d295eb3c55c51a00f584aa783bf7e">raw_type</a> =  int_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00088">88</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a42da6bbdfdd34c65db112929c3f94e71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42da6bbdfdd34c65db112929c3f94e71">&#9670;&nbsp;</a></span>same_type_but_unsigned</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a42da6bbdfdd34c65db112929c3f94e71">same_type_but_unsigned</a> =  <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt;typename <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">FixedPoint::unsigned_int_type</a>, fractional_bits&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00092">92</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a428d93899638a0471ea60c5d9850292c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a428d93899638a0471ea60c5d9850292c">&#9670;&nbsp;</a></span>this_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a428d93899638a0471ea60c5d9850292c">this_type</a> =  <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt;int_type, fractional_bits&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00089">89</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="ac2879fa6f6c8a01ca162ec4f1fdaca57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2879fa6f6c8a01ca162ec4f1fdaca57">&#9670;&nbsp;</a></span>unsigned_int_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">unsigned_int_type</a> =  typename std::make_unsigned&lt;int_type&gt;::type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00090">90</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a50908a8761e19864f030d822856c3227"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50908a8761e19864f030d822856c3227">&#9670;&nbsp;</a></span>FixedPoint() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00136">136</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="ac0e556f78cde2795b26c10709032f3e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac0e556f78cde2795b26c10709032f3e7">&#9670;&nbsp;</a></span>FixedPoint() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00140">140</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a0a2d3297574a2e5996aefd540a7b0dfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a2d3297574a2e5996aefd540a7b0dfb">&#9670;&nbsp;</a></span>FixedPoint() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Empty constructor. Initializes the number to 0. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00157">157</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a52f8593a8358172f788ee3597c4b5981"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52f8593a8358172f788ee3597c4b5981">&#9670;&nbsp;</a></span>FixedPoint() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::<a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>floating-point constructor. Initializes the number from a double. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00166">166</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2858e0798bf7e033c56f6ec653180588"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2858e0798bf7e033c56f6ec653180588">&#9670;&nbsp;</a></span>fractional_part_bitmask()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#ac2879fa6f6c8a01ca162ec4f1fdaca57">FixedPoint::unsigned_int_type</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::fractional_part_bitmask </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00119">119</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a483c36345c5b597c1626162bc96dc52c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a483c36345c5b597c1626162bc96dc52c">&#9670;&nbsp;</a></span>from_double()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_double </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Factory function to get a fixed-point number from a double. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00192">192</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a6602fc6e0cf22db46a7a2c4d65bbf866"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6602fc6e0cf22db46a7a2c4d65bbf866">&#9670;&nbsp;</a></span>from_fixedpoint()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename other_int_type , unsigned int other_fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_fixedpoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; other_int_type, other_fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Factory function to get a fixed-point number from a fixed-point number of different type. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00200">200</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a7cc8c2bd1dad2337630abf6f6e42aef3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cc8c2bd1dad2337630abf6f6e42aef3">&#9670;&nbsp;</a></span>from_float()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_float </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Factory function to get a fixed-point number from a float. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00185">185</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a703b41f0cb3fb93f1b5dcd20e6c968b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a703b41f0cb3fb93f1b5dcd20e6c968b4">&#9670;&nbsp;</a></span>from_int()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_int </td>
          <td>(</td>
          <td class="paramtype">int_type&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Factory function to get a fixed-point number from an integer. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00178">178</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="aa01c403263c2142c0ce9ce40cde89066"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa01c403263c2142c0ce9ce40cde89066">&#9670;&nbsp;</a></span>from_raw_value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_raw_value </td>
          <td>(</td>
          <td class="paramtype">int_type&#160;</td>
          <td class="paramname"><em>raw_value</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Factory function to construct a fixed-point number with a given raw value. Don't use this. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00224">224</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a41ce8a71883f18088e7876aa8e2600e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41ce8a71883f18088e7876aa8e2600e4">&#9670;&nbsp;</a></span>get_fractional_part()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a42da6bbdfdd34c65db112929c3f94e71">FixedPoint::same_type_but_unsigned</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::get_fractional_part </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converter to retrieve the fractional (post-decimal) part of the number. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00286">286</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="affe7a3ec44c6f7ac96312875af742f87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affe7a3ec44c6f7ac96312875af742f87">&#9670;&nbsp;</a></span>get_raw_value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int_type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::get_raw_value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converter to retrieve the raw value of the fixed-point number. Don't use this. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00234">234</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="aa0eb736578910b123ea19652c670daab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0eb736578910b123ea19652c670daab">&#9670;&nbsp;</a></span>hypot()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename I , unsigned F&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::hypot </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; I, F &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00338">338</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a36dd5c06bff45023368c192f65f38182"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36dd5c06bff45023368c192f65f38182">&#9670;&nbsp;</a></span>hypotfp()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename I , unsigned F&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt;I, F&gt; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::hypotfp </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; I, F &gt;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00343">343</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a30783d598a6f1a133ba94b3e0bf319a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30783d598a6f1a133ba94b3e0bf319a0">&#9670;&nbsp;</a></span>max_value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::max_value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The maximum possible value of this type. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00216">216</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a1432784032d62a4b43961b88de32ae86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1432784032d62a4b43961b88de32ae86">&#9670;&nbsp;</a></span>min_value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::min_value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The minimum possible value of this type. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00209">209</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="ad6bf5d9ab688b4f8b56a0f1e5a68f572"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6bf5d9ab688b4f8b56a0f1e5a68f572">&#9670;&nbsp;</a></span>operator !=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator != </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00303">303</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="acf610f0ece81e2c4cbf0a405aba9c7c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf610f0ece81e2c4cbf0a405aba9c7c8">&#9670;&nbsp;</a></span>operator *=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename N &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;std::is_arithmetic&lt;N&gt;::value, <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> &amp;&gt;::type constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator *= </td>
          <td>(</td>
          <td class="paramtype">const N &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> *= N, where N is not a <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00363">363</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="aec3105441d3a31509744116f782fe3e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec3105441d3a31509744116f782fe3e7">&#9670;&nbsp;</a></span>operator -()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename inner_int_type  = int_type&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::enable_if&lt;std::is_signed&lt;inner_int_type&gt;::value, typename <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a428d93899638a0471ea60c5d9850292c">FixedPoint::this_type</a>&gt;::type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator - </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00332">332</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a0fc27c9ffb04dc23906380db8f228e53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fc27c9ffb04dc23906380db8f228e53">&#9670;&nbsp;</a></span>operator -=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&amp; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator -= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00353">353</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a1780e721d3db4c21864c9172a63198c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1780e721d3db4c21864c9172a63198c6">&#9670;&nbsp;</a></span>operator &gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator &gt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00311">311</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a97237e56fbe59abeec8469929c0f56b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97237e56fbe59abeec8469929c0f56b7">&#9670;&nbsp;</a></span>operator &gt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator &gt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00319">319</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a0c4cacca4318bbc4f50a568b1fc1789c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c4cacca4318bbc4f50a568b1fc1789c">&#9670;&nbsp;</a></span>operator double()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator double </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00267">267</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a132f65f53a2a87b36f880fc567ec857f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a132f65f53a2a87b36f880fc567ec857f">&#9670;&nbsp;</a></span>operator float()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator float </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00256">256</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a8adbb099a4f7a0db820f923e8ffc1a02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8adbb099a4f7a0db820f923e8ffc1a02">&#9670;&nbsp;</a></span>operator int()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator int </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00245">245</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a78cd3057f1c6d052604a7ea7b3f97b8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78cd3057f1c6d052604a7ea7b3f97b8b">&#9670;&nbsp;</a></span>operator+()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator+ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00324">324</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a1066c5bc35ea84af4566a7950541a7ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1066c5bc35ea84af4566a7950541a7ab">&#9670;&nbsp;</a></span>operator+=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&amp; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator+= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00348">348</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a8a479bc1182f83c94eecc577eb493d7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a479bc1182f83c94eecc577eb493d7f">&#9670;&nbsp;</a></span>operator/=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<div class="memtemplate">
template&lt;typename N &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&amp; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator/= </td>
          <td>(</td>
          <td class="paramtype">const N &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> /= N </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00372">372</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a5caaef66c0cf9920f83bfb20524bb2ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5caaef66c0cf9920f83bfb20524bb2ef">&#9670;&nbsp;</a></span>operator&lt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00307">307</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a211506fc52a7e2a73b6eba2cf6d2f66a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a211506fc52a7e2a73b6eba2cf6d2f66a">&#9670;&nbsp;</a></span>operator&lt;=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00315">315</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a4e39dbaf3295e64070ba80f9972e3513"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e39dbaf3295e64070ba80f9972e3513">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&amp; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00144">144</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a65edb5b4e90d9e34dbe44d32890759b9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65edb5b4e90d9e34dbe44d32890759b9">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&amp; <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00149">149</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="abc8d2dddcdda2d24df395759a4a3f1ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc8d2dddcdda2d24df395759a4a3f1ab">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr bool <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>o</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00299">299</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="adbd7a81351040e264df9f0b82bc8e494"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbd7a81351040e264df9f0b82bc8e494">&#9670;&nbsp;</a></span>power_of_two()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::power_of_two </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>power</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00096">96</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a5f225133013eccb8bbdd9a4628308a59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f225133013eccb8bbdd9a4628308a59">&#9670;&nbsp;</a></span>raw_value_from_double()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr int_type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::raw_value_from_double </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00130">130</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="ae963a0d669b00ec8a65da1bf0041172a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae963a0d669b00ec8a65da1bf0041172a">&#9670;&nbsp;</a></span>sqrt()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::sqrt </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00394">394</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="aff707b86b379bbb8491212631d1df769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff707b86b379bbb8491212631d1df769">&#9670;&nbsp;</a></span>str()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::str </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Show a string representation. Useful for debugging in gdb. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00274">274</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a2836456e5e71b3c8ddb7815c7040599b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2836456e5e71b3c8ddb7815c7040599b">&#9670;&nbsp;</a></span>swap()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::swap </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00377">377</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a3d55d1b8ecdb0fd4ff8e7e3da2598554"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d55d1b8ecdb0fd4ff8e7e3da2598554">&#9670;&nbsp;</a></span>to_double()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::to_double </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converter to retrieve the number as double. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00263">263</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a07a0fa1c13f5aff3f184a2d82574e7e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a07a0fa1c13f5aff3f184a2d82574e7e7">&#9670;&nbsp;</a></span>to_float()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr float <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::to_float </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converter to retrieve the number as float. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00252">252</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a12dc86de2b985fdaff044ed9ab38e453"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12dc86de2b985fdaff044ed9ab38e453">&#9670;&nbsp;</a></span>to_int()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr int_type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::to_int </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Converter to retrieve the int (pre-decimal) part of the number. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00241">241</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="ac15c9eac48a2d30284089c642f7176b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac15c9eac48a2d30284089c642f7176b5">&#9670;&nbsp;</a></span>zero()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::zero </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a> value that is preinitialized to zero. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00171">171</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a37518ac1b10368036cfce134555d5512"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37518ac1b10368036cfce134555d5512">&#9670;&nbsp;</a></span>operator &gt;&gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::istream&amp; operator &gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>is</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00387">387</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a251133bb4a6195067bf32e242bba0d88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a251133bb4a6195067bf32e242bba0d88">&#9670;&nbsp;</a></span>operator&lt;&lt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a>&lt; int_type, fractional_bits &gt; &amp;&#160;</td>
          <td class="paramname"><em>n</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00382">382</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa5d7fef738e76cec9c68bc6412acaa5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5d7fef738e76cec9c68bc6412acaa5e">&#9670;&nbsp;</a></span>approx_decimal_places</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const unsigned int <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::approx_decimal_places</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= static_cast&lt;unsigned int&gt;(</div><div class="line">        static_cast&lt;double&gt;(fractional_bits) * 0.30103 + 1</div><div class="line">    )</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00114">114</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a970aefe3504ce8bdcb0ad2f8a21e4e57"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a970aefe3504ce8bdcb0ad2f8a21e4e57">&#9670;&nbsp;</a></span>from_double_factor</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_double_factor = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#adbd7a81351040e264df9f0b82bc8e494">power_of_two</a>(fractional_bits)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00109">109</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a887393057ecf8e0b2505086842768776"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a887393057ecf8e0b2505086842768776">&#9670;&nbsp;</a></span>from_float_factor</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const float <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::from_float_factor = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a970aefe3504ce8bdcb0ad2f8a21e4e57">from_double_factor</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00111">111</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a3bf715e5d34cd92f0d595d414888f69b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bf715e5d34cd92f0d595d414888f69b">&#9670;&nbsp;</a></span>raw_value</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int_type <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::raw_value</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Storage of the fixed point data. </p>

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00107">107</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a91787091503691b05e2bd1c0df99a326"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91787091503691b05e2bd1c0df99a326">&#9670;&nbsp;</a></span>to_double_factor</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const double <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::to_double_factor = 1 / <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a970aefe3504ce8bdcb0ad2f8a21e4e57">from_double_factor</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00110">110</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<a id="a10ad20f2db009ff3b153a1a5812038a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10ad20f2db009ff3b153a1a5812038a6">&#9670;&nbsp;</a></span>to_float_factor</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename int_type, unsigned int fractional_bits&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr const float <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint</a>&lt; int_type, fractional_bits &gt;::to_float_factor = <a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml#a91787091503691b05e2bd1c0df99a326">to_double_factor</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="fixed__point_8h_source.xhtml#l00112">112</a> of file <a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>libopenage/util/<a class="el" href="fixed__point_8h_source.xhtml">fixed_point.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1_fixed_point.xhtml">FixedPoint</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
