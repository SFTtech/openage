<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/input/text_to_event.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('text__to__event_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">text_to_event.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="text__to__event_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2016-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="text__to__event_8h.xhtml">text_to_event.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;regex&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;SDL2/SDL.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../testing/testing.h&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>input {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">const</span> std::vector&lt;int&gt; modifiers{</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    KMOD_LCTRL, KMOD_LSHIFT, KMOD_RCTRL, KMOD_RSHIFT, KMOD_LALT, KMOD_RALT, KMOD_LGUI, KMOD_RGUI, KMOD_CTRL, KMOD_SHIFT, KMOD_ALT, KMOD_GUI, KMOD_MODE, KMOD_CAPS, KMOD_NUM</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;};</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">const</span> std::regex event_pattern{</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="stringliteral">&quot;(?:(?:(LCtrl)|(LShift)|(RCtrl)|(RShift)|(LAlt)|(RAlt)|(LGui)|(RGUI)|(Ctrl)|(Shift)|(Alt)|(Gui)|(AltGr)|(Caps)|(NumLck))[[:space:]]+)?&quot;</span> <span class="comment">// modifier (optional)</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="stringliteral">&quot;([^[:space:]]+)&quot;</span> <span class="comment">// key</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="stringliteral">&quot;(?:[[:space:]]+([^[:space:]]+))?&quot;</span> <span class="comment">// parameter, like direction (optional)</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="stringliteral">&quot;[[:space:]]*&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;};</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keywordtype">void</span> check_modifiers_once() {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">bool</span> checked = <span class="keyword">false</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">if</span> (!checked) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        checked = <span class="keyword">true</span>;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(event_pattern.mark_count() == modifiers.size() + 2, <span class="stringliteral">&quot;Groups in the input event regex pattern: one per key modifier, key itself and amount.&quot;</span>);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;Event to_event(<span class="keyword">const</span> std::string &amp;event_type, <span class="keyword">const</span> std::string &amp;param, <span class="keyword">const</span> <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">if</span> (event_type == <span class="stringliteral">&quot;MOUSE&quot;</span>)</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#abae2435eecb13af4c06e9449299ceb41">sdl_mouse</a>(std::stoi(param), static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event_type == <span class="stringliteral">&quot;MOUSE_UP&quot;</span>)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#ad3082ad89eabf77fdae7da9f72f26910">sdl_mouse_up_down</a>(std::stoi(param), <span class="keyword">true</span>, static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (event_type == <span class="stringliteral">&quot;MOUSE_DOWN&quot;</span>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#ad3082ad89eabf77fdae7da9f72f26910">sdl_mouse_up_down</a>(std::stoi(param), <span class="keyword">false</span>, static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    } <span class="keywordflow">catch</span> (std::logic_error&amp;) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;could not parse mouse button &#39;&quot;</span> &lt;&lt; param &lt;&lt; <span class="stringliteral">&quot;&#39;!&quot;</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (event_type == <span class="stringliteral">&quot;WHEEL&quot;</span>) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">if</span> (param == <span class="stringliteral">&quot;1&quot;</span> || param == <span class="stringliteral">&quot;UP&quot;</span>) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#ab6f0345d20c07a72034dc85a73d1cdf1">sdl_wheel</a>(1, static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (param == <span class="stringliteral">&quot;-1&quot;</span> || param == <span class="stringliteral">&quot;DOWN&quot;</span>) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#ab6f0345d20c07a72034dc85a73d1cdf1">sdl_wheel</a>(-1, static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;could not parse mouse wheel amount &#39;&quot;</span> &lt;&lt; param &lt;&lt; <span class="stringliteral">&quot;&#39;!&quot;</span>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    SDL_Keycode key_code = SDL_GetKeyFromName(event_type.c_str());</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (key_code == SDLK_UNKNOWN) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;could not parse key &#39;&quot;</span> &lt;&lt; event_type &lt;&lt; <span class="stringliteral">&quot;&#39;!&quot;</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span> (!param.empty())</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a>) &lt;&lt; <span class="stringliteral">&quot;nothing expected after key name &#39;&quot;</span> &lt;&lt; event_type &lt;&lt; <span class="stringliteral">&quot;&#39;, but got &#39;&quot;</span> &lt;&lt; param &lt;&lt; <span class="stringliteral">&quot;&#39;.&quot;</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1input.xhtml#aad63294ea2a94dc1723869be3c8d1670">sdl_key</a>(key_code, static_cast&lt;SDL_Keymod&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;}</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">   76</a></span>&#160;<a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a> <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="keyword">const</span> std::string &amp;event_str) {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    check_modifiers_once();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(event_str.find(<span class="charliteral">&#39;\n&#39;</span>), <span class="stringliteral">&quot;Input event string representation must be one line, got &#39;&quot;</span> &lt;&lt; event_str &lt;&lt; <span class="stringliteral">&quot;&#39;.&quot;</span>);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a> = 0;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::smatch event_elements;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> (std::regex_match(event_str, event_elements, event_pattern)) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keyword">auto</span> groups_it = std::begin(event_elements) + 1;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">auto</span> first_non_empty = std::find_if(groups_it, std::end(event_elements), [] (<span class="keyword">const</span> std::ssub_match &amp;element) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keywordflow">return</span> element.length();</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        });</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(first_non_empty != std::end(event_elements), <span class="stringliteral">&quot;Nothing captured from string representation of event &#39;&quot;</span>&lt;&lt; event_str &lt;&lt;<span class="stringliteral">&quot;&#39;: regex pattern is broken.&quot;</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keyword">auto</span> index_first_non_empty = std::distance(groups_it, first_non_empty);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">if</span> (index_first_non_empty &lt; std::distance(std::begin(modifiers), std::end(modifiers)))</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a> = modifiers[index_first_non_empty];</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keyword">auto</span> event_type = groups_it[modifiers.size()].str();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(!event_type.empty(), <span class="stringliteral">&quot;Empty group where key was expected in string representation of event &#39;&quot;</span>&lt;&lt; event_str &lt;&lt;<span class="stringliteral">&quot;&#39;: regex pattern is broken.&quot;</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keyword">auto</span> param = groups_it[modifiers.size() + 1].str();</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">return</span> to_event(event_type, param, <a class="code" href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">mod</a>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;could not parse keybinding &#39;&quot;</span> &lt;&lt; event_str &lt;&lt; <span class="stringliteral">&quot;&#39;!&quot;</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1input_1_1tests.xhtml">  111</a></span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1input_1_1tests.xhtml#a0291195ab14d6ffb5dcb8e894ec20972">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1input_1_1tests.xhtml#a0291195ab14d6ffb5dcb8e894ec20972">parse_event_string</a>() {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;q&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a002101f8725e5c78d9f30d87f3fa4c87">event_class::ALPHA</a>, SDL_GetKeyFromName(<span class="stringliteral">&quot;q&quot;</span>), <a class="code" href="namespaceopenage_1_1input.xhtml#a35fb62561b5dee35b84bc9a228b04ab1">modset_t</a>{}} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;Return&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a473d7f95e1409a797f859f013fbccaa2">event_class::NONPRINT</a>, SDL_GetKeyFromName(<span class="stringliteral">&quot;Return&quot;</span>), <a class="code" href="namespaceopenage_1_1input.xhtml#a35fb62561b5dee35b84bc9a228b04ab1">modset_t</a>{}} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;Ctrl p&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a002101f8725e5c78d9f30d87f3fa4c87">event_class::ALPHA</a>, SDL_GetKeyFromName(<span class="stringliteral">&quot;p&quot;</span>), <a class="code" href="namespaceopenage_1_1input.xhtml#a440ec4f21ee7c8cf0a64ecb96e4fca91">sdl_mod</a>(static_cast&lt;SDL_Keymod&gt;(KMOD_CTRL))} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;Shift MOUSE 1&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a3421ce503e9731d435babad896b7aef8">event_class::MOUSE_BUTTON</a>, 1, <a class="code" href="namespaceopenage_1_1input.xhtml#a440ec4f21ee7c8cf0a64ecb96e4fca91">sdl_mod</a>(static_cast&lt;SDL_Keymod&gt;(KMOD_SHIFT))} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;MOUSE_UP 1&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849ac80e822dfb2e91b477ea25b533fb001d">event_class::MOUSE_BUTTON_UP</a>, 1, <a class="code" href="namespaceopenage_1_1input.xhtml#a35fb62561b5dee35b84bc9a228b04ab1">modset_t</a>{}} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;WHEEL -1&quot;</span>) == <a class="code" href="classopenage_1_1input_1_1_event.xhtml">Event</a>{<a class="code" href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a5f7856b6bcb3430acde17c87c700a4bc">event_class::MOUSE_WHEEL</a>, -1, <a class="code" href="namespaceopenage_1_1input.xhtml#a35fb62561b5dee35b84bc9a228b04ab1">modset_t</a>{}} || <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;&quot;</span>));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;WHEEL&quot;</span>));</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;MOUSE&quot;</span>));</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;MOUSE_DOWN&quot;</span>));</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;Blurb MOUSE 1&quot;</span>));</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;Shift MICKEY_MOUSE 1&quot;</span>));</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">text_to_event</a>(<span class="stringliteral">&quot;WHEEL TEAR_OFF&quot;</span>));</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;} <span class="comment">// tests</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}} <span class="comment">// openage::input</span></div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a278a7af94e412aa285e58d870c64a849a473d7f95e1409a797f859f013fbccaa2"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a473d7f95e1409a797f859f013fbccaa2">openage::input::event_class::NONPRINT</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a910f68a5c426735a2b353eefa6229348"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a910f68a5c426735a2b353eefa6229348">openage::input::text_to_event</a></div><div class="ttdeci">Event text_to_event(const std::string &amp;event_str)</div><div class="ttdef"><b>Definition:</b> <a href="text__to__event_8cpp_source.xhtml#l00076">text_to_event.cpp:76</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_ab6f0345d20c07a72034dc85a73d1cdf1"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#ab6f0345d20c07a72034dc85a73d1cdf1">openage::input::sdl_wheel</a></div><div class="ttdeci">Event sdl_wheel(int direction, SDL_Keymod mod)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00164">event.cpp:164</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_1_1tests_xhtml_a0291195ab14d6ffb5dcb8e894ec20972"><div class="ttname"><a href="namespaceopenage_1_1input_1_1tests.xhtml#a0291195ab14d6ffb5dcb8e894ec20972">openage::input::tests::parse_event_string</a></div><div class="ttdeci">void parse_event_string()</div><div class="ttdef"><b>Definition:</b> <a href="text__to__event_8cpp_source.xhtml#l00112">text_to_event.cpp:112</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7e483e123bf554b630319eb3dd012c02"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7e483e123bf554b630319eb3dd012c02">openage::util::mod</a></div><div class="ttdeci">constexpr T mod(T x, T m)</div><div class="ttdef"><b>Definition:</b> <a href="misc_8h_source.xhtml#l00032">misc.h:32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a278a7af94e412aa285e58d870c64a849a5f7856b6bcb3430acde17c87c700a4bc"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a5f7856b6bcb3430acde17c87c700a4bc">openage::input::event_class::MOUSE_WHEEL</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ad3ad66a2f3c40aa0744570ab803b903f"><div class="ttname"><a href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a></div><div class="ttdeci">#define TESTTHROWS(expression)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00087">testing.h:87</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a440ec4f21ee7c8cf0a64ecb96e4fca91"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a440ec4f21ee7c8cf0a64ecb96e4fca91">openage::input::sdl_mod</a></div><div class="ttdeci">modset_t sdl_mod(SDL_Keymod mod)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00110">event.cpp:110</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_aad63294ea2a94dc1723869be3c8d1670"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#aad63294ea2a94dc1723869be3c8d1670">openage::input::sdl_key</a></div><div class="ttdeci">Event sdl_key(SDL_Keycode code, SDL_Keymod mod)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00127">event.cpp:127</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a278a7af94e412aa285e58d870c64a849a3421ce503e9731d435babad896b7aef8"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a3421ce503e9731d435babad896b7aef8">openage::input::event_class::MOUSE_BUTTON</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a278a7af94e412aa285e58d870c64a849ac80e822dfb2e91b477ea25b533fb001d"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849ac80e822dfb2e91b477ea25b533fb001d">openage::input::event_class::MOUSE_BUTTON_UP</a></div></div>
<div class="ttc" id="text__to__event_8h_xhtml"><div class="ttname"><a href="text__to__event_8h.xhtml">text_to_event.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a35fb62561b5dee35b84bc9a228b04ab1"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a35fb62561b5dee35b84bc9a228b04ab1">openage::input::modset_t</a></div><div class="ttdeci">std::unordered_set&lt; modifier, modifier_hash &gt; modset_t</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8h_source.xhtml#l00079">event.h:79</a></div></div>
<div class="ttc" id="classopenage_1_1input_1_1_event_xhtml"><div class="ttname"><a href="classopenage_1_1input_1_1_event.xhtml">openage::input::Event</a></div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8h_source.xhtml#l00113">event.h:113</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_abae2435eecb13af4c06e9449299ceb41"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#abae2435eecb13af4c06e9449299ceb41">openage::input::sdl_mouse</a></div><div class="ttdeci">Event sdl_mouse(int button, SDL_Keymod mod)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00156">event.cpp:156</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a7ca418e1b1fcf210ff91cd25dc8e6a36"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">openage::log.warn</a></div><div class="ttdeci">def warn(msg, *args, **kwargs)</div><div class="ttdoc">warning message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00119">__init__.py:119</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_ad3082ad89eabf77fdae7da9f72f26910"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#ad3082ad89eabf77fdae7da9f72f26910">openage::input::sdl_mouse_up_down</a></div><div class="ttdeci">Event sdl_mouse_up_down(int button, bool up, SDL_Keymod mod)</div><div class="ttdef"><b>Definition:</b> <a href="input_2event_8cpp_source.xhtml#l00160">event.cpp:160</a></div></div>
<div class="ttc" id="namespaceopenage_1_1input_xhtml_a278a7af94e412aa285e58d870c64a849a002101f8725e5c78d9f30d87f3fa4c87"><div class="ttname"><a href="namespaceopenage_1_1input.xhtml#a278a7af94e412aa285e58d870c64a849a002101f8725e5c78d9f30d87f3fa4c87">openage::input::event_class::ALPHA</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_b257ac1eb047fdaa3ba231cb3d9ec411.xhtml">input</a></li><li class="navelem"><a class="el" href="text__to__event_8cpp.xhtml">text_to_event.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
