<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1datastructure_1_1_pairing_heap.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classopenage_1_1datastructure_1_1_pairing_heap-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap__coll__graph.svg" width="192" height="522"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aecca499825c32d9f3763c58d7b8f7482"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a> = heapnode_t</td></tr>
<tr class="separator:aecca499825c32d9f3763c58d7b8f7482"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af89a07b90150d0d4606787f0ac202242"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> = std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a> &gt;</td></tr>
<tr class="separator:af89a07b90150d0d4606787f0ac202242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97080dca2abefa0817478c009f2ca67b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a97080dca2abefa0817478c009f2ca67b">this_type</a> = <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a>&lt; T, compare, <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a> &gt;</td></tr>
<tr class="separator:a97080dca2abefa0817478c009f2ca67b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f19a6e5b26897b3fa79ccf610e31add"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a1f19a6e5b26897b3fa79ccf610e31add">cmp_t</a> = compare</td></tr>
<tr class="separator:a1f19a6e5b26897b3fa79ccf610e31add"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2087411c07ffe7d5d0762a700ee4e34e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a2087411c07ffe7d5d0762a700ee4e34e">PairingHeap</a> ()</td></tr>
<tr class="separator:a2087411c07ffe7d5d0762a700ee4e34e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa219dc574937f546b210dd0c04836219"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aa219dc574937f546b210dd0c04836219">~PairingHeap</a> ()=default</td></tr>
<tr class="separator:aa219dc574937f546b210dd0c04836219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75e9e7602b59aeee47a2fd84a10c8f74"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a75e9e7602b59aeee47a2fd84a10c8f74">push</a> (const T &amp;item)</td></tr>
<tr class="separator:a75e9e7602b59aeee47a2fd84a10c8f74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a684440bcb0466bd64164e9fe7e9df954"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a684440bcb0466bd64164e9fe7e9df954">push</a> (T &amp;&amp;item)</td></tr>
<tr class="separator:a684440bcb0466bd64164e9fe7e9df954"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6bcfcb890dd8d546b1b4c466cf09009"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ac6bcfcb890dd8d546b1b4c466cf09009">pop</a> ()</td></tr>
<tr class="separator:ac6bcfcb890dd8d546b1b4c466cf09009"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17677ec830613746e38124b2eac7d2e6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">pop_node</a> ()</td></tr>
<tr class="separator:a17677ec830613746e38124b2eac7d2e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f6c87e73e47397b92a2766989a30c0f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a8f6c87e73e47397b92a2766989a30c0f">unlink_node</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;node)</td></tr>
<tr class="separator:a8f6c87e73e47397b92a2766989a30c0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad22ca21f8e7319ea14cd3e14cf5274c4"><td class="memItemLeft" align="right" valign="top">const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ad22ca21f8e7319ea14cd3e14cf5274c4">top</a> () const</td></tr>
<tr class="separator:ad22ca21f8e7319ea14cd3e14cf5274c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74c5545ea2c581782effc648a0ecefab"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a74c5545ea2c581782effc648a0ecefab">top_node</a> () const</td></tr>
<tr class="separator:a74c5545ea2c581782effc648a0ecefab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab94d37206816a45bcfe49f8631cc82a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ab94d37206816a45bcfe49f8631cc82a9">decrease</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;node)</td></tr>
<tr class="separator:ab94d37206816a45bcfe49f8631cc82a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab81daeebac3d236ced4a85117483d76"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aab81daeebac3d236ced4a85117483d76">update</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;node)</td></tr>
<tr class="separator:aab81daeebac3d236ced4a85117483d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a012519defd709aacae622b276c3f85eb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a012519defd709aacae622b276c3f85eb">clear</a> ()</td></tr>
<tr class="separator:a012519defd709aacae622b276c3f85eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45599db3b89b27ad5c53ca900a67df85"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a45599db3b89b27ad5c53ca900a67df85">size</a> () const</td></tr>
<tr class="separator:a45599db3b89b27ad5c53ca900a67df85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a529d5ee64fa5002f6487d3821df5f6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a7a529d5ee64fa5002f6487d3821df5f6">empty</a> () const</td></tr>
<tr class="separator:a7a529d5ee64fa5002f6487d3821df5f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59f56ca7e64a9a61213fb367da2be7ca"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a59f56ca7e64a9a61213fb367da2be7ca">iter_all</a> (const std::function&lt; void(const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;)&gt; &amp;func) const</td></tr>
<tr class="separator:a59f56ca7e64a9a61213fb367da2be7ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a95fa745e6a81de8caae638621137d504"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a95fa745e6a81de8caae638621137d504">walk_tree</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;root, const std::function&lt; void(const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;)&gt; &amp;func) const</td></tr>
<tr class="separator:a95fa745e6a81de8caae638621137d504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a493b9b6b7e82fe0633df628a2aa248e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">push_node</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;node)</td></tr>
<tr class="separator:a493b9b6b7e82fe0633df628a2aa248e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0b5d27df523155450ae777c9aa40f20"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af0b5d27df523155450ae777c9aa40f20">root_insert</a> (const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;node)</td></tr>
<tr class="separator:af0b5d27df523155450ae777c9aa40f20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a902a1342c704db376899206112ced595"><td class="memItemLeft" align="right" valign="top">compare&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a902a1342c704db376899206112ced595">cmp</a></td></tr>
<tr class="separator:a902a1342c704db376899206112ced595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42a1379cfdaf1a7f2a5ff4da9544d9f7"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a></td></tr>
<tr class="separator:a42a1379cfdaf1a7f2a5ff4da9544d9f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a850aad20a2be9bfe164499a4462965b4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a></td></tr>
<tr class="separator:a850aad20a2be9bfe164499a4462965b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt;<br />
class openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt;</h3>

<p>(Quite) efficient heap implementation. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00037">37</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="a1f19a6e5b26897b3fa79ccf610e31add"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f19a6e5b26897b3fa79ccf610e31add">&#9670;&nbsp;</a></span>cmp_t</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a1f19a6e5b26897b3fa79ccf610e31add">cmp_t</a> =  compare</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00200">200</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="af89a07b90150d0d4606787f0ac202242"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af89a07b90150d0d4606787f0ac202242">&#9670;&nbsp;</a></span>element_t</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> =  std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00198">198</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="aecca499825c32d9f3763c58d7b8f7482"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecca499825c32d9f3763c58d7b8f7482">&#9670;&nbsp;</a></span>node_t</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a> =  heapnode_t</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00197">197</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a97080dca2abefa0817478c009f2ca67b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97080dca2abefa0817478c009f2ca67b">&#9670;&nbsp;</a></span>this_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a97080dca2abefa0817478c009f2ca67b">this_type</a> =  <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a>&lt;T, compare, <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#aecca499825c32d9f3763c58d7b8f7482">node_t</a>&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00199">199</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2087411c07ffe7d5d0762a700ee4e34e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2087411c07ffe7d5d0762a700ee4e34e">&#9670;&nbsp;</a></span>PairingHeap()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>create a empty heap. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00205">205</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        :</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a>(0),</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>(<span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aa219dc574937f546b210dd0c04836219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa219dc574937f546b210dd0c04836219">&#9670;&nbsp;</a></span>~PairingHeap()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::~<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a012519defd709aacae622b276c3f85eb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a012519defd709aacae622b276c3f85eb">&#9670;&nbsp;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>erase all elements on the heap. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00411">411</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;                 {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a> = 0;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="preprocessor">#if OPENAGE_PAIRINGHEAP_DEBUG</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        this-&gt;nodes.clear();</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="eventstore_8cpp_source.xhtml#l00083">openage::event::EventStore::clear()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a012519defd709aacae622b276c3f85eb_icgraph.svg" width="394" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab94d37206816a45bcfe49f8631cc82a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab94d37206816a45bcfe49f8631cc82a9">&#9670;&nbsp;</a></span>decrease()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::decrease </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>You must call this after the node data decreased. This cuts the subtree and links the subtree again. If the node value <em>increased</em> and you call this, the heap is corrupted. Also known as the decrease_key operation.</p>
<p>O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00380">380</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                                         {</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(node != this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>)) {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;            <span class="comment">// cut out the node and its subtree</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            node-&gt;loosen();</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = node-&gt;link_with(this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        }</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        <span class="comment">// decreasing the root node won&#39;t change it, so we do nothing.</span></div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;    }</div><div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path::a_star()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_ab94d37206816a45bcfe49f8631cc82a9_icgraph.svg" width="100%" height="446"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a7a529d5ee64fa5002f6487d3821df5f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a529d5ee64fa5002f6487d3821df5f6">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::empty </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>whether there are no nodes stored on the heap. </dd></dl>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00429">429</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                       {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a> == 0;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path::a_star()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a7a529d5ee64fa5002f6487d3821df5f6_icgraph.svg" width="100%" height="446"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a59f56ca7e64a9a61213fb367da2be7ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59f56ca7e64a9a61213fb367da2be7ca">&#9670;&nbsp;</a></span>iter_all()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::iter_all </td>
          <td>(</td>
          <td class="paramtype">const std::function&lt; void(const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;)&gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00585">585</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;                                                                          {</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a95fa745e6a81de8caae638621137d504">walk_tree</a>(this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>, func);</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a95fa745e6a81de8caae638621137d504"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a95fa745e6a81de8caae638621137d504">openage::datastructure::PairingHeap::walk_tree</a></div><div class="ttdeci">void walk_tree(const element_t &amp;root, const std::function&lt; void(const element_t &amp;)&gt; &amp;func) const</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00590">pairing_heap.h:590</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac6bcfcb890dd8d546b1b4c466cf09009"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6bcfcb890dd8d546b1b4c466cf09009">&#9670;&nbsp;</a></span>pop()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::pop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns and removes the smallest item on the heap. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00236">236</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            {</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">pop_node</a>()-&gt;data);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    }</div><div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a17677ec830613746e38124b2eac7d2e6"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">openage::datastructure::PairingHeap::pop_node</a></div><div class="ttdeci">element_t pop_node()</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00246">pairing_heap.h:246</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path::a_star()</a>, and <a class="el" href="eventstore_8cpp_source.xhtml#l00028">openage::event::EventStore::pop()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_ac6bcfcb890dd8d546b1b4c466cf09009_icgraph.svg" width="100%" height="494"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a17677ec830613746e38124b2eac7d2e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17677ec830613746e38124b2eac7d2e6">&#9670;&nbsp;</a></span>pop_node()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::pop_node </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns the smallest item on the heap and deletes it. also known as delete_min.</p>
<hr/>
<p> Ω(log log n), O(2^(2*√log log n')) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00246">246</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                         {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;            <span class="keywordflow">throw</span> Error{<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Can&#39;t pop an empty heap!&quot;</span>};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">// 0. remove tree root, it&#39;s the minimum.</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> ret = this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> current_sibling = this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>-&gt;first_child;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="comment">// 1. link root children pairwise, last node may be alone</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> first_pair = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> previous_pair = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">while</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(current_sibling != <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> link0 = current_sibling;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;            <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> link1 = current_sibling-&gt;next_sibling;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="comment">// pair link0 and link1</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;            <span class="keywordflow">if</span> (link1 != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;                <span class="comment">// get the first sibling for next pair, just in advance.</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;                current_sibling = link1-&gt;next_sibling;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                <span class="comment">// do the link: merges two nodes, smaller one = root.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> link_root = link0-&gt;link_with(link1);</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;                link_root-&gt;parent = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="keywordflow">if</span> (previous_pair == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                    <span class="comment">// this was the first pair</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    first_pair = link_root;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    first_pair-&gt;prev_sibling = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keywordflow">else</span> {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                    <span class="comment">// store node as next sibling in previous pair</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;                    previous_pair-&gt;next_sibling = link_root;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                    link_root-&gt;prev_sibling = previous_pair;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                }</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                previous_pair = link_root;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;                link_root-&gt;next_sibling = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            }</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="comment">// link0 is the last and unpaired root child.</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                link0-&gt;parent = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                <span class="keywordflow">if</span> (previous_pair == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                    <span class="comment">// link0 was the only node</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;                    first_pair = link0;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;                    link0-&gt;prev_sibling = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;                    previous_pair-&gt;next_sibling = link0;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;                    link0-&gt;prev_sibling = previous_pair;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;                }</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;                link0-&gt;next_sibling = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                current_sibling = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;            }</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <span class="comment">// 2. then link remaining trees to the last one, from right to left</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">if</span> (first_pair != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = first_pair-&gt;link_backwards();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        }</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a> -= 1;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#if OPENAGE_PAIRINGHEAP_DEBUG</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">if</span> (1 != this-&gt;nodes.erase(ret)) {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordflow">throw</span> Error{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;didn&#39;t remove node&quot;</span>};</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <span class="comment">// (to find those two lines, 14h of debugging passed)</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        ret-&gt;loosen();</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        ret-&gt;first_child = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        <span class="comment">// and it&#39;s done!</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af89a07b90150d0d4606787f0ac202242"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">openage::datastructure::PairingHeap::element_t</a></div><div class="ttdeci">std::shared_ptr&lt; node_t &gt; element_t</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00198">pairing_heap.h:198</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00236">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::pop()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00334">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::unlink_node()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00397">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::update()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a17677ec830613746e38124b2eac7d2e6_icgraph.svg" width="442" height="271"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a75e9e7602b59aeee47a2fd84a10c8f74"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75e9e7602b59aeee47a2fd84a10c8f74">&#9670;&nbsp;</a></span>push() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::push </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>item</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>adds the given item to the heap. O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00217">217</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                  {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> new_node = std::make_shared&lt;node_t&gt;(item);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">push_node</a>(new_node);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keywordflow">return</span> new_node;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af89a07b90150d0d4606787f0ac202242"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">openage::datastructure::PairingHeap::element_t</a></div><div class="ttdeci">std::shared_ptr&lt; node_t &gt; element_t</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00198">pairing_heap.h:198</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a493b9b6b7e82fe0633df628a2aa248e7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">openage::datastructure::PairingHeap::push_node</a></div><div class="ttdeci">void push_node(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00613">pairing_heap.h:613</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path::a_star()</a>, <a class="el" href="datastructure_2tests_8cpp_source.xhtml#l00065">openage::datastructure::tests::pairing_heap_1()</a>, <a class="el" href="datastructure_2tests_8cpp_source.xhtml#l00112">openage::datastructure::tests::pairing_heap_2()</a>, <a class="el" href="datastructure_2tests_8cpp_source.xhtml#l00127">openage::datastructure::tests::pairing_heap_3()</a>, and <a class="el" href="eventstore_8cpp_source.xhtml#l00015">openage::event::EventStore::push()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a75e9e7602b59aeee47a2fd84a10c8f74_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a684440bcb0466bd64164e9fe7e9df954"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a684440bcb0466bd64164e9fe7e9df954">&#9670;&nbsp;</a></span>push() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::push </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>item</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>moves the given item to the heap. O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00227">227</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                             {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> new_node = std::make_shared&lt;node_t&gt;(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(item));</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">push_node</a>(new_node);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> new_node;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af89a07b90150d0d4606787f0ac202242"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">openage::datastructure::PairingHeap::element_t</a></div><div class="ttdeci">std::shared_ptr&lt; node_t &gt; element_t</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00198">pairing_heap.h:198</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a493b9b6b7e82fe0633df628a2aa248e7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">openage::datastructure::PairingHeap::push_node</a></div><div class="ttdeci">void push_node(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00613">pairing_heap.h:613</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a493b9b6b7e82fe0633df628a2aa248e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a493b9b6b7e82fe0633df628a2aa248e7">&#9670;&nbsp;</a></span>push_node()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::push_node </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>adds the given node to the heap. use this if the node was not in the heap before. O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00613">613</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;                                          {</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af0b5d27df523155450ae777c9aa40f20">root_insert</a>(node);</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;<span class="preprocessor">#if OPENAGE_PAIRINGHEAP_DEBUG</span></div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;        <span class="keyword">auto</span> ins = this-&gt;nodes.insert(node);</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordflow">if</span> (not ins.second) {</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keywordflow">throw</span> Error{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;node already known&quot;</span>};</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        }</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a> += 1;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af0b5d27df523155450ae777c9aa40f20"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af0b5d27df523155450ae777c9aa40f20">openage::datastructure::PairingHeap::root_insert</a></div><div class="ttdeci">void root_insert(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00629">pairing_heap.h:629</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00217">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::push()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00397">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::update()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a493b9b6b7e82fe0633df628a2aa248e7_icgraph.svg" width="448" height="176"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af0b5d27df523155450ae777c9aa40f20"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0b5d27df523155450ae777c9aa40f20">&#9670;&nbsp;</a></span>root_insert()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::root_insert </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>insert a node into the heap. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00629">629</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;                                            {</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = node;</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>-&gt;link_with(node);</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        }</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    }</div><div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00613">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::push_node()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00334">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::unlink_node()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_af0b5d27df523155450ae777c9aa40f20_icgraph.svg" width="447" height="176"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a45599db3b89b27ad5c53ca900a67df85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45599db3b89b27ad5c53ca900a67df85">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>the number of nodes stored on the heap. </dd></dl>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00422">422</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;                        {</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">node_count</a>;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a42a1379cfdaf1a7f2a5ff4da9544d9f7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a42a1379cfdaf1a7f2a5ff4da9544d9f7">openage::datastructure::PairingHeap::node_count</a></div><div class="ttdeci">size_t node_count</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00639">pairing_heap.h:639</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="eventstore_8cpp_source.xhtml#l00028">openage::event::EventStore::pop()</a>, and <a class="el" href="eventstore_8cpp_source.xhtml#l00015">openage::event::EventStore::push()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a45599db3b89b27ad5c53ca900a67df85_icgraph.svg" width="100%" height="510"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ad22ca21f8e7319ea14cd3e14cf5274c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad22ca21f8e7319ea14cd3e14cf5274c4">&#9670;&nbsp;</a></span>top()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T&amp; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::top </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the smallest item on the heap. O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00358">358</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;                         {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>-&gt;get_data();</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="eventstore_8cpp_source.xhtml#l00049">openage::event::EventStore::top()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_ad22ca21f8e7319ea14cd3e14cf5274c4_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a74c5545ea2c581782effc648a0ecefab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74c5545ea2c581782effc648a0ecefab">&#9670;&nbsp;</a></span>top_node()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a>&amp; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::top_node </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the smallest node on the heap.</p>
<p>O(1) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00367">367</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;                                      {</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a8f6c87e73e47397b92a2766989a30c0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f6c87e73e47397b92a2766989a30c0f">&#9670;&nbsp;</a></span>unlink_node()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::unlink_node </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Unlink a node from the heap.</p>
<p>If the item is the current root, just <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ac6bcfcb890dd8d546b1b4c466cf09009">pop()</a>. else, cut the node from its parent, <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#ac6bcfcb890dd8d546b1b4c466cf09009">pop()</a> that subtree and merge these trees.</p>
<p>O(pop_node) </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00334">334</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;                                            {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span> (node == this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>) {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">pop_node</a>();</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;            node-&gt;loosen();</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> real_root = this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = node;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">pop_node</a>();</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            <a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> new_root = this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a> = real_root;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            <span class="keywordflow">if</span> (new_root != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af0b5d27df523155450ae777c9aa40f20">root_insert</a>(new_root);</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;            }</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        }</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af89a07b90150d0d4606787f0ac202242"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">openage::datastructure::PairingHeap::element_t</a></div><div class="ttdeci">std::shared_ptr&lt; node_t &gt; element_t</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00198">pairing_heap.h:198</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_af0b5d27df523155450ae777c9aa40f20"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af0b5d27df523155450ae777c9aa40f20">openage::datastructure::PairingHeap::root_insert</a></div><div class="ttdeci">void root_insert(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00629">pairing_heap.h:629</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a17677ec830613746e38124b2eac7d2e6"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">openage::datastructure::PairingHeap::pop_node</a></div><div class="ttdeci">element_t pop_node()</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00246">pairing_heap.h:246</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="eventstore_8cpp_source.xhtml#l00054">openage::event::EventStore::erase()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00397">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::update()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a8f6c87e73e47397b92a2766989a30c0f_icgraph.svg" width="100%" height="410"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aab81daeebac3d236ced4a85117483d76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aab81daeebac3d236ced4a85117483d76">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::update </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>After a change, call this to reorganize the given node. Support increase and decrease of values.</p>
<p>Use <code>decrease</code> instead when you know the value decreased.</p>
<p>O(1) (but slower than decrease), and O(pop) when node is the root. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00397">397</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                                       {</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(node != this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">root_node</a>)) {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a8f6c87e73e47397b92a2766989a30c0f">unlink_node</a>(node);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">push_node</a>(node);</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;        }</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment">// it&#39;s the root node, so we just pop and push it.</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">push_node</a>(this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">pop_node</a>());</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;        }</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a8f6c87e73e47397b92a2766989a30c0f"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a8f6c87e73e47397b92a2766989a30c0f">openage::datastructure::PairingHeap::unlink_node</a></div><div class="ttdeci">void unlink_node(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00334">pairing_heap.h:334</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a17677ec830613746e38124b2eac7d2e6"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a17677ec830613746e38124b2eac7d2e6">openage::datastructure::PairingHeap::pop_node</a></div><div class="ttdeci">element_t pop_node()</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00246">pairing_heap.h:246</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a850aad20a2be9bfe164499a4462965b4"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a850aad20a2be9bfe164499a4462965b4">openage::datastructure::PairingHeap::root_node</a></div><div class="ttdeci">element_t root_node</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00640">pairing_heap.h:640</a></div></div>
<div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a493b9b6b7e82fe0633df628a2aa248e7"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a493b9b6b7e82fe0633df628a2aa248e7">openage::datastructure::PairingHeap::push_node</a></div><div class="ttdeci">void push_node(const element_t &amp;node)</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00613">pairing_heap.h:613</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="eventstore_8cpp_source.xhtml#l00067">openage::event::EventStore::update()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_aab81daeebac3d236ced4a85117483d76_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a95fa745e6a81de8caae638621137d504"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95fa745e6a81de8caae638621137d504">&#9670;&nbsp;</a></span>walk_tree()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::walk_tree </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::function&lt; void(const <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> &amp;)&gt; &amp;&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00590">590</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                                                                           {</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        func(root);</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="keywordflow">if</span> (root) {</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            <span class="keyword">auto</span> node = root-&gt;first_child;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                <span class="keywordflow">if</span> (not node) {</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;                }</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a95fa745e6a81de8caae638621137d504">walk_tree</a>(node, func);</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;                node = node-&gt;next_sibling;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;            }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        }</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    }</div><div class="ttc" id="classopenage_1_1datastructure_1_1_pairing_heap_xhtml_a95fa745e6a81de8caae638621137d504"><div class="ttname"><a href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#a95fa745e6a81de8caae638621137d504">openage::datastructure::PairingHeap::walk_tree</a></div><div class="ttdeci">void walk_tree(const element_t &amp;root, const std::function&lt; void(const element_t &amp;)&gt; &amp;func) const</div><div class="ttdef"><b>Definition:</b> <a href="pairing__heap_8h_source.xhtml#l00590">pairing_heap.h:590</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00585">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::iter_all()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00590">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::walk_tree()</a>.</p>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_a95fa745e6a81de8caae638621137d504_icgraph.svg" width="440" height="91"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a902a1342c704db376899206112ced595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a902a1342c704db376899206112ced595">&#9670;&nbsp;</a></span>cmp</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">compare <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::cmp</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00638">638</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a42a1379cfdaf1a7f2a5ff4da9544d9f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a1379cfdaf1a7f2a5ff4da9544d9f7">&#9670;&nbsp;</a></span>node_count</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::node_count</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00639">639</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00411">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::clear()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00429">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::empty()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00246">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::pop_node()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00613">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::push_node()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00422">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::size()</a>.</p>

</div>
</div>
<a id="a850aad20a2be9bfe164499a4462965b4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a850aad20a2be9bfe164499a4462965b4">&#9670;&nbsp;</a></span>root_node</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T, typename compare = std::less&lt;T&gt;, typename heapnode_t = PairingHeapNode&lt;T, compare&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml#af89a07b90150d0d4606787f0ac202242">element_t</a> <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">openage::datastructure::PairingHeap</a>&lt; T, compare, heapnode_t &gt;::root_node</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00640">640</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="pairing__heap_8h_source.xhtml#l00411">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::clear()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00380">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::decrease()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00585">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::iter_all()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00246">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::pop_node()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00629">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::root_insert()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00358">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::top()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00367">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::top_node()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00334">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::unlink_node()</a>, and <a class="el" href="pairing__heap_8h_source.xhtml#l00397">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;::update()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/datastructure/<a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1datastructure.xhtml">datastructure</a></li><li class="navelem"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
