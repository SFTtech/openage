<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::event::demo::ResetGame Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1event_1_1demo_1_1_reset_game.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classopenage_1_1event_1_1demo_1_1_reset_game-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::demo::ResetGame Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::event::demo::ResetGame:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_reset_game__inherit__graph.svg" width="194" height="500"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::event::demo::ResetGame:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_reset_game__coll__graph.svg" width="194" height="500"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a16a85582aadff8d8b2f796730ea76ed0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a16a85582aadff8d8b2f796730ea76ed0">ResetGame</a> ()</td></tr>
<tr class="separator:a16a85582aadff8d8b2f796730ea76ed0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f85b39bd4cd0b45ec66c681f5a3553e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a3f85b39bd4cd0b45ec66c681f5a3553e">setup_event</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;) override</td></tr>
<tr class="separator:a3f85b39bd4cd0b45ec66c681f5a3553e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa6b84fb64f30f1edd75d465876a2b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a0fa6b84fb64f30f1edd75d465876a2b3">invoke</a> (<a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;now, const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;) override</td></tr>
<tr class="separator:a0fa6b84fb64f30f1edd75d465876a2b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a2a9a5f92a673b2cef91dac21eab78"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a33a2a9a5f92a673b2cef91dac21eab78">predict_invoke_time</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;old_time) override</td></tr>
<tr class="separator:a33a2a9a5f92a673b2cef91dac21eab78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1event_1_1_once_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1event_1_1_once_event_class')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1event_1_1_once_event_class.xhtml">openage::event::OnceEventClass</a></td></tr>
<tr class="memitem:ac6408645e243f6d995ef42b2425eda80 inherit pub_methods_classopenage_1_1event_1_1_once_event_class"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_once_event_class.xhtml#ac6408645e243f6d995ef42b2425eda80">OnceEventClass</a> (const std::string &amp;name)</td></tr>
<tr class="separator:ac6408645e243f6d995ef42b2425eda80 inherit pub_methods_classopenage_1_1event_1_1_once_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a> (const std::string &amp;name, const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>)</td></tr>
<tr class="separator:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">~EventClass</a> ()=default</td></tr>
<tr class="separator:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">id</a> ()</td></tr>
<tr class="separator:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> { <br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">trigger_type::DEPENDENCY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">trigger_type::DEPENDENCY_IMMEDIATELY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">trigger_type::TRIGGER</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">trigger_type::REPEAT</a>, 
<br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">trigger_type::ONCE</a>
<br />
 }</td></tr>
<tr class="separator:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a></td></tr>
<tr class="separator:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00266">266</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a16a85582aadff8d8b2f796730ea76ed0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16a85582aadff8d8b2f796730ea76ed0">&#9670;&nbsp;</a></span>ResetGame()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::event::demo::ResetGame::ResetGame </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00268">268</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        :</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_once_event_class.xhtml#ac6408645e243f6d995ef42b2425eda80">OnceEventClass</a>(<span class="stringliteral">&quot;demo.reset&quot;</span>) {}</div><div class="ttc" id="classopenage_1_1event_1_1_once_event_class_xhtml_ac6408645e243f6d995ef42b2425eda80"><div class="ttname"><a href="classopenage_1_1event_1_1_once_event_class.xhtml#ac6408645e243f6d995ef42b2425eda80">openage::event::OnceEventClass::OnceEventClass</a></div><div class="ttdeci">OnceEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00043">eventclass.cpp:43</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0fa6b84fb64f30f1edd75d465876a2b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0fa6b84fb64f30f1edd75d465876a2b3">&#9670;&nbsp;</a></span>invoke()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::ResetGame::invoke </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;&#160;</td>
          <td class="paramname"><em>loop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This method implements the effects of the event. It will be called at the time that was determined by <code>predict_invoke_time</code>.</p>
<p>Called from the <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a>. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00275">275</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                                                       {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="comment">// Check if the condition still applies</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">if</span> (pos[0] &gt; 0 &amp;&amp; pos[0] &lt; state-&gt;display_boundary[0]) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="comment">// the gamestate is still valid - there is no need to reset</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="comment">// move ball to the center</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now - <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(0.1),</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                        state-&gt;ball-&gt;position-&gt;get(now));</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now, state-&gt;display_boundary * 0.5);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="comment">// move paddles to center</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        state-&gt;p1-&gt;position-&gt;set_last(now, state-&gt;display_boundary[1] / 2);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        state-&gt;p2-&gt;position-&gt;set_last(now, state-&gt;display_boundary[1] / 2);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordtype">float</span> dirx = (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 2) ? 1 : -1;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordtype">float</span> diry = (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 2) ? 1 : -1;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">auto</span> init_speed = <a class="code" href="namespaceopenage_1_1util.xhtml#a5759baf587738b4365920f5b944b0088">util::Vector2d</a>(</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            dirx * (10 + (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 100) / 4.f),</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            diry * (0.3 + (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 100) / 18.f)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        );</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        state-&gt;ball-&gt;speed-&gt;set_last(now, init_speed);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">int</span> cnt = 0;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            util::FString <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;Reset. Speed %f | %f POS %f | %f [%i]&quot;</span>,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    init_speed[0],</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    init_speed[1],</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    pos[0],</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    pos[1],</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                    ++cnt);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Game was reset.&quot;</span>);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="comment">// calculate the wall-hit-times</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">if</span> (init_speed[1] &gt; 0) {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[1] - pos[1]) / init_speed[1]);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        }</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (init_speed[1] &lt; 0) {</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[1] / -init_speed[1]);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="comment">// currently never happens, but this would be a non-vertically-moving ball</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="comment">// fallback to calculating panel-hit-times</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">if</span> (init_speed[0] &gt; 0) {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / init_speed[0]);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            }</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -init_speed[0]);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            }</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now + ty, pos + init_speed * ty.to_double());</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_ac3379af641e8c899794429fd6e8fa70a"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">openage::rng::random</a></div><div class="ttdeci">uint64_t random()</div><div class="ttdef"><b>Definition:</b> <a href="global__rng_8cpp_source.xhtml#l00018">global_rng.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a5759baf587738b4365920f5b944b0088"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a5759baf587738b4365920f5b944b0088">openage::util::Vector2d</a></div><div class="ttdeci">Vector&lt; 2, double &gt; Vector2d</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00225">vector.h:225</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml_af909cf1de79df6389fd9431b7424b48a"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">openage::curve::time_t</a></div><div class="ttdeci">util::FixedPoint&lt; int64_t, 16 &gt; time_t</div><div class="ttdef"><b>Definition:</b> <a href="curve_8h_source.xhtml#l00016">curve.h:16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00192">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double()</a>, <a class="el" href="message_8h_source.xhtml#l00177">INFO</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="global__rng_8cpp_source.xhtml#l00018">openage::rng::random()</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00331">openage::py::str()</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00263">openage::util::FixedPoint&lt; int_type, fractional_bits &gt;::to_double()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_reset_game_a0fa6b84fb64f30f1edd75d465876a2b3_cgraph.svg" width="100%" height="547"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a33a2a9a5f92a673b2cef91dac21eab78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33a2a9a5f92a673b2cef91dac21eab78">&#9670;&nbsp;</a></span>predict_invoke_time()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> openage::event::demo::ResetGame::predict_invoke_time </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>at</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Is called to calculate the execution time for an event of this eventclass. This is called whenever one of the set up dependencies was changed, or when a REPEAT event was executed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>the target the event was created for </td></tr>
    <tr><td class="paramname">state</td><td>the state this shall work on </td></tr>
    <tr><td class="paramname">at</td><td>the time when the change happened, from there on it shall be calculated onwards</td></tr>
  </table>
  </dd>
</dl>
<p>If the event is obsolete, return &lt;time_t&gt;<a class="el" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min()</a>.</p>
<p>If the time is lower than the previous time, then dependencies may not be resolved perfectly anymore (if other events have already been calculated before that). </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00354">354</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                                                            {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">return</span> old_time;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<a id="a3f85b39bd4cd0b45ec66c681f5a3553e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f85b39bd4cd0b45ec66c681f5a3553e">&#9670;&nbsp;</a></span>setup_event()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::ResetGame::setup_event </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called for each event that is created for this <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a>. The job of the setup function is to add all dependencies with other event targets found in state. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00272">272</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                                                             {}</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/demo/<a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml">demo</a></li><li class="navelem"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml">ResetGame</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
