<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/util/fslike/test.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('util_2fslike_2test_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">test.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="util_2fslike_2test_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2017-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">Tests for the filesystem-like abstraction.</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> io <span class="keyword">import</span> UnsupportedOperation</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> tempfile <span class="keyword">import</span> gettempdir, NamedTemporaryFile</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml">openage.testing.testing</a> <span class="keyword">import</span> assert_value, assert_raises, result</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">from</span> .directory <span class="keyword">import</span> Directory, CaseIgnoringDirectory</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">from</span> .union <span class="keyword">import</span> Union</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">from</span> .wrapper <span class="keyword">import</span> WriteBlocker, DirectoryCreator</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#abdc25f4997b11676ec4700a8cb2b100b">test_path</a>(root_path, root_dir):</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">    Test basic functionality of fslike.Path</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#abdc25f4997b11676ec4700a8cb2b100b">   23</a></span>&#160;    <span class="comment"># multi dir creation</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    deeper = (root_path / <span class="stringliteral">&quot;let&#39;s go&quot;</span> / <span class="stringliteral">&quot;deeper&quot;</span>)</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(deeper.parent, root_path[<span class="stringliteral">&quot;let&#39;s go&quot;</span>])</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    deeper.mkdirs()</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(deeper.is_dir(), <span class="keyword">True</span>)</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(deeper.resolve_native_path().decode(),</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                 os.path.join(root_dir, <span class="stringliteral">&quot;let&#39;s go&quot;</span>, <span class="stringliteral">&quot;deeper&quot;</span>))</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    insert = deeper[<span class="stringliteral">&quot;insertion.stuff.test&quot;</span>]</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    insert.touch()</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.filesize, 0)</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.suffix, <span class="stringliteral">&quot;.test&quot;</span>)</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.suffixes, [<span class="stringliteral">&quot;.stuff&quot;</span>, <span class="stringliteral">&quot;.test&quot;</span>])</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.stem, <span class="stringliteral">&quot;insertion.stuff&quot;</span>)</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.with_name(<span class="stringliteral">&quot;insertion.stuff.test&quot;</span>).exists(), <span class="keyword">True</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(insert.with_suffix(<span class="stringliteral">&quot;.test&quot;</span>).exists(), <span class="keyword">True</span>)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    root_path[<span class="stringliteral">&quot;let&#39;s go&quot;</span>].removerecursive()</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#acb02a5c9b3b2064338f1e207ea4491cb">test_union</a>(root_path, root_dir):</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">    Union functionality testing.</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">    Procedure:</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="stringliteral">    create and write a file in r</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="stringliteral">    create union with w and r mount. r is readonly.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="stringliteral">    read file, should be from r.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="stringliteral">    write file, whould go to w.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">    read file, should be from w.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">    unmount w, file content should be from r again.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">    unmount r, union should be empty now.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#acb02a5c9b3b2064338f1e207ea4491cb">   57</a></span>&#160;    test_dir_w = os.path.join(root_dir, <span class="stringliteral">&quot;w&quot;</span>)</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    test_dir_r = os.path.join(root_dir, <span class="stringliteral">&quot;r&quot;</span>)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="comment"># automated directory creation:</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    path_w = <a class="code" href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_directory_creator.xhtml">DirectoryCreator</a>(</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">Directory</a>(test_dir_w, create_if_missing=<span class="keyword">True</span>).root</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    ).root</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    path_r = <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">Directory</a>(test_dir_r, create_if_missing=<span class="keyword">True</span>).root</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r[<span class="stringliteral">&quot;some_file&quot;</span>].is_file(), <span class="keyword">False</span>)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keyword">with</span> path_r[<span class="stringliteral">&quot;some_file&quot;</span>].open(<span class="stringliteral">&quot;wb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        fil.write(b<span class="stringliteral">&quot;some data&quot;</span>)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">with</span> path_r[<span class="stringliteral">&quot;some_file&quot;</span>].open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(b<span class="stringliteral">&quot;some data&quot;</span>, fil.read())</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r.exists(), <span class="keyword">True</span>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r.is_dir(), <span class="keyword">True</span>)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r.is_file(), <span class="keyword">False</span>)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r[<span class="stringliteral">&quot;some_file&quot;</span>].is_file(), <span class="keyword">True</span>)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_r.writable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment"># protect the r-path</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    path_protected = <a class="code" href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_write_blocker.xhtml">WriteBlocker</a>(path_r).root</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(path_protected.writable(), <span class="keyword">False</span>)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keyword">with</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">assert_raises</a>(UnsupportedOperation):</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>(path_protected.open(<span class="stringliteral">&#39;wb&#39;</span>))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="comment"># mount the above into one virtual file system</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    target = <a class="code" href="classopenage_1_1util_1_1fslike_1_1union_1_1_union.xhtml">Union</a>().root</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment"># first, mount the read-directory read-only</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    target.mount(path_protected)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment"># then, mount the writable folder</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    target.mount(path_w)</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="comment"># read the data</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keyword">with</span> target[<span class="stringliteral">&quot;some_file&quot;</span>].open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        test_data = fil.read()</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment"># overwrite the data:</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keyword">with</span> target[<span class="stringliteral">&quot;some_file&quot;</span>].open(<span class="stringliteral">&quot;wb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        fil.write(b<span class="stringliteral">&quot;we changed it&quot;</span>)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment"># get back changed data</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">with</span> target[<span class="stringliteral">&quot;some_file&quot;</span>].open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        changed_test_data = fil.read()</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(test_data != changed_test_data, <span class="keyword">True</span>)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(changed_test_data, b<span class="stringliteral">&quot;we changed it&quot;</span>)</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment"># ther should be nothing else here.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(set(root_path.list()), {b<span class="stringliteral">&quot;r&quot;</span>, b<span class="stringliteral">&quot;w&quot;</span>})</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment"># unmount the change-overlay</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    target.unmount(path_w)</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">with</span> (target / <span class="stringliteral">&quot;some_file&quot;</span>).open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        unchanged_test_data = fil.read()</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(test_data, unchanged_test_data)</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="comment"># unmount the source-overlay:</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    target.unmount()</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment"># now the target mount should be completely empty.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(target[<span class="stringliteral">&quot;some_file&quot;</span>].exists(), <span class="keyword">False</span>)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(target.list()), [])</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(len(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(target.iterdir())), 0)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a3570d988a38ccde1cdadbab30edada49">is_filesystem_case_sensitive</a>():</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">    Utility function to verify if filesystem is case-sensitive.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a3570d988a38ccde1cdadbab30edada49">  137</a></span>&#160;    <span class="keyword">with</span> NamedTemporaryFile() <span class="keyword">as</span> tmpf:</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <span class="comment"># we now have a file with a &quot;tmp&quot; prefixed name</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="comment"># if it exists in upper case also, filesystem is not case-sensitive</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">return</span> <span class="keywordflow">not</span> os.path.exists(tmpf.name.upper())</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a2cb9e1c2163a7d9dcb6be195cdf17065">test_case_ignoring</a>(root_path, root_dir):</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">    Test the case ignoring directory,</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">    which mimics the windows filename selection behavior.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a2cb9e1c2163a7d9dcb6be195cdf17065">  149</a></span>&#160;    <span class="comment"># create a file with known name</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;lemme_in&quot;</span>].open(<span class="stringliteral">&quot;wb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        fil.write(b<span class="stringliteral">&quot;pwnt&quot;</span>)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    ignorecase_dir = <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory.xhtml">CaseIgnoringDirectory</a>(root_dir).root</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment"># open it with wrong-case name</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">with</span> ignorecase_dir[<span class="stringliteral">&quot;LeMmE_In&quot;</span>].open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.readable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.writable(), <span class="keyword">False</span>)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.read(), b<span class="stringliteral">&quot;pwnt&quot;</span>)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="comment"># then write it with wrong-case name</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">with</span> ignorecase_dir[<span class="stringliteral">&quot;LeMmE_In&quot;</span>].open(<span class="stringliteral">&quot;wb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.readable(), <span class="keyword">False</span>)</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.writable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        fil.write(b<span class="stringliteral">&quot;yay&quot;</span>)</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="comment"># check if changes went to known-name file</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;lemme_in&quot;</span>].open(<span class="stringliteral">&quot;rb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.read(), b<span class="stringliteral">&quot;yay&quot;</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="comment"># create new file with CamelCase name</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ignorecase_dir[<span class="stringliteral">&quot;WeirdCase&quot;</span>].touch()</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="comment"># check if the CamelCase file was actually created as `camelcase`</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(root_path[<span class="stringliteral">&quot;weirdcase&quot;</span>].is_file(), <span class="keyword">True</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment"># touching the same file</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    root_path[<span class="stringliteral">&quot;a&quot;</span>].touch()</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    ignorecase_dir[<span class="stringliteral">&quot;A&quot;</span>].touch()</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">if</span> <a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a3570d988a38ccde1cdadbab30edada49">is_filesystem_case_sensitive</a>():</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="comment"># &#39;A&#39; should not exist, &#39;a&#39; should have been touched.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(root_path[<span class="stringliteral">&quot;A&quot;</span>].is_file(), <span class="keyword">False</span>)</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="comment"># The underlying fs should treat A as a.</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(root_path[<span class="stringliteral">&quot;A&quot;</span>].is_file(), <span class="keyword">True</span>)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a42f102b9063e2b2d0938d8ccf1d03e59">test_append</a>(root_path):</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="stringliteral">    Test the content append modes.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a42f102b9063e2b2d0938d8ccf1d03e59">  194</a></span>&#160;    <span class="comment"># create initial content</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;appendfile&quot;</span>].open(<span class="stringliteral">&quot;wb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        fil.write(b<span class="stringliteral">&quot;just&quot;</span>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment"># append some data</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;appendfile&quot;</span>].open(<span class="stringliteral">&quot;ab&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.readable(), <span class="keyword">False</span>)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.writable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        fil.write(b<span class="stringliteral">&quot; some&quot;</span>)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment"># append some more data and then read it</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;appendfile&quot;</span>].open(<span class="stringliteral">&quot;arb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.readable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.writable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        fil.write(b<span class="stringliteral">&quot; test&quot;</span>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment"># use the read-write mode to first read, then write, then read.</span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keyword">with</span> root_path[<span class="stringliteral">&quot;appendfile&quot;</span>].open(<span class="stringliteral">&quot;rwb&quot;</span>) <span class="keyword">as</span> fil:</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.readable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.writable(), <span class="keyword">True</span>)</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.read(), b<span class="stringliteral">&quot;just some test&quot;</span>)</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        fil.seek(0)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        fil.write(b<span class="stringliteral">&quot;overwritten&quot;</span>)</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        fil.seek(0)</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(fil.read(), b<span class="stringliteral">&quot;overwrittenest&quot;</span>)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#ab7e67abca763ba5d40533133b92cfde4">test</a>():</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="stringliteral">    Perform functionality tests for the filesystem abstraction interface.</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#ab7e67abca763ba5d40533133b92cfde4">  227</a></span>&#160;    <span class="comment"># create a clean test folder in /tmp</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    root_dir = os.path.join(gettempdir(), <span class="stringliteral">&quot;openage_fslike_test&quot;</span>)</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    root_path = <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">Directory</a>(root_dir, create_if_missing=<span class="keyword">True</span>).root</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    root_path.removerecursive()</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment"># test basic path functions</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#abdc25f4997b11676ec4700a8cb2b100b">test_path</a>(root_path, root_dir)</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment"># test the union</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#acb02a5c9b3b2064338f1e207ea4491cb">test_union</a>(root_path, root_dir)</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <span class="comment"># test the case ignoring dir</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    <a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a2cb9e1c2163a7d9dcb6be195cdf17065">test_case_ignoring</a>(root_path, root_dir)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="comment"># test appending content</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <a class="code" href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a42f102b9063e2b2d0938d8ccf1d03e59">test_append</a>(root_path)</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="comment"># and remove all the things we just created</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(root_path.is_dir(), <span class="keyword">True</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    root_path.removerecursive()</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(root_path.is_dir(), <span class="keyword">False</span>)</div><div class="ttc" id="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">openage::util::fslike.directory.Directory</a></div><div class="ttdoc">Provides an actual file system directory's contents as-they-are.</div><div class="ttdef"><b>Definition:</b> <a href="directory_8py_source.xhtml#l00023">directory.py:23</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_a42f102b9063e2b2d0938d8ccf1d03e59"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a42f102b9063e2b2d0938d8ccf1d03e59">openage::util::fslike.test.test_append</a></div><div class="ttdeci">def test_append(root_path)</div><div class="ttdoc">Test the content append modes.</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00194">test.py:194</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_write_blocker_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_write_blocker.xhtml">openage::util::fslike.wrapper.WriteBlocker</a></div><div class="ttdoc">Wraps a FSLikeObject, transparently passing through all read-only calls.</div><div class="ttdef"><b>Definition:</b> <a href="wrapper_8py_source.xhtml#l00133">wrapper.py:133</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_ab7e67abca763ba5d40533133b92cfde4"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#ab7e67abca763ba5d40533133b92cfde4">openage::util::fslike.test.test</a></div><div class="ttdeci">def test()</div><div class="ttdoc">Perform functionality tests for the filesystem abstraction interface.</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00227">test.py:227</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1union_1_1_union_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1union_1_1_union.xhtml">openage::util::fslike.union.Union</a></div><div class="ttdoc">FSLikeObject that provides a structure for mounting several path objects.</div><div class="ttdef"><b>Definition:</b> <a href="union_8py_source.xhtml#l00024">union.py:24</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_a2cb9e1c2163a7d9dcb6be195cdf17065"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a2cb9e1c2163a7d9dcb6be195cdf17065">openage::util::fslike.test.test_case_ignoring</a></div><div class="ttdeci">def test_case_ignoring(root_path, root_dir)</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00149">test.py:149</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a1e253d6f2b396e2a0162c7b1c8ab36d9"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">openage::testing.testing.assert_raises</a></div><div class="ttdeci">def assert_raises(expectedexception)</div><div class="ttdoc">Context guard that asserts that a certain exception is raised inside.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00061">testing.py:61</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_acb02a5c9b3b2064338f1e207ea4491cb"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#acb02a5c9b3b2064338f1e207ea4491cb">openage::util::fslike.test.test_union</a></div><div class="ttdeci">def test_union(root_path, root_dir)</div><div class="ttdoc">Union functionality testing.</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00057">test.py:57</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_a3570d988a38ccde1cdadbab30edada49"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#a3570d988a38ccde1cdadbab30edada49">openage::util::fslike.test.is_filesystem_case_sensitive</a></div><div class="ttdeci">def is_filesystem_case_sensitive()</div><div class="ttdoc">Utility function to verify if filesystem is case-sensitive.</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00137">test.py:137</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml">openage::testing.testing</a></div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00001">testing.py:1</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory.xhtml">openage::util::fslike.directory.CaseIgnoringDirectory</a></div><div class="ttdef"><b>Definition:</b> <a href="directory_8py_source.xhtml#l00131">directory.py:131</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_1_1test_xhtml_abdc25f4997b11676ec4700a8cb2b100b"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike_1_1test.xhtml#abdc25f4997b11676ec4700a8cb2b100b">openage::util::fslike.test.test_path</a></div><div class="ttdeci">def test_path(root_path, root_dir)</div><div class="ttdoc">Test basic functionality of fslike.Path.</div><div class="ttdef"><b>Definition:</b> <a href="util_2fslike_2test_8py_source.xhtml#l00023">test.py:23</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_directory_creator_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_directory_creator.xhtml">openage::util::fslike.wrapper.DirectoryCreator</a></div><div class="ttdef"><b>Definition:</b> <a href="wrapper_8py_source.xhtml#l00212">wrapper.py:212</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a2800c6619c18337197b7ad519bbad072"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">openage::testing.testing.assert_value</a></div><div class="ttdeci">def assert_value(value, expected=None, validator=None)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00025">testing.py:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_add32c31ab2cc20d9f874152de79d6bd.xhtml">util</a></li><li class="navelem"><a class="el" href="dir_27df8148534951a46b0bbda2d3cc819a.xhtml">fslike</a></li><li class="navelem"><a class="el" href="util_2fslike_2test_8py.xhtml">test.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
