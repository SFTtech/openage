<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::renderer::opengl Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1renderer_1_1opengl.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">openage::renderer::opengl Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml">gl_context_capabilities</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores information about context capabilities and limitations.  <a href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer.xhtml">GlBuffer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_context.xhtml">GlContext</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Manages an OpenGL context.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_context.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer.xhtml">GlFramebuffer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml">GlGeometry</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The OpenGL class representing geometry to be passed to a draw call.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_renderer.xhtml">GlRenderer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The OpenGL specialization of the rendering interface.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_renderer.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_render_target.xhtml">GlRenderTarget</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader.xhtml">GlShader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A single OpenGL shader stage.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml">GlShaderProgram</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A handle to an OpenGL shader program.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_shader_program.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object.xhtml">GlSimpleObject</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_texture2d.xhtml">GlTexture2d</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A handle to an OpenGL texture.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_texture2d.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_texture2d_array.xhtml">GlTexture2dArray</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">An OpenGL array of 2D textures.  <a href="classopenage_1_1renderer_1_1opengl_1_1_gl_texture2d_array.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml">GlUniformInput</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes OpenGL-specific uniform valuations.  <a href="structopenage_1_1renderer_1_1opengl_1_1_gl_uniform_input.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_vertex_array.xhtml">GlVertexArray</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1opengl_1_1_gl_window.xhtml">GlWindow</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ad1f4c31e62d9a587e7ac96e407166a2e"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#ad1f4c31e62d9a587e7ac96e407166a2e">gl_render_target_t</a> { <a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#ad1f4c31e62d9a587e7ac96e407166a2eaebf78b512222fe4dcd14e7d5060a15b0">gl_render_target_t::display</a>, 
<a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#ad1f4c31e62d9a587e7ac96e407166a2eac5e62798e528da9080811018cbb27cd3">gl_render_target_t::textures</a>
 }</td></tr>
<tr class="memdesc:ad1f4c31e62d9a587e7ac96e407166a2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of OpenGL render target.  <a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#ad1f4c31e62d9a587e7ac96e407166a2e">More...</a><br /></td></tr>
<tr class="separator:ad1f4c31e62d9a587e7ac96e407166a2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a9c2d5be08671cd8ffbd6c4ce668f1007"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml">gl_context_capabilities</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9c2d5be08671cd8ffbd6c4ce668f1007">find_capabilities</a> ()</td></tr>
<tr class="memdesc:a9c2d5be08671cd8ffbd6c4ce668f1007"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds out the supported graphics functions and OpenGL version of the device.  <a href="#a9c2d5be08671cd8ffbd6c4ce668f1007">More...</a><br /></td></tr>
<tr class="separator:a9c2d5be08671cd8ffbd6c4ce668f1007"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a870cc53f47bfd0a6398f23667fa2d2e3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a870cc53f47bfd0a6398f23667fa2d2e3">check_program_status</a> (GLuint program, GLenum what_to_check)</td></tr>
<tr class="separator:a870cc53f47bfd0a6398f23667fa2d2e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a0adf6c549e016db9b38f7384cf6f9619"><td class="memItemLeft" align="right" valign="top">static constexpr std::array&lt; std::pair&lt; int, int &gt;, 1 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a0adf6c549e016db9b38f7384cf6f9619">gl_versions</a> = {{ { 3, 3 } }}</td></tr>
<tr class="memdesc:a0adf6c549e016db9b38f7384cf6f9619"><td class="mdescLeft">&#160;</td><td class="mdescRight">The first element is the lowest version we need, last is highest version we support.  <a href="#a0adf6c549e016db9b38f7384cf6f9619">More...</a><br /></td></tr>
<tr class="separator:a0adf6c549e016db9b38f7384cf6f9619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af985a42adb068819071031f365ba5cc8"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#af985a42adb068819071031f365ba5cc8">GL_PIXEL_FORMAT</a></td></tr>
<tr class="memdesc:af985a42adb068819071031f365ba5cc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Input and output pixel formats from pixel_format.  <a href="#af985a42adb068819071031f365ba5cc8">More...</a><br /></td></tr>
<tr class="separator:af985a42adb068819071031f365ba5cc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9105a627b5951e8d1fbcae421166407f"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a9105a627b5951e8d1fbcae421166407f">GL_SHADER_TYPE_SIZE</a></td></tr>
<tr class="memdesc:a9105a627b5951e8d1fbcae421166407f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sizes of various uniform/vertex input types in shaders.  <a href="#a9105a627b5951e8d1fbcae421166407f">More...</a><br /></td></tr>
<tr class="separator:a9105a627b5951e8d1fbcae421166407f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90b98ae7a652b647771a559e61cb5e56"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a90b98ae7a652b647771a559e61cb5e56">GLSL_TYPE_NAME</a></td></tr>
<tr class="memdesc:a90b98ae7a652b647771a559e61cb5e56"><td class="mdescLeft">&#160;</td><td class="mdescRight">GL types with corresponding GLSL type strings.  <a href="#a90b98ae7a652b647771a559e61cb5e56">More...</a><br /></td></tr>
<tr class="separator:a90b98ae7a652b647771a559e61cb5e56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2367c8152b9e322f4177cb25dfd35359"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a2367c8152b9e322f4177cb25dfd35359">GL_VERT_IN_TYPE</a></td></tr>
<tr class="memdesc:a2367c8152b9e322f4177cb25dfd35359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generic vertex input types from GL types.  <a href="#a2367c8152b9e322f4177cb25dfd35359">More...</a><br /></td></tr>
<tr class="separator:a2367c8152b9e322f4177cb25dfd35359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96240e46c046c93700788844c906a684"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a></td></tr>
<tr class="memdesc:a96240e46c046c93700788844c906a684"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of a single element in a per-vertex attribute.  <a href="#a96240e46c046c93700788844c906a684">More...</a><br /></td></tr>
<tr class="separator:a96240e46c046c93700788844c906a684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1c08cb649fac64ab09cba708fa5cdba"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#aa1c08cb649fac64ab09cba708fa5cdba">GL_PRIMITIVE</a></td></tr>
<tr class="memdesc:aa1c08cb649fac64ab09cba708fa5cdba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mapping from generic primitive types to GL types.  <a href="#aa1c08cb649fac64ab09cba708fa5cdba">More...</a><br /></td></tr>
<tr class="separator:aa1c08cb649fac64ab09cba708fa5cdba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ea3d4a79deb9b17eb3acb0e9ff12681"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a4ea3d4a79deb9b17eb3acb0e9ff12681">GL_INDEX_TYPE</a></td></tr>
<tr class="memdesc:a4ea3d4a79deb9b17eb3acb0e9ff12681"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mapping from generic index types to GL types.  <a href="#a4ea3d4a79deb9b17eb3acb0e9ff12681">More...</a><br /></td></tr>
<tr class="separator:a4ea3d4a79deb9b17eb3acb0e9ff12681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5bd688a2e55a9c7ba1377e213383de8"><td class="memItemLeft" align="right" valign="top">static constexpr auto&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#aa5bd688a2e55a9c7ba1377e213383de8">gl_shdr_type</a></td></tr>
<tr class="separator:aa5bd688a2e55a9c7ba1377e213383de8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ad1f4c31e62d9a587e7ac96e407166a2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1f4c31e62d9a587e7ac96e407166a2e">&#9670;&nbsp;</a></span>gl_render_target_t</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#ad1f4c31e62d9a587e7ac96e407166a2e">openage::renderer::opengl::gl_render_target_t</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The type of OpenGL render target. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ad1f4c31e62d9a587e7ac96e407166a2eaebf78b512222fe4dcd14e7d5060a15b0"></a>display&#160;</td><td class="fielddoc"><p>The actual window. This is visible to the user after swapping front and back buffers. </p>
</td></tr>
<tr><td class="fieldname"><a id="ad1f4c31e62d9a587e7ac96e407166a2eac5e62798e528da9080811018cbb27cd3"></a>textures&#160;</td><td class="fielddoc"><p>A bunch of textures. </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="opengl_2render__target_8h_source.xhtml#l00017">17</a> of file <a class="el" href="opengl_2render__target_8h_source.xhtml">render_target.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a870cc53f47bfd0a6398f23667fa2d2e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a870cc53f47bfd0a6398f23667fa2d2e3">&#9670;&nbsp;</a></span>check_program_status()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void openage::renderer::opengl::check_program_status </td>
          <td>(</td>
          <td class="paramtype">GLuint&#160;</td>
          <td class="paramname"><em>program</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">GLenum&#160;</td>
          <td class="paramname"><em>what_to_check</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="shader__program_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="shader__program_8cpp_source.xhtml">shader_program.cpp</a>.</p>

</div>
</div>
<a id="a9c2d5be08671cd8ffbd6c4ce668f1007"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c2d5be08671cd8ffbd6c4ce668f1007">&#9670;&nbsp;</a></span>find_capabilities()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="structopenage_1_1renderer_1_1opengl_1_1gl__context__capabilities.xhtml">gl_context_capabilities</a> openage::renderer::opengl::find_capabilities </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Finds out the supported graphics functions and OpenGL version of the device. </p>

<p class="definition">Definition at line <a class="el" href="context_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="context_8cpp_source.xhtml">context.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a4ea3d4a79deb9b17eb3acb0e9ff12681"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ea3d4a79deb9b17eb3acb0e9ff12681">&#9670;&nbsp;</a></span>GL_INDEX_TYPE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_INDEX_TYPE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;resources::index_t, GLenum&gt;(</div><div class="line">    std::pair(resources::index_t::U8, GL_UNSIGNED_BYTE),</div><div class="line">    std::pair(resources::index_t::U16, GL_UNSIGNED_SHORT),</div><div class="line">    std::pair(resources::index_t::U32, GL_UNSIGNED_INT)</div><div class="line">)</div></div><!-- fragment -->
<p>Mapping from generic index types to GL types. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00150">150</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="af985a42adb068819071031f365ba5cc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af985a42adb068819071031f365ba5cc8">&#9670;&nbsp;</a></span>GL_PIXEL_FORMAT</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_PIXEL_FORMAT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;resources::pixel_format, std::tuple&lt;GLint, GLenum, GLenum&gt;&gt;(</div><div class="line">    </div><div class="line">    std::pair(resources::pixel_format::r16ui, std::tuple(GL_R16UI, GL_RED_INTEGER, GL_UNSIGNED_INT)),</div><div class="line">    std::pair(resources::pixel_format::r32ui, std::tuple(GL_R32UI, GL_RED_INTEGER, GL_UNSIGNED_INT)),</div><div class="line">    std::pair(resources::pixel_format::rgb8, std::tuple(GL_RGB8, GL_RGB, GL_UNSIGNED_BYTE)),</div><div class="line">    std::pair(resources::pixel_format::bgr8, std::tuple(GL_RGB8, GL_BGR, GL_UNSIGNED_BYTE)),</div><div class="line">    std::pair(resources::pixel_format::rgba8, std::tuple(GL_RGBA8, GL_RGBA, GL_UNSIGNED_BYTE)),</div><div class="line">    std::pair(resources::pixel_format::rgba8ui, std::tuple(GL_RGBA8UI, GL_RGBA_INTEGER, GL_UNSIGNED_BYTE)),</div><div class="line">    std::pair(resources::pixel_format::depth24, std::tuple(GL_DEPTH_COMPONENT, GL_DEPTH_COMPONENT, GL_UNSIGNED_BYTE))</div><div class="line">)</div></div><!-- fragment -->
<p>Input and output pixel formats from pixel_format. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00019">19</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="aa1c08cb649fac64ab09cba708fa5cdba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1c08cb649fac64ab09cba708fa5cdba">&#9670;&nbsp;</a></span>GL_PRIMITIVE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_PRIMITIVE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;resources::vertex_primitive_t, GLenum&gt;(</div><div class="line">    std::pair(resources::vertex_primitive_t::POINTS, GL_POINTS),</div><div class="line">    std::pair(resources::vertex_primitive_t::LINES, GL_LINES),</div><div class="line">    std::pair(resources::vertex_primitive_t::LINE_STRIP, GL_LINE_STRIP),</div><div class="line">    std::pair(resources::vertex_primitive_t::TRIANGLES, GL_TRIANGLES),</div><div class="line">    std::pair(resources::vertex_primitive_t::TRIANGLE_STRIP, GL_TRIANGLE_STRIP),</div><div class="line">    std::pair(resources::vertex_primitive_t::TRIANGLE_FAN, GL_TRIANGLE_FAN)</div><div class="line">)</div></div><!-- fragment -->
<p>Mapping from generic primitive types to GL types. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00140">140</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="a9105a627b5951e8d1fbcae421166407f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9105a627b5951e8d1fbcae421166407f">&#9670;&nbsp;</a></span>GL_SHADER_TYPE_SIZE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_SHADER_TYPE_SIZE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;GLenum, size_t&gt;(</div><div class="line">    std::pair(GL_FLOAT, 4),</div><div class="line">    std::pair(GL_FLOAT_VEC2, 8),</div><div class="line">    std::pair(GL_FLOAT_VEC3, 12),</div><div class="line">    std::pair(GL_FLOAT_VEC4, 16),</div><div class="line">    std::pair(GL_INT, 4),</div><div class="line">    std::pair(GL_INT_VEC2, 8),</div><div class="line">    std::pair(GL_INT_VEC3, 12),</div><div class="line">    std::pair(GL_INT_VEC4, 16),</div><div class="line">    std::pair(GL_UNSIGNED_INT, 4),</div><div class="line">    std::pair(GL_UNSIGNED_INT_VEC2, 8),</div><div class="line">    std::pair(GL_UNSIGNED_INT_VEC3, 12),</div><div class="line">    std::pair(GL_UNSIGNED_INT_VEC4, 16),</div><div class="line">    std::pair(GL_BOOL, 1),</div><div class="line">    std::pair(GL_BOOL_VEC2, 2),</div><div class="line">    std::pair(GL_BOOL_VEC3, 3),</div><div class="line">    std::pair(GL_BOOL_VEC4, 4),</div><div class="line">    std::pair(GL_FLOAT_MAT2, 16),</div><div class="line">    std::pair(GL_FLOAT_MAT3, 36),</div><div class="line">    std::pair(GL_FLOAT_MAT4, 64),</div><div class="line">    std::pair(GL_SAMPLER_1D, 4),</div><div class="line">    std::pair(GL_SAMPLER_2D, 4),</div><div class="line">    std::pair(GL_SAMPLER_2D_ARRAY, 4),</div><div class="line">    std::pair(GL_SAMPLER_3D, 4),</div><div class="line">    std::pair(GL_SAMPLER_CUBE, 4)</div><div class="line">)</div></div><!-- fragment -->
<p>Sizes of various uniform/vertex input types in shaders. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00031">31</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="aa5bd688a2e55a9c7ba1377e213383de8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5bd688a2e55a9c7ba1377e213383de8">&#9670;&nbsp;</a></span>gl_shdr_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::gl_shdr_type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;resources::shader_stage_t, GLenum&gt;(</div><div class="line">    std::make_pair(resources::shader_stage_t::vertex, GL_VERTEX_SHADER),</div><div class="line">    std::make_pair(resources::shader_stage_t::geometry, GL_GEOMETRY_SHADER),</div><div class="line">    std::make_pair(resources::shader_stage_t::tesselation_control, GL_TESS_CONTROL_SHADER),</div><div class="line">    std::make_pair(resources::shader_stage_t::tesselation_evaluation, GL_TESS_EVALUATION_SHADER),</div><div class="line">    std::make_pair(resources::shader_stage_t::fragment, GL_FRAGMENT_SHADER)</div><div class="line">)</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="renderer_2opengl_2shader_8cpp_source.xhtml#l00012">12</a> of file <a class="el" href="renderer_2opengl_2shader_8cpp_source.xhtml">shader.cpp</a>.</p>

</div>
</div>
<a id="a0adf6c549e016db9b38f7384cf6f9619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0adf6c549e016db9b38f7384cf6f9619">&#9670;&nbsp;</a></span>gl_versions</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr std::array&lt;std::pair&lt;int, int&gt;, 1&gt; openage::renderer::opengl::gl_versions = {{ { 3, 3 } }}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The first element is the lowest version we need, last is highest version we support. </p>

<p class="definition">Definition at line <a class="el" href="context_8cpp_source.xhtml#l00017">17</a> of file <a class="el" href="context_8cpp_source.xhtml">context.cpp</a>.</p>

</div>
</div>
<a id="a96240e46c046c93700788844c906a684"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96240e46c046c93700788844c906a684">&#9670;&nbsp;</a></span>GL_VERT_IN_ELEM_TYPE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_VERT_IN_ELEM_TYPE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;resources::vertex_input_t, GLenum&gt;(</div><div class="line">    std::pair(resources::vertex_input_t::F32, GL_FLOAT),</div><div class="line">    std::pair(resources::vertex_input_t::V2F32, GL_FLOAT),</div><div class="line">    std::pair(resources::vertex_input_t::V3F32, GL_FLOAT),</div><div class="line">    std::pair(resources::vertex_input_t::M3F32, GL_FLOAT)</div><div class="line">)</div></div><!-- fragment -->
<p>The type of a single element in a per-vertex attribute. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00132">132</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="a2367c8152b9e322f4177cb25dfd35359"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2367c8152b9e322f4177cb25dfd35359">&#9670;&nbsp;</a></span>GL_VERT_IN_TYPE</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GL_VERT_IN_TYPE</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line">= datastructure::create_const_map&lt;GLenum, resources::vertex_input_t&gt;(</div><div class="line">    std::pair(GL_FLOAT, resources::vertex_input_t::F32),</div><div class="line">    std::pair(GL_FLOAT_VEC2, resources::vertex_input_t::V2F32),</div><div class="line">    std::pair(GL_FLOAT_VEC3, resources::vertex_input_t::V3F32),</div><div class="line">    std::pair(GL_FLOAT_MAT3, resources::vertex_input_t::M3F32)</div><div class="line">)</div></div><!-- fragment -->
<p>Generic vertex input types from GL types. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00124">124</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
<a id="a90b98ae7a652b647771a559e61cb5e56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90b98ae7a652b647771a559e61cb5e56">&#9670;&nbsp;</a></span>GLSL_TYPE_NAME</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr auto openage::renderer::opengl::GLSL_TYPE_NAME</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>GL types with corresponding GLSL type strings. </p>

<p class="definition">Definition at line <a class="el" href="lookup_8h_source.xhtml#l00059">59</a> of file <a class="el" href="lookup_8h_source.xhtml">lookup.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer.xhtml">renderer</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer_1_1opengl.xhtml">opengl</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
