<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/eventclass.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('eventclass_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">eventclass.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="eventclass_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2017-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;../curve/curve.h&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;any&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage_1_1event.xhtml">openage::event</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">class </span>Event;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">class </span>Loop;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">class </span>EventTarget;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">class </span>State;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class.xhtml">   26</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">   32</a></span>&#160;    <span class="keyword">enum class</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">DEPENDENCY</a>,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">DEPENDENCY_IMMEDIATELY</a>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">TRIGGER</a>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">REPEAT</a>,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">ONCE</a>,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    };</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">   72</a></span>&#160;    <span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">param_map</a> {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keyword">public</span>:</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a405ca4465e16d812c6741d54ec49b4fd">   74</a></span>&#160;        <span class="keyword">using</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a405ca4465e16d812c6741d54ec49b4fd">map_t</a> = std::unordered_map&lt;std::string, std::any&gt;;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5d82dce19e49568304b224f68d882959">   76</a></span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5d82dce19e49568304b224f68d882959">param_map</a>() {}</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a0e607d95c4a66149da4d720793b06e1e">   77</a></span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a0e607d95c4a66149da4d720793b06e1e">param_map</a>(std::initializer_list&lt;map_t::value_type&gt; l) : <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>(l) {}</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a65087770e8a4464f4bbff75a239d9030">   78</a></span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a65087770e8a4464f4bbff75a239d9030">param_map</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a405ca4465e16d812c6741d54ec49b4fd">map_t</a> &amp;<a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>) : <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>{<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(<a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>)} {}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a01b87e6f9de36ce10f991c0cbddcd384">   85</a></span>&#160;        T <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a01b87e6f9de36ce10f991c0cbddcd384">get</a>(<span class="keyword">const</span> std::string &amp;key, <span class="keyword">const</span> T &amp;defaultval=T())<span class="keyword"> const </span>{</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.find(key);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            <span class="keywordflow">if</span> (it != this-&gt;<a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.end() &amp;&amp; this-&gt;check_type&lt;T&gt;(it)) {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                <span class="keywordflow">return</span> std::any_cast&lt;T&gt;(it-&gt;second);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                <span class="keywordflow">return</span> defaultval;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            }</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a4c7f73fe4acc0ed28e06ef69f07ef26e">   97</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a4c7f73fe4acc0ed28e06ef69f07ef26e">contains</a>(<span class="keyword">const</span> std::string &amp;key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.find(key) != <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.end();</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Type&gt;</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#aeaf58d316c8416ac8d8597b6f635973d">  105</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#aeaf58d316c8416ac8d8597b6f635973d">check_type</a>(<span class="keyword">const</span> std::string &amp;key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <span class="keyword">auto</span> it = <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.find(key);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">if</span> (it != <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>.end()) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                <span class="keywordflow">return</span> this-&gt;check_type&lt;Type&gt;(it);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            }</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        }</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">private</span>:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#ac901f54cef25e8428e745320ff733bc0">  115</a></span>&#160;        <span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#ac901f54cef25e8428e745320ff733bc0">check_type</a>(<span class="keyword">const</span> map_t::const_iterator &amp;it)<span class="keyword"> const </span>{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="keywordflow">return</span> it-&gt;second.type() == <span class="keyword">typeid</span>(T);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">  122</a></span>&#160;        <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a405ca4465e16d812c6741d54ec49b4fd">map_t</a> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">map</a>;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    };</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;<a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">~EventClass</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">  135</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">const</span> std::string &amp;<a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">id</a>();</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">setup_event</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;event,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                             <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;state) = 0;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">invoke</a>(<a class="code" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;loop,</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                        <span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;target,</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                        <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;state,</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;time,</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                        <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">param_map</a> &amp;params) = 0;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">predict_invoke_time</a>(<span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;target,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                                              <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;state,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                                              <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;at) = 0;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_event_class.xhtml#a449b3d84bef5678e9311af50be21514e">  186</a></span>&#160;    std::string <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a449b3d84bef5678e9311af50be21514e">_id</a>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;};</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="comment">// helper classes</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">  192</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">DependencyEventClass</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml#a51e8b8a3e46c9bebecd84b84e8dd049d">DependencyEventClass</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_dependency_immediately_event_class.xhtml">  197</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_dependency_immediately_event_class.xhtml">DependencyImmediatelyEventClass</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_dependency_immediately_event_class.xhtml#a86d6e8b89d11bb739ab50836dc081466">DependencyImmediatelyEventClass</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;};</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_trigger_event_class.xhtml">  202</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_trigger_event_class.xhtml">TriggerEventClass</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_trigger_event_class.xhtml#a11a43643c69c6b39fe3b30e62c479b68">TriggerEventClass</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;};</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_repeat_event_class.xhtml">  207</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_repeat_event_class.xhtml">RepeatEventClass</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_repeat_event_class.xhtml#aac7229a03c3bb47b96e19441e26f94b6">RepeatEventClass</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;};</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1_once_event_class.xhtml">  212</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1_once_event_class.xhtml">OnceEventClass</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a> {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <a class="code" href="classopenage_1_1event_1_1_once_event_class.xhtml#ac6408645e243f6d995ef42b2425eda80">OnceEventClass</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;};</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;} <span class="comment">// openage::event</span></div><div class="ttc" id="classopenage_1_1event_1_1_dependency_immediately_event_class_xhtml_a86d6e8b89d11bb739ab50836dc081466"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_immediately_event_class.xhtml#a86d6e8b89d11bb739ab50836dc081466">openage::event::DependencyImmediatelyEventClass::DependencyImmediatelyEventClass</a></div><div class="ttdeci">DependencyImmediatelyEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00028">eventclass.cpp:28</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_trigger_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_trigger_event_class.xhtml">openage::event::TriggerEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00202">eventclass.h:202</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_dependency_event_class_xhtml_a51e8b8a3e46c9bebecd84b84e8dd049d"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_event_class.xhtml#a51e8b8a3e46c9bebecd84b84e8dd049d">openage::event::DependencyEventClass::DependencyEventClass</a></div><div class="ttdeci">DependencyEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00023">eventclass.cpp:23</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_xhtml"><div class="ttname"><a href="namespaceopenage_1_1event.xhtml">openage::event</a></div><div class="ttdef"><b>Definition:</b> <a href="aicontroller_8cpp_source.xhtml#l00005">aicontroller.cpp:5</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_aeaf58d316c8416ac8d8597b6f635973d"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#aeaf58d316c8416ac8d8597b6f635973d">openage::event::EventClass::param_map::check_type</a></div><div class="ttdeci">bool check_type(const std::string &amp;key) const</div><div class="ttdoc">Check if the type of a map entry is correct.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00105">eventclass.h:105</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a405ca4465e16d812c6741d54ec49b4fd"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a405ca4465e16d812c6741d54ec49b4fd">openage::event::EventClass::param_map::map_t</a></div><div class="ttdeci">std::unordered_map&lt; std::string, std::any &gt; map_t</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00074">eventclass.h:74</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">openage::event::EventClass::param_map</a></div><div class="ttdoc">Storage for parameters for an event class.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00072">eventclass.h:72</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_dependency_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_event_class.xhtml">openage::event::DependencyEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00192">eventclass.h:192</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_repeat_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_repeat_event_class.xhtml">openage::event::RepeatEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00207">eventclass.h:207</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_ac901f54cef25e8428e745320ff733bc0"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#ac901f54cef25e8428e745320ff733bc0">openage::event::EventClass::param_map::check_type</a></div><div class="ttdeci">bool check_type(const map_t::const_iterator &amp;it) const</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00115">eventclass.h:115</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a5d82dce19e49568304b224f68d882959"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5d82dce19e49568304b224f68d882959">openage::event::EventClass::param_map::param_map</a></div><div class="ttdeci">param_map()</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00076">eventclass.h:76</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_abb3503ac98625390fa0c1a122f14394c"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">openage::event::EventClass::invoke</a></div><div class="ttdeci">virtual void invoke(Loop &amp;loop, const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;state, const curve::time_t &amp;time, const param_map &amp;params)=0</div><div class="ttdoc">This method implements the effects of the event.</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a449b3d84bef5678e9311af50be21514e"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a449b3d84bef5678e9311af50be21514e">openage::event::EventClass::_id</a></div><div class="ttdeci">std::string _id</div><div class="ttdoc">String identifier for this event class.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00186">eventclass.h:186</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a5672a18eac9bdb2d8fcfb3f7fab706f7"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a5672a18eac9bdb2d8fcfb3f7fab706f7">openage::event::EventClass::param_map::map</a></div><div class="ttdeci">const map_t map</div><div class="ttdoc">Data storage.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00122">eventclass.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">openage::event::EventClass::setup_event</a></div><div class="ttdeci">virtual void setup_event(const std::shared_ptr&lt; Event &gt; &amp;event, const std::shared_ptr&lt; State &gt; &amp;state)=0</div><div class="ttdoc">Called for each event that is created for this EventClass.</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">openage::event::EventClass::trigger_type</a></div><div class="ttdeci">trigger_type</div><div class="ttdoc">Available types for the event class: These decide when an event of this event class will be executed.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00032">eventclass.h:32</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_ab0c2bcad30599b017efabe0078d8f1f8"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">openage::event::EventClass::EventClass</a></div><div class="ttdeci">EventClass(const std::string &amp;name, const trigger_type &amp;type)</div><div class="ttdoc">Constructor to be constructed with the unique identifier.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00013">eventclass.cpp:13</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_once_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_once_event_class.xhtml">openage::event::OnceEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00212">eventclass.h:212</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a0e607d95c4a66149da4d720793b06e1e"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a0e607d95c4a66149da4d720793b06e1e">openage::event::EventClass::param_map::param_map</a></div><div class="ttdeci">param_map(std::initializer_list&lt; map_t::value_type &gt; l)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00077">eventclass.h:77</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a8a540e9ae9989e2fdeaa9139e00370fa"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">openage::event::EventClass::type</a></div><div class="ttdeci">const trigger_type type</div><div class="ttdoc">The event type this event class represents.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00135">eventclass.h:135</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a01b87e6f9de36ce10f991c0cbddcd384"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a01b87e6f9de36ce10f991c0cbddcd384">openage::event::EventClass::param_map::get</a></div><div class="ttdeci">T get(const std::string &amp;key, const T &amp;defaultval=T()) const</div><div class="ttdoc">Returns the value, if it exists and is the right type.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00085">eventclass.h:85</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">openage::event::EventClass::trigger_type::DEPENDENCY_IMMEDIATELY</a></div><div class="ttdoc">Like DEPENDENCY, but does not use a recalculated time, instead uses the change-time only.</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_trigger_event_class_xhtml_a11a43643c69c6b39fe3b30e62c479b68"><div class="ttname"><a href="classopenage_1_1event_1_1_trigger_event_class.xhtml#a11a43643c69c6b39fe3b30e62c479b68">openage::event::TriggerEventClass::TriggerEventClass</a></div><div class="ttdeci">TriggerEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00033">eventclass.cpp:33</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a65087770e8a4464f4bbff75a239d9030"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a65087770e8a4464f4bbff75a239d9030">openage::event::EventClass::param_map::param_map</a></div><div class="ttdeci">param_map(const map_t &amp;map)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00078">eventclass.h:78</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">openage::event::EventClass::trigger_type::DEPENDENCY</a></div><div class="ttdoc">Such events are emitted when a modification is done on a target.</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a852a361912677c956069048d2fa2d025"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">openage::event::EventClass::~EventClass</a></div><div class="ttdeci">virtual ~EventClass()=default</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">openage::event::EventClass::trigger_type::TRIGGER</a></div><div class="ttdoc">Will be executed when the target trigger() function is called.</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_loop_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_loop.xhtml">openage::event::Loop</a></div><div class="ttdoc">The core class to manage event class and targets.</div><div class="ttdef"><b>Definition:</b> <a href="event_2loop_8h_source.xhtml#l00032">loop.h:32</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_repeat_event_class_xhtml_aac7229a03c3bb47b96e19441e26f94b6"><div class="ttname"><a href="classopenage_1_1event_1_1_repeat_event_class.xhtml#aac7229a03c3bb47b96e19441e26f94b6">openage::event::RepeatEventClass::RepeatEventClass</a></div><div class="ttdeci">RepeatEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00038">eventclass.cpp:38</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_af88d224fea9820027ac3ebfb314537d0"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">openage::event::EventClass::id</a></div><div class="ttdeci">const std::string &amp; id()</div><div class="ttdoc">Return a unique identifier.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00018">eventclass.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a0e0d15e8a433ef4a08a5b8a4fccae41b"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">openage::event::EventClass::predict_invoke_time</a></div><div class="ttdeci">virtual curve::time_t predict_invoke_time(const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;state, const curve::time_t &amp;at)=0</div><div class="ttdoc">Is called to calculate the execution time for an event of this eventclass.</div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint&lt; int64_t, 16 &gt;</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></div><div class="ttdoc">A eventclass has to be implemented for every type of event that exists.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00026">eventclass.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_once_event_class_xhtml_ac6408645e243f6d995ef42b2425eda80"><div class="ttname"><a href="classopenage_1_1event_1_1_once_event_class.xhtml#ac6408645e243f6d995ef42b2425eda80">openage::event::OnceEventClass::OnceEventClass</a></div><div class="ttdeci">OnceEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00043">eventclass.cpp:43</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_dependency_immediately_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_immediately_event_class.xhtml">openage::event::DependencyImmediatelyEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00197">eventclass.h:197</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">openage::event::EventClass::trigger_type::ONCE</a></div><div class="ttdoc">Will be triggered only once, but until it is triggered the time, when this should happen can be recal...</div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml_a4c7f73fe4acc0ed28e06ef69f07ef26e"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml#a4c7f73fe4acc0ed28e06ef69f07ef26e">openage::event::EventClass::param_map::contains</a></div><div class="ttdeci">bool contains(const std::string &amp;key) const</div><div class="ttdoc">Check if the map contains the given key.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00097">eventclass.h:97</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">openage::event::EventClass::trigger_type::REPEAT</a></div><div class="ttdoc">Will be triggered unconditionally at the set time, &quot;at&quot; is the time that was set as return of predict...</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_906fd80251564c07ab43a732fc1e9e78.xhtml">event</a></li><li class="navelem"><a class="el" href="eventclass_8h.xhtml">eventclass.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
