<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.dataformat.data_formatter.DataFormatter Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.dataformat.data_formatter.DataFormatter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage.convert.dataformat.data_formatter.DataFormatter:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter__coll__graph.svg" width="222" height="176"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8400943f6fb6fbe252b6848075fd5260"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a8400943f6fb6fbe252b6848075fd5260">__init__</a> (self)</td></tr>
<tr class="separator:a8400943f6fb6fbe252b6848075fd5260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a121fdc6aaa3d511826dbc2f3e8ed11"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a6a121fdc6aaa3d511826dbc2f3e8ed11">add_data</a> (self, data_set_pile, prefix=None, single_output=None)</td></tr>
<tr class="memdesc:a6a121fdc6aaa3d511826dbc2f3e8ed11"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a given StructDefinition to the storage, so it can be exported later.  <a href="#a6a121fdc6aaa3d511826dbc2f3e8ed11">More...</a><br /></td></tr>
<tr class="separator:a6a121fdc6aaa3d511826dbc2f3e8ed11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dd2ca6f27cffabc611a817c7ad69232"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a5dd2ca6f27cffabc611a817c7ad69232">export</a> (self, projectdir, requested_formats)</td></tr>
<tr class="memdesc:a5dd2ca6f27cffabc611a817c7ad69232"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates files in the requested formats to projectdir.  <a href="#a5dd2ca6f27cffabc611a817c7ad69232">More...</a><br /></td></tr>
<tr class="separator:a5dd2ca6f27cffabc611a817c7ad69232"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a13a1209ec54d2f580f14a94bbad919f1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a13a1209ec54d2f580f14a94bbad919f1">data</a></td></tr>
<tr class="separator:a13a1209ec54d2f580f14a94bbad919f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3f03279be0148880a253eb1f134e4ab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#ae3f03279be0148880a253eb1f134e4ab">typedefs</a></td></tr>
<tr class="separator:ae3f03279be0148880a253eb1f134e4ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a2ee353d31aed79b45e5fbbb6ebfbe39b"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a2ee353d31aed79b45e5fbbb6ebfbe39b">DELIMITER</a> = &quot;,&quot;</td></tr>
<tr class="separator:a2ee353d31aed79b45e5fbbb6ebfbe39b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85ead735668cbfde167276d76cde7830"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml#a85ead735668cbfde167276d76cde7830">member_methods</a></td></tr>
<tr class="separator:a85ead735668cbfde167276d76cde7830"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00020">20</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8400943f6fb6fbe252b6848075fd5260"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8400943f6fb6fbe252b6848075fd5260">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.data_formatter.DataFormatter.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00115">115</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        self.data = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="comment"># collection of all type definitions</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        self.typedefs = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>()</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keyword">def </span>add_data(self, data_set_pile, prefix=None, single_output=None):</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a6a121fdc6aaa3d511826dbc2f3e8ed11"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a121fdc6aaa3d511826dbc2f3e8ed11">&#9670;&nbsp;</a></span>add_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.data_formatter.DataFormatter.add_data </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data_set_pile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>prefix</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>single_output</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a given StructDefinition to the storage, so it can be exported later. </p>
<pre class="fragment">   other exported data structures are collected from the given input.
</pre> 
<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00127">127</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(data_set_pile, list):</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            data_set_pile = [data_set_pile]</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment"># add all data sets</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">for</span> data_set <span class="keywordflow">in</span> data_set_pile:</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment"># TODO: allow prefixes for all file types</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            <span class="comment"># (missing: struct, structimpl)</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;            <span class="keywordflow">if</span> prefix:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                data_set.prefix = prefix</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <span class="keywordflow">if</span> single_output:</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                data_set.single_output = single_output</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            <span class="comment"># collect column type specifications</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;            <span class="keywordflow">for</span> member_name, member_type <span class="keywordflow">in</span> data_set.members.items():</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="comment"># store resolved (first-time definitions) members in a</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="comment"># symbol list</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">if</span> isinstance(member_type, RefMember):</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    <span class="keywordflow">if</span> member_type.resolved:</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                        <span class="keywordflow">if</span> member_type.get_effective_type() <span class="keywordflow">in</span> self.typedefs:</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                            <span class="keywordflow">if</span> data_set.members[member_name] <span class="keywordflow">is</span> <span class="keywordflow">not</span> self.typedefs[member_type.get_effective_type()]:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;different redefinition of type %s&quot;</span> % member_type.get_effective_type())</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                            ref_member = data_set.members[member_name]</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                            <span class="comment"># if not overridden,</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                            <span class="comment"># use name of struct file to store</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                            <span class="keywordflow">if</span> ref_member.file_name <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                                ref_member.file_name = data_set.name_struct_file</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                            self.typedefs[member_type.get_effective_type()] = ref_member</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            self.data.append(data_set)</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="keyword">def </span>export(self, projectdir, requested_formats):</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"></div><!-- fragment -->
<p class="reference">References <a class="el" href="datastructure_2tests_8h_source.xhtml#l00016">openage::datastructure::tests::heap_elem.data</a>, <a class="el" href="audio_2types_8h_source.xhtml#l00021">openage::audio::audio_chunk_t.data</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00029">openage.convert.dataformat.content_snippet.ContentSnippet.data</a>, <a class="el" href="data__definition_8py_source.xhtml#l00029">openage.convert.dataformat.data_definition.DataDefinition.data</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00048">openage::datastructure::PairingHeapNode&lt; T, compare &gt;.data</a>, <a class="el" href="texture_8h_source.xhtml#l00058">openage::gl_texture_buffer.data</a>, <a class="el" href="terrain__chunk_8h_source.xhtml#l00061">openage::TerrainChunk.data</a>, <a class="el" href="texture__data_8h_source.xhtml#l00068">openage::renderer::resources::Texture2dData.data</a>, <a class="el" href="unit__container_8h_source.xhtml#l00068">openage::UnitReference.data</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00094">openage::util::ConstInitVector&lt; T &gt;.data</a>, <a class="el" href="terrain_8h_source.xhtml#l00106">openage::influence_group.data</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00117">openage.convert.dataformat.data_formatter.DataFormatter.data</a>, <a class="el" href="csv_8h_source.xhtml#l00130">openage::util::CSVCollection.data</a>, <a class="el" href="terrain_8h_source.xhtml#l00140">openage::tile_draw_data.data</a>, <a class="el" href="mesh__data_8h_source.xhtml#l00140">openage::renderer::resources::MeshData.data</a>, <a class="el" href="csv_8h_source.xhtml#l00151">openage::util::csv_subdata&lt; lineformat &gt;.data</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00032">openage.convert.dataformat.content_snippet.ContentSnippet.typedefs</a>, and <a class="el" href="data__formatter_8py_source.xhtml#l00120">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</a>.</p>

</div>
</div>
<a id="a5dd2ca6f27cffabc611a817c7ad69232"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5dd2ca6f27cffabc611a817c7ad69232">&#9670;&nbsp;</a></span>export()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.data_formatter.DataFormatter.export </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>projectdir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>requested_formats</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Generates files in the requested formats to projectdir. </p>
<pre class="fragment">   projectdir is a util.fslike.path.Path.
</pre> 
<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00170">170</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        generate_files = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">for</span> format_ <span class="keywordflow">in</span> requested_formats:</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            files = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>()</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            snippets = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="comment"># iterate over all stored data sets and</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="comment"># generate all data snippets for the requested output formats.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="keywordflow">for</span> data_set <span class="keywordflow">in</span> self.data:</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;                <span class="comment"># resolve data xrefs for this data_set</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                data_set.dynamic_ref_update(self.typedefs)</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="comment"># generate one output chunk list for each requested format</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">if</span> format_ == <span class="stringliteral">&quot;csv&quot;</span>:</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    new_snippets = data_set.generate_csv(self)</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">elif</span> format_ == <span class="stringliteral">&quot;struct&quot;</span>:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                    new_snippets = data_set.generate_struct(self)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="keywordflow">elif</span> format_ == <span class="stringliteral">&quot;structimpl&quot;</span>:</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                    new_snippets = data_set.generate_struct_implementation(self)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;                    <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;unknown export format %s requested&quot;</span> % format_)</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                snippets.extend(new_snippets)</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="comment"># create snippets for the encountered type definitions</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">for</span> _, type_definition <span class="keywordflow">in</span> sorted(self.typedefs.items()):</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                type_snippets = type_definition.get_snippets(type_definition.file_name, format_)</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                snippets.extend(type_snippets)</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            <span class="comment"># assign all snippets to generated files</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <span class="keywordflow">for</span> snippet <span class="keywordflow">in</span> snippets:</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;                <span class="comment"># if this file was not yet created, do it nao</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">if</span> snippet.file_name <span class="keywordflow">not</span> <span class="keywordflow">in</span> files:</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    files[snippet.file_name] = GeneratedFile(snippet.file_name, format_)</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                files[snippet.file_name].add_snippet(snippet)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            generate_files.extend(files.values())</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment"># files is currently a list of GeneratedFile objects.</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="comment"># find xref header includes</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">for</span> gen_file <span class="keywordflow">in</span> generate_files:</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="comment"># only create headers for non-data files</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">if</span> gen_file.format_ <span class="keywordflow">not</span> <span class="keywordflow">in</span> {<span class="stringliteral">&quot;csv&quot;</span>}:</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;                gen_file.create_xref_headers(generate_files)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;                gen_file.create_forward_declarations(generate_files)</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="comment"># we now invoke the content generation for each generated file</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">for</span> gen_file <span class="keywordflow">in</span> generate_files:</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            file_name, content = gen_file.generate()</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="keyword">with</span> projectdir[file_name].open(<span class="stringliteral">&#39;wb&#39;</span>) <span class="keyword">as</span> outfile:</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                outfile.write(content.encode(<span class="stringliteral">&#39;utf-8&#39;</span>))</div><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="datastructure_2tests_8h_source.xhtml#l00016">openage::datastructure::tests::heap_elem.data</a>, <a class="el" href="audio_2types_8h_source.xhtml#l00021">openage::audio::audio_chunk_t.data</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00029">openage.convert.dataformat.content_snippet.ContentSnippet.data</a>, <a class="el" href="data__definition_8py_source.xhtml#l00029">openage.convert.dataformat.data_definition.DataDefinition.data</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00048">openage::datastructure::PairingHeapNode&lt; T, compare &gt;.data</a>, <a class="el" href="texture_8h_source.xhtml#l00058">openage::gl_texture_buffer.data</a>, <a class="el" href="terrain__chunk_8h_source.xhtml#l00061">openage::TerrainChunk.data</a>, <a class="el" href="texture__data_8h_source.xhtml#l00068">openage::renderer::resources::Texture2dData.data</a>, <a class="el" href="unit__container_8h_source.xhtml#l00068">openage::UnitReference.data</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00094">openage::util::ConstInitVector&lt; T &gt;.data</a>, <a class="el" href="terrain_8h_source.xhtml#l00106">openage::influence_group.data</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00117">openage.convert.dataformat.data_formatter.DataFormatter.data</a>, <a class="el" href="csv_8h_source.xhtml#l00130">openage::util::CSVCollection.data</a>, <a class="el" href="terrain_8h_source.xhtml#l00140">openage::tile_draw_data.data</a>, <a class="el" href="mesh__data_8h_source.xhtml#l00140">openage::renderer::resources::MeshData.data</a>, <a class="el" href="csv_8h_source.xhtml#l00151">openage::util::csv_subdata&lt; lineformat &gt;.data</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00352">openage::py.dict()</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00032">openage.convert.dataformat.content_snippet.ContentSnippet.typedefs</a>, and <a class="el" href="data__formatter_8py_source.xhtml#l00120">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter_a5dd2ca6f27cffabc611a817c7ad69232_cgraph.svg" width="100%" height="366"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a13a1209ec54d2f580f14a94bbad919f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13a1209ec54d2f580f14a94bbad919f1">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.data_formatter.DataFormatter.data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00117">117</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="data__formatter_8py_source.xhtml#l00127">openage.convert.dataformat.data_formatter.DataFormatter.add_data()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00170">openage.convert.dataformat.data_formatter.DataFormatter.export()</a>, <a class="el" href="texture_8py_source.xhtml#l00078">openage.convert.texture.TextureImage.get_data()</a>, <a class="el" href="texture_8py_source.xhtml#l00075">openage.convert.texture.TextureImage.get_pil_image()</a>, and <a class="el" href="peresource_8py_source.xhtml#l00168">openage.convert.peresource.PEResources.read_directory()</a>.</p>

</div>
</div>
<a id="a2ee353d31aed79b45e5fbbb6ebfbe39b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee353d31aed79b45e5fbbb6ebfbe39b">&#9670;&nbsp;</a></span>DELIMITER</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">string openage.convert.dataformat.data_formatter.DataFormatter.DELIMITER = &quot;,&quot;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00023">23</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>

</div>
</div>
<a id="a85ead735668cbfde167276d76cde7830"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a85ead735668cbfde167276d76cde7830">&#9670;&nbsp;</a></span>member_methods</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">dictionary openage.convert.dataformat.data_formatter.DataFormatter.member_methods</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00025">25</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>

</div>
</div>
<a id="ae3f03279be0148880a253eb1f134e4ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3f03279be0148880a253eb1f134e4ab">&#9670;&nbsp;</a></span>typedefs</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.data_formatter.DataFormatter.typedefs</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="data__formatter_8py_source.xhtml#l00120">120</a> of file <a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="data__formatter_8py_source.xhtml#l00127">openage.convert.dataformat.data_formatter.DataFormatter.add_data()</a>, <a class="el" href="generated__file_8py_source.xhtml#l00084">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet()</a>, <a class="el" href="generated__file_8py_source.xhtml#l00123">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00170">openage.convert.dataformat.data_formatter.DataFormatter.export()</a>, and <a class="el" href="generated__file_8py_source.xhtml#l00109">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/<a class="el" href="data__formatter_8py_source.xhtml">data_formatter.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1data__formatter.xhtml">data_formatter</a></li><li class="navelem"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1data__formatter_1_1_data_formatter.xhtml">DataFormatter</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
