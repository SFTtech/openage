<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pathfinding/tests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pathfinding_2tests_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pathfinding_2tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;../testing/testing.h&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="heuristics_8h.xhtml">heuristics.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pathfinding_2path_8h.xhtml">path.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span>path {</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml">   11</a></span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#ae71248e3b41e24e07f376124cfe95f41">   17</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#ae71248e3b41e24e07f376124cfe95f41">node_0</a>() {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{0, 0, 0};</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p1{1, 0, 0};</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p2{1, 1, 0};</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p3{1, -1, 0};</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p4{2, 0, 0};</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p5{2, 2, 0};</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p6{2, -2, 0};</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n1 = std::make_unique&lt;Node&gt;(p1, n0);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n2 = std::make_unique&lt;Node&gt;(p2, n1);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n3 = std::make_unique&lt;Node&gt;(p3, n1);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n4 = std::make_unique&lt;Node&gt;(p0, n1);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// Testing how the factor is effected from the change in</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// direction from one node to another</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;direction.ne, 1);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;direction.se, 0);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// Expect this to be 2 since the similarity between nodes is zero</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;factor, 2);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;direction.ne, 0);</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;direction.se, 1);</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// Expect this to be 2 since it takes a 90 degree turn from n1</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;factor, 2);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;direction.ne, 0);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;direction.se, -1);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// Expect this to be 2 since it takes a 90 degree turn from n1</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;factor, 2);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;direction.ne, -1);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;direction.se, 0);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    <span class="comment">// Expect this to be 3 since it takes a 180 degree turn from n1</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;factor, 3);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// Testing that the distance from the previous node noes not</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment">// effect the factor, only change in direction</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    n1 = std::make_unique&lt;Node&gt;(p4, n0);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    n2 = std::make_unique&lt;Node&gt;(p5, n1);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    n3 = std::make_unique&lt;Node&gt;(p6, n1);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    n4 = std::make_unique&lt;Node&gt;(p0, n1);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;direction.ne, 1);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;direction.se, 0);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment">// Expect this to be 2 since the similarity between nodes is zero</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;factor, 2);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;direction.ne, 0);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;direction.se, 1);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="comment">// Expect this to be 2 since it takes a 90 degree turn from n1</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;factor, 2);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;direction.ne, 0);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;direction.se, -1);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="comment">// Expect this to be 2 since it takes a 90 degree turn from n1</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;factor, 2);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;direction.ne, -1);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;direction.se, 0);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">// Expect this to be 3 since it takes a 180 degree turn from n1</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;factor, 3);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#afb103e74376eeb1339fe6204a3f649fe">   93</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#afb103e74376eeb1339fe6204a3f649fe">node_cost_to_0</a>() {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// Testing basic cost_to with ne only</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{0, 0, 0};</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p1{10, 0, 0};</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n1 = std::make_unique&lt;Node&gt;(p1, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n0-&gt;cost_to(*n1), 10);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n1-&gt;cost_to(*n0), 10);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment">// Testing basic cost_to with se only</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p2{0, 5, 0};</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n2 = std::make_unique&lt;Node&gt;(p2, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n0-&gt;cost_to(*n2), 5);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n2-&gt;cost_to(*n0), 5);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// Testing cost_to with both se and ne:</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p3{3, 4, 0};  <span class="comment">// -&gt; sqrt(3*3 + 4*4) == 5</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n3 = std::make_unique&lt;Node&gt;(p3, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n0-&gt;cost_to(*n3), 5);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n3-&gt;cost_to(*n0), 5);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="comment">// Test cost_to and check that `up` has no effect</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p4{3, 4, 8};</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n4 = std::make_unique&lt;Node&gt;(p4, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n0-&gt;cost_to(*n4), 5);</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(n4-&gt;cost_to(*n0), 5);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a0907c94ce28302c57452c65f7e218d48">  132</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a0907c94ce28302c57452c65f7e218d48">node_cost_to_1</a>() {</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment">// Set up coords so that n1 will have a direction of ne = 1</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// but n0 with not be in n1s neighbors</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{-0.125, 0, 0};</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p1{0.125, 0, 0};</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n1 = std::make_unique&lt;Node&gt;(p1, n0);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// We expect twice the normal cost since n0 had not direction</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="comment">// thus we get a factor of 2 on n1</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(n0-&gt;cost_to(*n1), 0.5, 0.001);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(n1-&gt;cost_to(*n0), 0.5, 0.001);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#a2889597504b5f2d6987d132f1e5682f6">nodemap_t</a> visited_tiles;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    visited_tiles[n0-&gt;position] = n0;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// Collect the costs to go to all the neighbors of n1</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    std::vector&lt;float&gt; costs;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> neighbor : n1-&gt;get_neighbors(visited_tiles, 1)) {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        costs.push_back(n1-&gt;cost_to(*neighbor));</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[0], 0.45711, 0.001);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[1], 0.25, 0.001);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[2], 0.45711, 0.001);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[3], 0.5, 0.001);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[4], 0.95709, 0.001);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[5], 0.75, 0.001);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[6], 0.95709, 0.001);</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(costs[7], 0.5, 0.001);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a58a788eb28351a5ceec44ce2b152d3a0">  169</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a58a788eb28351a5ceec44ce2b152d3a0">node_generate_backtrace_0</a>() {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{0, 0, 0};</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p1{10, 0, 0};</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p2{20, 0, 0};</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p3{30, 0, 0};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n1 = std::make_unique&lt;Node&gt;(p1, n0);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n2 = std::make_unique&lt;Node&gt;(p2, n1);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n3 = std::make_unique&lt;Node&gt;(p3, n2);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <a class="code" href="classopenage_1_1path_1_1_path.xhtml">Path</a> path = n3-&gt;generate_backtrace();</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    (path.<a class="code" href="classopenage_1_1path_1_1_path.xhtml#a6f052fbfe0743c8204c2f37842176976">waypoints</a>[0] == *n3) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    (path.<a class="code" href="classopenage_1_1path_1_1_path.xhtml#a6f052fbfe0743c8204c2f37842176976">waypoints</a>[1] == *n2) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    (path.<a class="code" href="classopenage_1_1path_1_1_path.xhtml#a6f052fbfe0743c8204c2f37842176976">waypoints</a>[2] == *n1) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a7279af6fded008ace86db25db0e7079d">  191</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a7279af6fded008ace86db25db0e7079d">node_get_neighbors_0</a>() {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{0, 0, 0};</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#a2889597504b5f2d6987d132f1e5682f6">nodemap_t</a> <a class="code" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a>;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// Testing get_neighbors returning all surounding tiles with</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="comment">// a factor of 1</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    std::vector&lt;node_pt&gt; neighbors = n0-&gt;get_neighbors(<a class="code" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a>, 1);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(neighbors.size(), 8);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[0]-&gt;position.ne.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[0]-&gt;position.se.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[1]-&gt;position.ne.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[1]-&gt;position.se.to_double(), 0, 0.001);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[2]-&gt;position.ne.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[2]-&gt;position.se.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[3]-&gt;position.ne.to_double(), 0, 0.001);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[3]-&gt;position.se.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[4]-&gt;position.ne.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[4]-&gt;position.se.to_double(), 0.125, 0.001);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[5]-&gt;position.ne.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[5]-&gt;position.se.to_double(), 0, 0.001);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[6]-&gt;position.ne.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[6]-&gt;position.se.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[7]-&gt;position.ne.to_double(), 0, 0.001);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[7]-&gt;position.se.to_double(), -0.125, 0.001);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">// Testing how a larger scale changes the neighbors generated</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    neighbors = n0-&gt;get_neighbors(<a class="code" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a>, 2);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(neighbors.size(), 8);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[0]-&gt;position.ne.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[0]-&gt;position.se.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[1]-&gt;position.ne.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[1]-&gt;position.se.to_double(), 0, 0.001);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[2]-&gt;position.ne.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[2]-&gt;position.se.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[3]-&gt;position.ne.to_double(), 0, 0.001);</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[3]-&gt;position.se.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[4]-&gt;position.ne.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[4]-&gt;position.se.to_double(), 0.25, 0.001);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[5]-&gt;position.ne.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[5]-&gt;position.se.to_double(), 0, 0.001);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[6]-&gt;position.ne.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[6]-&gt;position.se.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[7]-&gt;position.ne.to_double(), 0, 0.001);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(neighbors[7]-&gt;position.se.to_double(), -0.25, 0.001);</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a324ebb21684cd1e29b46c01160ad4287">  259</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a324ebb21684cd1e29b46c01160ad4287">always_passable</a>(<span class="keyword">const</span> <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;) {</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#acebd36a125f535d815cd34536e4f1f1f">  266</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#acebd36a125f535d815cd34536e4f1f1f">not_passable</a>(<span class="keyword">const</span> <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;) {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#ab0beb56de41e9380fbf8abf6b50759af">  274</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#ab0beb56de41e9380fbf8abf6b50759af">sometimes_passable</a>(<span class="keyword">const</span> <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;pos) {</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">if</span> (pos.ne == 20) {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a22de95f3450a22cac036677b4e01ad63">  286</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a22de95f3450a22cac036677b4e01ad63">node_passable_line_0</a>() {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p0{0, 0, 0};</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <a class="code" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> p1{1000, 0, 0};</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n0 = std::make_unique&lt;Node&gt;(p0, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <a class="code" href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">node_pt</a> n1 = std::make_unique&lt;Node&gt;(p1, n0);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1path.xhtml#a2752186f11f3e1a26c7a72c647e7ccdd">path::passable_line</a>(n0, n1, <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a324ebb21684cd1e29b46c01160ad4287">path::tests::always_passable</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1path.xhtml#a2752186f11f3e1a26c7a72c647e7ccdd">path::passable_line</a>(n0, n1, <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#acebd36a125f535d815cd34536e4f1f1f">path::tests::not_passable</a>), <span class="keyword">false</span>);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">// The next 2 cases show that a different sample can change the results</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="comment">// for the same path</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1path.xhtml#a2752186f11f3e1a26c7a72c647e7ccdd">path::passable_line</a>(n0, n1, <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#ab0beb56de41e9380fbf8abf6b50759af">path::tests::sometimes_passable</a>, 10), <span class="keyword">true</span>);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1path.xhtml#a2752186f11f3e1a26c7a72c647e7ccdd">path::passable_line</a>(n0, n1, <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#ab0beb56de41e9380fbf8abf6b50759af">path::tests::sometimes_passable</a>, 50), <span class="keyword">false</span>);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1path_1_1tests.xhtml#a5d1515cb353ed8a23c4d644dc3642e73">  305</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a5d1515cb353ed8a23c4d644dc3642e73">path_node</a>() {</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#ae71248e3b41e24e07f376124cfe95f41">node_0</a>();</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#afb103e74376eeb1339fe6204a3f649fe">node_cost_to_0</a>();</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a0907c94ce28302c57452c65f7e218d48">node_cost_to_1</a>();</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a58a788eb28351a5ceec44ce2b152d3a0">node_generate_backtrace_0</a>();</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a7279af6fded008ace86db25db0e7079d">node_get_neighbors_0</a>();</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="namespaceopenage_1_1path_1_1tests.xhtml#a22de95f3450a22cac036677b4e01ad63">node_passable_line_0</a>();</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;} <span class="comment">// namespace tests</span></div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;} <span class="comment">// namespace pathfinding</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;} <span class="comment">// namespace openage</span></div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a96dd93a55be2a0953e454b56d83f65da"><div class="ttname"><a href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a></div><div class="ttdeci">std::map&lt; void *, std::function&lt; bool()&gt; &gt; map</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00025">setup.cpp:25</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a324ebb21684cd1e29b46c01160ad4287"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a324ebb21684cd1e29b46c01160ad4287">openage::path::tests::always_passable</a></div><div class="ttdeci">bool always_passable(const coord::phys3 &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00259">tests.cpp:259</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a5d1515cb353ed8a23c4d644dc3642e73"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a5d1515cb353ed8a23c4d644dc3642e73">openage::path::tests::path_node</a></div><div class="ttdeci">void path_node()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00305">tests.cpp:305</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a22de95f3450a22cac036677b4e01ad63"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a22de95f3450a22cac036677b4e01ad63">openage::path::tests::node_passable_line_0</a></div><div class="ttdeci">void node_passable_line_0()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00286">tests.cpp:286</a></div></div>
<div class="ttc" id="testing_8h_xhtml_a57b089ad5d574fad716e3b140c80d0e5"><div class="ttname"><a href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a></div><div class="ttdeci">#define TESTEQUALS(left, right)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00049">testing.h:49</a></div></div>
<div class="ttc" id="classopenage_1_1path_1_1_path_xhtml_a6f052fbfe0743c8204c2f37842176976"><div class="ttname"><a href="classopenage_1_1path_1_1_path.xhtml#a6f052fbfe0743c8204c2f37842176976">openage::path::Path::waypoints</a></div><div class="ttdeci">std::vector&lt; Node &gt; waypoints</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2path_8h_source.xhtml#l00191">path.h:191</a></div></div>
<div class="ttc" id="heuristics_8h_xhtml"><div class="ttname"><a href="heuristics_8h.xhtml">heuristics.h</a></div></div>
<div class="ttc" id="pathfinding_2path_8h_xhtml"><div class="ttname"><a href="pathfinding_2path_8h.xhtml">path.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_ae71248e3b41e24e07f376124cfe95f41"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#ae71248e3b41e24e07f376124cfe95f41">openage::path::tests::node_0</a></div><div class="ttdeci">void node_0()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00017">tests.cpp:17</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_acebd36a125f535d815cd34536e4f1f1f"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#acebd36a125f535d815cd34536e4f1f1f">openage::path::tests::not_passable</a></div><div class="ttdeci">bool not_passable(const coord::phys3 &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00266">tests.cpp:266</a></div></div>
<div class="ttc" id="classopenage_1_1path_1_1_path_xhtml"><div class="ttname"><a href="classopenage_1_1path_1_1_path.xhtml">openage::path::Path</a></div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2path_8h_source.xhtml#l00180">path.h:180</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_xhtml_adf2b15337cb3eec1712f18c17c75c325"><div class="ttname"><a href="namespaceopenage_1_1path.xhtml#adf2b15337cb3eec1712f18c17c75c325">openage::path::node_pt</a></div><div class="ttdeci">std::shared_ptr&lt; Node &gt; node_pt</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2path_8h_source.xhtml#l00035">path.h:35</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a0907c94ce28302c57452c65f7e218d48"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a0907c94ce28302c57452c65f7e218d48">openage::path::tests::node_cost_to_1</a></div><div class="ttdeci">void node_cost_to_1()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00132">tests.cpp:132</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_ab0beb56de41e9380fbf8abf6b50759af"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#ab0beb56de41e9380fbf8abf6b50759af">openage::path::tests::sometimes_passable</a></div><div class="ttdeci">bool sometimes_passable(const coord::phys3 &amp;pos)</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00274">tests.cpp:274</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_afb103e74376eeb1339fe6204a3f649fe"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#afb103e74376eeb1339fe6204a3f649fe">openage::path::tests::node_cost_to_0</a></div><div class="ttdeci">void node_cost_to_0()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00093">tests.cpp:93</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a58a788eb28351a5ceec44ce2b152d3a0"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a58a788eb28351a5ceec44ce2b152d3a0">openage::path::tests::node_generate_backtrace_0</a></div><div class="ttdeci">void node_generate_backtrace_0()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00169">tests.cpp:169</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ae531a534fa7f4028ddf113ae72caa6aa"><div class="ttname"><a href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a></div><div class="ttdeci">#define TESTEQUALS_FLOAT(left, right, epsilon)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00068">testing.h:68</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_xhtml_a2889597504b5f2d6987d132f1e5682f6"><div class="ttname"><a href="namespaceopenage_1_1path.xhtml#a2889597504b5f2d6987d132f1e5682f6">openage::path::nodemap_t</a></div><div class="ttdeci">std::unordered_map&lt; coord::phys3, node_pt &gt; nodemap_t</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2path_8h_source.xhtml#l00040">path.h:40</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_1_1tests_xhtml_a7279af6fded008ace86db25db0e7079d"><div class="ttname"><a href="namespaceopenage_1_1path_1_1tests.xhtml#a7279af6fded008ace86db25db0e7079d">openage::path::tests::node_get_neighbors_0</a></div><div class="ttdeci">void node_get_neighbors_0()</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2tests_8cpp_source.xhtml#l00191">tests.cpp:191</a></div></div>
<div class="ttc" id="namespaceopenage_1_1path_xhtml_a2752186f11f3e1a26c7a72c647e7ccdd"><div class="ttname"><a href="namespaceopenage_1_1path.xhtml#a2752186f11f3e1a26c7a72c647e7ccdd">openage::path::passable_line</a></div><div class="ttdeci">bool passable_line(node_pt start, node_pt end, std::function&lt; bool(const coord::phys3 &amp;)&gt; passable, float samples)</div><div class="ttdef"><b>Definition:</b> <a href="pathfinding_2path_8cpp_source.xhtml#l00100">path.cpp:100</a></div></div>
<div class="ttc" id="structopenage_1_1coord_1_1phys3_xhtml"><div class="ttname"><a href="structopenage_1_1coord_1_1phys3.xhtml">openage::coord::phys3</a></div><div class="ttdef"><b>Definition:</b> <a href="phys_8h_source.xhtml#l00056">phys.h:56</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_53fc77cdc2c4a643e9780698bc16c36c.xhtml">pathfinding</a></li><li class="navelem"><a class="el" href="pathfinding_2tests_8cpp.xhtml">tests.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
