<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::event::demo::Physics Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1event_1_1demo_1_1_physics.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classopenage_1_1event_1_1demo_1_1_physics-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::demo::Physics Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="physics_8h_source.xhtml">physics.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::event::demo::Physics:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics__coll__graph.svg" width="160" height="132"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a808f9e14e491c56f818471417ea08396"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a808f9e14e491c56f818471417ea08396">process_input</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_state.xhtml">PongState</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_player.xhtml">PongPlayer</a> &gt; &amp;, const std::vector&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml">PongEvent</a> &gt; &amp;input, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &gt; &amp;mgr, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;now)</td></tr>
<tr class="separator:a808f9e14e491c56f818471417ea08396"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a8667e80722a83c0f0ff29835d5d54baf"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a8667e80722a83c0f0ff29835d5d54baf">init</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_state.xhtml">PongState</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &gt; &amp;mgr, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;)</td></tr>
<tr class="separator:a8667e80722a83c0f0ff29835d5d54baf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaafd5ac8b7a69517a6f26f9fa220984"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">reset</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;, <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;mgr, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;)</td></tr>
<tr class="separator:aaaafd5ac8b7a69517a6f26f9fa220984"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="physics_8h_source.xhtml#l00017">17</a> of file <a class="el" href="physics_8h_source.xhtml">physics.h</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8667e80722a83c0f0ff29835d5d54baf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8667e80722a83c0f0ff29835d5d54baf">&#9670;&nbsp;</a></span>init()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::Physics::init </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_state.xhtml">PongState</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>gstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>now</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00362">362</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                                           {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">if</span> (not state-&gt;enable_gui) {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Physics initialization&quot;</span>);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;BallReflectPanel&gt;());</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;BallReflectWall&gt;());</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;ResetGame&gt;());</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    loop-&gt;create_event(<span class="stringliteral">&quot;demo.ball.reflect_wall&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    loop-&gt;create_event(<span class="stringliteral">&quot;demo.ball.reflect_panel&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">// FIXME once &quot;reset&quot;: deregister</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">//reset(state, mgr, now);</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00177">INFO</a>, and <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics_a8667e80722a83c0f0ff29835d5d54baf_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a808f9e14e491c56f818471417ea08396"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a808f9e14e491c56f818471417ea08396">&#9670;&nbsp;</a></span>process_input()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::Physics::process_input </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_state.xhtml">PongState</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_player.xhtml">PongPlayer</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>player</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::vector&lt; <a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml">PongEvent</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>now</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00383">383</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                                                    {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="comment">// seconds into the future</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    constexpr <span class="keyword">static</span> <span class="keyword">auto</span> predicted_movement_time = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(5.0);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="comment">// lines per second</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    constexpr <span class="keyword">static</span> <span class="keywordtype">double</span> movement_speed = 8.0;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; evnt : events) {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="comment">// Process only if the future has changed</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">if</span> (player-&gt;state-&gt;get(now).state != evnt.state) {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            <span class="comment">// log the new input in the state curve</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            player-&gt;state-&gt;set_last(now, evnt);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment">// if the state is active longer than predicted,</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="comment">// we have to extend the prediction!</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordtype">bool</span> extend_previous_prediction = <span class="keyword">false</span>;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keyword">auto</span> prev_state = player-&gt;state-&gt;get_previous(now);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordflow">if</span> (prev_state and prev_state-&gt;second.state == evnt.state) {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                extend_previous_prediction = <span class="keyword">true</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">switch</span>(evnt.state) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">PongEvent::UP</a>:</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">PongEvent::DOWN</a>: {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <span class="keywordtype">float</span> current_pos = player-&gt;position-&gt;get(now);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                <span class="keywordflow">if</span> (not extend_previous_prediction) {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                    <span class="comment">// create a keyframe for the new movement</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    player-&gt;position-&gt;set_last(now, current_pos);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    <span class="comment">// TODO: drop the intermediate keyframes</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                    <span class="comment">//       for position and speed.</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="keywordflow">switch</span> (evnt.state) {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">PongEvent::UP</a>:</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    player-&gt;speed-&gt;set_last(now, -movement_speed);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">PongEvent::DOWN</a>:</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    player-&gt;speed-&gt;set_last(now, movement_speed);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <span class="comment">// never reached.</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> move_stop_guess = now + predicted_movement_time;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="comment">// change the position by integrating the speed curve.</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="comment">// TODO: add native integral to curves.</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <span class="keywordtype">float</span> new_pos = current_pos +</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                (((player-&gt;speed-&gt;get(move_stop_guess) +</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                   player-&gt;speed-&gt;get(now)) / 2.0) *</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                 predicted_movement_time.to_double());</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                <span class="comment">// if paddle will get out-of-bounds, calculate the bound hit time</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="comment">// TODO: add native key/value finding in range to curves</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="keywordflow">if</span> (new_pos &lt; 0) {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                    move_stop_guess = now + (current_pos / movement_speed);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    new_pos = 0;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                }</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">if</span> (new_pos &gt; state-&gt;display_boundary[1]) {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                    move_stop_guess = now + ((state-&gt;display_boundary[1] - current_pos) / movement_speed);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                    new_pos = state-&gt;display_boundary[1];</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                }</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                PongEvent set_idle{evnt.player, <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">PongEvent::IDLE</a>};</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                player-&gt;state-&gt;set_last(move_stop_guess, set_idle);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                player-&gt;speed-&gt;set_last(move_stop_guess, 0);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                player-&gt;position-&gt;set_last(move_stop_guess, new_pos);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <span class="comment">// TODO: predict_reflect_panel(state, queue, now);</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">PongEvent::IDLE</a>:</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                player-&gt;position-&gt;set_last(now, player-&gt;position-&gt;get(now));</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                player-&gt;speed-&gt;set_last(now, 0);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26">PongEvent::START</a>:</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, *mgr, now);</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="comment">//if (player-&gt;state-&gt;get(now).state == PongEvent::LOST) {</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                <span class="comment">//  state-&gt;ball.position-&gt;set_last(now, state.display_boundary * 0.5);</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="comment">//}</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                <span class="comment">//update_ball(state, now, init_recursion_limit);</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="comment">//break;</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        }</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml_af909cf1de79df6389fd9431b7424b48a"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">openage::curve::time_t</a></div><div class="ttdeci">util::FixedPoint&lt; int64_t, 16 &gt; time_t</div><div class="ttdef"><b>Definition:</b> <a href="curve_8h_source.xhtml#l00016">curve.h:16</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_physics_xhtml_aaaafd5ac8b7a69517a6f26f9fa220984"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">openage::event::demo::Physics::reset</a></div><div class="ttdeci">static void reset(const std::shared_ptr&lt; State &gt; &amp;, Loop &amp;mgr, const curve::time_t &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00489">physics.cpp:489</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">openage::event::demo::PongEvent::DOWN</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">openage::event::demo::PongEvent::UP</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">openage::event::demo::PongEvent::IDLE</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26">openage::event::demo::PongEvent::START</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="gamestate_8h_source.xhtml#l00026">openage::event::demo::PongEvent::DOWN</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00192">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double()</a>, <a class="el" href="gamestate_8h_source.xhtml#l00026">openage::event::demo::PongEvent::IDLE</a>, <a class="el" href="gamestate_8h_source.xhtml#l00032">openage::event::demo::PongEvent::player</a>, <a class="el" href="physics_8cpp_source.xhtml#l00489">reset()</a>, <a class="el" href="gamestate_8h_source.xhtml#l00026">openage::event::demo::PongEvent::START</a>, and <a class="el" href="gamestate_8h_source.xhtml#l00026">openage::event::demo::PongEvent::UP</a>.</p>

<p class="reference">Referenced by <a class="el" href="event_2demo_2main_8cpp_source.xhtml#l00042">openage::event::demo::curvepong()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics_a808f9e14e491c56f818471417ea08396_cgraph.svg" width="100%" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics_a808f9e14e491c56f818471417ea08396_icgraph.svg" width="375" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaaafd5ac8b7a69517a6f26f9fa220984"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaaafd5ac8b7a69517a6f26f9fa220984">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::Physics::reset </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>gstate</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;&#160;</td>
          <td class="paramname"><em>mgr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>now</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00489">489</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                                            {</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    mgr.create_event(<span class="stringliteral">&quot;demo.reset&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="loop_8cpp_source.xhtml#l00021">openage::event::Loop::create_event()</a>.</p>

<p class="reference">Referenced by <a class="el" href="physics_8cpp_source.xhtml#l00138">openage::event::demo::BallReflectPanel::invoke()</a>, and <a class="el" href="physics_8cpp_source.xhtml#l00383">process_input()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics_aaaafd5ac8b7a69517a6f26f9fa220984_cgraph.svg" width="100%" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_physics_aaaafd5ac8b7a69517a6f26f9fa220984_icgraph.svg" width="575" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/demo/<a class="el" href="physics_8h_source.xhtml">physics.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/demo/<a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml">demo</a></li><li class="navelem"><a class="el" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml">Physics</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
