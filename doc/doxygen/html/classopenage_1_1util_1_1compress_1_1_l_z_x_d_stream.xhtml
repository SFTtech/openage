<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::compress::LZXDStream Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::compress::LZXDStream Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::compress::LZXDStream:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a491af9a4f0c2abc632c70db8705f1782"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a491af9a4f0c2abc632c70db8705f1782">LZXDStream</a> (<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a> callback, unsigned int window_bits, unsigned int <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a>)</td></tr>
<tr class="separator:a491af9a4f0c2abc632c70db8705f1782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5a5bf3c111860662413597ba63d5769"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ac5a5bf3c111860662413597ba63d5769">~LZXDStream</a> ()</td></tr>
<tr class="separator:ac5a5bf3c111860662413597ba63d5769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3317f82bf1dfc26aa15f5e8830055ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae3317f82bf1dfc26aa15f5e8830055ff">LZXDStream</a> (const <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;other)=delete</td></tr>
<tr class="separator:ae3317f82bf1dfc26aa15f5e8830055ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5a65fcceb1f08dc30337137f322a35"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#abd5a65fcceb1f08dc30337137f322a35">LZXDStream</a> (<a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:abd5a65fcceb1f08dc30337137f322a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a738c1121848546e96e9272bbad5180db"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a738c1121848546e96e9272bbad5180db">operator=</a> (const <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;other)=delete</td></tr>
<tr class="separator:a738c1121848546e96e9272bbad5180db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37146b381d0eddb4aeb385eec9096c85"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a37146b381d0eddb4aeb385eec9096c85">operator=</a> (<a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&amp;other)=delete</td></tr>
<tr class="separator:a37146b381d0eddb4aeb385eec9096c85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12047565515e79d8fa7ae56c1459a724"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a12047565515e79d8fa7ae56c1459a724">decompress_next_frame</a> (unsigned char *output_buf)</td></tr>
<tr class="separator:a12047565515e79d8fa7ae56c1459a724"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21cc21ce03f6a6aa488e48661666bdd7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a21cc21ce03f6a6aa488e48661666bdd7">reset_state</a> ()</td></tr>
<tr class="separator:a21cc21ce03f6a6aa488e48661666bdd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad2a91fa7bf7fefb48ee08d52bd6ada15"><td class="memItemLeft" align="right" valign="top">ssize_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">output_pos</a></td></tr>
<tr class="separator:ad2a91fa7bf7fefb48ee08d52bd6ada15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75bf79fb077819e2f985cdeb99b4d558"><td class="memItemLeft" align="right" valign="top">unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a></td></tr>
<tr class="separator:a75bf79fb077819e2f985cdeb99b4d558"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7451bf0e50d43622780af37485037ecc"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a></td></tr>
<tr class="separator:a7451bf0e50d43622780af37485037ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ce8c008c7c4df2ab737f40a871cd261"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a></td></tr>
<tr class="separator:a8ce8c008c7c4df2ab737f40a871cd261"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fa5827f8aa17dca5216ddfa0274c4da"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a></td></tr>
<tr class="separator:a4fa5827f8aa17dca5216ddfa0274c4da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2b59324a0e966ee52206fc4140694a2"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">frame</a></td></tr>
<tr class="separator:ad2b59324a0e966ee52206fc4140694a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87e92b9f13204a689ff6dc9d0983c718"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a></td></tr>
<tr class="separator:a87e92b9f13204a689ff6dc9d0983c718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5742fb4e2d4057d1a7d2d7bc233289e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a></td></tr>
<tr class="separator:ab5742fb4e2d4057d1a7d2d7bc233289e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0664accf0c6f29475dd801d580ce8ab8"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a></td></tr>
<tr class="separator:a0664accf0c6f29475dd801d580ce8ab8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c1a5f708f3f6d444b4f496e8eb840a"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a></td></tr>
<tr class="separator:a53c1a5f708f3f6d444b4f496e8eb840a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2350cf0b912903acccc36ecef023fe0"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae2350cf0b912903acccc36ecef023fe0">block_length</a></td></tr>
<tr class="separator:ae2350cf0b912903acccc36ecef023fe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ca62b7fff8b704f8429542206d4ddc3"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a></td></tr>
<tr class="separator:a3ca62b7fff8b704f8429542206d4ddc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33e4a28cfa430c0a9f53fc36aa7784bb"><td class="memItemLeft" align="right" valign="top">signed int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a></td></tr>
<tr class="separator:a33e4a28cfa430c0a9f53fc36aa7784bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada584159bfea91c473a5a41e650a765d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">header_read</a></td></tr>
<tr class="separator:ada584159bfea91c473a5a41e650a765d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaf627d2099d2d79354c730f59d77ddc"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a></td></tr>
<tr class="separator:aaaf627d2099d2d79354c730f59d77ddc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e0e1171fcfe50f7d06e58c2a2923cd3"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">posn_slots</a></td></tr>
<tr class="separator:a4e0e1171fcfe50f7d06e58c2a2923cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbee9a6150c8c52cf8404bf343da4692"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">BitStream</a>&lt; 4096 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a></td></tr>
<tr class="separator:afbee9a6150c8c52cf8404bf343da4692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c0734cf2170ca3e28f39602dc7f8219"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt; <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#af91efa77f8f600907c489a0902749971">LZX_PRETREE_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a0332219afcf379226d035ccf047daaf6">LZX_PRETREE_TABLEBITS</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a1c0734cf2170ca3e28f39602dc7f8219">htpre</a></td></tr>
<tr class="separator:a1c0734cf2170ca3e28f39602dc7f8219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65b33752965b0f4b2ed1898603417ef1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt; <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a26cdb2480260be73fa269f982a416010">LZX_MAINTREE_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#aa0fc34af35349c165672483bf156d07c">LZX_MAINTREE_TABLEBITS</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a></td></tr>
<tr class="separator:a65b33752965b0f4b2ed1898603417ef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1ef6d1ea48f324c3a7fc293c4dcb68"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt; <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#ab6ee57ad31f7a4b2e5cbe80e5ff0bf78">LZX_LENGTH_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a277c86b93d58635990ad4fe855839fcb">LZX_LENGTH_TABLEBITS</a>, true &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a></td></tr>
<tr class="separator:acd1ef6d1ea48f324c3a7fc293c4dcb68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8671f082432c89e05797093348f16af0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt; <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#acfbbec691511fb87c1df869972edcc13">LZX_ALIGNED_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#ac7382afbfe3e70045b5471207c6f0b1c">LZX_ALIGNED_TABLEBITS</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a></td></tr>
<tr class="separator:a8671f082432c89e05797093348f16af0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:af98ef8408ba92de4f9e28010c3b2d6c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af98ef8408ba92de4f9e28010c3b2d6c8">init_next_block</a> ()</td></tr>
<tr class="separator:af98ef8408ba92de4f9e28010c3b2d6c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2830bc244fc83678fc56f6e44c057e7c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a2830bc244fc83678fc56f6e44c057e7c">decode_symbol_from_verbatim_block</a> ()</td></tr>
<tr class="separator:a2830bc244fc83678fc56f6e44c057e7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ced870a816503c5ae2c42756dc0adb2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0ced870a816503c5ae2c42756dc0adb2">decode_symbol_from_aligned_block</a> ()</td></tr>
<tr class="separator:a0ced870a816503c5ae2c42756dc0adb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af408bfffcc2e2e086066e13e1f6b96b7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af408bfffcc2e2e086066e13e1f6b96b7">read_data_from_uncompressed_block</a> (unsigned int size)</td></tr>
<tr class="separator:af408bfffcc2e2e086066e13e1f6b96b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae957302fdbdcb4e99f5264bfc8da3e42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae957302fdbdcb4e99f5264bfc8da3e42">postprocess_intel_e8</a> (unsigned char *output_buf, int frame_size)</td></tr>
<tr class="separator:ae957302fdbdcb4e99f5264bfc8da3e42"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00155">155</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a491af9a4f0c2abc632c70db8705f1782"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a491af9a4f0c2abc632c70db8705f1782">&#9670;&nbsp;</a></span>LZXDStream() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::compress::LZXDStream::LZXDStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a>&#160;</td>
          <td class="paramname"><em>callback</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>window_bits</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>reset_interval</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>See the doc for <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor.xhtml#abfa293c286465cc46f6a84bda5a8f908">LZXDecompressor::LZXDecompressor</a> in <a class="el" href="lzxd_8h.xhtml">lzxd.h</a> </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00415">415</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        :</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">output_pos</a>{0},</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>{(<span class="keywordtype">unsigned</span> int) 1 &lt;&lt; window_bits},</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>{0},</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a>{0},</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">frame</a>{0},</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a>{<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a>},</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>{read_callback},</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a1c0734cf2170ca3e28f39602dc7f8219">htpre</a>{<span class="keyword">this</span>},</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>{<span class="keyword">this</span>},</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>{<span class="keyword">this</span>},</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a>{<span class="keyword">this</span>} {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    <span class="comment">// LZX supports window sizes of 2^15 (32 KiB) through 2^21 (2 MiB)</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    <span class="keywordflow">if</span> (window_bits &lt; 15 || window_bits &gt; 21) {</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Bad requested window size: 2^&quot;</span> &lt;&lt; window_bits &lt;&lt; <span class="stringliteral">&quot; bytes&quot;</span>);</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    }</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="comment">// allocate decompression window</span></div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a> = <span class="keyword">new</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>[<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>];</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;    <span class="comment">// window bits:    15  16  17  18  19  20  21</span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    <span class="comment">// position slots: 30  32  34  36  38  42  50</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">posn_slots</a> = 2 * window_bits;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="keywordflow">if</span> (window_bits == 21) {</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">posn_slots</a> = 50;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    }</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">if</span> (window_bits == 20) {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">posn_slots</a> = 42;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;    }</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a21cc21ce03f6a6aa488e48661666bdd7">reset_state</a>();</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a4fa5827f8aa17dca5216ddfa0274c4da"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">openage::util::compress::LZXDStream::frame_posn</a></div><div class="ttdeci">unsigned int frame_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00162">lzxd.cpp:162</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a4e0e1171fcfe50f7d06e58c2a2923cd3"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">openage::util::compress::LZXDStream::posn_slots</a></div><div class="ttdeci">unsigned char posn_slots</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00176">lzxd.cpp:176</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8671f082432c89e05797093348f16af0"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">openage::util::compress::LZXDStream::htaligned</a></div><div class="ttdeci">HuffmanTable&lt; LZX_ALIGNED_MAXSYMBOLS, LZX_ALIGNED_TABLEBITS &gt; htaligned</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00185">lzxd.cpp:185</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a7451bf0e50d43622780af37485037ecc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">openage::util::compress::LZXDStream::window_size</a></div><div class="ttdeci">unsigned int window_size</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00160">lzxd.cpp:160</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a65b33752965b0f4b2ed1898603417ef1"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">openage::util::compress::LZXDStream::htmain</a></div><div class="ttdeci">HuffmanTable&lt; LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS &gt; htmain</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00183">lzxd.cpp:183</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a21cc21ce03f6a6aa488e48661666bdd7"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a21cc21ce03f6a6aa488e48661666bdd7">openage::util::compress::LZXDStream::reset_state</a></div><div class="ttdeci">void reset_state()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00458">lzxd.cpp:458</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2a91fa7bf7fefb48ee08d52bd6ada15"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">openage::util::compress::LZXDStream::output_pos</a></div><div class="ttdeci">ssize_t output_pos</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00157">lzxd.cpp:157</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2b59324a0e966ee52206fc4140694a2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">openage::util::compress::LZXDStream::frame</a></div><div class="ttdeci">unsigned int frame</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00163">lzxd.cpp:163</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_acd1ef6d1ea48f324c3a7fc293c4dcb68"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">openage::util::compress::LZXDStream::htlength</a></div><div class="ttdeci">HuffmanTable&lt; LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true &gt; htlength</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00184">lzxd.cpp:184</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8ce8c008c7c4df2ab737f40a871cd261"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">openage::util::compress::LZXDStream::window_posn</a></div><div class="ttdeci">unsigned int window_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00161">lzxd.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a87e92b9f13204a689ff6dc9d0983c718"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">openage::util::compress::LZXDStream::reset_interval</a></div><div class="ttdeci">unsigned int reset_interval</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00164">lzxd.cpp:164</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a1c0734cf2170ca3e28f39602dc7f8219"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a1c0734cf2170ca3e28f39602dc7f8219">openage::util::compress::LZXDStream::htpre</a></div><div class="ttdeci">HuffmanTable&lt; LZX_PRETREE_MAXSYMBOLS, LZX_PRETREE_TABLEBITS &gt; htpre</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00182">lzxd.cpp:182</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ac5a5bf3c111860662413597ba63d5769"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5a5bf3c111860662413597ba63d5769">&#9670;&nbsp;</a></span>~LZXDStream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::compress::LZXDStream::~LZXDStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00453">453</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                        {</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;    <span class="keyword">delete</span>[] this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>;</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00159">window</a>.</p>

</div>
</div>
<a id="ae3317f82bf1dfc26aa15f5e8830055ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3317f82bf1dfc26aa15f5e8830055ff">&#9670;&nbsp;</a></span>LZXDStream() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::compress::LZXDStream::LZXDStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="abd5a65fcceb1f08dc30337137f322a35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd5a65fcceb1f08dc30337137f322a35">&#9670;&nbsp;</a></span>LZXDStream() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::compress::LZXDStream::LZXDStream </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0ced870a816503c5ae2c42756dc0adb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ced870a816503c5ae2c42756dc0adb2">&#9670;&nbsp;</a></span>decode_symbol_from_aligned_block()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int openage::util::compress::LZXDStream::decode_symbol_from_aligned_block </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Decodes one symbol from the current aligned block. Returns the number of bytes that were decoded. The bytes are written to the window, and window_posn is advanced. </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00617">617</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;                                                 {</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    <span class="keywordtype">int</span> main_element = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;    <span class="keywordflow">if</span> (main_element &lt; (<span class="keywordtype">int</span>) <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">LZX_NUM_CHARS</a>) {</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;        <span class="comment">// literal: 0 to LZX_NUM_CHARS - 1</span></div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>++] = main_element;</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    }</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;    <span class="comment">// match: LZX_NUM_CHARS + ((slot&lt;&lt;3) | length_header (3 bits))</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    main_element -= <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">LZX_NUM_CHARS</a>;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;    <span class="comment">// get match length</span></div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;    <span class="keywordtype">int</span> match_length = main_element &amp; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">LZX_NUM_PRIMARY_LENGTHS</a>;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    <span class="keywordflow">if</span> (match_length == <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">LZX_NUM_PRIMARY_LENGTHS</a>) {</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">is_empty</a>)) {</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: length symbol needed byt tree is empty&quot;</span>);</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        }</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordtype">int</span> length_footer = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;        match_length += length_footer;</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    }</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;    match_length += <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#aa0e09ec612ba2d2ea51ec2a4c8ff3d49">LZX_MIN_MATCH</a>;</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;    <span class="comment">// get match offset</span></div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;    <span class="keywordtype">unsigned</span> match_offset = (main_element &gt;&gt; 3);</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;    <span class="keywordflow">switch</span> (match_offset) {</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a>;</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a>;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;        <span class="keywordtype">int</span> extra = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a4124e3ae9c8211d05e8457cb16182896">extra_bits</a>[match_offset];</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        match_offset = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a24c3f0ac8013e7040eb0fd87243e1972">position_base</a>[match_offset] - 2;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">if</span> (extra &gt; 3) {</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            <span class="comment">// verbatim and aligned bits</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            extra -= 3;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;            <span class="keywordtype">int</span> verbatim_bits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(extra);</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            match_offset += (verbatim_bits &lt;&lt; 3);</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            <span class="keywordtype">int</span> aligned_bits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;            match_offset += aligned_bits;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        }</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (extra == 3) {</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            <span class="comment">// aligned bits only</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            <span class="keywordtype">int</span> aligned_bits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            match_offset += aligned_bits;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        }</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (extra &gt; 0) {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            <span class="comment">// extra==1, extra==2</span></div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;            <span class="comment">// verbatim bits only</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordtype">int</span> verbatim_bits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(extra);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            match_offset += verbatim_bits;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        }</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            <span class="comment">// extra == 0</span></div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            <span class="comment">// ??? not defined in LZX specification!</span></div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;            match_offset = 1;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        }</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <span class="comment">// update repeated offset LRU queue</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a>;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;    }</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>((this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a> + match_length) &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>)) {</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: match ran over window wrap&quot;</span>);</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;    }</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    <span class="comment">// copy match</span></div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *rundest = &amp;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>];</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    <span class="keywordtype">int</span> i = match_length;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    <span class="comment">// does match offset wrap the window?</span></div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;    <span class="keywordflow">if</span> (match_offset &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>) {</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <span class="comment">// j = length from match offset to end of window</span></div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="keywordtype">int</span> j = match_offset - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(j &gt; (<span class="keywordtype">int</span>) this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>)) {</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: match offset beyond window boundaries&quot;</span>);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        }</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *runsrc = &amp;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;window_size - j];</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        <span class="keywordflow">if</span> (j &lt; i) {</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            <span class="comment">// if match goes over the window edge, do two copy runs</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            i -= j;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            <span class="keywordflow">while</span> (j-- &gt; 0) {</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;                *rundest++ = *runsrc++;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            }</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            runsrc = <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>;</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;        }</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="keywordflow">while</span> (i-- &gt; 0) {</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            *rundest++ = *runsrc++;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        }</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *runsrc = rundest - match_offset;</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;        <span class="keywordflow">while</span> (i-- &gt; 0) {</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;            *rundest++ = *runsrc++;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        }</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;    }</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    this-&gt;window_posn += match_length;</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="keywordflow">return</span>               match_length;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ab5742fb4e2d4057d1a7d2d7bc233289e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">openage::util::compress::LZXDStream::R0</a></div><div class="ttdeci">unsigned int R0</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_abd6796af7934ef7bd5f8e84f3fb8af56"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">openage::util::compress::LZX_NUM_PRIMARY_LENGTHS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_PRIMARY_LENGTHS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00045">lzxd.cpp:45</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8671f082432c89e05797093348f16af0"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">openage::util::compress::LZXDStream::htaligned</a></div><div class="ttdeci">HuffmanTable&lt; LZX_ALIGNED_MAXSYMBOLS, LZX_ALIGNED_TABLEBITS &gt; htaligned</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00185">lzxd.cpp:185</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a7451bf0e50d43622780af37485037ecc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">openage::util::compress::LZXDStream::window_size</a></div><div class="ttdeci">unsigned int window_size</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00160">lzxd.cpp:160</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a65b33752965b0f4b2ed1898603417ef1"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">openage::util::compress::LZXDStream::htmain</a></div><div class="ttdeci">HuffmanTable&lt; LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS &gt; htmain</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00183">lzxd.cpp:183</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_aa0e09ec612ba2d2ea51ec2a4c8ff3d49"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#aa0e09ec612ba2d2ea51ec2a4c8ff3d49">openage::util::compress::LZX_MIN_MATCH</a></div><div class="ttdeci">constexpr unsigned LZX_MIN_MATCH</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00036">lzxd.cpp:36</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a7df946fa968a570c9bde8aaa9437d1f2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">openage::util::compress::HuffmanTable::is_empty</a></div><div class="ttdeci">bool is_empty</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00121">lzxd.cpp:121</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_acab149685574ec8b787e3d805e036885"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">openage::util::compress::LZX_NUM_CHARS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_CHARS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00038">lzxd.cpp:38</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a0664accf0c6f29475dd801d580ce8ab8"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">openage::util::compress::LZXDStream::R1</a></div><div class="ttdeci">unsigned int R1</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_acd1ef6d1ea48f324c3a7fc293c4dcb68"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">openage::util::compress::LZXDStream::htlength</a></div><div class="ttdeci">HuffmanTable&lt; LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true &gt; htlength</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00184">lzxd.cpp:184</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a4124e3ae9c8211d05e8457cb16182896"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a4124e3ae9c8211d05e8457cb16182896">openage::util::compress::extra_bits</a></div><div class="ttdeci">static const unsigned char extra_bits[]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00086">lzxd.cpp:86</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_ae6b32648570816ac41436130bd87f3be"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">openage::util::compress::HuffmanTable::read_sym</a></div><div class="ttdeci">int read_sym()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00240">lzxd.cpp:240</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8ce8c008c7c4df2ab737f40a871cd261"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">openage::util::compress::LZXDStream::window_posn</a></div><div class="ttdeci">unsigned int window_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00161">lzxd.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af4522bbae0ee989e1f5b45606fb2e673"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">openage::util::compress::BitStream::read_bits</a></div><div class="ttdeci">unsigned read_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00315">bitstream.h:315</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a24c3f0ac8013e7040eb0fd87243e1972"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a24c3f0ac8013e7040eb0fd87243e1972">openage::util::compress::position_base</a></div><div class="ttdeci">static const unsigned position_base[]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00078">lzxd.cpp:78</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a53c1a5f708f3f6d444b4f496e8eb840a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">openage::util::compress::LZXDStream::R2</a></div><div class="ttdeci">unsigned int R2</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00179">bits</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00086">openage::util::compress::extra_bits</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00185">htaligned</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00184">htlength</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00183">htmain</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00121">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::is_empty</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00036">openage::util::compress::LZX_MIN_MATCH</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00038">openage::util::compress::LZX_NUM_CHARS</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00045">openage::util::compress::LZX_NUM_PRIMARY_LENGTHS</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00078">openage::util::compress::position_base</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R0</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R1</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R2</a>, <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_bits()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00240">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::read_sym()</a>, <a class="el" href="compiler_8h_source.xhtml#l00053">unlikely</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00159">window</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00161">window_posn</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00160">window_size</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a0ced870a816503c5ae2c42756dc0adb2_cgraph.svg" width="434" height="170"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a0ced870a816503c5ae2c42756dc0adb2_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a2830bc244fc83678fc56f6e44c057e7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2830bc244fc83678fc56f6e44c057e7c">&#9670;&nbsp;</a></span>decode_symbol_from_verbatim_block()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int openage::util::compress::LZXDStream::decode_symbol_from_verbatim_block </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Decodes one symbol from the current verbatim block. Returns the number of bytes that were decoded. The bytes are written to the window, and window_posn is advanced. </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00526">526</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;                                                  {</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    <span class="keywordtype">int</span> main_element = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;    <span class="keywordflow">if</span> (main_element &lt; (<span class="keywordtype">int</span>) <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">LZX_NUM_CHARS</a>) {</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <span class="comment">// literal: 0 to LZX_NUM_CHARS-1</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>++] = main_element;</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    }</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    <span class="comment">// match: LZX_NUM_CHARS + ((slot&lt;&lt;3) | length_header (3 bits))</span></div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;    main_element -= <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">LZX_NUM_CHARS</a>;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;    <span class="comment">// get match length</span></div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;    <span class="keywordtype">int</span> match_length = main_element &amp; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">LZX_NUM_PRIMARY_LENGTHS</a>;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;    <span class="keywordflow">if</span> (match_length == <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">LZX_NUM_PRIMARY_LENGTHS</a>) {</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">is_empty</a>)) {</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: LENGTH symbol needed byt tree is empty&quot;</span>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        }</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;        <span class="keywordtype">int</span> length_footer = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">read_sym</a>();</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;        match_length += length_footer;</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    }</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    match_length += <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#aa0e09ec612ba2d2ea51ec2a4c8ff3d49">LZX_MIN_MATCH</a>;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="comment">// get match offset</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordtype">unsigned</span> match_offset = (main_element &gt;&gt; 3);</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keywordflow">switch</span> (match_offset) {</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordflow">case</span> 1:</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a>;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordflow">case</span> 2:</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        match_offset = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a>;</div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;    <span class="keywordflow">case</span> 3:</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        match_offset = 1;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a>;</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;        <span class="keywordtype">int</span> extra = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a4124e3ae9c8211d05e8457cb16182896">extra_bits</a>[match_offset];</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        <span class="keywordtype">int</span> verbatim_bits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(extra);</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;        match_offset = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a24c3f0ac8013e7040eb0fd87243e1972">position_base</a>[match_offset] - 2 + verbatim_bits;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a>;</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a>;</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = match_offset;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;    }</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>((this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a> + match_length) &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>)) {</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: match ran over window wrap&quot;</span>);</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    }</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;    <span class="comment">// copy match</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *rundest = &amp;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>];</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;    <span class="keywordtype">int</span> i = match_length;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;    <span class="comment">// does match offset wrap the window?</span></div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;    <span class="keywordflow">if</span> (match_offset &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>) {</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="comment">// j = length from match offset to end of window</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="keywordtype">int</span> j = match_offset - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(j &gt; (<span class="keywordtype">int</span>) this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>)) {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: match offset beyond window boundaries&quot;</span>);</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;        }</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *runsrc = &amp;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;window_size - j];</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        <span class="keywordflow">if</span> (j &lt; i) {</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;            <span class="comment">// if match goes over the window edge, do two copy runs</span></div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;            i -= j;</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;            <span class="keywordflow">while</span> (j-- &gt; 0) {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;                *rundest++ = *runsrc++;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;            }</div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;            runsrc = <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>;</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;        }</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="keywordflow">while</span> (i-- &gt; 0) {</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;            *rundest++ = *runsrc++;</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;        }</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *runsrc = rundest - match_offset;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;        <span class="keywordflow">while</span> (i-- &gt; 0) {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;            *rundest++ = *runsrc++;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        }</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    }</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    this-&gt;window_posn += match_length;</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    <span class="keywordflow">return</span>               match_length;</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ab5742fb4e2d4057d1a7d2d7bc233289e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">openage::util::compress::LZXDStream::R0</a></div><div class="ttdeci">unsigned int R0</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_abd6796af7934ef7bd5f8e84f3fb8af56"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#abd6796af7934ef7bd5f8e84f3fb8af56">openage::util::compress::LZX_NUM_PRIMARY_LENGTHS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_PRIMARY_LENGTHS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00045">lzxd.cpp:45</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a7451bf0e50d43622780af37485037ecc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">openage::util::compress::LZXDStream::window_size</a></div><div class="ttdeci">unsigned int window_size</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00160">lzxd.cpp:160</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a65b33752965b0f4b2ed1898603417ef1"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">openage::util::compress::LZXDStream::htmain</a></div><div class="ttdeci">HuffmanTable&lt; LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS &gt; htmain</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00183">lzxd.cpp:183</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_aa0e09ec612ba2d2ea51ec2a4c8ff3d49"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#aa0e09ec612ba2d2ea51ec2a4c8ff3d49">openage::util::compress::LZX_MIN_MATCH</a></div><div class="ttdeci">constexpr unsigned LZX_MIN_MATCH</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00036">lzxd.cpp:36</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a7df946fa968a570c9bde8aaa9437d1f2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">openage::util::compress::HuffmanTable::is_empty</a></div><div class="ttdeci">bool is_empty</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00121">lzxd.cpp:121</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_acab149685574ec8b787e3d805e036885"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">openage::util::compress::LZX_NUM_CHARS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_CHARS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00038">lzxd.cpp:38</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a0664accf0c6f29475dd801d580ce8ab8"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">openage::util::compress::LZXDStream::R1</a></div><div class="ttdeci">unsigned int R1</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_acd1ef6d1ea48f324c3a7fc293c4dcb68"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">openage::util::compress::LZXDStream::htlength</a></div><div class="ttdeci">HuffmanTable&lt; LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true &gt; htlength</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00184">lzxd.cpp:184</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a4124e3ae9c8211d05e8457cb16182896"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a4124e3ae9c8211d05e8457cb16182896">openage::util::compress::extra_bits</a></div><div class="ttdeci">static const unsigned char extra_bits[]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00086">lzxd.cpp:86</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_ae6b32648570816ac41436130bd87f3be"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#ae6b32648570816ac41436130bd87f3be">openage::util::compress::HuffmanTable::read_sym</a></div><div class="ttdeci">int read_sym()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00240">lzxd.cpp:240</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8ce8c008c7c4df2ab737f40a871cd261"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">openage::util::compress::LZXDStream::window_posn</a></div><div class="ttdeci">unsigned int window_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00161">lzxd.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af4522bbae0ee989e1f5b45606fb2e673"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">openage::util::compress::BitStream::read_bits</a></div><div class="ttdeci">unsigned read_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00315">bitstream.h:315</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a24c3f0ac8013e7040eb0fd87243e1972"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a24c3f0ac8013e7040eb0fd87243e1972">openage::util::compress::position_base</a></div><div class="ttdeci">static const unsigned position_base[]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00078">lzxd.cpp:78</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a53c1a5f708f3f6d444b4f496e8eb840a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">openage::util::compress::LZXDStream::R2</a></div><div class="ttdeci">unsigned int R2</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00179">bits</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00086">openage::util::compress::extra_bits</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00184">htlength</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00183">htmain</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00121">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::is_empty</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00036">openage::util::compress::LZX_MIN_MATCH</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00038">openage::util::compress::LZX_NUM_CHARS</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00045">openage::util::compress::LZX_NUM_PRIMARY_LENGTHS</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00078">openage::util::compress::position_base</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R0</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R1</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R2</a>, <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_bits()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00240">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::read_sym()</a>, <a class="el" href="compiler_8h_source.xhtml#l00053">unlikely</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00159">window</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00161">window_posn</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00160">window_size</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a2830bc244fc83678fc56f6e44c057e7c_cgraph.svg" width="434" height="170"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a2830bc244fc83678fc56f6e44c057e7c_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a12047565515e79d8fa7ae56c1459a724"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12047565515e79d8fa7ae56c1459a724">&#9670;&nbsp;</a></span>decompress_next_frame()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned openage::util::compress::LZXDStream::decompress_next_frame </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>output_buf</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>See the doc for <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor.xhtml#ad03ce7fd20c3abe824f61dd382bab43c">LZXDecompressor::decompress_next_frame</a> in <a class="el" href="lzxd_8h.xhtml">lzxd.h</a> </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00740">740</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;                                                                    {</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a>)) {</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="comment">// have we reached the reset interval? (if there is one?)</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a> &amp;&amp; ((this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">frame</a> % this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">reset_interval</a>) == 0))) {</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a>)) {</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a> &lt;&lt; <span class="stringliteral">&quot; bytes remaining at reset interval&quot;</span>);</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        }</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;</div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        <span class="comment">// re-read the intel header and reset the huffman lengths</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a21cc21ce03f6a6aa488e48661666bdd7">reset_state</a>();</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;    }</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;    <span class="comment">// read header if necessary (after initializing or resetting the stream).</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(!this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">header_read</a>)) {</div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        <span class="comment">// the first bit of the header indicates whether the e8_magic field is present.</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(1)) {</div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;            <span class="comment">// read e8_magic (32 bits).</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(16) &lt;&lt; 16;</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a> |= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(16);</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;            <span class="comment">// e8_magic is zero.</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a> = 0;</div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        }</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">header_read</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;    }</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="comment">// counter that stores the amount of data that has been accumulated for this frame.</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> frame_size = 0;</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>)) {</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        <span class="comment">// Warning: untested code.</span></div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="comment">// In theory, a symbol may have overshot the last frame&#39;s boundary.</span></div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;        <span class="comment">// If it did, the amount of data would be available in frame_size.</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;            <span class="stringliteral">&quot;untested code path: extra frame data available from last frame. &quot;</span> &lt;&lt;</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            <span class="stringliteral">&quot;frame size = &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>);</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;    }</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="comment">// decode symbols until we have enough data for the frame.</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    <span class="keywordflow">while</span> (frame_size &lt; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a72fc5c91c3e79ff1d0e2348b50b8f013">LZX_FRAME_SIZE</a>) {</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        <span class="comment">// initialise next block, if one is needed</span></div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a> == 0)) {</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a>) {</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;                <span class="comment">// EOF of input stream was reached at a block boundary.</span></div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;                <span class="comment">// there are no more blocks. Return the frame as-is.</span></div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;            }</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af98ef8408ba92de4f9e28010c3b2d6c8">init_next_block</a>();</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        }</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> symbol_size;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        <span class="keywordflow">switch</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a>) {</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a4bd87f3542f41c380c17ab677e862def">LZX_BLOCKTYPE_VERBATIM</a>:</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;            symbol_size = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a2830bc244fc83678fc56f6e44c057e7c">decode_symbol_from_verbatim_block</a>();</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#ae2792f791635463a2e096c00caa867f9">LZX_BLOCKTYPE_ALIGNED</a>:</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;            symbol_size = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0ced870a816503c5ae2c42756dc0adb2">decode_symbol_from_aligned_block</a>();</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;        <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a185998c032b4c2440610ff414caed40f">LZX_BLOCKTYPE_UNCOMPRESSED</a>:</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;            symbol_size = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af408bfffcc2e2e086066e13e1f6b96b7">read_data_from_uncompressed_block</a>(<a class="code" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">std::min</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a>, <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a72fc5c91c3e79ff1d0e2348b50b8f013">LZX_FRAME_SIZE</a> - frame_size));</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;this-&gt;blocktype neither verbatim nor aligned&quot;</span>);</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        }</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(symbol_size &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a>)) {</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;            <span class="comment">// we overshot the block boundary.</span></div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: overrun went past end of block by &quot;</span> &lt;&lt; symbol_size - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a>);</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        }</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a> -= symbol_size;</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        frame_size += symbol_size;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;    }</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(frame_size &gt; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a72fc5c91c3e79ff1d0e2348b50b8f013">LZX_FRAME_SIZE</a>)) {</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        <span class="comment">// Warning: untested code.</span></div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;        <span class="comment">// In theory, a symbol may overshoot a frame boundary. If it does, the data</span></div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        <span class="comment">// will get re-used in the next frame, but we have to limit frame_size to LZX_FRAME_SIZE.</span></div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;untested code path: frame_size &gt; LZX_FRAME_SIZE&quot;</span>);</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        frame_size = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a72fc5c91c3e79ff1d0e2348b50b8f013">LZX_FRAME_SIZE</a>;</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;    }</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;    <span class="comment">// streams don&#39;t extend over frame boundaries</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a> != this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> + frame_size)) {</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: decode beyond output frame limits&quot;</span>);</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;    }</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="comment">// copy frame data to the output buffer</span></div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;    memcpy(output_buf, &amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a>], frame_size);</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;    <span class="comment">// intel e8-postprocess the frame data</span></div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae957302fdbdcb4e99f5264bfc8da3e42">postprocess_intel_e8</a>(output_buf, frame_size);</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;    <span class="comment">// frame boundary; re-align the bitstream, if it&#39;s currently in bitstream mode.</span></div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a9740c842e2425f54ddfc168c0df8bb">align_if_in_bitstream_mode</a>();</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;    <span class="comment">// advance frame start position</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> += frame_size;</div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;    <span class="comment">// wrap window / frame position pointers</span></div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a> == this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>) {</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a> = 0;</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;    }</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> == this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">window_size</a>) {</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">frame_posn</a> = 0;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;    }</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">output_pos</a> += frame_size;</div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">frame</a>++;</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    <span class="keywordflow">return</span> frame_size;</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_aaaf627d2099d2d79354c730f59d77ddc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">openage::util::compress::LZXDStream::block_type</a></div><div class="ttdeci">unsigned char block_type</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00175">lzxd.cpp:175</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a4bd87f3542f41c380c17ab677e862def"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a4bd87f3542f41c380c17ab677e862def">openage::util::compress::LZX_BLOCKTYPE_VERBATIM</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_VERBATIM</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00040">lzxd.cpp:40</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a7a9740c842e2425f54ddfc168c0df8bb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a9740c842e2425f54ddfc168c0df8bb">openage::util::compress::BitStream::align_if_in_bitstream_mode</a></div><div class="ttdeci">void align_if_in_bitstream_mode()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00428">bitstream.h:428</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a0ced870a816503c5ae2c42756dc0adb2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0ced870a816503c5ae2c42756dc0adb2">openage::util::compress::LZXDStream::decode_symbol_from_aligned_block</a></div><div class="ttdeci">int decode_symbol_from_aligned_block()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00617">lzxd.cpp:617</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a4fa5827f8aa17dca5216ddfa0274c4da"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4fa5827f8aa17dca5216ddfa0274c4da">openage::util::compress::LZXDStream::frame_posn</a></div><div class="ttdeci">unsigned int frame_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00162">lzxd.cpp:162</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_ae2792f791635463a2e096c00caa867f9"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#ae2792f791635463a2e096c00caa867f9">openage::util::compress::LZX_BLOCKTYPE_ALIGNED</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_ALIGNED</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00041">lzxd.cpp:41</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a34591a1d8ee5da3f16f56554590d5e16"><div class="ttname"><a href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">std::min</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; min(openage::util::FixedPoint&lt; I, F &gt; x, openage::util::FixedPoint&lt; I, F &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00475">fixed_point.h:475</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a3ca62b7fff8b704f8429542206d4ddc3"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">openage::util::compress::LZXDStream::block_remaining</a></div><div class="ttdeci">unsigned int block_remaining</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00168">lzxd.cpp:168</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a7451bf0e50d43622780af37485037ecc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a7451bf0e50d43622780af37485037ecc">openage::util::compress::LZXDStream::window_size</a></div><div class="ttdeci">unsigned int window_size</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00160">lzxd.cpp:160</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a21cc21ce03f6a6aa488e48661666bdd7"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a21cc21ce03f6a6aa488e48661666bdd7">openage::util::compress::LZXDStream::reset_state</a></div><div class="ttdeci">void reset_state()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00458">lzxd.cpp:458</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2a91fa7bf7fefb48ee08d52bd6ada15"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">openage::util::compress::LZXDStream::output_pos</a></div><div class="ttdeci">ssize_t output_pos</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00157">lzxd.cpp:157</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2b59324a0e966ee52206fc4140694a2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">openage::util::compress::LZXDStream::frame</a></div><div class="ttdeci">unsigned int frame</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00163">lzxd.cpp:163</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a72fc5c91c3e79ff1d0e2348b50b8f013"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a72fc5c91c3e79ff1d0e2348b50b8f013">openage::util::compress::LZX_FRAME_SIZE</a></div><div class="ttdeci">constexpr unsigned LZX_FRAME_SIZE</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8h_source.xhtml#l00016">lzxd.h:16</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_af408bfffcc2e2e086066e13e1f6b96b7"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af408bfffcc2e2e086066e13e1f6b96b7">openage::util::compress::LZXDStream::read_data_from_uncompressed_block</a></div><div class="ttdeci">unsigned int read_data_from_uncompressed_block(unsigned int size)</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00727">lzxd.cpp:727</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_af98ef8408ba92de4f9e28010c3b2d6c8"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#af98ef8408ba92de4f9e28010c3b2d6c8">openage::util::compress::LZXDStream::init_next_block</a></div><div class="ttdeci">void init_next_block()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00477">lzxd.cpp:477</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8ce8c008c7c4df2ab737f40a871cd261"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">openage::util::compress::LZXDStream::window_posn</a></div><div class="ttdeci">unsigned int window_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00161">lzxd.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ae957302fdbdcb4e99f5264bfc8da3e42"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae957302fdbdcb4e99f5264bfc8da3e42">openage::util::compress::LZXDStream::postprocess_intel_e8</a></div><div class="ttdeci">void postprocess_intel_e8(unsigned char *output_buf, int frame_size)</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00863">lzxd.cpp:863</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a87e92b9f13204a689ff6dc9d0983c718"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a87e92b9f13204a689ff6dc9d0983c718">openage::util::compress::LZXDStream::reset_interval</a></div><div class="ttdeci">unsigned int reset_interval</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00164">lzxd.cpp:164</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a33e4a28cfa430c0a9f53fc36aa7784bb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">openage::util::compress::LZXDStream::e8_magic</a></div><div class="ttdeci">signed int e8_magic</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00170">lzxd.cpp:170</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af4522bbae0ee989e1f5b45606fb2e673"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">openage::util::compress::BitStream::read_bits</a></div><div class="ttdeci">unsigned read_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00315">bitstream.h:315</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a185998c032b4c2440610ff414caed40f"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a185998c032b4c2440610ff414caed40f">openage::util::compress::LZX_BLOCKTYPE_UNCOMPRESSED</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_UNCOMPRESSED</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00042">lzxd.cpp:42</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ada584159bfea91c473a5a41e650a765d"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">openage::util::compress::LZXDStream::header_read</a></div><div class="ttdeci">bool header_read</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00173">lzxd.cpp:173</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af838909174b3ceb524b2a84d601eae40"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">openage::util::compress::BitStream::eof</a></div><div class="ttdeci">unsigned char eof</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00074">bitstream.h:74</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a2830bc244fc83678fc56f6e44c057e7c"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a2830bc244fc83678fc56f6e44c057e7c">openage::util::compress::LZXDStream::decode_symbol_from_verbatim_block</a></div><div class="ttdeci">int decode_symbol_from_verbatim_block()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00526">lzxd.cpp:526</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="bitstream_8h_source.xhtml#l00428">openage::util::compress::BitStream&lt; inbuf_size &gt;::align_if_in_bitstream_mode()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00179">bits</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00168">block_remaining</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00175">block_type</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00170">e8_magic</a>, <a class="el" href="bitstream_8h_source.xhtml#l00074">openage::util::compress::BitStream&lt; inbuf_size &gt;::eof</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00163">frame</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00162">frame_posn</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00173">header_read</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00041">openage::util::compress::LZX_BLOCKTYPE_ALIGNED</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00042">openage::util::compress::LZX_BLOCKTYPE_UNCOMPRESSED</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00040">openage::util::compress::LZX_BLOCKTYPE_VERBATIM</a>, <a class="el" href="lzxd_8h_source.xhtml#l00016">openage::util::compress::LZX_FRAME_SIZE</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00475">std::min()</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00157">output_pos</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00863">postprocess_intel_e8()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_bits()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00727">read_data_from_uncompressed_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00164">reset_interval</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>, <a class="el" href="compiler_8h_source.xhtml#l00053">unlikely</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00159">window</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00161">window_posn</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00160">window_size</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00928">openage::util::compress::LZXDecompressor::decompress_next_frame()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a12047565515e79d8fa7ae56c1459a724_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a12047565515e79d8fa7ae56c1459a724_icgraph.svg" width="455" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="af98ef8408ba92de4f9e28010c3b2d6c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af98ef8408ba92de4f9e28010c3b2d6c8">&#9670;&nbsp;</a></span>init_next_block()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::util::compress::LZXDStream::init_next_block </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initializes the next block. </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00477">477</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                                 {</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="comment">// we might still be in bytstream mode from the previous block.</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a0a33a092ac1b0b664ecf4ced11e1a313">switch_to_bitstream_mode</a>();</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="comment">// read block type (3 bits) and block length (24 bits)</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(3);</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae2350cf0b912903acccc36ecef023fe0">block_length</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(16) &lt;&lt; 8;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae2350cf0b912903acccc36ecef023fe0">block_length</a> |= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(8);</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae2350cf0b912903acccc36ecef023fe0">block_length</a>;</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="comment">// read individual block headers</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;    <span class="keywordflow">switch</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a>) {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#ae2792f791635463a2e096c00caa867f9">LZX_BLOCKTYPE_ALIGNED</a>:</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="comment">// read lengths of and build aligned huffman decoding tree</span></div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 8; i++) {</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a3bbe52e654dd6ad728e626cb84b1400e">len</a>[i] = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a>(3);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        }</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">htaligned</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a1e2e81d74fd03fd894c4acf72227cc2d">make_decode_table</a>();</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="comment">// Falls through.</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;        <span class="comment">// Rest of aligned header is same as verbatim</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a4bd87f3542f41c380c17ab677e862def">LZX_BLOCKTYPE_VERBATIM</a>:</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="comment">// read lengths of and build main huffman decoding tree</span></div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a281ecfaf32eb7102310771c48034e107">read_lengths</a>(0, 256);</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a281ecfaf32eb7102310771c48034e107">read_lengths</a>(256, <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">LZX_NUM_CHARS</a> + (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">posn_slots</a> &lt;&lt; 3));</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a1e2e81d74fd03fd894c4acf72227cc2d">make_decode_table</a>();</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        <span class="comment">// read lengths of and build lengths huffman decoding tree</span></div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a281ecfaf32eb7102310771c48034e107">read_lengths</a>(0, <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#acc00b52c00f768cbc18595d59a8be848">LZX_NUM_SECONDARY_LENGTHS</a>);</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">is_empty</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a1e2e81d74fd03fd894c4acf72227cc2d">make_decode_table</a>();</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    <span class="keywordflow">case</span> <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a185998c032b4c2440610ff414caed40f">LZX_BLOCKTYPE_UNCOMPRESSED</a>:</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af9c25fda38455fbfc348a777e109d03e">switch_to_bytestream_mode</a>();</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="comment">// read 12 bytes of stored R0 / R1 / R2 values</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a80c91d5b7ddc061dd9082827286f0e1e">read_4bytes_le</a>();</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a80c91d5b7ddc061dd9082827286f0e1e">read_4bytes_le</a>();</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a80c91d5b7ddc061dd9082827286f0e1e">read_4bytes_le</a>();</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;decrunch: bad block type &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a>);</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;    }</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_aaaf627d2099d2d79354c730f59d77ddc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">openage::util::compress::LZXDStream::block_type</a></div><div class="ttdeci">unsigned char block_type</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00175">lzxd.cpp:175</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a4bd87f3542f41c380c17ab677e862def"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a4bd87f3542f41c380c17ab677e862def">openage::util::compress::LZX_BLOCKTYPE_VERBATIM</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_VERBATIM</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00040">lzxd.cpp:40</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ab5742fb4e2d4057d1a7d2d7bc233289e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">openage::util::compress::LZXDStream::R0</a></div><div class="ttdeci">unsigned int R0</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a4e0e1171fcfe50f7d06e58c2a2923cd3"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a4e0e1171fcfe50f7d06e58c2a2923cd3">openage::util::compress::LZXDStream::posn_slots</a></div><div class="ttdeci">unsigned char posn_slots</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00176">lzxd.cpp:176</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_ae2792f791635463a2e096c00caa867f9"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#ae2792f791635463a2e096c00caa867f9">openage::util::compress::LZX_BLOCKTYPE_ALIGNED</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_ALIGNED</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00041">lzxd.cpp:41</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8671f082432c89e05797093348f16af0"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8671f082432c89e05797093348f16af0">openage::util::compress::LZXDStream::htaligned</a></div><div class="ttdeci">HuffmanTable&lt; LZX_ALIGNED_MAXSYMBOLS, LZX_ALIGNED_TABLEBITS &gt; htaligned</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00185">lzxd.cpp:185</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a3ca62b7fff8b704f8429542206d4ddc3"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">openage::util::compress::LZXDStream::block_remaining</a></div><div class="ttdeci">unsigned int block_remaining</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00168">lzxd.cpp:168</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a65b33752965b0f4b2ed1898603417ef1"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">openage::util::compress::LZXDStream::htmain</a></div><div class="ttdeci">HuffmanTable&lt; LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS &gt; htmain</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00183">lzxd.cpp:183</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a7df946fa968a570c9bde8aaa9437d1f2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a7df946fa968a570c9bde8aaa9437d1f2">openage::util::compress::HuffmanTable::is_empty</a></div><div class="ttdeci">bool is_empty</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00121">lzxd.cpp:121</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a1e2e81d74fd03fd894c4acf72227cc2d"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a1e2e81d74fd03fd894c4acf72227cc2d">openage::util::compress::HuffmanTable::make_decode_table</a></div><div class="ttdeci">void make_decode_table()</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00259">lzxd.cpp:259</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af9c25fda38455fbfc348a777e109d03e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af9c25fda38455fbfc348a777e109d03e">openage::util::compress::BitStream::switch_to_bytestream_mode</a></div><div class="ttdeci">void switch_to_bytestream_mode()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00406">bitstream.h:406</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_acab149685574ec8b787e3d805e036885"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#acab149685574ec8b787e3d805e036885">openage::util::compress::LZX_NUM_CHARS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_CHARS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00038">lzxd.cpp:38</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a0664accf0c6f29475dd801d580ce8ab8"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">openage::util::compress::LZXDStream::R1</a></div><div class="ttdeci">unsigned int R1</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a80c91d5b7ddc061dd9082827286f0e1e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a80c91d5b7ddc061dd9082827286f0e1e">openage::util::compress::BitStream::read_4bytes_le</a></div><div class="ttdeci">unsigned int read_4bytes_le()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00368">bitstream.h:368</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_acd1ef6d1ea48f324c3a7fc293c4dcb68"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">openage::util::compress::LZXDStream::htlength</a></div><div class="ttdeci">HuffmanTable&lt; LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true &gt; htlength</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00184">lzxd.cpp:184</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_acc00b52c00f768cbc18595d59a8be848"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#acc00b52c00f768cbc18595d59a8be848">openage::util::compress::LZX_NUM_SECONDARY_LENGTHS</a></div><div class="ttdeci">constexpr unsigned LZX_NUM_SECONDARY_LENGTHS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00046">lzxd.cpp:46</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ae2350cf0b912903acccc36ecef023fe0"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ae2350cf0b912903acccc36ecef023fe0">openage::util::compress::LZXDStream::block_length</a></div><div class="ttdeci">unsigned int block_length</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00167">lzxd.cpp:167</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a0a33a092ac1b0b664ecf4ced11e1a313"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a0a33a092ac1b0b664ecf4ced11e1a313">openage::util::compress::BitStream::switch_to_bitstream_mode</a></div><div class="ttdeci">void switch_to_bitstream_mode()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00384">bitstream.h:384</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a3bbe52e654dd6ad728e626cb84b1400e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a3bbe52e654dd6ad728e626cb84b1400e">openage::util::compress::HuffmanTable::len</a></div><div class="ttdeci">unsigned char len[maxsymbols_p+LZX_LENTABLE_SAFETY]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00106">lzxd.cpp:106</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a281ecfaf32eb7102310771c48034e107"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a281ecfaf32eb7102310771c48034e107">openage::util::compress::HuffmanTable::read_lengths</a></div><div class="ttdeci">void read_lengths(unsigned int first, unsigned int last)</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00363">lzxd.cpp:363</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af4522bbae0ee989e1f5b45606fb2e673"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">openage::util::compress::BitStream::read_bits</a></div><div class="ttdeci">unsigned read_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00315">bitstream.h:315</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a185998c032b4c2440610ff414caed40f"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a185998c032b4c2440610ff414caed40f">openage::util::compress::LZX_BLOCKTYPE_UNCOMPRESSED</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_UNCOMPRESSED</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00042">lzxd.cpp:42</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a53c1a5f708f3f6d444b4f496e8eb840a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">openage::util::compress::LZXDStream::R2</a></div><div class="ttdeci">unsigned int R2</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00179">bits</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00167">block_length</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00168">block_remaining</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00175">block_type</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00185">htaligned</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00184">htlength</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00183">htmain</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00121">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::is_empty</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00106">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::len</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00041">openage::util::compress::LZX_BLOCKTYPE_ALIGNED</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00042">openage::util::compress::LZX_BLOCKTYPE_UNCOMPRESSED</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00040">openage::util::compress::LZX_BLOCKTYPE_VERBATIM</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00259">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::make_decode_table()</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00176">posn_slots</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R0</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R1</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R2</a>, <a class="el" href="bitstream_8h_source.xhtml#l00368">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_4bytes_le()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_bits()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00363">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::read_lengths()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00384">openage::util::compress::BitStream&lt; inbuf_size &gt;::switch_to_bitstream_mode()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00406">openage::util::compress::BitStream&lt; inbuf_size &gt;::switch_to_bytestream_mode()</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_af98ef8408ba92de4f9e28010c3b2d6c8_cgraph.svg" width="488" height="460"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_af98ef8408ba92de4f9e28010c3b2d6c8_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a738c1121848546e96e9272bbad5180db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a738c1121848546e96e9272bbad5180db">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a>&amp; openage::util::compress::LZXDStream::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a37146b381d0eddb4aeb385eec9096c85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37146b381d0eddb4aeb385eec9096c85">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a>&amp; openage::util::compress::LZXDStream::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a> &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ae957302fdbdcb4e99f5264bfc8da3e42"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae957302fdbdcb4e99f5264bfc8da3e42">&#9670;&nbsp;</a></span>postprocess_intel_e8()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::util::compress::LZXDStream::postprocess_intel_e8 </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>output_buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>frame_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Postprocesses the a frame's decoded data with E8 decoding.</p>
<p>Before compressing data, LZX pre-processes it by translating the four bytes following 0xE8-bytes; this optimizes intel x86 machine code.</p>
<p>What the hell, Microsoft? </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00863">863</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;                                                                        {</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a> == 0) {</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;        <span class="comment">// this lzx stream is e8-processing-free</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;    }</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">frame</a> &gt;= 32768) {</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;        <span class="comment">// in frames &gt;= 32768 (&gt;= 1GiB of plain data) there&#39;s no e8 processing (WTF WHY?)</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;    }</div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <span class="comment">// search the block for occurances of &#39;0xe8&#39;</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;    <span class="comment">// the last 10 bytes of the frame are not e8-handled, because reasons.</span></div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> pos = 0; pos &lt; frame_size - 10; pos++) {</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;        <span class="keywordtype">bool</span> is_e8 = (buf[pos] == 0xe8);</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        <span class="keywordflow">if</span> (!is_e8) {</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;        }</div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;        <span class="comment">// we&#39;ve found an E8 sequence.</span></div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;        <span class="comment">// the next 4 bytes shall be translated.</span></div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;        <span class="keywordtype">int</span> file_pos = pos + this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">output_pos</a>;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;</div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <span class="comment">// read the next 4 bytes as little endian</span></div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;        int32_t abs_offset =</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;            (buf[pos + 1] &lt;&lt;  0) |</div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;            (buf[pos + 2] &lt;&lt;  8) |</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;            (buf[pos + 3] &lt;&lt; 16) |</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            (buf[pos + 4] &lt;&lt; 24);</div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;</div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;        <span class="keywordflow">if</span> (abs_offset &gt;= -file_pos &amp;&amp; abs_offset &lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a>) {</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;            int32_t rel_offset;</div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;            <span class="keywordflow">if</span> (abs_offset &gt;= 0) {</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;                rel_offset = abs_offset - file_pos;</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;                rel_offset = abs_offset + this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">e8_magic</a>;</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;            }</div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;            <span class="comment">// write the next 4 bytes as little endian</span></div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;            buf[pos + 1] = (<span class="keywordtype">unsigned</span> char) (rel_offset &gt;&gt;  0);</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;            buf[pos + 2] = (<span class="keywordtype">unsigned</span> char) (rel_offset &gt;&gt;  8);</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;            buf[pos + 3] = (<span class="keywordtype">unsigned</span> char) (rel_offset &gt;&gt; 16);</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;            buf[pos + 4] = (<span class="keywordtype">unsigned</span> char) (rel_offset &gt;&gt; 24);</div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;        }</div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;</div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        <span class="comment">// skip the next four bytes (they are what we just translated).</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;        pos += 4;</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;    }</div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2a91fa7bf7fefb48ee08d52bd6ada15"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2a91fa7bf7fefb48ee08d52bd6ada15">openage::util::compress::LZXDStream::output_pos</a></div><div class="ttdeci">ssize_t output_pos</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00157">lzxd.cpp:157</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ad2b59324a0e966ee52206fc4140694a2"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ad2b59324a0e966ee52206fc4140694a2">openage::util::compress::LZXDStream::frame</a></div><div class="ttdeci">unsigned int frame</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00163">lzxd.cpp:163</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a33e4a28cfa430c0a9f53fc36aa7784bb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a33e4a28cfa430c0a9f53fc36aa7784bb">openage::util::compress::LZXDStream::e8_magic</a></div><div class="ttdeci">signed int e8_magic</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00170">lzxd.cpp:170</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00170">e8_magic</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00163">frame</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00157">output_pos</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_ae957302fdbdcb4e99f5264bfc8da3e42_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af408bfffcc2e2e086066e13e1f6b96b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af408bfffcc2e2e086066e13e1f6b96b7">&#9670;&nbsp;</a></span>read_data_from_uncompressed_block()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::read_data_from_uncompressed_block </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>size</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Reads the given amount of bytes from the current uncompressed block. Returns its argument (the number of bytes that were read). The bytes are written to the window, and window_posn is advanced. </p>

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00727">727</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                                                                            {</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> remaining = size;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;    <span class="keywordflow">while</span> (remaining) {</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> amount = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">bits</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a>(&amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">window</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">window_posn</a>], remaining);</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;        this-&gt;window_posn += amount;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;        remaining -= amount;</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    }</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    <span class="keywordflow">return</span> size;</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ac38c2ac02d9fa968f2c3e74a404e4014"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">openage::util::compress::BitStream::read_bytes</a></div><div class="ttdeci">unsigned read_bytes(unsigned char *buf, unsigned count)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00329">bitstream.h:329</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a8ce8c008c7c4df2ab737f40a871cd261"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a8ce8c008c7c4df2ab737f40a871cd261">openage::util::compress::LZXDStream::window_posn</a></div><div class="ttdeci">unsigned int window_posn</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00161">lzxd.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_afbee9a6150c8c52cf8404bf343da4692"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#afbee9a6150c8c52cf8404bf343da4692">openage::util::compress::LZXDStream::bits</a></div><div class="ttdeci">BitStream&lt; 4096 &gt; bits</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00179">lzxd.cpp:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a75bf79fb077819e2f985cdeb99b4d558"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a75bf79fb077819e2f985cdeb99b4d558">openage::util::compress::LZXDStream::window</a></div><div class="ttdeci">unsigned char * window</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00159">lzxd.cpp:159</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00179">bits</a>, <a class="el" href="bitstream_8h_source.xhtml#l00329">openage::util::compress::BitStream&lt; inbuf_size &gt;::read_bytes()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00159">window</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00161">window_posn</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_af408bfffcc2e2e086066e13e1f6b96b7_cgraph.svg" width="404" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_af408bfffcc2e2e086066e13e1f6b96b7_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a21cc21ce03f6a6aa488e48661666bdd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21cc21ce03f6a6aa488e48661666bdd7">&#9670;&nbsp;</a></span>reset_state()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::util::compress::LZXDStream::reset_state </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00458">458</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                             {</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">R0</a> = 1;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">R1</a> = 1;</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">R2</a> = 1;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">header_read</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">block_remaining</a> = 0;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">block_type</a> = <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#aebf8cb02777e89fdf7430467b0386ce4">LZX_BLOCKTYPE_INVALID</a>;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    <span class="comment">// initialise tables to 0 (because deltas will be applied to them)</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#a26cdb2480260be73fa269f982a416010">LZX_MAINTREE_MAXSYMBOLS</a>; i++) {</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">htmain</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a3bbe52e654dd6ad728e626cb84b1400e">len</a>[i] = 0;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    }</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> i = 0; i &lt; <a class="code" href="namespaceopenage_1_1util_1_1compress.xhtml#ab6ee57ad31f7a4b2e5cbe80e5ff0bf78">LZX_LENGTH_MAXSYMBOLS</a>; i++) {</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">htlength</a>.<a class="code" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a3bbe52e654dd6ad728e626cb84b1400e">len</a>[i] = 0;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    }</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_aaaf627d2099d2d79354c730f59d77ddc"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#aaaf627d2099d2d79354c730f59d77ddc">openage::util::compress::LZXDStream::block_type</a></div><div class="ttdeci">unsigned char block_type</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00175">lzxd.cpp:175</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ab5742fb4e2d4057d1a7d2d7bc233289e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ab5742fb4e2d4057d1a7d2d7bc233289e">openage::util::compress::LZXDStream::R0</a></div><div class="ttdeci">unsigned int R0</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_a26cdb2480260be73fa269f982a416010"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#a26cdb2480260be73fa269f982a416010">openage::util::compress::LZX_MAINTREE_MAXSYMBOLS</a></div><div class="ttdeci">constexpr unsigned LZX_MAINTREE_MAXSYMBOLS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00051">lzxd.cpp:51</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_aebf8cb02777e89fdf7430467b0386ce4"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#aebf8cb02777e89fdf7430467b0386ce4">openage::util::compress::LZX_BLOCKTYPE_INVALID</a></div><div class="ttdeci">constexpr unsigned LZX_BLOCKTYPE_INVALID</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00039">lzxd.cpp:39</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a3ca62b7fff8b704f8429542206d4ddc3"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a3ca62b7fff8b704f8429542206d4ddc3">openage::util::compress::LZXDStream::block_remaining</a></div><div class="ttdeci">unsigned int block_remaining</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00168">lzxd.cpp:168</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a65b33752965b0f4b2ed1898603417ef1"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a65b33752965b0f4b2ed1898603417ef1">openage::util::compress::LZXDStream::htmain</a></div><div class="ttdeci">HuffmanTable&lt; LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS &gt; htmain</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00183">lzxd.cpp:183</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a0664accf0c6f29475dd801d580ce8ab8"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a0664accf0c6f29475dd801d580ce8ab8">openage::util::compress::LZXDStream::R1</a></div><div class="ttdeci">unsigned int R1</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1compress_xhtml_ab6ee57ad31f7a4b2e5cbe80e5ff0bf78"><div class="ttname"><a href="namespaceopenage_1_1util_1_1compress.xhtml#ab6ee57ad31f7a4b2e5cbe80e5ff0bf78">openage::util::compress::LZX_LENGTH_MAXSYMBOLS</a></div><div class="ttdeci">constexpr unsigned LZX_LENGTH_MAXSYMBOLS</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00053">lzxd.cpp:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_acd1ef6d1ea48f324c3a7fc293c4dcb68"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#acd1ef6d1ea48f324c3a7fc293c4dcb68">openage::util::compress::LZXDStream::htlength</a></div><div class="ttdeci">HuffmanTable&lt; LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true &gt; htlength</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00184">lzxd.cpp:184</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_huffman_table_xhtml_a3bbe52e654dd6ad728e626cb84b1400e"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml#a3bbe52e654dd6ad728e626cb84b1400e">openage::util::compress::HuffmanTable::len</a></div><div class="ttdeci">unsigned char len[maxsymbols_p+LZX_LENTABLE_SAFETY]</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00106">lzxd.cpp:106</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_ada584159bfea91c473a5a41e650a765d"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#ada584159bfea91c473a5a41e650a765d">openage::util::compress::LZXDStream::header_read</a></div><div class="ttdeci">bool header_read</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00173">lzxd.cpp:173</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_xhtml_a53c1a5f708f3f6d444b4f496e8eb840a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml#a53c1a5f708f3f6d444b4f496e8eb840a">openage::util::compress::LZXDStream::R2</a></div><div class="ttdeci">unsigned int R2</div><div class="ttdef"><b>Definition:</b> <a href="lzxd_8cpp_source.xhtml#l00166">lzxd.cpp:166</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="lzxd_8cpp_source.xhtml#l00168">block_remaining</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00175">block_type</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00173">header_read</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00184">htlength</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00183">htmain</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00106">openage::util::compress::HuffmanTable&lt; maxsymbols_p, tablebits_p, allow_empty &gt;::len</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00039">openage::util::compress::LZX_BLOCKTYPE_INVALID</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00053">openage::util::compress::LZX_LENGTH_MAXSYMBOLS</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00051">openage::util::compress::LZX_MAINTREE_MAXSYMBOLS</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R0</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R1</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00166">R2</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_a21cc21ce03f6a6aa488e48661666bdd7_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="afbee9a6150c8c52cf8404bf343da4692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbee9a6150c8c52cf8404bf343da4692">&#9670;&nbsp;</a></span>bits</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">BitStream</a>&lt;4096&gt; openage::util::compress::LZXDStream::bits</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00179">179</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00727">read_data_from_uncompressed_block()</a>.</p>

</div>
</div>
<a id="ae2350cf0b912903acccc36ecef023fe0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae2350cf0b912903acccc36ecef023fe0">&#9670;&nbsp;</a></span>block_length</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::block_length</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00167">167</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>.</p>

</div>
</div>
<a id="a3ca62b7fff8b704f8429542206d4ddc3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3ca62b7fff8b704f8429542206d4ddc3">&#9670;&nbsp;</a></span>block_remaining</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::block_remaining</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00168">168</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="aaaf627d2099d2d79354c730f59d77ddc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaaf627d2099d2d79354c730f59d77ddc">&#9670;&nbsp;</a></span>block_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char openage::util::compress::LZXDStream::block_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00175">175</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a33e4a28cfa430c0a9f53fc36aa7784bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33e4a28cfa430c0a9f53fc36aa7784bb">&#9670;&nbsp;</a></span>e8_magic</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">signed int openage::util::compress::LZXDStream::e8_magic</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00170">170</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00863">postprocess_intel_e8()</a>.</p>

</div>
</div>
<a id="ad2b59324a0e966ee52206fc4140694a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2b59324a0e966ee52206fc4140694a2">&#9670;&nbsp;</a></span>frame</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::frame</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00863">postprocess_intel_e8()</a>.</p>

</div>
</div>
<a id="a4fa5827f8aa17dca5216ddfa0274c4da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fa5827f8aa17dca5216ddfa0274c4da">&#9670;&nbsp;</a></span>frame_posn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::frame_posn</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00162">162</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>

</div>
</div>
<a id="ada584159bfea91c473a5a41e650a765d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada584159bfea91c473a5a41e650a765d">&#9670;&nbsp;</a></span>header_read</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::util::compress::LZXDStream::header_read</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a8671f082432c89e05797093348f16af0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8671f082432c89e05797093348f16af0">&#9670;&nbsp;</a></span>htaligned</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt;<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#acfbbec691511fb87c1df869972edcc13">LZX_ALIGNED_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#ac7382afbfe3e70045b5471207c6f0b1c">LZX_ALIGNED_TABLEBITS</a>&gt; openage::util::compress::LZXDStream::htaligned</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00185">185</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>.</p>

</div>
</div>
<a id="acd1ef6d1ea48f324c3a7fc293c4dcb68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd1ef6d1ea48f324c3a7fc293c4dcb68">&#9670;&nbsp;</a></span>htlength</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt;<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#ab6ee57ad31f7a4b2e5cbe80e5ff0bf78">LZX_LENGTH_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a277c86b93d58635990ad4fe855839fcb">LZX_LENGTH_TABLEBITS</a>, true&gt; openage::util::compress::LZXDStream::htlength</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00184">184</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a65b33752965b0f4b2ed1898603417ef1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a65b33752965b0f4b2ed1898603417ef1">&#9670;&nbsp;</a></span>htmain</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt;<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a26cdb2480260be73fa269f982a416010">LZX_MAINTREE_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#aa0fc34af35349c165672483bf156d07c">LZX_MAINTREE_TABLEBITS</a>&gt; openage::util::compress::LZXDStream::htmain</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00183">183</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a1c0734cf2170ca3e28f39602dc7f8219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c0734cf2170ca3e28f39602dc7f8219">&#9670;&nbsp;</a></span>htpre</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a>&lt;<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#af91efa77f8f600907c489a0902749971">LZX_PRETREE_MAXSYMBOLS</a>, <a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a0332219afcf379226d035ccf047daaf6">LZX_PRETREE_TABLEBITS</a>&gt; openage::util::compress::LZXDStream::htpre</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

</div>
</div>
<a id="ad2a91fa7bf7fefb48ee08d52bd6ada15"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2a91fa7bf7fefb48ee08d52bd6ada15">&#9670;&nbsp;</a></span>output_pos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ssize_t openage::util::compress::LZXDStream::output_pos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00863">postprocess_intel_e8()</a>.</p>

</div>
</div>
<a id="a4e0e1171fcfe50f7d06e58c2a2923cd3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e0e1171fcfe50f7d06e58c2a2923cd3">&#9670;&nbsp;</a></span>posn_slots</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char openage::util::compress::LZXDStream::posn_slots</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00176">176</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>.</p>

</div>
</div>
<a id="ab5742fb4e2d4057d1a7d2d7bc233289e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab5742fb4e2d4057d1a7d2d7bc233289e">&#9670;&nbsp;</a></span>R0</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::R0</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a0664accf0c6f29475dd801d580ce8ab8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0664accf0c6f29475dd801d580ce8ab8">&#9670;&nbsp;</a></span>R1</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::R1</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a53c1a5f708f3f6d444b4f496e8eb840a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53c1a5f708f3f6d444b4f496e8eb840a">&#9670;&nbsp;</a></span>R2</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::R2</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">init_next_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00458">reset_state()</a>.</p>

</div>
</div>
<a id="a87e92b9f13204a689ff6dc9d0983c718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87e92b9f13204a689ff6dc9d0983c718">&#9670;&nbsp;</a></span>reset_interval</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::reset_interval</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>

</div>
</div>
<a id="a75bf79fb077819e2f985cdeb99b4d558"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75bf79fb077819e2f985cdeb99b4d558">&#9670;&nbsp;</a></span>window</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char* openage::util::compress::LZXDStream::window</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00159">159</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00727">read_data_from_uncompressed_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00453">~LZXDStream()</a>.</p>

</div>
</div>
<a id="a8ce8c008c7c4df2ab737f40a871cd261"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ce8c008c7c4df2ab737f40a871cd261">&#9670;&nbsp;</a></span>window_posn</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::window_posn</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00161">161</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00727">read_data_from_uncompressed_block()</a>.</p>

</div>
</div>
<a id="a7451bf0e50d43622780af37485037ecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7451bf0e50d43622780af37485037ecc">&#9670;&nbsp;</a></span>window_size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int openage::util::compress::LZXDStream::window_size</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="lzxd_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">decode_symbol_from_verbatim_block()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00740">decompress_next_frame()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/compress/<a class="el" href="lzxd_8cpp_source.xhtml">lzxd.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml">compress</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream.xhtml">LZXDStream</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
