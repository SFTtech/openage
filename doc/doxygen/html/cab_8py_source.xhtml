<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/cabextract/cab.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('cab_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">cab.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="cab_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1cabextract_1_1cab.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Provides CABFile, an extractor for the MSCAB format.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="stringliteral">Struct definitions are according to the documentation at</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="stringliteral">https://msdn.microsoft.com/en-us/library/bb417343.aspx.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">from</span> bisect <span class="keyword">import</span> bisect</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> calendar <span class="keyword">import</span> timegm</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">from</span> ..log <span class="keyword">import</span> dbg</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">from</span> ..util.filelike.readonly <span class="keyword">import</span> PosSavingReadOnlyFileLikeObject</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">from</span> ..util.filelike.stream <span class="keyword">import</span> StreamFragment</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">from</span> ..util.files <span class="keyword">import</span> read_guaranteed, read_nullterminated_string</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">from</span> ..util.fslike.filecollection <span class="keyword">import</span> FileCollection</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">from</span> ..util.math <span class="keyword">import</span> INF</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> ..util.strings <span class="keyword">import</span> try_decode</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">from</span> ..util.struct <span class="keyword">import</span> NamedStruct, Flags</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">from</span> .cabchecksum <span class="keyword">import</span> mscab_csum</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml">CFHeaderFlags</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">Flags</a>):</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Cabinet file option indicators. Found in the header. &quot;&quot;&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml">   29</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    specstr         = <span class="stringliteral">&quot;H&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml#a97bbf8a98680d55c080b914afcbd23ae">   33</a></span>&#160;    <span class="comment"># this cabfile is not the first of the set.</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment"># prev_cab and prev_disk are present after the header.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    prev_cabinet    = 0</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml#ab77509aed873d93d9e6e09b9252dcbb9">   37</a></span>&#160;    <span class="comment"># this cabfile is not the last of the set.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment"># next_cab and next_disk are present after the header.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    next_cabinet    = 1</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml#ac8abf71f12c01350c7180d4d802b9b24">   41</a></span>&#160;    <span class="comment"># this cabinet file has reserved fields.</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment"># cbCFHeader, cbCFFolder, and cbCFData are present after the header,</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment"># followed by cbCFHeader bytes of reserved data.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment"># if false, cbCFHeader, cbCFFolder, and cbCFData default to 0.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    reserve_present = 2</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml#a77f67a1a75a20b56ceb8cd4f99d834af">   47</a></span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml">CFHeader</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>):</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Global CAB file header; found at the very beginning of the file. &quot;&quot;&quot;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml">   51</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    endianness      = <span class="stringliteral">&quot;&lt;&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a0fae2802d1d6210f754dc967ed76983b">   55</a></span>&#160;    signature       = <span class="stringliteral">&quot;4s&quot;</span>  <span class="comment"># magic number: MSCF</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    reserved1       = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment">#</span></div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a46b220c68b55e2db7fd1add95da3723b">   57</a></span>&#160;    cbCabinet       = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># size of this cabinet file in bytes</span></div><div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#ad336dbf8a6abf1ffce789c055fac8792">   58</a></span>&#160;    reserved2       = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment">#</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#aa072a82c5202e59b399142007742fd7e">   59</a></span>&#160;    coffFiles       = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># absolute offset of the first CFFILE entry</span></div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a83d5ef7772ef263b0dceaa5f0bc96f4a">   60</a></span>&#160;    reserved3       = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment">#</span></div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a5da4685a1cfdfb6e6887bb4fefe27b88">   61</a></span>&#160;    versionMinor    = <span class="stringliteral">&quot;B&quot;</span>   <span class="comment"># cab file format version (minor)</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a9ac1adf5ddd511ffde4044e874dc52c8">   62</a></span>&#160;    versionMajor    = <span class="stringliteral">&quot;B&quot;</span>   <span class="comment"># cab file format version (major)</span></div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#af9b2b9ce4c2b3a2c960ff510a588dabd">   63</a></span>&#160;    cFolders        = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of CFFOLDER entries in this cabinet</span></div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a0ac18ae0b6533c8aa926043d66f62677">   64</a></span>&#160;    cFiles          = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of CFFILES entries in this cabinet</span></div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a8953e398dcd0bfc451afdf38f19aeb65">   65</a></span>&#160;    flags           = CFHeaderFlags</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#afa70dbd6bce77e5d48a31bb6bc61f172">   66</a></span>&#160;    setID           = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># must be same in all cabinets of a set</span></div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#ae6ffe2c9274913f226753946e196db10">   67</a></span>&#160;    iCabinet        = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of this cabinet file in the set</span></div><div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a42ecb54854e072dcb7c2f136390f3f5b">   68</a></span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a6591f3ad7aceb3d102dcf065709f8d41">   69</a></span>&#160;    <span class="comment"># those fields are set manually later.</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    reserved_data   = <span class="keywordtype">None</span>  <span class="comment"># CFHeaderReservedFields</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a8eeeaffb6cfb06eda4ecef177a003e85">   72</a></span>&#160;    reserved        = <span class="keywordtype">None</span>  <span class="comment"># bytes object of size reserved_data.cbCFHeader</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#afa3c8a76c610152c79a2d5fcd490e887">   74</a></span>&#160;    <span class="comment"># strings that hold the disk labels/file names where to find the prev/next</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="comment"># CAB files.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    prev_cab        = <span class="keywordtype">None</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    prev_disk       = <span class="keywordtype">None</span></div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#ab320cc56c3342de4f3e560181f894b3a">   78</a></span>&#160;    next_cab        = <span class="keywordtype">None</span></div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a4f3dbfb81fd4057009b154f5e8702bbd">   79</a></span>&#160;    next_disk       = <span class="keywordtype">None</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#aae31e7f0e1e879815bb6a3c253cc87c3">   80</a></span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml#a83c3a4398357347ce07c1a9206edd992">   81</a></span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml">CFHeaderReservedFields</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>):</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">    Optionally found after the header.</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">    The fields indicate the size of the reserved data blocks in the header,</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    folder and data structs.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml">   89</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    endianness      = <span class="stringliteral">&quot;&lt;&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml#a5c600ae58c2fb06a3737610343b3b5a7">   93</a></span>&#160;    cbCFHeader      = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># size of per-cabinet reserved area</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    cbCFFolder      = <span class="stringliteral">&quot;B&quot;</span>   <span class="comment"># size of per-folder reserved area</span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml#a68fc829b63f93d471aaa48729b63b38c">   95</a></span>&#160;    cbCFData        = <span class="stringliteral">&quot;B&quot;</span>   <span class="comment"># size of per-datablock reserved area</span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml#a7bee3f6defca2383a29b19e1aa07b482">   96</a></span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml#abc87ad7f664d694d766f25a263c4fa35">   97</a></span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml">CFFolder</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>):</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    CAB folder header; A CAB folder is a data stream consisting of</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral">    (compressed) concatenated file contents.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml">  104</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    endianness      = <span class="stringliteral">&quot;&lt;&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#a9b87f4c24e5fe07a3a94aec623f022c9">  108</a></span>&#160;    coffCabStart    = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># offset of first CFDATA block of this folder.</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    cCFData         = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of CFDATA blocks.</span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#ac93f8239586ba996b7d3ca56f07d5866">  110</a></span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#a3876f8ccb66be642aa9f7cd71714f1bb">  111</a></span>&#160;    typeCompress    = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># compression algorithm for this folder.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#a79a5f1664d4c9eea010162562b7fc8c5">  113</a></span>&#160;    <span class="comment"># filled in later manually</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    reserved        = <span class="keywordtype">None</span>  <span class="comment"># bytes object of size reserved_data.cbCFFolder</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#a5b3c67d52ca76502bba9c44a58e32c32">  116</a></span>&#160;    comp_name       = <span class="keywordtype">None</span>  <span class="comment"># human-readable compression name</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    plain_stream    = <span class="keywordtype">None</span>  <span class="comment"># file-like object for decompressed folder.</span></div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#a20ae6f95165d4611d2fd0ac3355f32d5">  118</a></span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml#aa1c36276f8bf4f5cda8e54b66d4b8935">  119</a></span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml">CFFileAttributes</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">Flags</a>):</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="stringliteral">    File flags; found in the CFFile struct.</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml">  125</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    specstr         = <span class="stringliteral">&quot;H&quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#a623814550c7b9def58a4e7eeffc47002">  129</a></span>&#160;    rdonly          = 0     <span class="comment"># read-only</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    hidden          = 1     <span class="comment"># hidden</span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#a1b12130b61e2d9564bd71e99f3579e3d">  131</a></span>&#160;    system          = 2     <span class="comment"># system file</span></div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#ab31a2d3d219a41416a914366158e1f36">  132</a></span>&#160;    arch            = 5     <span class="comment"># archive flag: modified since last backup</span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#a247792258d5dd7dd71a72f08044ef57f">  133</a></span>&#160;    exec            = 6     <span class="comment"># run file after extraction (lol, we won&#39;t.)</span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#a470d81d3f362fa438b997837aaac4d48">  134</a></span>&#160;    name_is_utf     = 7     <span class="comment"># name is UTF-8, not &quot;current locale&quot; (8859-1)</span></div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#a88d87fd0fca62b59ef30664e7a744eee">  135</a></span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml#ab59fb41d11d58c7831bc94cfe9cca82e">  136</a></span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml">CFFile</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>):</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="stringliteral">    Header for a single file.</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral">    Describes the file&#39;s metadata,</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">    as well as the location of its content (which CAB folder, at what offset).</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml">  145</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    endianness      = <span class="stringliteral">&quot;&lt;&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a277af280273bdb545ee4c72fee345b6d">  149</a></span>&#160;    size            = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># uncompressed filesize</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    pos             = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># offset of file in uncompressed folder</span></div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a8a297a8b66c23a207b305333c3963246">  151</a></span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a255f4e7a8e4b5559a4a6471d8d679483">  152</a></span>&#160;    <span class="comment"># index of the folder that contains this file.</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment"># there are several reserved indices with special meanings:</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="comment">#</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="comment">#  0xFFFD continued_from_prev       (acutal id: 0)</span></div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="comment">#  0xFFFE continued_to_next         (acutal id: last)</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">#  0xFFFF continued_prev_and_next:  (actual id: 0)</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    folderid        = <span class="stringliteral">&quot;H&quot;</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a4db273d450adf8a947c534523d6cfc55">  160</a></span>&#160;    date            = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># date stamp ((y–1980) &lt;&lt; 9)+(m &lt;&lt; 5)+(d) wtf.</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    time            = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># time stamp (h &lt;&lt; 11)+(m &lt;&lt; 5)+(s &gt;&gt; 1) røfl.</span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#ac3598d89b5d7d19d63ecaf725a86d521">  162</a></span>&#160;    attribs         = CFFileAttributes</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#ae692fcc6ff0c0f58120a8a5ea4ae615e">  163</a></span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#aa6df4398a9d86a4b37cbe55daac53e99">  164</a></span>&#160;    <span class="comment"># filled in later manually</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    path            = <span class="keywordtype">None</span>  <span class="comment"># array of path parts</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a28a782f1904cfb1a2e80bd141622b841">  167</a></span>&#160;    continued       = <span class="keywordtype">None</span>  <span class="comment"># file continued from previous CAB file</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    continues       = <span class="keywordtype">None</span>  <span class="comment"># file continues in next CAB file</span></div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a3de5f0c9bb5cbeb91584e12a9acf04bb">  169</a></span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#a452e47b0f3678170ea7c143ad77d5cb3">  170</a></span>&#160;    folder          = <span class="keywordtype">None</span>  <span class="comment"># CFFolder object for folderid</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#af39ef57af1d317163832ad53217eec87">  172</a></span>&#160;    timestamp       = <span class="keywordtype">None</span>  <span class="comment"># UNIX timestamp</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml#aee0cee041469575d6ab2e1b6ff16d65d">  174</a></span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml">CFData</a>(<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>):</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">    CAB folders are concatenations of data blocks; this is the header</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">    of one such data block.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml">  181</a></span>&#160;    <span class="comment"># pylint: disable=bad-whitespace,too-few-public-methods</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    endianness      = <span class="stringliteral">&quot;&lt;&quot;</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a1778f2cb2885623287a6ad9968988894">  185</a></span>&#160;    csum            = <span class="stringliteral">&quot;I&quot;</span>   <span class="comment"># checksum of this block (cbData through payload)</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    cbData          = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of compressed bytes</span></div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a4b6cb0b930c747f19ae37dd60a40245b">  187</a></span>&#160;    cbUncomp        = <span class="stringliteral">&quot;H&quot;</span>   <span class="comment"># number of uncompressed bytes</span></div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2807d2668e854a721f2b1d178f51d36a">  188</a></span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aad6bae293abe179fe2647f8e11377bcb">  189</a></span>&#160;    <span class="comment"># filled in later manually</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    reserved        = <span class="keywordtype">None</span>  <span class="comment"># bytes object of size reserved_data.cbCFData</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    payload         = <span class="keywordtype">None</span>  <span class="comment"># compressed folder stream data block</span></div><div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2a6b3a28d3cd1fce8942a4435ceb2adc">  192</a></span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#ab870da7d8aeecc138fdb6f0ed82772c8">  193</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aed8c16e72562ec22867cd4bb429136bb">verify_checksum</a>(self):</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="stringliteral">        Checks whether csum contains the correct checksum for the block.</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="stringliteral">        Raises ValueError otherwise.</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="comment"># the first part of the checksum is simply the checksum of cbData and</span></div><div class="line"><a name="l00199"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aed8c16e72562ec22867cd4bb429136bb">  199</a></span>&#160;        <span class="comment"># cbUncomp, which is simply the little-endian value of their</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="comment"># concatenation.</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        checksum = (self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aad6bae293abe179fe2647f8e11377bcb">cbUncomp</a> &lt;&lt; 16) | self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2807d2668e854a721f2b1d178f51d36a">cbData</a></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment"># the next part of the checksum is from reserved.</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2a6b3a28d3cd1fce8942a4435ceb2adc">reserved</a>:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            checksum ^= mscab_csum(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2a6b3a28d3cd1fce8942a4435ceb2adc">reserved</a>)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="comment"># the final part is from the actual data</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        checksum ^= mscab_csum(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#ab870da7d8aeecc138fdb6f0ed82772c8">payload</a>)</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">if</span> checksum != self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a4b6cb0b930c747f19ae37dd60a40245b">csum</a>:</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;checksum error in MSCAB data block&quot;</span>)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml">CABFile</a>(<a class="code" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml">FileCollection</a>):</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="stringliteral">    The actual file system-like CAB object.</span></div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="stringliteral">    Constructor arguments:</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="stringliteral">    @param cab:</span></div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="stringliteral">        A file-like object that must implement read() and seek() with</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="stringliteral">        whence=os.SEEK_SET.</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="stringliteral">    The constructor reads the entire header, including the folder and file</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="stringliteral">    descriptions. Most CAB file issues should cause the constructor to fail.</span></div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a73bebaa3ad9fc8839af4f542b842e61c">__init__</a>(self, cab):</div><div class="line"><a name="l00228"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml">  228</a></span>&#160;        super().<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a17b11fd7e416e7e4bac798af10470d54">__init__</a>()</div><div class="line"><a name="l00229"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a17b11fd7e416e7e4bac798af10470d54">  229</a></span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment"># read header</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        cab.seek(0)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        header = CFHeader.read(cab)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment"># verify magic number</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> header.signature != b<span class="stringliteral">&quot;MSCF&quot;</span>:</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;invalid CAB file signature: &quot;</span> +</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(header.signature))</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment"># read reserve header, if present</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">if</span> header.flags.reserve_present:</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            header.reserved_data = CFHeaderReservedFields.read(cab)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            header.reserved_data = CFHeaderReservedFields.from_nullbytes()</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment"># read reserved</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        header.reserved = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(cab, header.reserved_data.cbCFHeader)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment"># read previous cabinet info</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">if</span> header.flags.prev_cabinet:</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            header.prev_cab = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            header.prev_disk = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment"># read next cabinet info</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">if</span> header.flags.next_cabinet:</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            header.next_cab = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            header.next_disk = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(header)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a> = header</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">  261</a></span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">folders</a> = tuple(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a4d9e75ec517f4c47627143b3a950a7e7">read_folder_headers</a>(cab))</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">  263</a></span>&#160;        <span class="comment"># {filename: fileobj}, {subdirname: subdir}</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#aff692dacfa2d9820e9d504cccd433252">rootdir</a> = OrderedDict(), OrderedDict()</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#aff692dacfa2d9820e9d504cccd433252">  266</a></span>&#160;        <span class="keywordflow">for</span> fileobj <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ade45243e5c507f83f57d2ca5ad6a27e8">read_file_headers</a>(cab):</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#af973fe09db18f1f04474fab94da350c5">is_file</a>(fileobj.path) <span class="keywordflow">or</span> self.<a class="code" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a336d8d1597189253f24703641c7fd436">is_dir</a>(fileobj.path):</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">raise</span> ValueError(</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    <span class="stringliteral">&quot;CABFile has multiple entries with the same path: &quot;</span> +</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    b<span class="stringliteral">&#39;/&#39;</span>.join(fileobj.path).decode())</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa7aa810fd31b2ab2290b57b3c8c3c123">open_r</a>(fileobj=fileobj):</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="stringliteral">&quot;&quot;&quot; Returns a opened (&#39;rb&#39;) file-like object for fileobj. &quot;&quot;&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1filelike_1_1stream_1_1_stream_fragment.xhtml">StreamFragment</a>(</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    fileobj.folder.plain_stream,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    fileobj.pos,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                    fileobj.size</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                )</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a28fd0619554d60027e2e2bf0568e2d4c">add_fileentry</a>(fileobj.path, (</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                open_r,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordtype">None</span>,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keyword">lambda</span> fileobj=fileobj: fileobj.size,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keyword">lambda</span> fileobj=fileobj: fileobj.timestamp</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            ))</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af95f1dfaff43544d8b0316c3ceed03bc">__repr__</a>(self):</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CABFile&quot;</span></div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af95f1dfaff43544d8b0316c3ceed03bc">  289</a></span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a4d9e75ec517f4c47627143b3a950a7e7">read_folder_headers</a>(self, cab):</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="stringliteral">        Called during the constructor run.</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="stringliteral">        Reads the folder headers and initializes the folder&#39;s plain stream</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="stringliteral">        file-like objects.</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="stringliteral">        Yields all folders.</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <span class="comment"># read folder headers</span></div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a4d9e75ec517f4c47627143b3a950a7e7">  300</a></span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.cFolders):</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            folder = CFFolder.read(cab)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="comment"># read reserved</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            folder.reserved = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                cab,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.reserved_data.cbCFFolder)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="comment"># create compressed data stream</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            compressed_data_stream = <a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml">CABFolderStream</a>(</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                cab,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                folder.coffCabStart,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                folder.cCFData,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.reserved_data.cbCFData)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <span class="comment"># determine compression type and create plain data stream</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            compression_type = folder.typeCompress &amp; 0x000f</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span> compression_type == 0:</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                folder.comp_name = <span class="stringliteral">&quot;Plain&quot;</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                folder.plain_stream = compressed_data_stream</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">elif</span> compression_type == 1:</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;MSZIP compression is unsupported&quot;</span>)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">elif</span> compression_type == 2:</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;Quantum compression is unsupported&quot;</span>)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            <span class="keywordflow">elif</span> compression_type == 3:</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                window_bits = (folder.typeCompress &gt;&gt; 8) &amp; 0x1f</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                folder.comp_name = <span class="stringliteral">&quot;LZX (window_bits = %d)&quot;</span> % window_bits</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keyword">from</span> .lzxdstream <span class="keyword">import</span> LZXDStream</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="keyword">from</span> ..util.filelike.stream <span class="keyword">import</span> StreamSeekBuffer</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                unseekable_plain_stream = LZXDStream(</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    compressed_data_stream,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                    window_bits=window_bits,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    reset_interval=0)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                folder.plain_stream = StreamSeekBuffer(unseekable_plain_stream)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;Unknown compression type %d&quot;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                % compression_type)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(folder)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">yield</span> folder</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ade45243e5c507f83f57d2ca5ad6a27e8">read_file_headers</a>(self, cab):</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="stringliteral">        Called during the constructor run.</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="stringliteral">        Reads the headers for all files and yields CFFile objects.</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="comment"># seek to the correct position</span></div><div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ade45243e5c507f83f57d2ca5ad6a27e8">  356</a></span>&#160;        <span class="keywordflow">if</span> cab.tell() != self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.coffFiles:</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            cab.seek(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.coffFiles)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(<span class="stringliteral">&quot;cabfile has nonstandard format: seek to header.coffFiles was required&quot;</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a>.cFiles):</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            fileobj = CFFile.read(cab)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="comment"># read filename</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            rpath = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="comment"># decode filename according to flags</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> fileobj.attribs.name_is_utf:</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                path = rpath.decode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                path = rpath.decode(<span class="stringliteral">&#39;iso-8859-1&#39;</span>)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            fileobj.path = path.replace(<span class="stringliteral">&#39;\\&#39;</span>, <span class="stringliteral">&#39;/&#39;</span>).lower().encode().<a class="code" href="namespaceopenage_1_1util.xhtml#a9556b8562574e2c6ad102d8fd87569c6">split</a>(b<span class="stringliteral">&#39;/&#39;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="comment"># interpret the special values of folderid</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">if</span> fileobj.folderid == 0xFFFD:</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                fileobj.folderid = 0</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                fileobj.continued = <span class="keyword">True</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keywordflow">elif</span> fileobj.folderid == 0xFFFE:</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                fileobj.folderid = len(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">folders</a>) - 1</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                fileobj.continues = <span class="keyword">True</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">elif</span> fileobj.folderid == 0xFFFF:</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                fileobj.folderid = 0</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                fileobj.continued = <span class="keyword">True</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                fileobj.continues = <span class="keyword">True</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            fileobj.folder = self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">folders</a>[fileobj.folderid]</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="comment"># decode file timestamp</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="comment"># beware: reading this may give you internal bleedings.</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            year = (fileobj.date &gt;&gt; 9) + 1980</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            month = (fileobj.date &gt;&gt; 5) &amp; 0x000f</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            day = (fileobj.date &gt;&gt; 0) &amp; 0x001f</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="comment"># it&#39;s sort of sad that there&#39;s no bit for AM/PM.</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            hour = (fileobj.time &gt;&gt; 11)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            minute = (fileobj.time &gt;&gt; 5) &amp; 0x003f</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            sec = (fileobj.time &lt;&lt; 1) &amp; 0x003f</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="comment"># CAB files have no timezone info; assume UTC.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            fileobj.timestamp = timegm((year, month, day, hour, minute, sec))</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">yield</span> fileobj</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml">CABFolderStream</a>(<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml">PosSavingReadOnlyFileLikeObject</a>):</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="stringliteral">    Read-only, seekable, file-like stream object that represents</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="stringliteral">    a compressed MSCAB folder (MSCAB folders are just compressed streams</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="stringliteral">    of concatenated file contents, and are not to be confused with file system</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="stringliteral">    folders).</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="stringliteral">    Constructor arguments:</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="stringliteral">    @param fileobj:</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="stringliteral">        Seekable file-like object that represents the CAB file.</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="stringliteral">        CABFolderStream explicitly positions the file cursor before every read;</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="stringliteral">        this is to make sure that multiple CABFolderStreams can work on the</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="stringliteral">        same file, in parallel.</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="stringliteral">        The file object must implement read() and seek() with SEEK_SET.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="stringliteral">    @param offset:</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="stringliteral">        Offset of the first of the folder&#39;s data blocks in the CAB file.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="stringliteral">    @param blockcount:</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="stringliteral">        Number of data blocks in the folder.</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml">  430</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa7cd2f218913d84d5318d4c9f1e76884">__init__</a>(self, fileobj, offset, blockcount, blockreserved):</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        super().<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa7cd2f218913d84d5318d4c9f1e76884">__init__</a>()</div><div class="line"><a name="l00432"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa7cd2f218913d84d5318d4c9f1e76884">  432</a></span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a> = fileobj</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#affe5dcb69686e8b8963f29256df98348">blockcount</a> = blockcount</div><div class="line"><a name="l00435"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">  435</a></span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aca36850e8a35ae6d29fd7b1c1263a702">blockreserved</a> = blockreserved</div><div class="line"><a name="l00436"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#affe5dcb69686e8b8963f29256df98348">  436</a></span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aca36850e8a35ae6d29fd7b1c1263a702">  437</a></span>&#160;        <span class="comment"># positions of the blocks in fileobj. block 0 starts at offset.</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a> = [offset]</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">  440</a></span>&#160;        <span class="comment"># positions in the stream of the start of each block.</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a> = [0]</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">  443</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#adc3af5aa923ad52702de79831c669dc3">next_block_size</a>(self, payloadsize):</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="stringliteral">        adds metadata for the next block</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>.append(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>[-1] +</div><div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#adc3af5aa923ad52702de79831c669dc3">  448</a></span>&#160;                                 CFData.size() + self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aca36850e8a35ae6d29fd7b1c1263a702">blockreserved</a> +</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                                 payloadsize)</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a>.append(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a>[-1] + payloadsize)</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a455bb79e71a8baa07af00ac680085f6d">read_block_data</a>(self, block_id):</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="stringliteral">        reads the data of block block_id.</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="stringliteral">        if necessary, the metadata info in self.blockvalues and</span></div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;<span class="stringliteral">        self.blockoffsets is updated.</span></div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="stringliteral">        returns the block data.</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keywordflow">if</span> block_id &gt;= self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#affe5dcb69686e8b8963f29256df98348">blockcount</a>:</div><div class="line"><a name="l00463"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a455bb79e71a8baa07af00ac680085f6d">  463</a></span>&#160;            <span class="keywordflow">raise</span> EOFError()</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;        <span class="keywordflow">while</span> block_id &gt;= len(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>):</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="comment"># We do not yet know where the block starts. Seek forwards.</span></div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;            <span class="comment"># read info for the rightmost known block to get its size.</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            offset = self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>[-1]</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>.<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#a2312775f74be5a112a1ab18f0f581173">seek</a>(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>[-1])</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            datablock = CFData.read(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>)</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;            <span class="comment"># add starting position of next block to metadata.</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;            self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#adc3af5aa923ad52702de79831c669dc3">next_block_size</a>(datablock.cbData)</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment"># we now know the starting position of the block.</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        offset = self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>[block_id]</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>.<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#a2312775f74be5a112a1ab18f0f581173">seek</a>(offset)</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        datablock = CFData.read(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>)</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        datablock.reserved = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>, self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aca36850e8a35ae6d29fd7b1c1263a702">blockreserved</a>)</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;        datablock.payload = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a>, datablock.cbData)</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        <span class="comment"># verify the datablock&#39;s checksum.</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        datablock.verify_checksum()</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="comment"># add starting data of next block to metadata, if required.</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        <span class="keywordflow">if</span> block_id + 1 == len(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a>):</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;            self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#adc3af5aa923ad52702de79831c669dc3">next_block_size</a>(datablock.cbData)</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;        <span class="comment"># finally, return the data.</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        <span class="keywordflow">return</span> datablock.payload</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ad9654069c6554f9859298fa5c1e85b73">read_blocks</a>(self, size=-1):</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="stringliteral">        Similar to read, bit instead of a single bytes object,</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="stringliteral">        returns an iterator of multiple bytes objects, one for each block.</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="stringliteral">        Used internally be read(), but you may use it directly.</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">if</span> size &lt; 0:</div><div class="line"><a name="l00501"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ad9654069c6554f9859298fa5c1e85b73">  501</a></span>&#160;            size = INF</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;        <span class="comment"># use self.streamindex to determine the block id for pos.</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;        blockid = bisect(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a>, self.<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#af050a9db86efcd8b06fa90a57c0c7988">pos</a>) - 1</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;        <span class="comment"># bytes to discard (because we&#39;re still reading data that lie</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;        <span class="comment"># before self.pos).</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;        discard = self.<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#af050a9db86efcd8b06fa90a57c0c7988">pos</a> - self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a>[blockid]</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        <span class="keywordflow">while</span> size &gt; 0:</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;            <span class="keywordflow">try</span>:</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;                block_data = self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a455bb79e71a8baa07af00ac680085f6d">read_block_data</a>(blockid)</div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;            <span class="keywordflow">except</span> EOFError:</div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;                <span class="keywordflow">return</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;            blockid += 1</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;            <span class="keywordflow">if</span> discard != 0:</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;                <span class="keywordflow">if</span> discard &gt;= len(block_data):</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                    <span class="comment"># we&#39;re actually still seeking through the file,</span></div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;                    <span class="comment"># reading it block by block, approaching the stream cursor</span></div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;                    <span class="comment"># position.</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;                    discard -= len(block_data)</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;                    <span class="keywordflow">continue</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;                <span class="keywordflow">else</span>:</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;                    <span class="comment"># discard the first few bytes of the block&#39;s data.</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;                    block_data = block_data[discard:]</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                    discard = 0</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="keywordflow">if</span> len(block_data) &gt; size:</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;                <span class="comment"># less than the entire block was requested.</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;                block_data = block_data[:size]</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            size -= len(block_data)</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#af050a9db86efcd8b06fa90a57c0c7988">pos</a> += len(block_data)</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;            <span class="keywordflow">yield</span> block_data</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa01e2f0b6657c5c629188cbc3a0e0a57">read</a>(self, size=-1):</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        <span class="keywordflow">return</span> b<span class="stringliteral">&quot;&quot;</span>.join(self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ad9654069c6554f9859298fa5c1e85b73">read_blocks</a>(size))</div><div class="line"><a name="l00543"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa01e2f0b6657c5c629188cbc3a0e0a57">  543</a></span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a22d3c8597d3b8ef507a98145bd623990">get_size</a>(self):</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        del self  <span class="comment"># unused</span></div><div class="line"><a name="l00546"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a22d3c8597d3b8ef507a98145bd623990">  546</a></span>&#160;        <span class="keywordflow">return</span> -1</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;</div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae5a7fefaa419877c7b44e69e7451c6f8">close</a>(self):</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;        self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa3e35032def0fef5bca09bedb21e96e3">closed</a> = <span class="keyword">True</span></div><div class="line"><a name="l00550"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae5a7fefaa419877c7b44e69e7451c6f8">  550</a></span>&#160;        del self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">fileobj</a></div><div class="line"><a name="l00551"></a><span class="lineno"><a class="line" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa3e35032def0fef5bca09bedb21e96e3">  551</a></span>&#160;        del self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">blockoffsets</a></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;        del self.<a class="code" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">streamindex</a></div><div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_aa01e2f0b6657c5c629188cbc3a0e0a57"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa01e2f0b6657c5c629188cbc3a0e0a57">openage.cabextract.cab.CABFolderStream.read</a></div><div class="ttdeci">def read(self, size=-1)</div><div class="ttdoc">Read at most size bytes (less if EOF has been reached).</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00543">cab.py:543</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml">openage::util::filelike.readonly.PosSavingReadOnlyFileLikeObject</a></div><div class="ttdoc">Stores the current seek position in self.pos.</div><div class="ttdef"><b>Definition:</b> <a href="readonly_8py_source.xhtml#l00046">readonly.py:46</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_attributes.xhtml">openage.cabextract.cab.CFFileAttributes</a></div><div class="ttdoc">File flags; found in the CFFile struct.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00125">cab.py:125</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_ae5a7fefaa419877c7b44e69e7451c6f8"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae5a7fefaa419877c7b44e69e7451c6f8">openage.cabextract.cab.CABFolderStream.close</a></div><div class="ttdeci">def close(self)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00550">cab.py:550</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">openage::util.struct.NamedStruct</a></div><div class="ttdoc">Designed to be inherited from, similar to Enum.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00116">struct.py:116</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_folder.xhtml">openage.cabextract.cab.CFFolder</a></div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00104">cab.py:104</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_file_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_file.xhtml">openage.cabextract.cab.CFFile</a></div><div class="ttdoc">Header for a single file.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00145">cab.py:145</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header.xhtml">openage.cabextract.cab.CFHeader</a></div><div class="ttdoc">Global CAB file header; found at the very beginning of the file.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00051">cab.py:51</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_adc3af5aa923ad52702de79831c669dc3"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#adc3af5aa923ad52702de79831c669dc3">openage.cabextract.cab.CABFolderStream.next_block_size</a></div><div class="ttdeci">def next_block_size(self, payloadsize)</div><div class="ttdoc">adds metadata for the next block</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00448">cab.py:448</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object_xhtml_af973fe09db18f1f04474fab94da350c5"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#af973fe09db18f1f04474fab94da350c5">openage::util::fslike.abstract.FSLikeObject.is_file</a></div><div class="ttdeci">def is_file(self, parts)</div><div class="ttdef"><b>Definition:</b> <a href="fslike_2abstract_8py_source.xhtml#l00150">abstract.py:150</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml">openage.cabextract.cab.CABFolderStream</a></div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00430">cab.py:430</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_aa2ba5a14f2468fd0745e07dc84ff2188"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">openage::util.files.read_guaranteed</a></div><div class="ttdeci">def read_guaranteed(fileobj, size)</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00015">files.py:15</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_ade45243e5c507f83f57d2ca5ad6a27e8"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ade45243e5c507f83f57d2ca5ad6a27e8">openage.cabextract.cab.CABFile.read_file_headers</a></div><div class="ttdeci">def read_file_headers(self, cab)</div><div class="ttdoc">Called during the constructor run.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00356">cab.py:356</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_aed8c16e72562ec22867cd4bb429136bb"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aed8c16e72562ec22867cd4bb429136bb">openage.cabextract.cab.CFData.verify_checksum</a></div><div class="ttdeci">def verify_checksum(self)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00199">cab.py:199</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object_xhtml_a336d8d1597189253f24703641c7fd436"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a336d8d1597189253f24703641c7fd436">openage::util::fslike.abstract.FSLikeObject.is_dir</a></div><div class="ttdeci">def is_dir(self, parts)</div><div class="ttdef"><b>Definition:</b> <a href="fslike_2abstract_8py_source.xhtml#l00157">abstract.py:157</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object_xhtml_a2312775f74be5a112a1ab18f0f581173"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#a2312775f74be5a112a1ab18f0f581173">openage::util::filelike.readonly.PosSavingReadOnlyFileLikeObject.seek</a></div><div class="ttdeci">def seek(self, offset, whence=os.SEEK_SET)</div><div class="ttdoc">Seeks to a given position.</div><div class="ttdef"><b>Definition:</b> <a href="readonly_8py_source.xhtml#l00055">readonly.py:55</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_ae55c1f7f103006992ff6a29e92af5d6d"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">openage.cabextract.cab.CABFile.header</a></div><div class="ttdeci">header</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00261">cab.py:261</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_a4ad893fc5e33e9a96874d9a6fd70d8bb"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a4ad893fc5e33e9a96874d9a6fd70d8bb">openage.cabextract.cab.CABFolderStream.streamindex</a></div><div class="ttdeci">streamindex</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00443">cab.py:443</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_aa3e35032def0fef5bca09bedb21e96e3"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa3e35032def0fef5bca09bedb21e96e3">openage.cabextract.cab.CABFolderStream.closed</a></div><div class="ttdeci">closed</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00551">cab.py:551</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_af0314a42b04e3b0f18cdfa33f8d6094d"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">openage.cabextract.cab.CABFile.folders</a></div><div class="ttdeci">folders</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00263">cab.py:263</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_a93b53ba3420a1c165c283ee91a18dd10"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a93b53ba3420a1c165c283ee91a18dd10">openage.cabextract.cab.CABFolderStream.blockoffsets</a></div><div class="ttdeci">blockoffsets</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00440">cab.py:440</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml">openage.cabextract.cab.CABFile</a></div><div class="ttdoc">The actual file system-like CAB object.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00228">cab.py:228</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_aff692dacfa2d9820e9d504cccd433252"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#aff692dacfa2d9820e9d504cccd433252">openage.cabextract.cab.CABFile.rootdir</a></div><div class="ttdeci">rootdir</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00266">cab.py:266</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a9556b8562574e2c6ad102d8fd87569c6"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a9556b8562574e2c6ad102d8fd87569c6">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdoc">Split a string at a delimiter into a vector.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_a648056f11b83f759c99f551f483e9bef"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">openage::util.files.read_nullterminated_string</a></div><div class="ttdeci">def read_nullterminated_string(fileobj, maxlen=255)</div><div class="ttdoc">Reads bytes until a null terminator is reached.</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00033">files.py:33</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection_xhtml_aa7aa810fd31b2ab2290b57b3c8c3c123"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa7aa810fd31b2ab2290b57b3c8c3c123">openage::util::fslike.filecollection.FileCollection.open_r</a></div><div class="ttdeci">def open_r(self, parts)</div><div class="ttdoc">Shall return a BufferedReader for the given file (&quot;mode 'rb'&quot;).</div><div class="ttdef"><b>Definition:</b> <a href="filecollection_8py_source.xhtml#l00104">filecollection.py:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a73bebaa3ad9fc8839af4f542b842e61c"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a73bebaa3ad9fc8839af4f542b842e61c">openage::util.struct.NamedStruct.__init__</a></div><div class="ttdeci">def __init__(self, data)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00132">struct.py:132</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection_xhtml_a28fd0619554d60027e2e2bf0568e2d4c"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a28fd0619554d60027e2e2bf0568e2d4c">openage::util::fslike.filecollection.FileCollection.add_fileentry</a></div><div class="ttdeci">def add_fileentry(self, parts, fileentry)</div><div class="ttdoc">Adds a file entry (and parent directory entries, if needed).</div><div class="ttdef"><b>Definition:</b> <a href="filecollection_8py_source.xhtml#l00070">filecollection.py:70</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a2326b323f70b3a792727afcf330b38fe"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">openage::util.strings.try_decode</a></div><div class="ttdeci">def try_decode(data)</div><div class="ttdoc">does its best to attempt decoding the given string of unknown encoding.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00028">strings.py:28</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_ab870da7d8aeecc138fdb6f0ed82772c8"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#ab870da7d8aeecc138fdb6f0ed82772c8">openage.cabextract.cab.CFData.payload</a></div><div class="ttdeci">payload</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00193">cab.py:193</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_affe5dcb69686e8b8963f29256df98348"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#affe5dcb69686e8b8963f29256df98348">openage.cabextract.cab.CABFolderStream.blockcount</a></div><div class="ttdeci">blockcount</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00436">cab.py:436</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml">openage::util::fslike.filecollection.FileCollection</a></div><div class="ttdoc">FSLikeObject that holds several individual files.</div><div class="ttdef"><b>Definition:</b> <a href="filecollection_8py_source.xhtml#l00022">filecollection.py:22</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_af95f1dfaff43544d8b0316c3ceed03bc"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af95f1dfaff43544d8b0316c3ceed03bc">openage.cabextract.cab.CABFile.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00289">cab.py:289</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object_xhtml_af050a9db86efcd8b06fa90a57c0c7988"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1readonly_1_1_pos_saving_read_only_file_like_object.xhtml#af050a9db86efcd8b06fa90a57c0c7988">openage::util::filelike.readonly.PosSavingReadOnlyFileLikeObject.pos</a></div><div class="ttdeci">pos</div><div class="ttdef"><b>Definition:</b> <a href="readonly_8py_source.xhtml#l00053">readonly.py:53</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_a2807d2668e854a721f2b1d178f51d36a"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2807d2668e854a721f2b1d178f51d36a">openage.cabextract.cab.CFData.cbData</a></div><div class="ttdeci">string cbData</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00188">cab.py:188</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml">openage.cabextract.cab.CFData</a></div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00181">cab.py:181</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_a2a6b3a28d3cd1fce8942a4435ceb2adc"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a2a6b3a28d3cd1fce8942a4435ceb2adc">openage.cabextract.cab.CFData.reserved</a></div><div class="ttdeci">reserved</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00192">cab.py:192</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_aa7cd2f218913d84d5318d4c9f1e76884"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aa7cd2f218913d84d5318d4c9f1e76884">openage.cabextract.cab.CABFolderStream.__init__</a></div><div class="ttdeci">def __init__(self, fileobj, offset, blockcount, blockreserved)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00432">cab.py:432</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_a17b11fd7e416e7e4bac798af10470d54"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a17b11fd7e416e7e4bac798af10470d54">openage.cabextract.cab.CABFile.__init__</a></div><div class="ttdeci">def __init__(self, cab)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00229">cab.py:229</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdoc">method that behaves similar to python's &quot;repr&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_xhtml_a4d9e75ec517f4c47627143b3a950a7e7"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a4d9e75ec517f4c47627143b3a950a7e7">openage.cabextract.cab.CABFile.read_folder_headers</a></div><div class="ttdeci">def read_folder_headers(self, cab)</div><div class="ttdoc">Called during the constructor run.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00300">cab.py:300</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_reserved_fields.xhtml">openage.cabextract.cab.CFHeaderReservedFields</a></div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00089">cab.py:89</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_a22d3c8597d3b8ef507a98145bd623990"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a22d3c8597d3b8ef507a98145bd623990">openage.cabextract.cab.CABFolderStream.get_size</a></div><div class="ttdeci">def get_size(self)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00546">cab.py:546</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_a4b6cb0b930c747f19ae37dd60a40245b"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#a4b6cb0b930c747f19ae37dd60a40245b">openage.cabextract.cab.CFData.csum</a></div><div class="ttdeci">string csum</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00187">cab.py:187</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_ae0cddd916e7ff13331545f7e355ca3de"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ae0cddd916e7ff13331545f7e355ca3de">openage.cabextract.cab.CABFolderStream.fileobj</a></div><div class="ttdeci">fileobj</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00435">cab.py:435</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">openage::util.struct.Flags</a></div><div class="ttdoc">Designed to be inherited from, similar to Enum.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00283">struct.py:283</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1stream_1_1_stream_fragment_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1stream_1_1_stream_fragment.xhtml">openage::util::filelike.stream.StreamFragment</a></div><div class="ttdef"><b>Definition:</b> <a href="stream_8py_source.xhtml#l00118">stream.py:118</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags_xhtml"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_header_flags.xhtml">openage.cabextract.cab.CFHeaderFlags</a></div><div class="ttdoc">Cabinet file option indicators.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00029">cab.py:29</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_f_data_xhtml_aad6bae293abe179fe2647f8e11377bcb"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_f_data.xhtml#aad6bae293abe179fe2647f8e11377bcb">openage.cabextract.cab.CFData.cbUncomp</a></div><div class="ttdeci">string cbUncomp</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00189">cab.py:189</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_a455bb79e71a8baa07af00ac680085f6d"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#a455bb79e71a8baa07af00ac680085f6d">openage.cabextract.cab.CABFolderStream.read_block_data</a></div><div class="ttdeci">def read_block_data(self, block_id)</div><div class="ttdoc">reads the data of block block_id.</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00463">cab.py:463</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_aca36850e8a35ae6d29fd7b1c1263a702"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#aca36850e8a35ae6d29fd7b1c1263a702">openage.cabextract.cab.CABFolderStream.blockreserved</a></div><div class="ttdeci">blockreserved</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00437">cab.py:437</a></div></div>
<div class="ttc" id="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream_xhtml_ad9654069c6554f9859298fa5c1e85b73"><div class="ttname"><a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_folder_stream.xhtml#ad9654069c6554f9859298fa5c1e85b73">openage.cabextract.cab.CABFolderStream.read_blocks</a></div><div class="ttdeci">def read_blocks(self, size=-1)</div><div class="ttdef"><b>Definition:</b> <a href="cab_8py_source.xhtml#l00501">cab.py:501</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_5787a3bf2e49997054fb051edd1fa96c.xhtml">cabextract</a></li><li class="navelem"><a class="el" href="cab_8py.xhtml">cab.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
