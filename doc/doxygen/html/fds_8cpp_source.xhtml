<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/fds.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('fds_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">fds.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="fds_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2014-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fds_8h.xhtml">fds.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;stdarg.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pty_8h.xhtml">pty.h</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;io.h&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="unicode_8h.xhtml">unicode.h</a>&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a832a1b981d9ae02efe69ecf59a4f76d3">   23</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a832a1b981d9ae02efe69ecf59a4f76d3">FD::FD</a>(<span class="keywordtype">int</span> fd) {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    this-&gt;fd = <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a7be00038f51e04a9aeb8ef67fcb27fff">   27</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a832a1b981d9ae02efe69ecf59a4f76d3">FD::FD</a>(<span class="keywordtype">int</span> fd, <span class="keywordtype">bool</span> set_nonblocking) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    this-&gt;fd = ::dup(<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ada7855eacf804de00a87133a77a53847">close_on_destroy</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">if</span> (set_nonblocking) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">        #ifndef _WIN32</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordtype">int</span> flags = ::fcntl(this-&gt;fd, F_GETFL, 0);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        ::fcntl(this-&gt;fd, F_SETFL, flags | O_NONBLOCK);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">        #endif</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a2e25fcf3aa2ab408ead85e312de80888">   39</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a832a1b981d9ae02efe69ecf59a4f76d3">FD::FD</a>(<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">FD</a> *fd, <span class="keywordtype">bool</span> set_nonblocking) :</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">FD</a>{<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>-&gt;fd, set_nonblocking} {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#accc8dcfb03019d9d3a9c12bc435de0bb">   43</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#accc8dcfb03019d9d3a9c12bc435de0bb">FD::~FD</a>() {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a4aa40717929b388f0d8572765ec1132f">restore_input_mode_on_destroy</a>) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a0a5d58436cb743cc2a19b40c24d98512">restoreinputmode</a>();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ada7855eacf804de00a87133a77a53847">close_on_destroy</a>) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        ::close(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a3e0c796f513380f80b1f0c11d29bab15">   53</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a3e0c796f513380f80b1f0c11d29bab15">FD::write</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *buf, <span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    return ::write(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>, buf, <a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">   57</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">FD::puts</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a3e0c796f513380f80b1f0c11d29bab15">write</a>(str, <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>));</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#aa7042077eda5413ddddf0075a1a66761">   61</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#aa7042077eda5413ddddf0075a1a66761">FD::putbyte</a>(<span class="keywordtype">char</span> c) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a3e0c796f513380f80b1f0c11d29bab15">write</a>(&amp;c, 1);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a6826267ab945c97663c9e3506bbf2542">   65</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a6826267ab945c97663c9e3506bbf2542">FD::putcp</a>(<span class="keywordtype">int</span> cp) {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">char</span> utf8buf[5];</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1util.xhtml#aed7ef0b5ccf0d22a6329396d9a59f671">util::utf8_encode</a>(cp, utf8buf) == 0) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">//unrepresentable character (question mark in black rhombus)</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">puts</a>(<span class="stringliteral">&quot;\uFFFD&quot;</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">puts</a>(utf8buf);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#ac3b4a14cfa134355f0890c1d9ea608f4">   75</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ac3b4a14cfa134355f0890c1d9ea608f4">FD::printf</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *format, ...) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">unsigned</span> buf_size = 16;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordtype">char</span> *buf = (<span class="keywordtype">char</span>*) malloc(<span class="keyword">sizeof</span>(<span class="keywordtype">char</span>) * buf_size);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (!buf) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    va_list vl;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="comment">//first, try to vsnprintf to a buffer of length 16</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    va_start(vl, format);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">unsigned</span> len = vsnprintf(buf, buf_size, format, vl);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    va_end(vl);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">//if that wasn&#39;t enough, allocate more memory and try again</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (len &gt;= buf_size) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordtype">char</span> *oldbuf = buf;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        buf = (<span class="keywordtype">char</span>*) realloc(oldbuf, <span class="keyword">sizeof</span>(<span class="keywordtype">char</span>) * (len + 1));</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> (!buf) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            free(oldbuf);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> -1;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        }</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        va_start(vl, format);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        vsnprintf(buf, len + 1, format, vl);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        va_end(vl);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="comment">//output buf to the socket</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">puts</a>(buf);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="comment">//free the buffer</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    free(buf);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a4455d9a6fa5ec24fef9b0c28fc4ef483">  112</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a4455d9a6fa5ec24fef9b0c28fc4ef483">FD::setinputmodecanon</a>() {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">    #ifndef _WIN32</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> (::isatty(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>)) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="comment">//get the terminal settings for stdin</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        ::tcgetattr(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>, &amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a04fbb0344faa51064a9e6f1beebc29ac">old_tio</a>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">//backup old settings</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">struct </span>termios new_tio = this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a04fbb0344faa51064a9e6f1beebc29ac">old_tio</a>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="comment">//disable buffered i/o (canonical mode) and local echo</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        new_tio.c_lflag &amp;= (~ICANON &amp; ~ECHO &amp; ~ISIG);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">//set the settings</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        ::tcsetattr(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>, TCSANOW, &amp;new_tio);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a4aa40717929b388f0d8572765ec1132f">restore_input_mode_on_destroy</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">    #endif </span><span class="comment">/* _WIN32 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_d.xhtml#a0a5d58436cb743cc2a19b40c24d98512">  130</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a0a5d58436cb743cc2a19b40c24d98512">FD::restoreinputmode</a>() {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">    #ifndef _WIN32</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (::isatty(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>)) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        ::tcsetattr(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">fd</a>, TCSANOW, &amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a04fbb0344faa51064a9e6f1beebc29ac">old_tio</a>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a4aa40717929b388f0d8572765ec1132f">restore_input_mode_on_destroy</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    }</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">    #endif </span><span class="comment">/* _WIN32 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}} <span class="comment">// openage::util</span></div><div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a4aa40717929b388f0d8572765ec1132f"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a4aa40717929b388f0d8572765ec1132f">openage::util::FD::restore_input_mode_on_destroy</a></div><div class="ttdeci">bool restore_input_mode_on_destroy</div><div class="ttdoc">if this is set to true, the destructor will restore the input mode.</div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00045">fds.h:45</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a5c27276c6b3cf4af0e5d13979c0e81a0"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">openage::util::FD::puts</a></div><div class="ttdeci">int puts(const char *str)</div><div class="ttdoc">writes the string (excluding the null terminator)</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00057">fds.cpp:57</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_accc8dcfb03019d9d3a9c12bc435de0bb"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#accc8dcfb03019d9d3a9c12bc435de0bb">openage::util::FD::~FD</a></div><div class="ttdeci">~FD()</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00043">fds.cpp:43</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a6826267ab945c97663c9e3506bbf2542"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a6826267ab945c97663c9e3506bbf2542">openage::util::FD::putcp</a></div><div class="ttdeci">int putcp(int cp)</div><div class="ttdoc">writes the unicode codepoint, as utf-8</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00065">fds.cpp:65</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aed7ef0b5ccf0d22a6329396d9a59f671"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aed7ef0b5ccf0d22a6329396d9a59f671">openage::util::utf8_encode</a></div><div class="ttdeci">size_t utf8_encode(int cp, char *outbuf)</div><div class="ttdoc">encodes one Unicode codepoint to a null-terminated UTF-8 character string.</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00120">unicode.cpp:120</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a72a87a05e383ec62bf0b60359f314df7"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">openage::util::constexpr_::strlen</a></div><div class="ttdeci">constexpr size_t strlen(const char *str)</div><div class="ttdoc">Returns the length of the string literal, excluding the terminating NULL byte.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00030">constexpr.h:30</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml">openage::util::FD</a></div><div class="ttdoc">wraps a POSIX file descriptor</div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00017">fds.h:17</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5108334e805e942718d59b97160775d1"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">openage::py::bytes</a></div><div class="ttdeci">Obj bytes(const std::string &amp;value)</div><div class="ttdoc">bytes(value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00338">pyobject.cpp:338</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_aa7042077eda5413ddddf0075a1a66761"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#aa7042077eda5413ddddf0075a1a66761">openage::util::FD::putbyte</a></div><div class="ttdeci">int putbyte(char c)</div><div class="ttdoc">writes the char</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00061">fds.cpp:61</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_ac3b4a14cfa134355f0890c1d9ea608f4"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#ac3b4a14cfa134355f0890c1d9ea608f4">openage::util::FD::printf</a></div><div class="ttdeci">int printf(const char *format,...)</div><div class="ttdoc">guess what this does.</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00075">fds.cpp:75</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a04fbb0344faa51064a9e6f1beebc29ac"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a04fbb0344faa51064a9e6f1beebc29ac">openage::util::FD::old_tio</a></div><div class="ttdeci">struct termios old_tio</div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00088">fds.h:88</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a0a5d58436cb743cc2a19b40c24d98512"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a0a5d58436cb743cc2a19b40c24d98512">openage::util::FD::restoreinputmode</a></div><div class="ttdeci">void restoreinputmode()</div><div class="ttdoc">restores the input mode to the mode that was backed up during the last setinputmodecanon() mode.</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00130">fds.cpp:130</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a3e0c796f513380f80b1f0c11d29bab15"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a3e0c796f513380f80b1f0c11d29bab15">openage::util::FD::write</a></div><div class="ttdeci">int write(const char *buf, size_t bytes)</div><div class="ttdoc">writes 'bytes' bytes from buf</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00053">fds.cpp:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_ada7855eacf804de00a87133a77a53847"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#ada7855eacf804de00a87133a77a53847">openage::util::FD::close_on_destroy</a></div><div class="ttdeci">bool close_on_destroy</div><div class="ttdoc">if this is set to true, the destructor will close the fd.</div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00039">fds.h:39</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_ad74377a363842f04fa8cf7c3d110ab01"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#ad74377a363842f04fa8cf7c3d110ab01">openage::util::FD::fd</a></div><div class="ttdeci">int fd</div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00033">fds.h:33</a></div></div>
<div class="ttc" id="pty_8h_xhtml"><div class="ttname"><a href="pty_8h.xhtml">pty.h</a></div></div>
<div class="ttc" id="fds_8h_xhtml"><div class="ttname"><a href="fds_8h.xhtml">fds.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdoc">str(value);</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a4455d9a6fa5ec24fef9b0c28fc4ef483"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a4455d9a6fa5ec24fef9b0c28fc4ef483">openage::util::FD::setinputmodecanon</a></div><div class="ttdeci">void setinputmodecanon()</div><div class="ttdoc">sets input to canonical mode.</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00112">fds.cpp:112</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a832a1b981d9ae02efe69ecf59a4f76d3"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a832a1b981d9ae02efe69ecf59a4f76d3">openage::util::FD::FD</a></div><div class="ttdeci">FD(int fd)</div><div class="ttdoc">wraps an existing FD</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00023">fds.cpp:23</a></div></div>
<div class="ttc" id="unicode_8h_xhtml"><div class="ttname"><a href="unicode_8h.xhtml">unicode.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="fds_8cpp.xhtml">fds.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
