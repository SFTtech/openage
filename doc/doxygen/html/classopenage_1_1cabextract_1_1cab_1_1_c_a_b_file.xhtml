<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.cabextract.cab.CABFile Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.cabextract.cab.CABFile Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The actual file system-like CAB object.  
 <a href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#details">More...</a></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage.cabextract.cab.CABFile:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage.cabextract.cab.CABFile:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a17b11fd7e416e7e4bac798af10470d54"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a17b11fd7e416e7e4bac798af10470d54">__init__</a> (self, cab)</td></tr>
<tr class="separator:a17b11fd7e416e7e4bac798af10470d54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af95f1dfaff43544d8b0316c3ceed03bc"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af95f1dfaff43544d8b0316c3ceed03bc">__repr__</a> (self)</td></tr>
<tr class="separator:af95f1dfaff43544d8b0316c3ceed03bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d9e75ec517f4c47627143b3a950a7e7"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#a4d9e75ec517f4c47627143b3a950a7e7">read_folder_headers</a> (self, cab)</td></tr>
<tr class="memdesc:a4d9e75ec517f4c47627143b3a950a7e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called during the constructor run.  <a href="#a4d9e75ec517f4c47627143b3a950a7e7">More...</a><br /></td></tr>
<tr class="separator:a4d9e75ec517f4c47627143b3a950a7e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade45243e5c507f83f57d2ca5ad6a27e8"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ade45243e5c507f83f57d2ca5ad6a27e8">read_file_headers</a> (self, cab)</td></tr>
<tr class="memdesc:ade45243e5c507f83f57d2ca5ad6a27e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called during the constructor run.  <a href="#ade45243e5c507f83f57d2ca5ad6a27e8">More...</a><br /></td></tr>
<tr class="separator:ade45243e5c507f83f57d2ca5ad6a27e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml">openage.util.fslike.filecollection.FileCollection</a></td></tr>
<tr class="memitem:a7ba8bd6b8a645bdd6e4c6287e9b4b0f5 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a7ba8bd6b8a645bdd6e4c6287e9b4b0f5">__init__</a> (self)</td></tr>
<tr class="separator:a7ba8bd6b8a645bdd6e4c6287e9b4b0f5 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809932b9f25e26fd521c04a42c6cf484 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a809932b9f25e26fd521c04a42c6cf484">root</a> (self)</td></tr>
<tr class="memdesc:a809932b9f25e26fd521c04a42c6cf484 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a path-like object for the root of this file system.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a809932b9f25e26fd521c04a42c6cf484">More...</a><br /></td></tr>
<tr class="separator:a809932b9f25e26fd521c04a42c6cf484 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a236b83a25d5f87c98604b37597c2baf9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a236b83a25d5f87c98604b37597c2baf9">get_direntries</a> (self, parts=None, create=False)</td></tr>
<tr class="memdesc:a236b83a25d5f87c98604b37597c2baf9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fetches the fileentries, subdirentries tuple for the given dir.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a236b83a25d5f87c98604b37597c2baf9">More...</a><br /></td></tr>
<tr class="separator:a236b83a25d5f87c98604b37597c2baf9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28fd0619554d60027e2e2bf0568e2d4c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a28fd0619554d60027e2e2bf0568e2d4c">add_fileentry</a> (self, parts, fileentry)</td></tr>
<tr class="memdesc:a28fd0619554d60027e2e2bf0568e2d4c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a file entry (and parent directory entries, if needed).  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a28fd0619554d60027e2e2bf0568e2d4c">More...</a><br /></td></tr>
<tr class="separator:a28fd0619554d60027e2e2bf0568e2d4c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab46de614c539e3beed2affa49fd09779 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#ab46de614c539e3beed2affa49fd09779">get_fileentry</a> (self, parts)</td></tr>
<tr class="memdesc:ab46de614c539e3beed2affa49fd09779 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets a file entry.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#ab46de614c539e3beed2affa49fd09779">More...</a><br /></td></tr>
<tr class="separator:ab46de614c539e3beed2affa49fd09779 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7aa810fd31b2ab2290b57b3c8c3c123 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa7aa810fd31b2ab2290b57b3c8c3c123">open_r</a> (self, parts)</td></tr>
<tr class="memdesc:aa7aa810fd31b2ab2290b57b3c8c3c123 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall return a BufferedReader for the given file ("mode 'rb'").  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa7aa810fd31b2ab2290b57b3c8c3c123">More...</a><br /></td></tr>
<tr class="separator:aa7aa810fd31b2ab2290b57b3c8c3c123 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e32318feb8203a576433ef955b3883d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a4e32318feb8203a576433ef955b3883d">open_w</a> (self, parts)</td></tr>
<tr class="memdesc:a4e32318feb8203a576433ef955b3883d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall return a BufferedWriter for the given file ("mode 'wb'").  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a4e32318feb8203a576433ef955b3883d">More...</a><br /></td></tr>
<tr class="separator:a4e32318feb8203a576433ef955b3883d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72c5cfc08a9a21cfdea7170e575b67c9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a72c5cfc08a9a21cfdea7170e575b67c9">list</a> (self, parts)</td></tr>
<tr class="memdesc:a72c5cfc08a9a21cfdea7170e575b67c9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall yield the entry names of the given directory.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a72c5cfc08a9a21cfdea7170e575b67c9">More...</a><br /></td></tr>
<tr class="separator:a72c5cfc08a9a21cfdea7170e575b67c9 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb7acc5e29787c2826c467ce0111eaca inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#abb7acc5e29787c2826c467ce0111eaca">filesize</a> (self, parts)</td></tr>
<tr class="separator:abb7acc5e29787c2826c467ce0111eaca inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732ece4991737e5dd9ea2a4961a899ca inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a732ece4991737e5dd9ea2a4961a899ca">mtime</a> (self, parts)</td></tr>
<tr class="separator:a732ece4991737e5dd9ea2a4961a899ca inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52f309a6859078d8e0abe44327476e31 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a52f309a6859078d8e0abe44327476e31">mkdirs</a> (self, parts)</td></tr>
<tr class="memdesc:a52f309a6859078d8e0abe44327476e31 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall ensure that the directory exists.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a52f309a6859078d8e0abe44327476e31">More...</a><br /></td></tr>
<tr class="separator:a52f309a6859078d8e0abe44327476e31 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd7d5108b06dfc0b5f52d50fc58b9671 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#afd7d5108b06dfc0b5f52d50fc58b9671">rmdir</a> (self, parts)</td></tr>
<tr class="memdesc:afd7d5108b06dfc0b5f52d50fc58b9671 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall remove an empty directory.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#afd7d5108b06dfc0b5f52d50fc58b9671">More...</a><br /></td></tr>
<tr class="separator:afd7d5108b06dfc0b5f52d50fc58b9671 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a289137f3b7c3813e05d87e89bad9e893 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a289137f3b7c3813e05d87e89bad9e893">unlink</a> (self, parts)</td></tr>
<tr class="memdesc:a289137f3b7c3813e05d87e89bad9e893 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall remove a single file.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a289137f3b7c3813e05d87e89bad9e893">More...</a><br /></td></tr>
<tr class="separator:a289137f3b7c3813e05d87e89bad9e893 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a84ca7fe498a12a5cb8c2dd5caadb4 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a76a84ca7fe498a12a5cb8c2dd5caadb4">touch</a> (self, parts)</td></tr>
<tr class="memdesc:a76a84ca7fe498a12a5cb8c2dd5caadb4 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall create the file or update its timestamp.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a76a84ca7fe498a12a5cb8c2dd5caadb4">More...</a><br /></td></tr>
<tr class="separator:a76a84ca7fe498a12a5cb8c2dd5caadb4 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a717813dafeb60e3ba8c92c70c36b6985 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a717813dafeb60e3ba8c92c70c36b6985">rename</a> (self, srcparts, tgtparts)</td></tr>
<tr class="memdesc:a717813dafeb60e3ba8c92c70c36b6985 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall rename a file or directory to the target name.  <a href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a717813dafeb60e3ba8c92c70c36b6985">More...</a><br /></td></tr>
<tr class="separator:a717813dafeb60e3ba8c92c70c36b6985 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa67dc8d355a1c053942b3a375fc1985c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa67dc8d355a1c053942b3a375fc1985c">is_file</a> (self, parts)</td></tr>
<tr class="separator:aa67dc8d355a1c053942b3a375fc1985c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa840106df09c378f09ce7fcc83ef9192 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#aa840106df09c378f09ce7fcc83ef9192">is_dir</a> (self, parts)</td></tr>
<tr class="separator:aa840106df09c378f09ce7fcc83ef9192 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6065913c8c25261d0f71cc222483fb1 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#ab6065913c8c25261d0f71cc222483fb1">writable</a> (self, parts)</td></tr>
<tr class="separator:ab6065913c8c25261d0f71cc222483fb1 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aabad3c9f6648ff2494ce83d30f24dc inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a2aabad3c9f6648ff2494ce83d30f24dc">watch</a> (self, parts, callback)</td></tr>
<tr class="separator:a2aabad3c9f6648ff2494ce83d30f24dc inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add6a1fab1021d80479844a34a79fe1f8 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#add6a1fab1021d80479844a34a79fe1f8">poll_watches</a> (self)</td></tr>
<tr class="separator:add6a1fab1021d80479844a34a79fe1f8 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml">openage.util.fslike.abstract.FSLikeObject</a></td></tr>
<tr class="memitem:a53ae3dc0d5327095637653e4d17b638d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a53ae3dc0d5327095637653e4d17b638d">pretty</a> (self, parts)</td></tr>
<tr class="memdesc:a53ae3dc0d5327095637653e4d17b638d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">pretty-format a path in this filesystem like object.  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a53ae3dc0d5327095637653e4d17b638d">More...</a><br /></td></tr>
<tr class="separator:a53ae3dc0d5327095637653e4d17b638d inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e6e9458b1150816521cc68bda348c09 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a9e6e9458b1150816521cc68bda348c09">open_rw</a> (self, parts)</td></tr>
<tr class="memdesc:a9e6e9458b1150816521cc68bda348c09 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall return a BufferedWriter for the given file ("mode 'r+'").  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a9e6e9458b1150816521cc68bda348c09">More...</a><br /></td></tr>
<tr class="separator:a9e6e9458b1150816521cc68bda348c09 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a9fb9c9e3f96a98cc679de8e55fc937 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a3a9fb9c9e3f96a98cc679de8e55fc937">open_a</a> (self, parts)</td></tr>
<tr class="memdesc:a3a9fb9c9e3f96a98cc679de8e55fc937 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall return a BufferedWriter for the given file ("mode 'a'").  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a3a9fb9c9e3f96a98cc679de8e55fc937">More...</a><br /></td></tr>
<tr class="separator:a3a9fb9c9e3f96a98cc679de8e55fc937 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023d59f227466dafe020f394d5049456 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a023d59f227466dafe020f394d5049456">open_ar</a> (self, parts)</td></tr>
<tr class="memdesc:a023d59f227466dafe020f394d5049456 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shall return a BufferedWriter for the given file ("mode 'a+'").  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a023d59f227466dafe020f394d5049456">More...</a><br /></td></tr>
<tr class="separator:a023d59f227466dafe020f394d5049456 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc5969fa041b778d0906a452d45f9d0c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#abc5969fa041b778d0906a452d45f9d0c">exists</a> (self, parts)</td></tr>
<tr class="memdesc:abc5969fa041b778d0906a452d45f9d0c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Test if the parts are a file or a directory.  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#abc5969fa041b778d0906a452d45f9d0c">More...</a><br /></td></tr>
<tr class="separator:abc5969fa041b778d0906a452d45f9d0c inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af30b34d88a17e5d1d7e99046da0490f5 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#af30b34d88a17e5d1d7e99046da0490f5">resolve_r</a> (self, parts)</td></tr>
<tr class="separator:af30b34d88a17e5d1d7e99046da0490f5 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a255427aef3f55eea705114af7d7c107f inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a255427aef3f55eea705114af7d7c107f">resolve_w</a> (self, parts)</td></tr>
<tr class="memdesc:a255427aef3f55eea705114af7d7c107f inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a new flattened path.  <a href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a255427aef3f55eea705114af7d7c107f">More...</a><br /></td></tr>
<tr class="separator:a255427aef3f55eea705114af7d7c107f inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f9d7aa25e089cfea369bdd7d9683a57 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object.xhtml#a7f9d7aa25e089cfea369bdd7d9683a57">get_native_path</a> (self, parts)</td></tr>
<tr class="separator:a7f9d7aa25e089cfea369bdd7d9683a57 inherit pub_methods_classopenage_1_1util_1_1fslike_1_1abstract_1_1_f_s_like_object"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae55c1f7f103006992ff6a29e92af5d6d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#ae55c1f7f103006992ff6a29e92af5d6d">header</a></td></tr>
<tr class="separator:ae55c1f7f103006992ff6a29e92af5d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0314a42b04e3b0f18cdfa33f8d6094d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#af0314a42b04e3b0f18cdfa33f8d6094d">folders</a></td></tr>
<tr class="separator:af0314a42b04e3b0f18cdfa33f8d6094d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff692dacfa2d9820e9d504cccd433252"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml#aff692dacfa2d9820e9d504cccd433252">rootdir</a></td></tr>
<tr class="separator:aff692dacfa2d9820e9d504cccd433252"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml">openage.util.fslike.filecollection.FileCollection</a></td></tr>
<tr class="memitem:a75e62e8168ceeb224b2461f651dd61a1 inherit pub_attribs_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection.xhtml#a75e62e8168ceeb224b2461f651dd61a1">rootentries</a></td></tr>
<tr class="separator:a75e62e8168ceeb224b2461f651dd61a1 inherit pub_attribs_classopenage_1_1util_1_1fslike_1_1filecollection_1_1_file_collection"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The actual file system-like CAB object. </p>
<p>Constructor arguments:</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">cab</td><td>A file-like object that must implement read() and seek() with whence=os.SEEK_SET.</td></tr>
  </table>
  </dd>
</dl>
<p>The constructor reads the entire header, including the folder and file descriptions. Most CAB file issues should cause the constructor to fail. </p>

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00228">228</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a17b11fd7e416e7e4bac798af10470d54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17b11fd7e416e7e4bac798af10470d54">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.cabextract.cab.CABFile.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>cab</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00229">229</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment"># read header</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        cab.seek(0)</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        header = CFHeader.read(cab)</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment"># verify magic number</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> header.signature != b<span class="stringliteral">&quot;MSCF&quot;</span>:</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;invalid CAB file signature: &quot;</span> +</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                            <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(header.signature))</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="comment"># read reserve header, if present</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="keywordflow">if</span> header.flags.reserve_present:</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            header.reserved_data = CFHeaderReservedFields.read(cab)</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;            header.reserved_data = CFHeaderReservedFields.from_nullbytes()</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        <span class="comment"># read reserved</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        header.reserved = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(cab, header.reserved_data.cbCFHeader)</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment"># read previous cabinet info</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">if</span> header.flags.prev_cabinet:</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;            header.prev_cab = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;            header.prev_disk = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment"># read next cabinet info</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">if</span> header.flags.next_cabinet:</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;            header.next_cab = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            header.next_disk = <a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(<a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab))</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(header)</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        self.header = header</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        self.folders = tuple(self.read_folder_headers(cab))</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="comment"># {filename: fileobj}, {subdirname: subdir}</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;        self.rootdir = OrderedDict(), OrderedDict()</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="keywordflow">for</span> fileobj <span class="keywordflow">in</span> self.read_file_headers(cab):</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;            <span class="keywordflow">if</span> self.is_file(fileobj.path) <span class="keywordflow">or</span> self.is_dir(fileobj.path):</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;                <span class="keywordflow">raise</span> ValueError(</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                    <span class="stringliteral">&quot;CABFile has multiple entries with the same path: &quot;</span> +</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;                    b<span class="stringliteral">&#39;/&#39;</span>.join(fileobj.path).decode())</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keyword">def </span>open_r(fileobj=fileobj):</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                <span class="stringliteral">&quot;&quot;&quot; Returns a opened (&#39;rb&#39;) file-like object for fileobj. &quot;&quot;&quot;</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;                <span class="keywordflow">return</span> StreamFragment(</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;                    fileobj.folder.plain_stream,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                    fileobj.pos,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                    fileobj.size</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                )</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            self.add_fileentry(fileobj.path, (</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                open_r,</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                <span class="keywordtype">None</span>,</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;                <span class="keyword">lambda</span> fileobj=fileobj: fileobj.size,</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;                <span class="keyword">lambda</span> fileobj=fileobj: fileobj.timestamp</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            ))</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">def </span>__repr__(self):</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CABFile&quot;</span></div><div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_aa2ba5a14f2468fd0745e07dc84ff2188"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">openage::util.files.read_guaranteed</a></div><div class="ttdeci">def read_guaranteed(fileobj, size)</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00015">files.py:15</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_a648056f11b83f759c99f551f483e9bef"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">openage::util.files.read_nullterminated_string</a></div><div class="ttdeci">def read_nullterminated_string(fileobj, maxlen=255)</div><div class="ttdoc">Reads bytes until a null terminator is reached.</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00033">files.py:33</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a2326b323f70b3a792727afcf330b38fe"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">openage::util.strings.try_decode</a></div><div class="ttdeci">def try_decode(data)</div><div class="ttdoc">does its best to attempt decoding the given string of unknown encoding.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00028">strings.py:28</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log.dbg()</a>, <a class="el" href="files_8py_source.xhtml#l00015">openage.util.files.read_guaranteed()</a>, <a class="el" href="files_8py_source.xhtml#l00033">openage.util.files.read_nullterminated_string()</a>, <a class="el" href="repr_8cpp_source.xhtml#l00012">openage::util.repr()</a>, and <a class="el" href="strings_8py_source.xhtml#l00028">openage.util.strings.try_decode()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_a17b11fd7e416e7e4bac798af10470d54_cgraph.svg" width="100%" height="504"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af95f1dfaff43544d8b0316c3ceed03bc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af95f1dfaff43544d8b0316c3ceed03bc">&#9670;&nbsp;</a></span>__repr__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.cabextract.cab.CABFile.__repr__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00289">289</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="keyword">def </span>read_folder_headers(self, cab):</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"></div><!-- fragment -->
</div>
</div>
<a id="ade45243e5c507f83f57d2ca5ad6a27e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade45243e5c507f83f57d2ca5ad6a27e8">&#9670;&nbsp;</a></span>read_file_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.cabextract.cab.CABFile.read_file_headers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>cab</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called during the constructor run. </p>
<pre class="fragment">   Reads the headers for all files and yields CFFile objects.
</pre> 
<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00356">356</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">if</span> cab.tell() != self.header.coffFiles:</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            cab.seek(self.header.coffFiles)</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(<span class="stringliteral">&quot;cabfile has nonstandard format: seek to header.coffFiles was required&quot;</span>)</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.header.cFiles):</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            fileobj = CFFile.read(cab)</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="comment"># read filename</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            rpath = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">read_nullterminated_string</a>(cab)</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;            <span class="comment"># decode filename according to flags</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="keywordflow">if</span> fileobj.attribs.name_is_utf:</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                path = rpath.decode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;                path = rpath.decode(<span class="stringliteral">&#39;iso-8859-1&#39;</span>)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;            fileobj.path = path.replace(<span class="stringliteral">&#39;\\&#39;</span>, <span class="stringliteral">&#39;/&#39;</span>).lower().encode().<a class="code" href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">split</a>(b<span class="stringliteral">&#39;/&#39;</span>)</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;            <span class="comment"># interpret the special values of folderid</span></div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;            <span class="keywordflow">if</span> fileobj.folderid == 0xFFFD:</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;                fileobj.folderid = 0</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;                fileobj.continued = <span class="keyword">True</span></div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;            <span class="keywordflow">elif</span> fileobj.folderid == 0xFFFE:</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;                fileobj.folderid = len(self.folders) - 1</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;                fileobj.continues = <span class="keyword">True</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;            <span class="keywordflow">elif</span> fileobj.folderid == 0xFFFF:</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                fileobj.folderid = 0</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;                fileobj.continued = <span class="keyword">True</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                fileobj.continues = <span class="keyword">True</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            fileobj.folder = self.folders[fileobj.folderid]</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="comment"># decode file timestamp</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            <span class="comment"># beware: reading this may give you internal bleedings.</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            year = (fileobj.date &gt;&gt; 9) + 1980</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            month = (fileobj.date &gt;&gt; 5) &amp; 0x000f</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            day = (fileobj.date &gt;&gt; 0) &amp; 0x001f</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            <span class="comment"># it&#39;s sort of sad that there&#39;s no bit for AM/PM.</span></div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            hour = (fileobj.time &gt;&gt; 11)</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            minute = (fileobj.time &gt;&gt; 5) &amp; 0x003f</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;            sec = (fileobj.time &lt;&lt; 1) &amp; 0x003f</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            <span class="comment"># CAB files have no timezone info; assume UTC.</span></div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            fileobj.timestamp = timegm((year, month, day, hour, minute, sec))</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;            <span class="keywordflow">yield</span> fileobj</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<span class="keyword">class </span>CABFolderStream(PosSavingReadOnlyFileLikeObject):</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;<span class="stringliteral">    Read-only, seekable, file-like stream object that represents</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;<span class="stringliteral">    a compressed MSCAB folder (MSCAB folders are just compressed streams</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;<span class="stringliteral">    of concatenated file contents, and are not to be confused with file system</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;<span class="stringliteral">    folders).</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;<span class="stringliteral">    Constructor arguments:</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;<span class="stringliteral">    @param fileobj:</span></div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;<span class="stringliteral">        Seekable file-like object that represents the CAB file.</span></div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<span class="stringliteral">        CABFolderStream explicitly positions the file cursor before every read;</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;<span class="stringliteral">        this is to make sure that multiple CABFolderStreams can work on the</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;<span class="stringliteral">        same file, in parallel.</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;<span class="stringliteral">        The file object must implement read() and seek() with SEEK_SET.</span></div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<span class="stringliteral">    @param offset:</span></div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;<span class="stringliteral">        Offset of the first of the folder&#39;s data blocks in the CAB file.</span></div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;<span class="stringliteral">    @param blockcount:</span></div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;<span class="stringliteral">        Number of data blocks in the folder.</span></div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1util_xhtml_af74fec80080f6c627e5539bb20493ba0"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_a648056f11b83f759c99f551f483e9bef"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#a648056f11b83f759c99f551f483e9bef">openage::util.files.read_nullterminated_string</a></div><div class="ttdeci">def read_nullterminated_string(fileobj, maxlen=255)</div><div class="ttdoc">Reads bytes until a null terminator is reached.</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00033">files.py:33</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log.dbg()</a>, <a class="el" href="cab_8py_source.xhtml#l00263">openage.cabextract.cab.CABFile.folders</a>, <a class="el" href="cab_8py_source.xhtml#l00261">openage.cabextract.cab.CABFile.header</a>, <a class="el" href="files_8py_source.xhtml#l00033">openage.util.files.read_nullterminated_string()</a>, and <a class="el" href="strings_8cpp_source.xhtml#l00136">openage::util.split()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_ade45243e5c507f83f57d2ca5ad6a27e8_cgraph.svg" width="100%" height="416"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a4d9e75ec517f4c47627143b3a950a7e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d9e75ec517f4c47627143b3a950a7e7">&#9670;&nbsp;</a></span>read_folder_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.cabextract.cab.CABFile.read_folder_headers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>cab</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Called during the constructor run. </p>
<pre class="fragment">   Reads the folder headers and initializes the folder's plain stream
   file-like objects.

   Yields all folders.
</pre> 
<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00300">300</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(self.header.cFolders):</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;            folder = CFFolder.read(cab)</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;            <span class="comment"># read reserved</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            folder.reserved = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;                cab,</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;                self.header.reserved_data.cbCFFolder)</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="comment"># create compressed data stream</span></div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;            compressed_data_stream = CABFolderStream(</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;                cab,</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                folder.coffCabStart,</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;                folder.cCFData,</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;                self.header.reserved_data.cbCFData)</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <span class="comment"># determine compression type and create plain data stream</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            compression_type = folder.typeCompress &amp; 0x000f</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <span class="keywordflow">if</span> compression_type == 0:</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                folder.comp_name = <span class="stringliteral">&quot;Plain&quot;</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                folder.plain_stream = compressed_data_stream</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            <span class="keywordflow">elif</span> compression_type == 1:</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;MSZIP compression is unsupported&quot;</span>)</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;            <span class="keywordflow">elif</span> compression_type == 2:</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;Quantum compression is unsupported&quot;</span>)</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            <span class="keywordflow">elif</span> compression_type == 3:</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                window_bits = (folder.typeCompress &gt;&gt; 8) &amp; 0x1f</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;                folder.comp_name = <span class="stringliteral">&quot;LZX (window_bits = %d)&quot;</span> % window_bits</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;                <span class="keyword">from</span> .lzxdstream <span class="keyword">import</span> LZXDStream</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                <span class="keyword">from</span> ..util.filelike.stream <span class="keyword">import</span> StreamSeekBuffer</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;                unseekable_plain_stream = LZXDStream(</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;                    compressed_data_stream,</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;                    window_bits=window_bits,</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;                    reset_interval=0)</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;                folder.plain_stream = StreamSeekBuffer(unseekable_plain_stream)</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;Unknown compression type %d&quot;</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                                % compression_type)</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(folder)</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;            <span class="keywordflow">yield</span> folder</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;    <span class="keyword">def </span>read_file_headers(self, cab):</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_aa2ba5a14f2468fd0745e07dc84ff2188"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">openage::util.files.read_guaranteed</a></div><div class="ttdeci">def read_guaranteed(fileobj, size)</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00015">files.py:15</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log.dbg()</a>, <a class="el" href="cab_8py_source.xhtml#l00261">openage.cabextract.cab.CABFile.header</a>, and <a class="el" href="files_8py_source.xhtml#l00015">openage.util.files.read_guaranteed()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file_a4d9e75ec517f4c47627143b3a950a7e7_cgraph.svg" width="450" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="af0314a42b04e3b0f18cdfa33f8d6094d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0314a42b04e3b0f18cdfa33f8d6094d">&#9670;&nbsp;</a></span>folders</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.cabextract.cab.CABFile.folders</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00263">263</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="cab_8py_source.xhtml#l00356">openage.cabextract.cab.CABFile.read_file_headers()</a>.</p>

</div>
</div>
<a id="ae55c1f7f103006992ff6a29e92af5d6d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae55c1f7f103006992ff6a29e92af5d6d">&#9670;&nbsp;</a></span>header</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.cabextract.cab.CABFile.header</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00261">261</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="cab_8py_source.xhtml#l00356">openage.cabextract.cab.CABFile.read_file_headers()</a>, and <a class="el" href="cab_8py_source.xhtml#l00300">openage.cabextract.cab.CABFile.read_folder_headers()</a>.</p>

</div>
</div>
<a id="aff692dacfa2d9820e9d504cccd433252"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff692dacfa2d9820e9d504cccd433252">&#9670;&nbsp;</a></span>rootdir</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.cabextract.cab.CABFile.rootdir</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="cab_8py_source.xhtml#l00266">266</a> of file <a class="el" href="cab_8py_source.xhtml">cab.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="peresource_8py_source.xhtml#l00157">openage.convert.peresource.PEResources.__getitem__()</a>, and <a class="el" href="peresource_8py_source.xhtml#l00216">openage.convert.peresource.PEResources.read_strings()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/openage/cabextract/<a class="el" href="cab_8py_source.xhtml">cab.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1cabextract.xhtml">cabextract</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1cabextract_1_1cab.xhtml">cab</a></li><li class="navelem"><a class="el" href="classopenage_1_1cabextract_1_1cab_1_1_c_a_b_file.xhtml">CABFile</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
