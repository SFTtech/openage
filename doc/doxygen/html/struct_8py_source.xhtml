<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage/util/struct.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('struct_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">struct.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="struct_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1struct.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Provides some classes designed to expand the functionality of struct.struct</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> collections <span class="keyword">import</span> OrderedDict</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> struct <span class="keyword">import</span> Struct</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> ..util.files <span class="keyword">import</span> read_guaranteed</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml">NamedStructMeta</a>(type):</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral">    Metaclass for NamedStruct.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral">    Not unlike the meta-class for Enum, processes all the member attributes</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">    at class-creation time.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    @classmethod</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml">   22</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#adb57ffcf006000dc05afd73cbc545736">__prepare__</a>(mcs, name, bases, **kwds):</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        del mcs, name, bases, kwds  <span class="comment"># unused variables</span></div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#adb57ffcf006000dc05afd73cbc545736">   24</a></span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordflow">return</span> OrderedDict()</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#aa17dd52088b8ff6e9bf08cd1e49fc671">__new__</a>(mcs, name, bases, classdict, **kwds):</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        del kwds  <span class="comment"># unused variable</span></div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#aa17dd52088b8ff6e9bf08cd1e49fc671">   29</a></span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        specstr = <span class="keywordtype">None</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        attributes = []</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        postprocessors = {}</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">for</span> membername, value <span class="keywordflow">in</span> classdict.items():</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="comment"># ignore hidden and None members</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <span class="keywordflow">if</span> membername.startswith(<span class="stringliteral">&#39;_&#39;</span>) <span class="keywordflow">or</span> value <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            valuehasspecstr = hasattr(value, <span class="stringliteral">&quot;specstr&quot;</span>)</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="comment"># ignore member methods</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> valuehasspecstr:</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                <span class="keywordflow">if</span> callable(value) <span class="keywordflow">or</span> isinstance(value, classmethod):</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                    <span class="keywordflow">continue</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">if</span> membername == <span class="stringliteral">&#39;endianness&#39;</span>:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keywordflow">if</span> specstr <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                    <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;endianness has been given multiple times&quot;</span>)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keywordflow">if</span> value <span class="keywordflow">not</span> <span class="keywordflow">in</span> <span class="stringliteral">&quot;@=&lt;&gt;!&quot;</span>:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;endianess: expected one of @=&lt;&gt;!&quot;</span>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                specstr = value</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keywordflow">if</span> specstr <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;NamedStruct: endianness expected before &quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                                <span class="stringliteral">&quot;attribute &quot;</span> + membername)</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordflow">if</span> valuehasspecstr:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                postprocessors[membername], value = value, value.specstr</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">elif</span> isinstance(value, str):</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="keywordflow">pass</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="keywordflow">raise</span> TypeError(</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    <span class="stringliteral">&quot;NamedStruct member %s: expected str, but got %s&quot;</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                    % (membername, <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(value)))</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            specstr += value</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            attributes.append(membername)</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        classdict[<span class="stringliteral">&quot;_attributes&quot;</span>] = attributes</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        classdict[<span class="stringliteral">&quot;_postprocessors&quot;</span>] = postprocessors</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> specstr:</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            classdict[<span class="stringliteral">&quot;_struct&quot;</span>] = Struct(specstr)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">return</span> type.__new__(mcs, name, bases, <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>(classdict))</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">NamedStruct</a>(metaclass=NamedStructMeta):</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">    Designed to be inherited from, similar to Enum.</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">    Specify all fields of the struct, as &#39;membername = specstr&#39;,</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    where specstr is a string describing the field, as in struct.Struct.</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">    NamedStructMeta translates those individual specstr fragments to</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">    a complete specstr.</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="stringliteral">    Alternatively to a specstr, a callable object with a specstr member</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="stringliteral">    may be passed; the specstr is used as usual, but afterwards the</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">    callable is invoked to post-process the extracted data.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">    One example for such a callable is the Flags class.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">    Alternatively, attributes may be set to None; those are ignored,</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">    and may be set manually at some later point.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">    The first member must be &#39;endianess&#39;.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="stringliteral">    Example:</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="stringliteral">    class MyStruct(NamedStruct):</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="stringliteral">        endianness = &quot;&lt;&quot;</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="stringliteral">        mgck = &quot;4s&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">        test = &quot;I&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">        rofl = &quot;H&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">        flag = MyFlagType</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    The constructor takes a bytes object of the appropriate length, and fills</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    in all the members with the struct&#39;s actual values.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment"># those values are set by the metaclass.</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    _postprocessors = <span class="keywordtype">None</span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">  116</a></span>&#160;    _struct = <span class="keywordtype">None</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    _attributes = <span class="keywordtype">None</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a73bebaa3ad9fc8839af4f542b842e61c">__init__</a>(self, data):</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">_struct</a>:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;            <span class="keywordflow">raise</span> NotImplementedError(</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#af5ebda227aca97bf6653323c954f74c5">  122</a></span>&#160;                <span class="stringliteral">&quot;Abstract NamedStruct can not be instantiated&quot;</span>)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        values = self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">_struct</a>.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">unpack</a>(data)</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">  126</a></span>&#160;        <span class="keywordflow">if</span> len(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">_attributes</a>) != len(values):</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;internal error: &quot;</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                            <span class="stringliteral">&quot;number of attributes differs from number of &quot;</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                            <span class="stringliteral">&quot;struct fields&quot;</span>)</div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">  130</a></span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">for</span> name, value <span class="keywordflow">in</span> zip(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">_attributes</a>, values):</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a73bebaa3ad9fc8839af4f542b842e61c">  132</a></span>&#160;            <span class="comment"># pylint: disable=unsupported-membership-test</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="keywordflow">if</span> name <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#af5ebda227aca97bf6653323c954f74c5">_postprocessors</a>:</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                <span class="comment"># pylint: disable=unsubscriptable-object</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                value = self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#af5ebda227aca97bf6653323c954f74c5">_postprocessors</a>[name](value)</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            setattr(self, name, value)</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    @classmethod</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">unpack</a>(cls, data):</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        Unpacks data and returns a NamedStruct object that holds the fields.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keywordflow">return</span> cls(data)</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    @classmethod</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ac1af4243315e2a57dbff45d484820451">size</a>(cls):</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">        Returns the size of the struct, in bytes.</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        <span class="keywordflow">return</span> cls.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">_struct</a>.size</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    @classmethod</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a10cfd96f5d25886cfe84b8fe739f1deb">read</a>(cls, fileobj):</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">  156</a></span>&#160;<span class="stringliteral">        Reads the appropriate amount of data from fileobj, and unpacks it.</span></div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        data = <a class="code" href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">read_guaranteed</a>(fileobj, cls.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">_struct</a>.size)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> cls.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">unpack</a>(data)</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    @classmethod</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a39ddc44b3cc3611acd3ec7e4ee49abf9">from_nullbytes</a>(cls):</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ac1af4243315e2a57dbff45d484820451">  163</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="stringliteral">        Decodes nullbytes (sort of a &#39;default&#39; value).</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        data = b<span class="stringliteral">&quot;\x00&quot;</span> * cls.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">_struct</a>.size</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">return</span> cls.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">unpack</a>(data)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="comment"># nobody has needed .pack() and .write() functions this far; implement</span></div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a10cfd96f5d25886cfe84b8fe739f1deb">  170</a></span>&#160;    <span class="comment"># them if you need them.</span></div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a111c24deaf6b643f014cb8e33f770ea4">__len__</a>(self):</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">        Returns the number of fields.</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="keywordflow">return</span> len(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">_attributes</a>)</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a39ddc44b3cc3611acd3ec7e4ee49abf9">  178</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a5ed8305cdd2a46d36d6156459a31269d">__getitem__</a>(self, index):</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">        Returns the n-th field, or raises IndexError.</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;        <span class="comment"># pylint: disable=unsubscriptable-object</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">return</span> getattr(self, self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">_attributes</a>[index])</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#abe42962b06b44bf3b9f3ebbbdde85f5c">as_dict</a>(self):</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">        Returns a key-value dict for all attributes.</span></div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a111c24deaf6b643f014cb8e33f770ea4">  188</a></span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="comment"># pylint: disable=not-an-iterable</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> {attr: getattr(self, attr) <span class="keywordflow">for</span> attr <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">_attributes</a>}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a320fc3010de09ada87f68bae82190c91">__iter__</a>(self):</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="keywordflow">return</span> iter(self)</div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a5ed8305cdd2a46d36d6156459a31269d">  194</a></span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a9cdd6f3d9b9ba4ab07beb41d5021b83e">__repr__</a>(self):</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(type(self)) + <span class="stringliteral">&quot;: &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#abe42962b06b44bf3b9f3ebbbdde85f5c">as_dict</a>())</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ad7a89792617e8271fe2b025116d10794">__str__</a>(self):</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">return</span> type(self).__name__ + <span class="stringliteral">&quot;:\n\t&quot;</span> + <span class="stringliteral">&quot;\n\t&quot;</span>.join(</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(key).ljust(20) + <span class="stringliteral">&quot; = &quot;</span> + <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(value)</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#abe42962b06b44bf3b9f3ebbbdde85f5c">  201</a></span>&#160;            <span class="keywordflow">for</span> key, value <span class="keywordflow">in</span> sorted(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#abe42962b06b44bf3b9f3ebbbdde85f5c">as_dict</a>().items())</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        )</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a320fc3010de09ada87f68bae82190c91">  205</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_flags_meta.xhtml">FlagsMeta</a>(type):</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="stringliteral">    Metaclass for Flags. Compare to NamedStructMeta.</span></div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a9cdd6f3d9b9ba4ab07beb41d5021b83e">  208</a></span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#aa17dd52088b8ff6e9bf08cd1e49fc671">__new__</a>(mcs, name, bases, classdict, **kwds):</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        del kwds  <span class="comment"># unused variable</span></div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ad7a89792617e8271fe2b025116d10794">  211</a></span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="comment"># we don&#39;t need to know the order of the flags, so we don&#39;t need</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;        <span class="comment"># to do the whole &#39;OrderedDict&#39; dance.</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment"># stores a mapping of flag value &lt;-&gt; flag name</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        flags = {}</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        specstr_found = <span class="keyword">False</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">for</span> membername, value <span class="keywordflow">in</span> classdict.items():</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="keywordflow">if</span> membername.startswith(<span class="stringliteral">&#39;_&#39;</span>):</div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_flags_meta.xhtml">  221</a></span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00222"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_flags_meta.xhtml#a7f7aa6ac1d715dc74204a215f710794b">  222</a></span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="keywordflow">if</span> membername == <span class="stringliteral">&quot;specstr&quot;</span>:</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                specstr_found = <span class="keyword">True</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(value, str):</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;                    <span class="keywordflow">raise</span> TypeError(</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                        <span class="stringliteral">&quot;expected str as value for specstr, &quot;</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                        <span class="stringliteral">&quot;but got &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(value))</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;            <span class="keywordflow">if</span> callable(value) <span class="keywordflow">or</span> isinstance(value, classmethod):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(value, int):</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;                <span class="keywordflow">raise</span> TypeError(</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;                    <span class="stringliteral">&quot;expected int as value for flag &quot;</span> + membername + <span class="stringliteral">&quot;, &quot;</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                    <span class="stringliteral">&quot;but got &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(value))</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            flagvalue = 1 &lt;&lt; value</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;            flags[flagvalue] = membername</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="keywordflow">if</span> flags <span class="keywordflow">and</span> <span class="keywordflow">not</span> specstr_found:</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;expected a &#39;specstr&#39; attribute&quot;</span>)</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        classdict[<span class="stringliteral">&quot;_flags&quot;</span>] = flags</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">return</span> type.__new__(mcs, name, bases, classdict)</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">Flags</a>(metaclass=FlagsMeta):</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="stringliteral">    Designed to be inherited from, similar to Enum.</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="stringliteral">    Used to generate flag parsers (for boolean flags that</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="stringliteral">    are stored in an integer value).</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="stringliteral">    Specify the bit numbers of all possible flags as attributes,</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="stringliteral">    e.g.:</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="stringliteral">    class MyFlags(Flags):</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="stringliteral">        thisflag = 0</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="stringliteral">        thatflag = 1</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="stringliteral">    The constructor of the class takes an integer argument,</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="stringliteral">    which is parsed; all the boolean values are stored in the</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="stringliteral">    attributes.</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="stringliteral">    If any unknown bits are set, self.unknown() is called.</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    <span class="comment"># set by the metaclass</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    _flags = <span class="keywordtype">None</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keyword">def </span>__init__(self, val):</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="keywordflow">for</span> flagvalue, flagname <span class="keywordflow">in</span> self._flags.items():</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;            <span class="keywordflow">if</span> val &amp; flagvalue:</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                setattr(self, flagname, <span class="keyword">True</span>)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                val &amp;= ~flagvalue</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;                setattr(self, flagname, <span class="keyword">False</span>)</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">  283</a></span>&#160;        <span class="keywordflow">if</span> val:</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#aff72d5cb5a508e186cc5ff6fe122b165">unknown</a>(val)</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#aff72d5cb5a508e186cc5ff6fe122b165">unknown</a>(self, unknownflags):</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="stringliteral">        Default handler for any unknown bits. Overload if needed.</span></div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a8a170009d09cddd227fda40f8a9e0bc5">  289</a></span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">raise</span> ValueError(</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a3407f22b41e48ab3863a9f593435933e">  291</a></span>&#160;            <span class="stringliteral">&quot;unknown flag values: &quot;</span> + bin(unknownflags) + <span class="stringliteral">&quot; &quot;</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            <span class="stringliteral">&quot;in addition to existing flags: &quot;</span> + <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a6a0ca67c162ec2342ddf176a0fa5598e">as_dict</a>()))</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a6a0ca67c162ec2342ddf176a0fa5598e">as_dict</a>(self):</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="stringliteral">        Returns a key-value dict for all flags.</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">return</span> {flagname: getattr(self, flagname)</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;                <span class="keywordflow">for</span> flagname <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a8a170009d09cddd227fda40f8a9e0bc5">_flags</a>.values()}</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a9f6a718342072c143f8d66ebf9f5ff53">__repr__</a>(self):</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(type(self)) + <span class="stringliteral">&quot;: &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self.<a class="code" href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a6a0ca67c162ec2342ddf176a0fa5598e">as_dict</a>())</div><div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml_aff72d5cb5a508e186cc5ff6fe122b165"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#aff72d5cb5a508e186cc5ff6fe122b165">openage::util.struct.Flags.unknown</a></div><div class="ttdeci">def unknown(self, unknownflags)</div><div class="ttdoc">Default handler for any unknown bits.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00305">struct.py:305</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml">openage::util.struct.NamedStruct</a></div><div class="ttdoc">Designed to be inherited from, similar to Enum.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00116">struct.py:116</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a111c24deaf6b643f014cb8e33f770ea4"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a111c24deaf6b643f014cb8e33f770ea4">openage::util.struct.NamedStruct.__len__</a></div><div class="ttdeci">def __len__(self)</div><div class="ttdoc">Returns the number of fields.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00188">struct.py:188</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_ac1af4243315e2a57dbff45d484820451"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ac1af4243315e2a57dbff45d484820451">openage::util.struct.NamedStruct.size</a></div><div class="ttdeci">def size(cls)</div><div class="ttdoc">Returns the size of the struct, in bytes.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00163">struct.py:163</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1files_xhtml_aa2ba5a14f2468fd0745e07dc84ff2188"><div class="ttname"><a href="namespaceopenage_1_1util_1_1files.xhtml#aa2ba5a14f2468fd0745e07dc84ff2188">openage::util.files.read_guaranteed</a></div><div class="ttdeci">def read_guaranteed(fileobj, size)</div><div class="ttdef"><b>Definition:</b> <a href="files_8py_source.xhtml#l00015">files.py:15</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml_a8a170009d09cddd227fda40f8a9e0bc5"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a8a170009d09cddd227fda40f8a9e0bc5">openage::util.struct.Flags._flags</a></div><div class="ttdeci">_flags</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00289">struct.py:289</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a9cdd6f3d9b9ba4ab07beb41d5021b83e"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a9cdd6f3d9b9ba4ab07beb41d5021b83e">openage::util.struct.NamedStruct.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00208">struct.py:208</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_abe42962b06b44bf3b9f3ebbbdde85f5c"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#abe42962b06b44bf3b9f3ebbbdde85f5c">openage::util.struct.NamedStruct.as_dict</a></div><div class="ttdeci">def as_dict(self)</div><div class="ttdoc">Returns a key-value dict for all attributes.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00201">struct.py:201</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml_a6a0ca67c162ec2342ddf176a0fa5598e"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a6a0ca67c162ec2342ddf176a0fa5598e">openage::util.struct.Flags.as_dict</a></div><div class="ttdeci">def as_dict(self)</div><div class="ttdoc">Returns a key-value dict for all flags.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00313">struct.py:313</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a10cfd96f5d25886cfe84b8fe739f1deb"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a10cfd96f5d25886cfe84b8fe739f1deb">openage::util.struct.NamedStruct.read</a></div><div class="ttdeci">def read(cls, fileobj)</div><div class="ttdoc">Reads the appropriate amount of data from fileobj, and unpacks it.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00170">struct.py:170</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_meta_xhtml_adb57ffcf006000dc05afd73cbc545736"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#adb57ffcf006000dc05afd73cbc545736">openage::util.struct.NamedStructMeta.__prepare__</a></div><div class="ttdeci">def __prepare__(mcs, name, bases, **kwds)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00024">struct.py:24</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a1a2ff8b8ec3b01db2e620a7ab7da9bd3"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a1a2ff8b8ec3b01db2e620a7ab7da9bd3">openage::util.struct.NamedStruct._attributes</a></div><div class="ttdeci">_attributes</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00130">struct.py:130</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_meta_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml">openage::util.struct.NamedStructMeta</a></div><div class="ttdoc">Metaclass for NamedStruct.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00022">struct.py:22</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a73bebaa3ad9fc8839af4f542b842e61c"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a73bebaa3ad9fc8839af4f542b842e61c">openage::util.struct.NamedStruct.__init__</a></div><div class="ttdeci">def __init__(self, data)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00132">struct.py:132</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_meta_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags_meta.xhtml">openage::util.struct.FlagsMeta</a></div><div class="ttdoc">Metaclass for Flags.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00221">struct.py:221</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a7704f79ea7d43f2aeb5b28dcce79fdc8"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a7704f79ea7d43f2aeb5b28dcce79fdc8">openage::util.struct.NamedStruct.unpack</a></div><div class="ttdeci">def unpack(cls, data)</div><div class="ttdoc">Unpacks data and returns a NamedStruct object that holds the fields.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00156">struct.py:156</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml_a9f6a718342072c143f8d66ebf9f5ff53"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml#a9f6a718342072c143f8d66ebf9f5ff53">openage::util.struct.Flags.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00317">struct.py:317</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a5ed8305cdd2a46d36d6156459a31269d"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a5ed8305cdd2a46d36d6156459a31269d">openage::util.struct.NamedStruct.__getitem__</a></div><div class="ttdeci">def __getitem__(self, index)</div><div class="ttdoc">Returns the n-th field, or raises IndexError.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00194">struct.py:194</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a4b593f281fd86c63a2cc7a3d68f9cecb"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a4b593f281fd86c63a2cc7a3d68f9cecb">openage::util.struct.NamedStruct._struct</a></div><div class="ttdeci">_struct</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00126">struct.py:126</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_flags_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_flags.xhtml">openage::util.struct.Flags</a></div><div class="ttdoc">Designed to be inherited from, similar to Enum.</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00283">struct.py:283</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_meta_xhtml_aa17dd52088b8ff6e9bf08cd1e49fc671"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct_meta.xhtml#aa17dd52088b8ff6e9bf08cd1e49fc671">openage::util.struct.NamedStructMeta.__new__</a></div><div class="ttdeci">def __new__(mcs, name, bases, classdict, **kwds)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00029">struct.py:29</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a39ddc44b3cc3611acd3ec7e4ee49abf9"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a39ddc44b3cc3611acd3ec7e4ee49abf9">openage::util.struct.NamedStruct.from_nullbytes</a></div><div class="ttdeci">def from_nullbytes(cls)</div><div class="ttdoc">Decodes nullbytes (sort of a 'default' value).</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00178">struct.py:178</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_a320fc3010de09ada87f68bae82190c91"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#a320fc3010de09ada87f68bae82190c91">openage::util.struct.NamedStruct.__iter__</a></div><div class="ttdeci">def __iter__(self)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00205">struct.py:205</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_ad7a89792617e8271fe2b025116d10794"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#ad7a89792617e8271fe2b025116d10794">openage::util.struct.NamedStruct.__str__</a></div><div class="ttdeci">def __str__(self)</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00211">struct.py:211</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1struct_1_1_named_struct_xhtml_af5ebda227aca97bf6653323c954f74c5"><div class="ttname"><a href="classopenage_1_1util_1_1struct_1_1_named_struct.xhtml#af5ebda227aca97bf6653323c954f74c5">openage::util.struct.NamedStruct._postprocessors</a></div><div class="ttdeci">_postprocessors</div><div class="ttdef"><b>Definition:</b> <a href="struct_8py_source.xhtml#l00122">struct.py:122</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_add32c31ab2cc20d9f874152de79d6bd.xhtml">util</a></li><li class="navelem"><a class="el" href="struct_8py.xhtml">struct.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
