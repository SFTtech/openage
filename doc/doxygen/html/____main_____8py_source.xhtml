<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/__main__.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('____main_____8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">__main__.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="____main_____8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1____main____.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Behold: The central entry point for all of openage.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="stringliteral">This module mostly does argparsing.</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="stringliteral">Subparsers are initialized by their respective modules.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">import</span> argparse</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"># TODO remove this once all multiprocessing has been eliminated:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">import</span> multiprocessing</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">import</span> sys</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">from</span> .log <span class="keyword">import</span> set_loglevel, verbosity_to_level, ENV_VERBOSITY</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1____main_____1_1_print_version.xhtml">PrintVersion</a>(argparse.Action):</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">    The default version printer, unfortunately, inserts newlines.</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">    This is the easiest way around.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment"># pylint: disable=too-few-public-methods</span></div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classopenage_1_1____main_____1_1_print_version.xhtml">   25</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1____main_____1_1_print_version.xhtml#aadec8b6b976eded00e51df343cd78324">__call__</a>(self, parser, namespace, values, option_string=None):</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        del parser, namespace, values, option_string  <span class="comment"># unused</span></div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1____main_____1_1_print_version.xhtml#aadec8b6b976eded00e51df343cd78324">   27</a></span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">from</span> . <span class="keyword">import</span> LONGVERSION</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        print(LONGVERSION)</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        sys.exit(0)</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1____main____.xhtml#a2cf9c123d48ac683e5cf594b0114e5e3">main</a>(argv=None):</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Top-level argparsing; invokes subparser for all submodules. &quot;&quot;&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    cli = argparse.ArgumentParser(</div><div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1____main____.xhtml#a2cf9c123d48ac683e5cf594b0114e5e3">   36</a></span>&#160;        <span class="stringliteral">&quot;openage&quot;</span>,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        description=(<span class="stringliteral">&quot;free age of empires II engine clone&quot;</span>)</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    )</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    cli.add_argument(<span class="stringliteral">&quot;--version&quot;</span>, <span class="stringliteral">&quot;-V&quot;</span>, nargs=0, action=PrintVersion,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                     help=<span class="stringliteral">&quot;print version info and exit&quot;</span>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment"># shared arguments for all subcommands</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    global_cli = argparse.ArgumentParser(add_help=<span class="keyword">False</span>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    global_cli.add_argument(<span class="stringliteral">&quot;--verbose&quot;</span>, <span class="stringliteral">&quot;-v&quot;</span>, action=<span class="stringliteral">&#39;count&#39;</span>,</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                            default=ENV_VERBOSITY,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                            help=<span class="stringliteral">&quot;increase verbosity&quot;</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    global_cli.add_argument(<span class="stringliteral">&quot;--quiet&quot;</span>, <span class="stringliteral">&quot;-q&quot;</span>, action=<span class="stringliteral">&#39;count&#39;</span>, default=0,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                            help=<span class="stringliteral">&quot;decrease verbosity&quot;</span>)</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    global_cli.add_argument(<span class="stringliteral">&quot;--devmode&quot;</span>, action=<span class="stringliteral">&quot;store_true&quot;</span>,</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                            help=<span class="stringliteral">&quot;force-enable development mode&quot;</span>)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    global_cli.add_argument(<span class="stringliteral">&quot;--no-devmode&quot;</span>, action=<span class="stringliteral">&quot;store_true&quot;</span>,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                            help=<span class="stringliteral">&quot;force-disable devlopment mode&quot;</span>)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    global_cli.add_argument(<span class="stringliteral">&quot;--trap-exceptions&quot;</span>, action=<span class="stringliteral">&quot;store_true&quot;</span>,</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                            help=(<span class="stringliteral">&quot;upon throwing an exception a debug break is &quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                  <span class="stringliteral">&quot;triggered. this will crash openage if no &quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                                  <span class="stringliteral">&quot;debugger is present&quot;</span>))</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="comment"># shared directory arguments for most subcommands</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    cfg_cli = argparse.ArgumentParser(add_help=<span class="keyword">False</span>)</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    cfg_cli.add_argument(<span class="stringliteral">&quot;--asset-dir&quot;</span>,</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                         help=<span class="stringliteral">&quot;Use this as an additional asset directory.&quot;</span>)</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    cfg_cli.add_argument(<span class="stringliteral">&quot;--cfg-dir&quot;</span>,</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                         help=<span class="stringliteral">&quot;Use this as an additional config directory.&quot;</span>)</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    subparsers = cli.add_subparsers(dest=<span class="stringliteral">&quot;subcommand&quot;</span>)</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="comment"># enable reimports for &quot;init_subparser&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="comment"># pylint: disable=reimported</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keyword">from</span> .game.main <span class="keyword">import</span> init_subparser</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    game_cli = subparsers.add_parser(</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <span class="stringliteral">&quot;game&quot;</span>,</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        parents=[global_cli, cfg_cli])</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">init_subparser</a>(game_cli)</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">from</span> .testing.main <span class="keyword">import</span> init_subparser</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">init_subparser</a>(subparsers.add_parser(</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="stringliteral">&quot;test&quot;</span>,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        parents=[global_cli, cfg_cli]))</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">from</span> .convert.main <span class="keyword">import</span> init_subparser</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">init_subparser</a>(subparsers.add_parser(</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="stringliteral">&quot;convert&quot;</span>,</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        parents=[global_cli]))</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keyword">from</span> .convert.singlefile <span class="keyword">import</span> init_subparser</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">init_subparser</a>(subparsers.add_parser(</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="stringliteral">&quot;convert-file&quot;</span>,</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        parents=[global_cli]))</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">from</span> .codegen.main <span class="keyword">import</span> init_subparser</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">init_subparser</a>(subparsers.add_parser(</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="stringliteral">&quot;codegen&quot;</span>,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        parents=[global_cli]))</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    args = cli.parse_args(argv)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> args.subcommand:</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="comment"># the user didn&#39;t specify a subcommand. default to &#39;game&#39;.</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        args = game_cli.parse_args(argv)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="comment"># process the shared args</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">set_loglevel</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a10c8ba63b955b0c97dc3b3323f73a4b2">verbosity_to_level</a>(args.verbose - args.quiet))</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> args.no_devmode <span class="keywordflow">and</span> args.devmode:</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        cli.error(<span class="stringliteral">&quot;can&#39;t force enable and disable devmode at the same time&quot;</span>)</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keyword">from</span> . <span class="keyword">import</span> config</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">if</span> args.no_devmode:</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            config.DEVMODE = <span class="keyword">False</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">if</span> args.devmode:</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            config.DEVMODE = <span class="keyword">True</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <span class="keyword">from</span> . <span class="keyword">import</span> cython_check</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            cython_check.this_is_true()</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">except</span> ImportError:</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        cli.error(<span class="stringliteral">&quot;code was not yet generated. &quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                  <span class="stringliteral">&quot;Did you run the command from the build directory (bin/)?\n&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                  <span class="stringliteral">&quot;See doc/building.md for more information.&quot;</span>)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&quot;asset_dir&quot;</span> <span class="keywordflow">in</span> args <span class="keywordflow">and</span> args.asset_dir:</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> os.path.exists(args.asset_dir):</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            cli.error(<span class="stringliteral">&quot;asset directory does not exist: &quot;</span> + args.asset_dir)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="comment"># call the entry point for the subcommand.</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> args.entrypoint(args, cli.error)</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keywordflow">if</span> __name__ == <span class="stringliteral">&#39;__main__&#39;</span>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="comment"># openage is complicated and multithreaded; better not use fork.</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    multiprocessing.set_start_method(<span class="stringliteral">&#39;spawn&#39;</span>)</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    sys.exit(<a class="code" href="namespaceopenage_1_1____main____.xhtml#a2cf9c123d48ac683e5cf594b0114e5e3">main</a>())</div><div class="ttc" id="classopenage_1_1____main_____1_1_print_version_xhtml"><div class="ttname"><a href="classopenage_1_1____main_____1_1_print_version.xhtml">openage.__main__.PrintVersion</a></div><div class="ttdef"><b>Definition:</b> <a href="____main_____8py_source.xhtml#l00025">__main__.py:25</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a10c8ba63b955b0c97dc3b3323f73a4b2"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a10c8ba63b955b0c97dc3b3323f73a4b2">openage::log.verbosity_to_level</a></div><div class="ttdeci">def verbosity_to_level(verbosity)</div><div class="ttdoc">Translates an integer verbosity to a log level.</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00136">__init__.py:136</a></div></div>
<div class="ttc" id="classopenage_1_1____main_____1_1_print_version_xhtml_aadec8b6b976eded00e51df343cd78324"><div class="ttname"><a href="classopenage_1_1____main_____1_1_print_version.xhtml#aadec8b6b976eded00e51df343cd78324">openage.__main__.PrintVersion.__call__</a></div><div class="ttdeci">def __call__(self, parser, namespace, values, option_string=None)</div><div class="ttdef"><b>Definition:</b> <a href="____main_____8py_source.xhtml#l00027">__main__.py:27</a></div></div>
<div class="ttc" id="namespaceopenage_1_1____main_____xhtml_a2cf9c123d48ac683e5cf594b0114e5e3"><div class="ttname"><a href="namespaceopenage_1_1____main____.xhtml#a2cf9c123d48ac683e5cf594b0114e5e3">openage.__main__.main</a></div><div class="ttdeci">def main(argv=None)</div><div class="ttdoc">Top-level argparsing; invokes subparser for all submodules.</div><div class="ttdef"><b>Definition:</b> <a href="____main_____8py_source.xhtml#l00036">__main__.py:36</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a78bab1bc2016bebde4ef3cde06936702"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">openage::log.set_loglevel</a></div><div class="ttdeci">def set_loglevel(level)</div><div class="ttdoc">sets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00091">__init__.py:91</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1main_xhtml_a0e9029131438ddadc195b01c7b3b20a8"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1main.xhtml#a0e9029131438ddadc195b01c7b3b20a8">openage.codegen.main.init_subparser</a></div><div class="ttdeci">def init_subparser(cli)</div><div class="ttdoc">Codegen-specific CLI.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_2main_8py_source.xhtml#l00059">main.py:59</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="____main_____8py.xhtml">__main__.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
