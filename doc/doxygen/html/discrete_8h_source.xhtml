<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/curve/discrete.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('discrete_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">discrete.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="discrete_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2017-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;optional&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;utility&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="value__container_8h.xhtml">value_container.h</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage_1_1curve.xhtml">openage::curve</a> {</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classopenage_1_1curve_1_1_discrete.xhtml">   18</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml">Discrete</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1curve_1_1_value_container.xhtml">ValueContainer</a>&lt;T&gt; {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    static_assert(std::is_copy_assignable&lt;T&gt;::value,</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;                  <span class="stringliteral">&quot;Template type is not copy assignable&quot;</span>);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    static_assert(std::is_copy_constructible&lt;T&gt;::value,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                  <span class="stringliteral">&quot;Template type is not copy constructible&quot;</span>);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">using</span> <a class="code" href="classopenage_1_1curve_1_1_value_container.xhtml">ValueContainer&lt;T&gt;::ValueContainer</a>;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    T <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#ab4746bae3f4c7d01312e530b0e5150d5">get</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;t) <span class="keyword">const override</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    std::pair&lt;time_t, T&gt; <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#a4b2bddacdb81de7e9d1f207ca7cd15c2">get_time</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;t) <span class="keyword">const</span>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    std::optional&lt;std::pair&lt;time_t, T&gt;&gt; <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#a9be982a0d41cb6b5f2968aafcf147c82">get_previous</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;t) <span class="keyword">const</span>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;};</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classopenage_1_1curve_1_1_discrete.xhtml#ab4746bae3f4c7d01312e530b0e5150d5">   45</a></span>&#160;T <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#ab4746bae3f4c7d01312e530b0e5150d5">Discrete&lt;T&gt;::get</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;time)<span class="keyword"> const </span>{</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">auto</span> e = this-&gt;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>.last(time, this-&gt;last_element);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    this-&gt;last_element = e;   <span class="comment">// TODO if Caching?</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">return</span> e-&gt;value;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopenage_1_1curve_1_1_discrete.xhtml#a4b2bddacdb81de7e9d1f207ca7cd15c2">   53</a></span>&#160;std::pair&lt;time_t, T&gt; <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#a4b2bddacdb81de7e9d1f207ca7cd15c2">Discrete&lt;T&gt;::get_time</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;time)<span class="keyword"> const </span>{</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">auto</span> e = this-&gt;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>.last(time, this-&gt;last_element);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    this-&gt;last_element = e;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">return</span> std::make_pair(e-&gt;time, e-&gt;value);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00061"></a><span class="lineno"><a class="line" href="classopenage_1_1curve_1_1_discrete.xhtml#a9be982a0d41cb6b5f2968aafcf147c82">   61</a></span>&#160;std::optional&lt;std::pair&lt;time_t, T&gt;&gt; <a class="code" href="classopenage_1_1curve_1_1_discrete.xhtml#a9be982a0d41cb6b5f2968aafcf147c82">Discrete&lt;T&gt;::get_previous</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">time_t</a> &amp;time)<span class="keyword"> const </span>{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">auto</span> e = this-&gt;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>.last(time, this-&gt;last_element);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    this-&gt;last_element = e;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// if we&#39;re not at the container head</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// go back one entry.</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">if</span> (e == std::begin(this-&gt;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>)) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">return</span> {};</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    e--;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> std::make_pair(e-&gt;time, e-&gt;value);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;} <span class="comment">// openage::curve</span></div><div class="ttc" id="value__container_8h_xhtml"><div class="ttname"><a href="value__container_8h.xhtml">value_container.h</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_discrete_xhtml_a4b2bddacdb81de7e9d1f207ca7cd15c2"><div class="ttname"><a href="classopenage_1_1curve_1_1_discrete.xhtml#a4b2bddacdb81de7e9d1f207ca7cd15c2">openage::curve::Discrete::get_time</a></div><div class="ttdeci">std::pair&lt; time_t, T &gt; get_time(const time_t &amp;t) const</div><div class="ttdef"><b>Definition:</b> <a href="discrete_8h_source.xhtml#l00053">discrete.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_discrete_xhtml_ab4746bae3f4c7d01312e530b0e5150d5"><div class="ttname"><a href="classopenage_1_1curve_1_1_discrete.xhtml#ab4746bae3f4c7d01312e530b0e5150d5">openage::curve::Discrete::get</a></div><div class="ttdeci">T get(const time_t &amp;t) const override</div><div class="ttdef"><b>Definition:</b> <a href="discrete_8h_source.xhtml#l00045">discrete.h:45</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_1_1tests_xhtml_afc4e799a037edab37e1e35a74da593b7"><div class="ttname"><a href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">openage::curve::tests::container</a></div><div class="ttdeci">void container()</div><div class="ttdef"><b>Definition:</b> <a href="container_8cpp_source.xhtml#l00205">container.cpp:205</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml">openage::curve</a></div><div class="ttdef"><b>Definition:</b> <a href="continuous_8cpp_source.xhtml#l00005">continuous.cpp:5</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_discrete_xhtml"><div class="ttname"><a href="classopenage_1_1curve_1_1_discrete.xhtml">openage::curve::Discrete</a></div><div class="ttdef"><b>Definition:</b> <a href="discrete_8h_source.xhtml#l00018">discrete.h:18</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_discrete_xhtml_a9be982a0d41cb6b5f2968aafcf147c82"><div class="ttname"><a href="classopenage_1_1curve_1_1_discrete.xhtml#a9be982a0d41cb6b5f2968aafcf147c82">openage::curve::Discrete::get_previous</a></div><div class="ttdeci">std::optional&lt; std::pair&lt; time_t, T &gt; &gt; get_previous(const time_t &amp;t) const</div><div class="ttdef"><b>Definition:</b> <a href="discrete_8h_source.xhtml#l00061">discrete.h:61</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint&lt; int64_t, 16 &gt;</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_value_container_xhtml"><div class="ttname"><a href="classopenage_1_1curve_1_1_value_container.xhtml">openage::curve::ValueContainer</a></div><div class="ttdef"><b>Definition:</b> <a href="value__container_8h_source.xhtml#l00014">value_container.h:14</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_ccad08bb708da2762bd629c3fb99a53c.xhtml">curve</a></li><li class="navelem"><a class="el" href="discrete_8h.xhtml">discrete.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
