<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::event::demo::BallReflectPanel Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::demo::BallReflectPanel Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::event::demo::BallReflectPanel:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel__inherit__graph.svg" width="200" height="500"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::event::demo::BallReflectPanel:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel__coll__graph.svg" width="200" height="500"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4ff75fb0a97d1a13c02ed2c148125779"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a4ff75fb0a97d1a13c02ed2c148125779">BallReflectPanel</a> ()</td></tr>
<tr class="separator:a4ff75fb0a97d1a13c02ed2c148125779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a031ec32c576b33298fdb75dee692de8b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a031ec32c576b33298fdb75dee692de8b">setup_event</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;target, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate) override</td></tr>
<tr class="separator:a031ec32c576b33298fdb75dee692de8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa56d9723c3d16a001d71bca91fd08c70"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#aa56d9723c3d16a001d71bca91fd08c70">invoke</a> (<a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;mgr, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;now, const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;) override</td></tr>
<tr class="separator:aa56d9723c3d16a001d71bca91fd08c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81a50b0cb9bf2c5148a355f02829c992"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a81a50b0cb9bf2c5148a355f02829c992">predict_invoke_time</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;target, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;now) override</td></tr>
<tr class="separator:a81a50b0cb9bf2c5148a355f02829c992"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1event_1_1_dependency_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1event_1_1_dependency_event_class')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">openage::event::DependencyEventClass</a></td></tr>
<tr class="memitem:a51e8b8a3e46c9bebecd84b84e8dd049d inherit pub_methods_classopenage_1_1event_1_1_dependency_event_class"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_dependency_event_class.xhtml#a51e8b8a3e46c9bebecd84b84e8dd049d">DependencyEventClass</a> (const std::string &amp;name)</td></tr>
<tr class="separator:a51e8b8a3e46c9bebecd84b84e8dd049d inherit pub_methods_classopenage_1_1event_1_1_dependency_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a> (const std::string &amp;name, const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>)</td></tr>
<tr class="separator:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">~EventClass</a> ()=default</td></tr>
<tr class="separator:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">id</a> ()</td></tr>
<tr class="separator:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> { <br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">trigger_type::DEPENDENCY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">trigger_type::DEPENDENCY_IMMEDIATELY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">trigger_type::TRIGGER</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">trigger_type::REPEAT</a>, 
<br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">trigger_type::ONCE</a>
<br />
 }</td></tr>
<tr class="separator:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a></td></tr>
<tr class="separator:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00117">117</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a4ff75fb0a97d1a13c02ed2c148125779"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ff75fb0a97d1a13c02ed2c148125779">&#9670;&nbsp;</a></span>BallReflectPanel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::event::demo::BallReflectPanel::BallReflectPanel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00119">119</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        :</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml#a51e8b8a3e46c9bebecd84b84e8dd049d">DependencyEventClass</a>(<span class="stringliteral">&quot;demo.ball.reflect_panel&quot;</span>) {}</div><div class="ttc" id="classopenage_1_1event_1_1_dependency_event_class_xhtml_a51e8b8a3e46c9bebecd84b84e8dd049d"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_event_class.xhtml#a51e8b8a3e46c9bebecd84b84e8dd049d">openage::event::DependencyEventClass::DependencyEventClass</a></div><div class="ttdeci">DependencyEventClass(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00023">eventclass.cpp:23</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa56d9723c3d16a001d71bca91fd08c70"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa56d9723c3d16a001d71bca91fd08c70">&#9670;&nbsp;</a></span>invoke()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::BallReflectPanel::invoke </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;&#160;</td>
          <td class="paramname"><em>loop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This method implements the effects of the event. It will be called at the time that was determined by <code>predict_invoke_time</code>.</p>
<p>Called from the <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a>. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                                                       {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = state-&gt;ball-&gt;speed-&gt;get(now);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">int</span> cnt = 0;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            util::FString <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;Panel hit [%i]&quot;</span>, ++cnt);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Panel hit at &quot;</span> &lt;&lt; now);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> (pos[0] &lt;= 1 and</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            speed[0] &lt; 0 and</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            (pos[1] &lt; state-&gt;p1-&gt;position-&gt;get(now) - state-&gt;p1-&gt;size-&gt;get(now) / 2 or</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;             pos[1] &gt; state-&gt;p1-&gt;position-&gt;get(now) + state-&gt;p1-&gt;size-&gt;get(now) / 2)) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="comment">// ball missed the paddle of player 1</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">auto</span> l = state-&gt;p1-&gt;lives-&gt;get(now);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            l--;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            state-&gt;p1-&gt;lives-&gt;set_last(now, l);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, mgr, now);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pos[0] &gt;= state-&gt;display_boundary[0] - 1 and</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                 speed[0] &gt; 0 and</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                 (pos[1] &lt; state-&gt;p2-&gt;position-&gt;get(now) - state-&gt;p2-&gt;size-&gt;get(now) / 2 or</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                  pos[1] &gt; state-&gt;p2-&gt;position-&gt;get(now) + state-&gt;p2-&gt;size-&gt;get(now) / 2)) {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="comment">// ball missed the paddel of player 2</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keyword">auto</span> l = state-&gt;p2-&gt;lives-&gt;get(now);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            l--;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            state-&gt;p2-&gt;lives-&gt;set_last(now, l);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, mgr, now);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pos[0] &gt;= state-&gt;display_boundary[0]- 1 || pos[0] &lt;= 1) {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] *= -1;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            state-&gt;ball-&gt;speed-&gt;set_last(now, speed);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">if</span> (speed[0] &gt; 0) {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / speed[0]);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (speed[0] &lt; 0) {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -speed[0]);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">auto</span> hit_pos = pos + <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> * ty.to_double();</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span> (speed[0] &gt; 0) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            hit_pos[0] = state-&gt;display_boundary[0];</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            hit_pos[0] = 0;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now + ty, hit_pos);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::attr_type::speed</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml_af909cf1de79df6389fd9431b7424b48a"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">openage::curve::time_t</a></div><div class="ttdeci">util::FixedPoint&lt; int64_t, 16 &gt; time_t</div><div class="ttdef"><b>Definition:</b> <a href="curve_8h_source.xhtml#l00016">curve.h:16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_physics_xhtml_aaaafd5ac8b7a69517a6f26f9fa220984"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">openage::event::demo::Physics::reset</a></div><div class="ttdeci">static void reset(const std::shared_ptr&lt; State &gt; &amp;, Loop &amp;mgr, const curve::time_t &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00489">physics.cpp:489</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00192">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double()</a>, <a class="el" href="message_8h_source.xhtml#l00177">INFO</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00489">openage::event::demo::Physics::reset()</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::speed</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00331">openage::py::str()</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00263">openage::util::FixedPoint&lt; int_type, fractional_bits &gt;::to_double()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_aa56d9723c3d16a001d71bca91fd08c70_cgraph.svg" width="100%" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a81a50b0cb9bf2c5148a355f02829c992"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81a50b0cb9bf2c5148a355f02829c992">&#9670;&nbsp;</a></span>predict_invoke_time()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> openage::event::demo::BallReflectPanel::predict_invoke_time </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>at</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Is called to calculate the execution time for an event of this eventclass. This is called whenever one of the set up dependencies was changed, or when a REPEAT event was executed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>the target the event was created for </td></tr>
    <tr><td class="paramname">state</td><td>the state this shall work on </td></tr>
    <tr><td class="paramname">at</td><td>the time when the change happened, from there on it shall be calculated onwards</td></tr>
  </table>
  </dd>
</dl>
<p>If the event is obsolete, return &lt;time_t&gt;<a class="el" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min()</a>.</p>
<p>If the time is lower than the previous time, then dependencies may not be resolved perfectly anymore (if other events have already been calculated before that). </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00215">215</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                                                       {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keyword">auto</span> positioncurve = std::dynamic_pointer_cast&lt;curve::Continuous&lt;util::Vector2d&gt;&gt;(target);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = state-&gt;ball-&gt;speed-&gt;get(now);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">auto</span> pos = positioncurve-&gt;get(now);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">if</span> (speed[0] == 0)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;curve::time_t&gt;::max</a>();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span> (speed[0] &gt; 0) {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / speed[0]);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (speed[0] &lt; 0) {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -speed[0]);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            util::FString <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;PANEL REFLECT AT %f NEXT %f&quot;</span>, now.to_double(), (now + ty).to_double());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;predicting panel reflection at t=&quot;</span> &lt;&lt; now</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;, next reflection at t=&quot;</span> &lt;&lt; (now + ty));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">auto</span> hit_pos = pos + <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> * ty.to_double();</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span> (speed[0] &gt; 0) {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            hit_pos[0] = state-&gt;display_boundary[0];</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            hit_pos[0] = 0;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(hit_pos[0] &gt;= 0, <span class="stringliteral">&quot;hit position x must be positive&quot;</span>);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> now + ty;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::attr_type::speed</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml_af909cf1de79df6389fd9431b7424b48a"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">openage::curve::time_t</a></div><div class="ttdeci">util::FixedPoint&lt; int64_t, 16 &gt; time_t</div><div class="ttdef"><b>Definition:</b> <a href="curve_8h_source.xhtml#l00016">curve.h:16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="error_2error_8h_source.xhtml#l00155">ENSURE</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00192">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double()</a>, <a class="el" href="message_8h_source.xhtml#l00177">INFO</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="console_2tests_8cpp_source.xhtml#l00031">openage::console::tests::max()</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::speed</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00331">openage::py::str()</a>, and <a class="el" href="fixed__point_8h_source.xhtml#l00263">openage::util::FixedPoint&lt; int_type, fractional_bits &gt;::to_double()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_a81a50b0cb9bf2c5148a355f02829c992_cgraph.svg" width="100%" height="511"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a031ec32c576b33298fdb75dee692de8b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a031ec32c576b33298fdb75dee692de8b">&#9670;&nbsp;</a></span>setup_event()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::demo::BallReflectPanel::setup_event </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called for each event that is created for this <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a>. The job of the setup function is to add all dependencies with other event targets found in state. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="physics_8cpp_source.xhtml#l00123">123</a> of file <a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                                  {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// FIXME dependency to a full ball object</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// then a change to any of the curves triggers the update.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        target-&gt;depend_on(state-&gt;ball-&gt;position);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        target-&gt;depend_on(state-&gt;ball-&gt;speed);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        target-&gt;depend_on(state-&gt;p1-&gt;position);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        target-&gt;depend_on(state-&gt;p2-&gt;position);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">// \todo add dependency to size of game area</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/demo/<a class="el" href="physics_8cpp_source.xhtml">physics.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml">demo</a></li><li class="navelem"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml">BallReflectPanel</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
