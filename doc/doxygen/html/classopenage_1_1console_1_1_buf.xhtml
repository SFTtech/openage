<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::console::Buf Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1console_1_1_buf.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1console_1_1_buf-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::console::Buf Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="buf_8h_source.xhtml">buf.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::console::Buf:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a51a780e9a4df80cdb56f8d94186d527e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a51a780e9a4df80cdb56f8d94186d527e">Buf</a> (<a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>, <a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>, <a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a>, <a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>={0x20, 254, 0, 0})</td></tr>
<tr class="separator:a51a780e9a4df80cdb56f8d94186d527e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83ecd364b255a4dd8964686fb0d069be"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a83ecd364b255a4dd8964686fb0d069be">~Buf</a> ()</td></tr>
<tr class="separator:a83ecd364b255a4dd8964686fb0d069be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b57a435f75898936d21928f3641f345"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a1b57a435f75898936d21928f3641f345">operator=</a> (const <a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a> &amp;)=delete</td></tr>
<tr class="separator:a1b57a435f75898936d21928f3641f345"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fc8817e4fc059c81f836482b8f163b5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a4fc8817e4fc059c81f836482b8f163b5">Buf</a> (const <a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a> &amp;)=delete</td></tr>
<tr class="separator:a4fc8817e4fc059c81f836482b8f163b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23267e4cb18a2921f14406e6307cbb95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a23267e4cb18a2921f14406e6307cbb95">reset</a> ()</td></tr>
<tr class="memdesc:a23267e4cb18a2921f14406e6307cbb95"><td class="mdescLeft">&#160;</td><td class="mdescRight">resets the buffer to its constructor defaults  <a href="#a23267e4cb18a2921f14406e6307cbb95">More...</a><br /></td></tr>
<tr class="separator:a23267e4cb18a2921f14406e6307cbb95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3db6d160e44c8db825a37c0cfbc143ea"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">write</a> (const char *c, ssize_t len=-1)</td></tr>
<tr class="memdesc:a3db6d160e44c8db825a37c0cfbc143ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">write a byte string to the buffer  <a href="#a3db6d160e44c8db825a37c0cfbc143ea">More...</a><br /></td></tr>
<tr class="separator:a3db6d160e44c8db825a37c0cfbc143ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f70c41ed91a5283fd2dd337b7493eaa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a7f70c41ed91a5283fd2dd337b7493eaa">write</a> (char c)</td></tr>
<tr class="memdesc:a7f70c41ed91a5283fd2dd337b7493eaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">write a single byte to the buffer.  <a href="#a7f70c41ed91a5283fd2dd337b7493eaa">More...</a><br /></td></tr>
<tr class="separator:a7f70c41ed91a5283fd2dd337b7493eaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a698e2cce3ee2d13637bc55da38232a95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a698e2cce3ee2d13637bc55da38232a95">pop_last_char</a> ()</td></tr>
<tr class="memdesc:a698e2cce3ee2d13637bc55da38232a95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pop the last char of the current line.  <a href="#a698e2cce3ee2d13637bc55da38232a95">More...</a><br /></td></tr>
<tr class="separator:a698e2cce3ee2d13637bc55da38232a95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7060ca85ba5a820b0c8e55870a9919c8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a7060ca85ba5a820b0c8e55870a9919c8">resize</a> (<a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> new_dims)</td></tr>
<tr class="memdesc:a7060ca85ba5a820b0c8e55870a9919c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">resizes the screen buffer  <a href="#a7060ca85ba5a820b0c8e55870a9919c8">More...</a><br /></td></tr>
<tr class="separator:a7060ca85ba5a820b0c8e55870a9919c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06f58f1b06e5aae9664b1d07d8607048"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a06f58f1b06e5aae9664b1d07d8607048">scroll</a> (<a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> lines)</td></tr>
<tr class="memdesc:a06f58f1b06e5aae9664b1d07d8607048"><td class="mdescLeft">&#160;</td><td class="mdescRight">scrolls up or down by the given number of lines  <a href="#a06f58f1b06e5aae9664b1d07d8607048">More...</a><br /></td></tr>
<tr class="separator:a06f58f1b06e5aae9664b1d07d8607048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcdc21533ab920bd72f92f27333716bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf">process_codepoint</a> (int cp)</td></tr>
<tr class="memdesc:adcdc21533ab920bd72f92f27333716bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">processes one unicode codepoint internally called by <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a7f70c41ed91a5283fd2dd337b7493eaa" title="write a single byte to the buffer.">write(char)</a> after feeding the char into streamdecoder  <a href="#adcdc21533ab920bd72f92f27333716bf">More...</a><br /></td></tr>
<tr class="separator:adcdc21533ab920bd72f92f27333716bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2dd3bbdbc82ae2a4276a433b40aac91"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ab2dd3bbdbc82ae2a4276a433b40aac91">print_codepoint</a> (int cp)</td></tr>
<tr class="memdesc:ab2dd3bbdbc82ae2a4276a433b40aac91"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints one unicode codepoint interally called by <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf" title="processes one unicode codepoint internally called by write(char) after feeding the char into streamde...">process_codepoint(int cp)</a> after sorting out escape sequences, and by some escape sequences such as CSI @  <a href="#ab2dd3bbdbc82ae2a4276a433b40aac91">More...</a><br /></td></tr>
<tr class="separator:ab2dd3bbdbc82ae2a4276a433b40aac91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a> ()</td></tr>
<tr class="memdesc:ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><td class="mdescLeft">&#160;</td><td class="mdescRight">aborts the current escape sequence (e.g.  <a href="#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">More...</a><br /></td></tr>
<tr class="separator:ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e924482fd0e3524e44b20acc316fb19"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a3e924482fd0e3524e44b20acc316fb19">escape_sequence_processed</a> ()</td></tr>
<tr class="memdesc:a3e924482fd0e3524e44b20acc316fb19"><td class="mdescLeft">&#160;</td><td class="mdescRight">called when a escape sequence has been successfully processed, clears the sequence.  <a href="#a3e924482fd0e3524e44b20acc316fb19">More...</a><br /></td></tr>
<tr class="separator:a3e924482fd0e3524e44b20acc316fb19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83a7e7db654360cff1c6796b169efc22"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a83a7e7db654360cff1c6796b169efc22">process_csi_escape_sequence</a> ()</td></tr>
<tr class="memdesc:a83a7e7db654360cff1c6796b169efc22"><td class="mdescLeft">&#160;</td><td class="mdescRight">processes the CSI escape sequence currently stored in escape_sequence.  <a href="#a83a7e7db654360cff1c6796b169efc22">More...</a><br /></td></tr>
<tr class="separator:a83a7e7db654360cff1c6796b169efc22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a809f4a27cd3bf92c2458a5b3176fae43"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a809f4a27cd3bf92c2458a5b3176fae43">process_escaped_cp</a> (int cp)</td></tr>
<tr class="memdesc:a809f4a27cd3bf92c2458a5b3176fae43"><td class="mdescLeft">&#160;</td><td class="mdescRight">processes a single-codepoint escape sequence.  <a href="#a809f4a27cd3bf92c2458a5b3176fae43">More...</a><br /></td></tr>
<tr class="separator:a809f4a27cd3bf92c2458a5b3176fae43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6ae8933e3c2bbaafa8d81cf1c405406"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#aa6ae8933e3c2bbaafa8d81cf1c405406">process_text_escape_sequence</a> ()</td></tr>
<tr class="memdesc:aa6ae8933e3c2bbaafa8d81cf1c405406"><td class="mdescLeft">&#160;</td><td class="mdescRight">processes a text escape sequence that is one of OSC, DCS, APC or PM  <a href="#aa6ae8933e3c2bbaafa8d81cf1c405406">More...</a><br /></td></tr>
<tr class="separator:aa6ae8933e3c2bbaafa8d81cf1c405406"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9320618afe1ebdf770518ab69cc72271"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a9320618afe1ebdf770518ab69cc72271">process_sgr_code</a> (const std::vector&lt; int &gt; &amp;params)</td></tr>
<tr class="memdesc:a9320618afe1ebdf770518ab69cc72271"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets graphics rendition parameters; called by process_escape_sequence  <a href="#a9320618afe1ebdf770518ab69cc72271">More...</a><br /></td></tr>
<tr class="separator:a9320618afe1ebdf770518ab69cc72271"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a752e54412ebbb08b3d8ac0edc90891ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a752e54412ebbb08b3d8ac0edc90891ee">advance</a> (unsigned linecount=1)</td></tr>
<tr class="memdesc:a752e54412ebbb08b3d8ac0edc90891ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">advances the buffer by the specified number of lines.  <a href="#a752e54412ebbb08b3d8ac0edc90891ee">More...</a><br /></td></tr>
<tr class="separator:a752e54412ebbb08b3d8ac0edc90891ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6b49e0178333e01a08fd61ca2006219"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a> (<a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> start, <a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> end, bool clear_end=false)</td></tr>
<tr class="memdesc:af6b49e0178333e01a08fd61ca2006219"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears the screen character and line buffers.  <a href="#af6b49e0178333e01a08fd61ca2006219">More...</a><br /></td></tr>
<tr class="separator:af6b49e0178333e01a08fd61ca2006219"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1108eb4031232054e271e3c7321b24ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a1108eb4031232054e271e3c7321b24ef">chrdata_clear</a> (<a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *start, <a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *end)</td></tr>
<tr class="memdesc:a1108eb4031232054e271e3c7321b24ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears a range of the data buffer.  <a href="#a1108eb4031232054e271e3c7321b24ef">More...</a><br /></td></tr>
<tr class="separator:a1108eb4031232054e271e3c7321b24ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d65b492fdef7853b939598235881e2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a76d65b492fdef7853b939598235881e2">linedata_clear</a> (<a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *start, <a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *end)</td></tr>
<tr class="memdesc:a76d65b492fdef7853b939598235881e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears a range of the linedata buffer.  <a href="#a76d65b492fdef7853b939598235881e2">More...</a><br /></td></tr>
<tr class="separator:a76d65b492fdef7853b939598235881e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad54e6fb8e82e15a085cae30d3646d7b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a> (<a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> pos)</td></tr>
<tr class="memdesc:ad54e6fb8e82e15a085cae30d3646d7b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a valid pointer to the character info for the character designated by pos  <a href="#ad54e6fb8e82e15a085cae30d3646d7b7">More...</a><br /></td></tr>
<tr class="separator:ad54e6fb8e82e15a085cae30d3646d7b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c48f84f2a29ae7472c54bce03fcbd65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a> (<a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> lineno)</td></tr>
<tr class="memdesc:a4c48f84f2a29ae7472c54bce03fcbd65"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns a valid pointer to the line info for the line designated by lineno  <a href="#a4c48f84f2a29ae7472c54bce03fcbd65">More...</a><br /></td></tr>
<tr class="separator:a4c48f84f2a29ae7472c54bce03fcbd65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0e0cf2f6bb5e5c324ff9f4554ec2852"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ae0e0cf2f6bb5e5c324ff9f4554ec2852">get_dims</a> () const</td></tr>
<tr class="memdesc:ae0e0cf2f6bb5e5c324ff9f4554ec2852"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the dimensions of the visible console area.  <a href="#ae0e0cf2f6bb5e5c324ff9f4554ec2852">More...</a><br /></td></tr>
<tr class="separator:ae0e0cf2f6bb5e5c324ff9f4554ec2852"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae41adb957a289c65c86f5e79702399de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1utf8__decoder.xhtml">util::utf8_decoder</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ae41adb957a289c65c86f5e79702399de">streamdecoder</a></td></tr>
<tr class="memdesc:ae41adb957a289c65c86f5e79702399de"><td class="mdescLeft">&#160;</td><td class="mdescRight">utf-8 state-machine that reads input bytes and outputs unicode codepoints  <a href="#ae41adb957a289c65c86f5e79702399de">More...</a><br /></td></tr>
<tr class="separator:ae41adb957a289c65c86f5e79702399de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af591ad8b27d0d5528dd83f39589a377f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a></td></tr>
<tr class="memdesc:af591ad8b27d0d5528dd83f39589a377f"><td class="mdescLeft">&#160;</td><td class="mdescRight">the complete (2-dimensional) terminal output buffer content  <a href="#af591ad8b27d0d5528dd83f39589a377f">More...</a><br /></td></tr>
<tr class="separator:af591ad8b27d0d5528dd83f39589a377f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3b09ac6afcafdabc8ac7cad2bbb1991"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a></td></tr>
<tr class="memdesc:ad3b09ac6afcafdabc8ac7cad2bbb1991"><td class="mdescLeft">&#160;</td><td class="mdescRight">stores the (array) size of data, for performance and convenience reasons.  <a href="#ad3b09ac6afcafdabc8ac7cad2bbb1991">More...</a><br /></td></tr>
<tr class="separator:ad3b09ac6afcafdabc8ac7cad2bbb1991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55229c780654c2e7445cb313fde990a7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a></td></tr>
<tr class="memdesc:a55229c780654c2e7445cb313fde990a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">stores the end of the region allocated for data, for performance and convenience reasons.  <a href="#a55229c780654c2e7445cb313fde990a7">More...</a><br /></td></tr>
<tr class="separator:a55229c780654c2e7445cb313fde990a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae04bf7f71d8d61153a63c8016756bd0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">screen_chrdata</a></td></tr>
<tr class="memdesc:aae04bf7f71d8d61153a63c8016756bd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">points to the first character that belongs to the screen buffer, inside the data buffer.  <a href="#aae04bf7f71d8d61153a63c8016756bd0">More...</a><br /></td></tr>
<tr class="separator:aae04bf7f71d8d61153a63c8016756bd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad524a3276262d17b952233d58d735fb2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a></td></tr>
<tr class="memdesc:ad524a3276262d17b952233d58d735fb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">similar to how data holds information about all characters, linedata holds information about all lines.  <a href="#ad524a3276262d17b952233d58d735fb2">More...</a><br /></td></tr>
<tr class="separator:ad524a3276262d17b952233d58d735fb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0980d008e8fc8a7fc02f7bc51b253dc5"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a></td></tr>
<tr class="memdesc:a0980d008e8fc8a7fc02f7bc51b253dc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">see chrdata_size  <a href="#a0980d008e8fc8a7fc02f7bc51b253dc5">More...</a><br /></td></tr>
<tr class="separator:a0980d008e8fc8a7fc02f7bc51b253dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0c8a14f50eaeb58afc86d20bbb01158"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a></td></tr>
<tr class="memdesc:ab0c8a14f50eaeb58afc86d20bbb01158"><td class="mdescLeft">&#160;</td><td class="mdescRight">see chrdata_end  <a href="#ab0c8a14f50eaeb58afc86d20bbb01158">More...</a><br /></td></tr>
<tr class="separator:ab0c8a14f50eaeb58afc86d20bbb01158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75cdec48d09432a80bc7e32182a4775a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a></td></tr>
<tr class="memdesc:a75cdec48d09432a80bc7e32182a4775a"><td class="mdescLeft">&#160;</td><td class="mdescRight">as an analog to screen_chrdata, this points to the entry in linedata that holds metadata about the top line of the screen buffer.  <a href="#a75cdec48d09432a80bc7e32182a4775a">More...</a><br /></td></tr>
<tr class="separator:a75cdec48d09432a80bc7e32182a4775a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac33c1a30d0a22cfee3d3eeabd33a606d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a></td></tr>
<tr class="memdesc:ac33c1a30d0a22cfee3d3eeabd33a606d"><td class="mdescLeft">&#160;</td><td class="mdescRight">minimum screen buffer width  <a href="#ac33c1a30d0a22cfee3d3eeabd33a606d">More...</a><br /></td></tr>
<tr class="separator:ac33c1a30d0a22cfee3d3eeabd33a606d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06e75c551d4009e9976cd43dab18fb30"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a></td></tr>
<tr class="memdesc:a06e75c551d4009e9976cd43dab18fb30"><td class="mdescLeft">&#160;</td><td class="mdescRight">screen buffer dimensions (in characters)  <a href="#a06e75c551d4009e9976cd43dab18fb30">More...</a><br /></td></tr>
<tr class="separator:a06e75c551d4009e9976cd43dab18fb30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14f2cdfd24154571850ed8ca005d3efc"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a></td></tr>
<tr class="memdesc:a14f2cdfd24154571850ed8ca005d3efc"><td class="mdescLeft">&#160;</td><td class="mdescRight">scrollback buffer height; scrollback buffer width is identical to screen buffer width.  <a href="#a14f2cdfd24154571850ed8ca005d3efc">More...</a><br /></td></tr>
<tr class="separator:a14f2cdfd24154571850ed8ca005d3efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25719bddd1345d6b86e4373dfa474825"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a></td></tr>
<tr class="memdesc:a25719bddd1345d6b86e4373dfa474825"><td class="mdescLeft">&#160;</td><td class="mdescRight">cursor position  <a href="#a25719bddd1345d6b86e4373dfa474825">More...</a><br /></td></tr>
<tr class="separator:a25719bddd1345d6b86e4373dfa474825"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d65c2c715635ae80a3362abc61abc22"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">saved_cursorpos</a></td></tr>
<tr class="memdesc:a7d65c2c715635ae80a3362abc61abc22"><td class="mdescLeft">&#160;</td><td class="mdescRight">saved cursor position  <a href="#a7d65c2c715635ae80a3362abc61abc22">More...</a><br /></td></tr>
<tr class="separator:a7d65c2c715635ae80a3362abc61abc22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b4aca71e4891bd71a0c57ca5fa58e86"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">cursor_visible</a></td></tr>
<tr class="memdesc:a3b4aca71e4891bd71a0c57ca5fa58e86"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if the cursor is visible  <a href="#a3b4aca71e4891bd71a0c57ca5fa58e86">More...</a><br /></td></tr>
<tr class="separator:a3b4aca71e4891bd71a0c57ca5fa58e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53574615a1e2df75adad05bd27bf04d4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a></td></tr>
<tr class="memdesc:a53574615a1e2df75adad05bd27bf04d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if cursor is in the last column while whole line is filled this is very special.  <a href="#a53574615a1e2df75adad05bd27bf04d4">More...</a><br /></td></tr>
<tr class="separator:a53574615a1e2df75adad05bd27bf04d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe7c503936227e510bb7be84bde2fa3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a></td></tr>
<tr class="memdesc:aabe7c503936227e510bb7be84bde2fa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if we are currently reading an escape sequence  <a href="#aabe7c503936227e510bb7be84bde2fa3">More...</a><br /></td></tr>
<tr class="separator:aabe7c503936227e510bb7be84bde2fa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a381b42f50364ebd1842d1e330bae5909"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a></td></tr>
<tr class="memdesc:a381b42f50364ebd1842d1e330bae5909"><td class="mdescLeft">&#160;</td><td class="mdescRight">current escape sequence  <a href="#a381b42f50364ebd1842d1e330bae5909">More...</a><br /></td></tr>
<tr class="separator:a381b42f50364ebd1842d1e330bae5909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9db1c1324909e2a0a98cafa53d9cd4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#afd9db1c1324909e2a0a98cafa53d9cd4">bell</a></td></tr>
<tr class="memdesc:afd9db1c1324909e2a0a98cafa53d9cd4"><td class="mdescLeft">&#160;</td><td class="mdescRight">true if an bell ('<em></em>') has been received, but not cleared  <a href="#afd9db1c1324909e2a0a98cafa53d9cd4">More...</a><br /></td></tr>
<tr class="separator:afd9db1c1324909e2a0a98cafa53d9cd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51310590a608b1d2b601d3303893500d"><td class="memItemLeft" align="right" valign="top">std::vector&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a51310590a608b1d2b601d3303893500d">title</a></td></tr>
<tr class="memdesc:a51310590a608b1d2b601d3303893500d"><td class="mdescLeft">&#160;</td><td class="mdescRight">window title  <a href="#a51310590a608b1d2b601d3303893500d">More...</a><br /></td></tr>
<tr class="separator:a51310590a608b1d2b601d3303893500d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fb637bfa9764b03b7e5c732b1628a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a></td></tr>
<tr class="memdesc:af6fb637bfa9764b03b7e5c732b1628a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">surrently selected formatting (colors, flags).  <a href="#af6fb637bfa9764b03b7e5c732b1628a6">More...</a><br /></td></tr>
<tr class="separator:af6fb637bfa9764b03b7e5c732b1628a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fa3840a58379ede7a40f6382f95cc06"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a></td></tr>
<tr class="memdesc:a3fa3840a58379ede7a40f6382f95cc06"><td class="mdescLeft">&#160;</td><td class="mdescRight">the default buf char, which will be used for filling new lines, or determining whether a line is empty.  <a href="#a3fa3840a58379ede7a40f6382f95cc06">More...</a><br /></td></tr>
<tr class="separator:a3fa3840a58379ede7a40f6382f95cc06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a324edefddfbe59f14ecd7841d2598c29"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a></td></tr>
<tr class="memdesc:a324edefddfbe59f14ecd7841d2598c29"><td class="mdescLeft">&#160;</td><td class="mdescRight">how far it's currently possible to scroll back.  <a href="#a324edefddfbe59f14ecd7841d2598c29">More...</a><br /></td></tr>
<tr class="separator:a324edefddfbe59f14ecd7841d2598c29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed68e2efd6dfa0dc6e4d2c6985965458"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a></td></tr>
<tr class="memdesc:aed68e2efd6dfa0dc6e4d2c6985965458"><td class="mdescLeft">&#160;</td><td class="mdescRight">how many lines the buffer is currently scrolled back.  <a href="#aed68e2efd6dfa0dc6e4d2c6985965458">More...</a><br /></td></tr>
<tr class="separator:aed68e2efd6dfa0dc6e4d2c6985965458"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a94f6263ebbf6ccfef936eb5c410c2ada"><td class="memItemLeft" align="right" valign="top">class&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a94f6263ebbf6ccfef936eb5c410c2ada">NewBuf</a></td></tr>
<tr class="separator:a94f6263ebbf6ccfef936eb5c410c2ada"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00121">121</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a51a780e9a4df80cdb56f8d94186d527e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51a780e9a4df80cdb56f8d94186d527e">&#9670;&nbsp;</a></span>Buf() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::console::Buf::Buf </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td>
          <td class="paramname"><em>dims</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td>
          <td class="paramname"><em>scrollback_lines</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td>
          <td class="paramname"><em>min_width</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>&#160;</td>
          <td class="paramname"><em>default_char_fmt</em> = <code>{0x20,&#160;254,&#160;0,&#160;0}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    :</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>{<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>},</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>{0, 0},</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">saved_cursorpos</a>{0, 0},</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>{<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">//init all member variables</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a> = <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x &lt; this-&gt;min_width) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    }</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y &lt; 1) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y = 1;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a> = <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y + this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a> = <span class="keyword">new</span> buf_line[this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>];</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a> + this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x * <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a> = <span class="keyword">new</span> buf_char[this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a>];</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a> + this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">screen_chrdata</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a>;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a>;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a23267e4cb18a2921f14406e6307cbb95">reset</a>();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aae04bf7f71d8d61153a63c8016756bd0"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">openage::console::Buf::screen_chrdata</a></div><div class="ttdeci">buf_char * screen_chrdata</div><div class="ttdoc">points to the first character that belongs to the screen buffer, inside the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00384">buf.h:384</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a7d65c2c715635ae80a3362abc61abc22"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">openage::console::Buf::saved_cursorpos</a></div><div class="ttdeci">coord::term saved_cursorpos</div><div class="ttdoc">saved cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00438">buf.h:438</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a25719bddd1345d6b86e4373dfa474825"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">openage::console::Buf::cursorpos</a></div><div class="ttdeci">coord::term cursorpos</div><div class="ttdoc">cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00433">buf.h:433</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad3b09ac6afcafdabc8ac7cad2bbb1991"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">openage::console::Buf::chrdata_size</a></div><div class="ttdeci">size_t chrdata_size</div><div class="ttdoc">stores the (array) size of data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00356">buf.h:356</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3fa3840a58379ede7a40f6382f95cc06"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">openage::console::Buf::default_char_fmt</a></div><div class="ttdeci">const buf_char default_char_fmt</div><div class="ttdoc">the default buf char, which will be used for filling new lines, or determining whether a line is empt...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00491">buf.h:491</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af591ad8b27d0d5528dd83f39589a377f"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">openage::console::Buf::chrdata</a></div><div class="ttdeci">buf_char * chrdata</div><div class="ttdoc">the complete (2-dimensional) terminal output buffer content</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00347">buf.h:347</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a23267e4cb18a2921f14406e6307cbb95"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a23267e4cb18a2921f14406e6307cbb95">openage::console::Buf::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdoc">resets the buffer to its constructor defaults</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00052">buf.cpp:52</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab0c8a14f50eaeb58afc86d20bbb01158"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">openage::console::Buf::linedata_end</a></div><div class="ttdeci">buf_line * linedata_end</div><div class="ttdoc">see chrdata_end</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00402">buf.h:402</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad524a3276262d17b952233d58d735fb2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">openage::console::Buf::linedata</a></div><div class="ttdeci">buf_line * linedata</div><div class="ttdoc">similar to how data holds information about all characters, linedata holds information about all line...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00392">buf.h:392</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac33c1a30d0a22cfee3d3eeabd33a606d"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">openage::console::Buf::min_width</a></div><div class="ttdeci">coord::term_t min_width</div><div class="ttdoc">minimum screen buffer width</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00415">buf.h:415</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a0980d008e8fc8a7fc02f7bc51b253dc5"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">openage::console::Buf::linedata_size</a></div><div class="ttdeci">size_t linedata_size</div><div class="ttdoc">see chrdata_size</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00397">buf.h:397</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a55229c780654c2e7445cb313fde990a7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">openage::console::Buf::chrdata_end</a></div><div class="ttdeci">buf_char * chrdata_end</div><div class="ttdoc">stores the end of the region allocated for data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00366">buf.h:366</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a14f2cdfd24154571850ed8ca005d3efc"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">openage::console::Buf::scrollback_lines</a></div><div class="ttdeci">coord::term_t scrollback_lines</div><div class="ttdoc">scrollback buffer height; scrollback buffer width is identical to screen buffer width.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00426">buf.h:426</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a75cdec48d09432a80bc7e32182a4775a"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">openage::console::Buf::screen_linedata</a></div><div class="ttdeci">buf_line * screen_linedata</div><div class="ttdoc">as an analog to screen_chrdata, this points to the entry in linedata that holds metadata about the to...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00408">buf.h:408</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>.</p>

</div>
</div>
<a id="a83ecd364b255a4dd8964686fb0d069be"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83ecd364b255a4dd8964686fb0d069be">&#9670;&nbsp;</a></span>~Buf()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::console::Buf::~Buf </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00046">46</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;          {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">//free dynamically allocated members</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">delete</span>[] this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keyword">delete</span>[] this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af591ad8b27d0d5528dd83f39589a377f"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">openage::console::Buf::chrdata</a></div><div class="ttdeci">buf_char * chrdata</div><div class="ttdoc">the complete (2-dimensional) terminal output buffer content</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00347">buf.h:347</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad524a3276262d17b952233d58d735fb2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">openage::console::Buf::linedata</a></div><div class="ttdeci">buf_line * linedata</div><div class="ttdoc">similar to how data holds information about all characters, linedata holds information about all line...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00392">buf.h:392</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00347">chrdata</a>, and <a class="el" href="buf_8h_source.xhtml#l00392">linedata</a>.</p>

</div>
</div>
<a id="a4fc8817e4fc059c81f836482b8f163b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4fc8817e4fc059c81f836482b8f163b5">&#9670;&nbsp;</a></span>Buf() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::console::Buf::Buf </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a752e54412ebbb08b3d8ac0edc90891ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a752e54412ebbb08b3d8ac0edc90891ee">&#9670;&nbsp;</a></span>advance()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::advance </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>linecount</em> = <code>1</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>advances the buffer by the specified number of lines. </p>
<p>the top lines are moved to the scrollback buffer. the top lines of the scrollback buffer are discarded. the bottom lines of the buffer are empty after this. the cursor position is not changed by this.</p>
<p>linecount: the number of lines to advance the buffer; defaults to one. may be &gt; buffer height. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00341">341</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;                                    {</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <span class="comment">// sanitize linecount</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">if</span> (linecount == 0) {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    }</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <span class="keywordflow">if</span> ((<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) linecount &gt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y + this-&gt;scrollback_lines) {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;        linecount = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y + this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    }</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    <span class="comment">// update scrollback_possible</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a> += linecount;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a> &gt; (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>) {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    }</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    <span class="comment">// update scrollback position, to remain at the currently scrolled-to</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="comment">// position</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> &gt; 0) {</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> += linecount;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> &gt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a>) {</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;            <span class="comment">//seems like we&#39;re already on top of the scrollback buffer</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;        }</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;    }</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="comment">// clear the new lines. that&#39;s scrollback_buffer[0:linecount]</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) -this-&gt;scrollback_lines}, {0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) ((<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) linecount - (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) this-&gt;scrollback_lines)});</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// move the screen buffer by updating the screen_chrdata pointer</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">screen_chrdata</a> += linecount * this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">if</span> (this-&gt;screen_chrdata &gt;= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a>) {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        this-&gt;screen_chrdata -= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a>;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    }</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="comment">// also update the screen_linedata pointer</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a> += linecount;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a> &gt;= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a>) {</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a> -= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    }</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aae04bf7f71d8d61153a63c8016756bd0"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">openage::console::Buf::screen_chrdata</a></div><div class="ttdeci">buf_char * screen_chrdata</div><div class="ttdoc">points to the first character that belongs to the screen buffer, inside the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00384">buf.h:384</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6b49e0178333e01a08fd61ca2006219"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">openage::console::Buf::clear</a></div><div class="ttdeci">void clear(coord::term start, coord::term end, bool clear_end=false)</div><div class="ttdoc">clears the screen character and line buffers.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01078">buf.cpp:1078</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aed68e2efd6dfa0dc6e4d2c6985965458"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">openage::console::Buf::scrollback_pos</a></div><div class="ttdeci">coord::term_t scrollback_pos</div><div class="ttdoc">how many lines the buffer is currently scrolled back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00518">buf.h:518</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a324edefddfbe59f14ecd7841d2598c29"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">openage::console::Buf::scrollback_possible</a></div><div class="ttdeci">coord::term_t scrollback_possible</div><div class="ttdoc">how far it's currently possible to scroll back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00501">buf.h:501</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad3b09ac6afcafdabc8ac7cad2bbb1991"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">openage::console::Buf::chrdata_size</a></div><div class="ttdeci">size_t chrdata_size</div><div class="ttdoc">stores the (array) size of data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00356">buf.h:356</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab0c8a14f50eaeb58afc86d20bbb01158"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">openage::console::Buf::linedata_end</a></div><div class="ttdeci">buf_line * linedata_end</div><div class="ttdoc">see chrdata_end</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00402">buf.h:402</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a0980d008e8fc8a7fc02f7bc51b253dc5"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">openage::console::Buf::linedata_size</a></div><div class="ttdeci">size_t linedata_size</div><div class="ttdoc">see chrdata_size</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00397">buf.h:397</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a55229c780654c2e7445cb313fde990a7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">openage::console::Buf::chrdata_end</a></div><div class="ttdeci">buf_char * chrdata_end</div><div class="ttdoc">stores the end of the region allocated for data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00366">buf.h:366</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a14f2cdfd24154571850ed8ca005d3efc"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">openage::console::Buf::scrollback_lines</a></div><div class="ttdeci">coord::term_t scrollback_lines</div><div class="ttdoc">scrollback buffer height; scrollback buffer width is identical to screen buffer width.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00426">buf.h:426</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a75cdec48d09432a80bc7e32182a4775a"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">openage::console::Buf::screen_linedata</a></div><div class="ttdeci">buf_line * screen_linedata</div><div class="ttdoc">as an analog to screen_chrdata, this points to the entry in linedata that holds metadata about the to...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00408">buf.h:408</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00366">chrdata_end</a>, <a class="el" href="buf_8h_source.xhtml#l00356">chrdata_size</a>, <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00402">linedata_end</a>, <a class="el" href="buf_8h_source.xhtml#l00397">linedata_size</a>, <a class="el" href="buf_8h_source.xhtml#l00384">screen_chrdata</a>, <a class="el" href="buf_8h_source.xhtml#l00408">screen_linedata</a>, <a class="el" href="buf_8h_source.xhtml#l00426">scrollback_lines</a>, <a class="el" href="buf_8h_source.xhtml#l00518">scrollback_pos</a>, and <a class="el" href="buf_8h_source.xhtml#l00501">scrollback_possible</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a752e54412ebbb08b3d8ac0edc90891ee_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a752e54412ebbb08b3d8ac0edc90891ee_icgraph.svg" width="100%" height="369"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a1108eb4031232054e271e3c7321b24ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1108eb4031232054e271e3c7321b24ef">&#9670;&nbsp;</a></span>chrdata_clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::chrdata_clear </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> *&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>clears a range of the data buffer. </p>
<p>end is the first character that is not cleared. end and start both must be valid pointers within data. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01111">1111</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;                                                      {</div><div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    <span class="keywordflow">if</span> (start &lt; end) {</div><div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;        <span class="keywordflow">for</span> (; start &lt; end; start++) {</div><div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;            *start = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>;</div><div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;        }</div><div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;        <span class="keywordflow">for</span> (buf_char *c = start; c &lt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a>; c++) {</div><div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;            *c = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>;</div><div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;        }</div><div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;        <span class="keywordflow">for</span> (buf_char *c = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a>; c &lt; end; c++) {</div><div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;            *c = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>;</div><div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;        }</div><div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;    }</div><div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af591ad8b27d0d5528dd83f39589a377f"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">openage::console::Buf::chrdata</a></div><div class="ttdeci">buf_char * chrdata</div><div class="ttdoc">the complete (2-dimensional) terminal output buffer content</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00347">buf.h:347</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a55229c780654c2e7445cb313fde990a7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">openage::console::Buf::chrdata_end</a></div><div class="ttdeci">buf_char * chrdata_end</div><div class="ttdoc">stores the end of the region allocated for data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00366">buf.h:366</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6fb637bfa9764b03b7e5c732b1628a6"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">openage::console::Buf::current_char_fmt</a></div><div class="ttdeci">buf_char current_char_fmt</div><div class="ttdoc">surrently selected formatting (colors, flags).</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00483">buf.h:483</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00347">chrdata</a>, <a class="el" href="buf_8h_source.xhtml#l00366">chrdata_end</a>, and <a class="el" href="buf_8h_source.xhtml#l00483">current_char_fmt</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a1108eb4031232054e271e3c7321b24ef_icgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ad54e6fb8e82e15a085cae30d3646d7b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad54e6fb8e82e15a085cae30d3646d7b7">&#9670;&nbsp;</a></span>chrdataptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> * openage::console::Buf::chrdataptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td>
          <td class="paramname"><em>pos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a valid pointer to the character info for the character designated by pos </p>
<p>pos screen buffer coordinates negative values of y indicate scrollback buffer -scrollback_lines &lt;= pos.y &lt;= dims.y 0 &lt;= pos.x &lt; dims.x if y == dims.y, the return ptr is not guaranteed to be valid. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01141">1141</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;                                  {</div><div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;    buf_char *<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">screen_chrdata</a> + pos.x + pos.y * this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x;</div><div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;    <span class="keywordflow">if</span> (result &lt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a>) {</div><div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> += this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a>;</div><div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (result &gt;= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a>) {</div><div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;        result -= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">chrdata_size</a>;</div><div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;    }</div><div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aae04bf7f71d8d61153a63c8016756bd0"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aae04bf7f71d8d61153a63c8016756bd0">openage::console::Buf::screen_chrdata</a></div><div class="ttdeci">buf_char * screen_chrdata</div><div class="ttdoc">points to the first character that belongs to the screen buffer, inside the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00384">buf.h:384</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad3b09ac6afcafdabc8ac7cad2bbb1991"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad3b09ac6afcafdabc8ac7cad2bbb1991">openage::console::Buf::chrdata_size</a></div><div class="ttdeci">size_t chrdata_size</div><div class="ttdoc">stores the (array) size of data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00356">buf.h:356</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af591ad8b27d0d5528dd83f39589a377f"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">openage::console::Buf::chrdata</a></div><div class="ttdeci">buf_char * chrdata</div><div class="ttdoc">the complete (2-dimensional) terminal output buffer content</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00347">buf.h:347</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a55229c780654c2e7445cb313fde990a7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">openage::console::Buf::chrdata_end</a></div><div class="ttdeci">buf_char * chrdata_end</div><div class="ttdoc">stores the end of the region allocated for data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00366">buf.h:366</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00347">chrdata</a>, <a class="el" href="buf_8h_source.xhtml#l00366">chrdata_end</a>, <a class="el" href="buf_8h_source.xhtml#l00356">chrdata_size</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>, and <a class="el" href="buf_8h_source.xhtml#l00384">screen_chrdata</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>, <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ad54e6fb8e82e15a085cae30d3646d7b7_cgraph.svg" width="578" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ad54e6fb8e82e15a085cae30d3646d7b7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af6b49e0178333e01a08fd61ca2006219"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6b49e0178333e01a08fd61ca2006219">&#9670;&nbsp;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::clear </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>clear_end</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>clears the screen character and line buffers. </p>
<p>lines are cleared iff all of their characters are cleared.</p>
<p>if start &gt;= end, nothing happens.</p>
<p>inputs are not sanitized.</p>
<p>start screen buffer coordinates of first character to be deleted negative values of y indicate scrollback buffer -scrollback_lines &lt;= y &lt; dims.y 0 &lt;= x &lt; dims.x end screen buffer coordinates of first character not to be deleted negative values of y indicate scrollback buffer -scrollback_lines &lt;= y &lt; dims.y 0 &lt;= x &lt; dims.x {x, y} = {0, dims.y} is allowed. clear_end if true, end is incremented by 1. this affects all constraints. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01078">1078</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;                                                    {</div><div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;    <span class="comment">// apply clear_end</span></div><div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;    <span class="keywordflow">if</span> (clear_end) {</div><div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;        end.x++;</div><div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;        <span class="keywordflow">if</span> (end.x &gt; this-&gt;dims.x) {</div><div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;            end.x = 0;</div><div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;            end.y++;</div><div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;        }</div><div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;    }</div><div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;</div><div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;    <span class="keywordflow">if</span> (start.y &gt; end.y or (start.y == end.y and start.x &gt;= end.x)) {</div><div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;    }</div><div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;</div><div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;    <span class="comment">// clear char info</span></div><div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a1108eb4031232054e271e3c7321b24ef">chrdata_clear</a>(<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a>(start), <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a>(end));</div><div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;</div><div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;    <span class="comment">// calculate lines to clear</span></div><div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;    <span class="comment">// a line is cleared iff all of its characters are cleared</span></div><div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;    <a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a> line_start = start.y;</div><div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;    <span class="keywordflow">if</span> (start.x &gt; 0) {</div><div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;        line_start++;</div><div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;    }</div><div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;    <a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a> line_end = end.y;</div><div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;</div><div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;    <span class="keywordflow">if</span> (line_start &gt;= line_end) {</div><div class="line"><a name="l01104"></a><span class="lineno"> 1104</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;    }</div><div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;</div><div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    <span class="comment">// clear line info</span></div><div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a76d65b492fdef7853b939598235881e2">linedata_clear</a>(<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(line_start), <a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(line_end));</div><div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a76d65b492fdef7853b939598235881e2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a76d65b492fdef7853b939598235881e2">openage::console::Buf::linedata_clear</a></div><div class="ttdeci">void linedata_clear(buf_line *start, buf_line *end)</div><div class="ttdoc">clears a range of the linedata buffer.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01126">buf.cpp:1126</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a4c48f84f2a29ae7472c54bce03fcbd65"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">openage::console::Buf::linedataptr</a></div><div class="ttdeci">buf_line * linedataptr(coord::term_t lineno)</div><div class="ttdoc">returns a valid pointer to the line info for the line designated by lineno</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01151">buf.cpp:1151</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad54e6fb8e82e15a085cae30d3646d7b7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">openage::console::Buf::chrdataptr</a></div><div class="ttdeci">buf_char * chrdataptr(coord::term pos)</div><div class="ttdoc">returns a valid pointer to the character info for the character designated by pos</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01141">buf.cpp:1141</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a1108eb4031232054e271e3c7321b24ef"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a1108eb4031232054e271e3c7321b24ef">openage::console::Buf::chrdata_clear</a></div><div class="ttdeci">void chrdata_clear(buf_char *start, buf_char *end)</div><div class="ttdoc">clears a range of the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01111">buf.cpp:1111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8cpp_source.xhtml#l01111">chrdata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01126">linedata_clear()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_af6b49e0178333e01a08fd61ca2006219_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_af6b49e0178333e01a08fd61ca2006219_icgraph.svg" width="100%" height="435"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac59a20dcbdcb3aaffaedc8d9d21d0ec9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">&#9670;&nbsp;</a></span>escape_sequence_aborted()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::escape_sequence_aborted </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>aborts the current escape sequence (e.g. </p>
<p>because it contained an illegal character, or is not implemented) </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00609">609</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                  {</div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <a class="code" href="namespaceopenage_1_1console.xhtml#ac6af4ff8acdecaf3ebf91c57e2c20953">print_cps</a>(stderr, &amp;this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>);</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;    fprintf(stderr, <span class="stringliteral">&quot;\n&quot;</span>);</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.clear();</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aabe7c503936227e510bb7be84bde2fa3"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">openage::console::Buf::escaped</a></div><div class="ttdeci">bool escaped</div><div class="ttdoc">true if we are currently reading an escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00458">buf.h:458</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_ac6af4ff8acdecaf3ebf91c57e2c20953"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ac6af4ff8acdecaf3ebf91c57e2c20953">openage::console::print_cps</a></div><div class="ttdeci">void print_cps(FILE *f, std::vector&lt; int &gt; *v)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00599">buf.cpp:599</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a381b42f50364ebd1842d1e330bae5909"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">openage::console::Buf::escape_sequence</a></div><div class="ttdeci">std::vector&lt; int &gt; escape_sequence</div><div class="ttdoc">current escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00463">buf.h:463</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00463">escape_sequence</a>, <a class="el" href="buf_8h_source.xhtml#l00458">escaped</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00599">openage::console::print_cps()</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00621">process_escaped_cp()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00633">process_text_escape_sequence()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ac59a20dcbdcb3aaffaedc8d9d21d0ec9_cgraph.svg" width="430" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ac59a20dcbdcb3aaffaedc8d9d21d0ec9_icgraph.svg" width="100%" height="479"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3e924482fd0e3524e44b20acc316fb19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e924482fd0e3524e44b20acc316fb19">&#9670;&nbsp;</a></span>escape_sequence_processed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::escape_sequence_processed </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>called when a escape sequence has been successfully processed, clears the sequence. </p>
<p>either this or abort_escape_sequence is called for each escape sequence. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00616">616</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                                    {</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.clear();</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aabe7c503936227e510bb7be84bde2fa3"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">openage::console::Buf::escaped</a></div><div class="ttdeci">bool escaped</div><div class="ttdoc">true if we are currently reading an escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00458">buf.h:458</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a381b42f50364ebd1842d1e330bae5909"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">openage::console::Buf::escape_sequence</a></div><div class="ttdeci">std::vector&lt; int &gt; escape_sequence</div><div class="ttdoc">current escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00463">buf.h:463</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00463">escape_sequence</a>, and <a class="el" href="buf_8h_source.xhtml#l00458">escaped</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00633">process_text_escape_sequence()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a3e924482fd0e3524e44b20acc316fb19_icgraph.svg" width="100%" height="410"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ae0e0cf2f6bb5e5c324ff9f4554ec2852"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0e0cf2f6bb5e5c324ff9f4554ec2852">&#9670;&nbsp;</a></span>get_dims()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> &amp; openage::console::Buf::get_dims </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the dimensions of the visible console area. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01162">1162</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;                                     {</div><div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>;</div><div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>.</p>

<p class="reference">Referenced by <a class="el" href="console_8cpp_source.xhtml#l00190">openage::console::Console::on_resize()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ae0e0cf2f6bb5e5c324ff9f4554ec2852_icgraph.svg" width="388" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a76d65b492fdef7853b939598235881e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d65b492fdef7853b939598235881e2">&#9670;&nbsp;</a></span>linedata_clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::linedata_clear </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> *&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>clears a range of the linedata buffer. </p>
<p>end is the first line that is not cleared. end and start both must be valid pointers within data. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01126">1126</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;                                                       {</div><div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;    <span class="keywordflow">if</span> (start &lt; end) {</div><div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;        <span class="keywordflow">for</span> (; start &lt; end; start++) {</div><div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;            *start = <a class="code" href="namespaceopenage_1_1console.xhtml#a84a7cb454b1e8ee8221d2099833547ae">BUF_LINE_DEFAULT</a>;</div><div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;        }</div><div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;        <span class="keywordflow">for</span> (buf_line *l = start; l &lt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a>; l++) {</div><div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;            *l = <a class="code" href="namespaceopenage_1_1console.xhtml#a84a7cb454b1e8ee8221d2099833547ae">BUF_LINE_DEFAULT</a>;</div><div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;        }</div><div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;        <span class="keywordflow">for</span> (buf_line *l = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a>; l &lt; end; l++) {</div><div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;            *l = <a class="code" href="namespaceopenage_1_1console.xhtml#a84a7cb454b1e8ee8221d2099833547ae">BUF_LINE_DEFAULT</a>;</div><div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;        }</div><div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;    }</div><div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1console_xhtml_a84a7cb454b1e8ee8221d2099833547ae"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a84a7cb454b1e8ee8221d2099833547ae">openage::console::BUF_LINE_DEFAULT</a></div><div class="ttdeci">constexpr buf_line BUF_LINE_DEFAULT</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00119">buf.h:119</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab0c8a14f50eaeb58afc86d20bbb01158"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">openage::console::Buf::linedata_end</a></div><div class="ttdeci">buf_line * linedata_end</div><div class="ttdoc">see chrdata_end</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00402">buf.h:402</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad524a3276262d17b952233d58d735fb2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">openage::console::Buf::linedata</a></div><div class="ttdeci">buf_line * linedata</div><div class="ttdoc">similar to how data holds information about all characters, linedata holds information about all line...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00392">buf.h:392</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00119">openage::console::BUF_LINE_DEFAULT</a>, <a class="el" href="buf_8h_source.xhtml#l00392">linedata</a>, and <a class="el" href="buf_8h_source.xhtml#l00402">linedata_end</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a76d65b492fdef7853b939598235881e2_icgraph.svg" width="100%" height="435"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a4c48f84f2a29ae7472c54bce03fcbd65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c48f84f2a29ae7472c54bce03fcbd65">&#9670;&nbsp;</a></span>linedataptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a> * openage::console::Buf::linedataptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td>
          <td class="paramname"><em>lineno</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns a valid pointer to the line info for the line designated by lineno </p>
<p>lineno number of line in screen buffer negative numbers indicate scrollback buffer -scrollback_lines &lt;= lineno &lt;= dims.y if lineno == dims.y, the return ptr is not guaranteed to be valid. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l01151">1151</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;                                        {</div><div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;    buf_line *<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">screen_linedata</a> + lineno;</div><div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;    <span class="keywordflow">if</span> (result &lt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a>) {</div><div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> += this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>;</div><div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;    }</div><div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;    <span class="keywordflow">if</span> (result &gt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a>) {</div><div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;        result -= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">linedata_size</a>;</div><div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;    }</div><div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab0c8a14f50eaeb58afc86d20bbb01158"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">openage::console::Buf::linedata_end</a></div><div class="ttdeci">buf_line * linedata_end</div><div class="ttdoc">see chrdata_end</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00402">buf.h:402</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad524a3276262d17b952233d58d735fb2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">openage::console::Buf::linedata</a></div><div class="ttdeci">buf_line * linedata</div><div class="ttdoc">similar to how data holds information about all characters, linedata holds information about all line...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00392">buf.h:392</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a0980d008e8fc8a7fc02f7bc51b253dc5"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a0980d008e8fc8a7fc02f7bc51b253dc5">openage::console::Buf::linedata_size</a></div><div class="ttdeci">size_t linedata_size</div><div class="ttdoc">see chrdata_size</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00397">buf.h:397</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a75cdec48d09432a80bc7e32182a4775a"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a75cdec48d09432a80bc7e32182a4775a">openage::console::Buf::screen_linedata</a></div><div class="ttdeci">buf_line * screen_linedata</div><div class="ttdoc">as an analog to screen_chrdata, this points to the entry in linedata that holds metadata about the to...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00408">buf.h:408</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00392">linedata</a>, <a class="el" href="buf_8h_source.xhtml#l00402">linedata_end</a>, <a class="el" href="buf_8h_source.xhtml#l00397">linedata_size</a>, <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>, and <a class="el" href="buf_8h_source.xhtml#l00408">screen_linedata</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a4c48f84f2a29ae7472c54bce03fcbd65_cgraph.svg" width="578" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a4c48f84f2a29ae7472c54bce03fcbd65_icgraph.svg" width="100%" height="572"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a1b57a435f75898936d21928f3641f345"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1b57a435f75898936d21928f3641f345">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a>&amp; openage::console::Buf::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a698e2cce3ee2d13637bc55da38232a95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a698e2cce3ee2d13637bc55da38232a95">&#9670;&nbsp;</a></span>pop_last_char()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::pop_last_char </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pop the last char of the current line. </p>
<p>Will correctly handle UTF-8 chars and wrapped lines. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00393">393</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                        {</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &gt; 0) {</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a>) {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        }</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x -= 1;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;        }</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        buf_char *ptr = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>);</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;        *ptr = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>;</div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;        ptr-&gt;<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4b4588eb3c49f45c281f67a95ec58973">cp</a> = <span class="charliteral">&#39; &#39;</span>;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x == 0 &amp;&amp; this-&gt;linedataptr(this-&gt;cursorpos.y - 1)-&gt;type == <a class="code" href="namespaceopenage_1_1console.xhtml#ae5dcef92c8c76cebffd40c925cb209cd">LINE_WRAPPED</a>) {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y)-&gt;<a class="code" href="structopenage_1_1console_1_1buf__line.xhtml#af481a8ea9bc97ab5fe57e0f0d2102a6c">type</a> = <a class="code" href="namespaceopenage_1_1console.xhtml#aa09a20fff5c3fe6f00987bb27d28c3ff">LINE_EMPTY</a>;</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y--;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y)-&gt;<a class="code" href="structopenage_1_1console_1_1buf__line.xhtml#af481a8ea9bc97ab5fe57e0f0d2102a6c">type</a> = <a class="code" href="namespaceopenage_1_1console.xhtml#a2f8b6f12c1655f3259fbdc6873ccb0a2">LINE_REGULAR</a>;</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x - 1;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    }</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1console_xhtml_aa09a20fff5c3fe6f00987bb27d28c3ff"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#aa09a20fff5c3fe6f00987bb27d28c3ff">openage::console::LINE_EMPTY</a></div><div class="ttdeci">constexpr linetype_t LINE_EMPTY</div><div class="ttdoc">the line has not been written yet (or cleared in between)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00099">buf.h:99</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a25719bddd1345d6b86e4373dfa474825"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">openage::console::Buf::cursorpos</a></div><div class="ttdeci">coord::term cursorpos</div><div class="ttdoc">cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00433">buf.h:433</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a4c48f84f2a29ae7472c54bce03fcbd65"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">openage::console::Buf::linedataptr</a></div><div class="ttdeci">buf_line * linedataptr(coord::term_t lineno)</div><div class="ttdoc">returns a valid pointer to the line info for the line designated by lineno</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01151">buf.cpp:1151</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__char_xhtml_a4b4588eb3c49f45c281f67a95ec58973"><div class="ttname"><a href="structopenage_1_1console_1_1buf__char.xhtml#a4b4588eb3c49f45c281f67a95ec58973">openage::console::buf_char::cp</a></div><div class="ttdeci">int cp</div><div class="ttdoc">unicode codepoint of the character</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00067">buf.h:67</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a53574615a1e2df75adad05bd27bf04d4"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">openage::console::Buf::cursor_special_lastcol</a></div><div class="ttdeci">bool cursor_special_lastcol</div><div class="ttdoc">true if cursor is in the last column while whole line is filled this is very special.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00451">buf.h:451</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_ae5dcef92c8c76cebffd40c925cb209cd"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ae5dcef92c8c76cebffd40c925cb209cd">openage::console::LINE_WRAPPED</a></div><div class="ttdeci">constexpr linetype_t LINE_WRAPPED</div><div class="ttdoc">the line has been written to until it auto-wrapped; its continuation can be found in the next line</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00110">buf.h:110</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a2f8b6f12c1655f3259fbdc6873ccb0a2"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a2f8b6f12c1655f3259fbdc6873ccb0a2">openage::console::LINE_REGULAR</a></div><div class="ttdeci">constexpr linetype_t LINE_REGULAR</div><div class="ttdoc">the line has some contents</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00103">buf.h:103</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6fb637bfa9764b03b7e5c732b1628a6"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">openage::console::Buf::current_char_fmt</a></div><div class="ttdeci">buf_char current_char_fmt</div><div class="ttdoc">surrently selected formatting (colors, flags).</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00483">buf.h:483</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad54e6fb8e82e15a085cae30d3646d7b7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">openage::console::Buf::chrdataptr</a></div><div class="ttdeci">buf_char * chrdataptr(coord::term pos)</div><div class="ttdoc">returns a valid pointer to the character info for the character designated by pos</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01141">buf.cpp:1141</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__line_xhtml_af481a8ea9bc97ab5fe57e0f0d2102a6c"><div class="ttname"><a href="structopenage_1_1console_1_1buf__line.xhtml#af481a8ea9bc97ab5fe57e0f0d2102a6c">openage::console::buf_line::type</a></div><div class="ttdeci">linetype_t type</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00116">buf.h:116</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8h_source.xhtml#l00067">openage::console::buf_char::cp</a>, <a class="el" href="buf_8h_source.xhtml#l00483">current_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00451">cursor_special_lastcol</a>, <a class="el" href="buf_8h_source.xhtml#l00433">cursorpos</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00099">openage::console::LINE_EMPTY</a>, <a class="el" href="buf_8h_source.xhtml#l00103">openage::console::LINE_REGULAR</a>, <a class="el" href="buf_8h_source.xhtml#l00110">openage::console::LINE_WRAPPED</a>, <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>, and <a class="el" href="buf_8h_source.xhtml#l00116">openage::console::buf_line::type</a>.</p>

<p class="reference">Referenced by <a class="el" href="console_8cpp_source.xhtml#l00058">openage::console::Console::register_to_engine()</a>.</p>
<div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a698e2cce3ee2d13637bc55da38232a95_cgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a698e2cce3ee2d13637bc55da38232a95_icgraph.svg" width="388" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab2dd3bbdbc82ae2a4276a433b40aac91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2dd3bbdbc82ae2a4276a433b40aac91">&#9670;&nbsp;</a></span>print_codepoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::print_codepoint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prints one unicode codepoint interally called by <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf" title="processes one unicode codepoint internally called by write(char) after feeding the char into streamde...">process_codepoint(int cp)</a> after sorting out escape sequences, and by some escape sequences such as CSI @ </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00479">479</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                                {</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">switch</span> (cp) {</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    <span class="comment">// control characters</span></div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keywordflow">case</span> 0x00: <span class="comment">// NUL: ignore</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    <span class="keywordflow">case</span> 0x01: <span class="comment">// SOH: ignore</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    <span class="keywordflow">case</span> 0x02: <span class="comment">// STX: ignore</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    <span class="keywordflow">case</span> 0x03: <span class="comment">// ETX: ignore</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keywordflow">case</span> 0x04: <span class="comment">// EOT: ignore</span></div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keywordflow">case</span> 0x05: <span class="comment">// ENQ: ignore (empty response)</span></div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    <span class="keywordflow">case</span> 0x06: <span class="comment">// ACK: ignore</span></div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    <span class="keywordflow">case</span> 0x07: <span class="comment">// BEL: set bell flag</span></div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#afd9db1c1324909e2a0a98cafa53d9cd4">bell</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keywordflow">case</span> 0x08: <span class="comment">// BS: backspace</span></div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;        <span class="comment">// move cursor 1 left.</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;        <span class="comment">// if cursor pos is 0, move to end of previous line</span></div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        <span class="comment">// if already at (0,0), move to (0,0)</span></div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> &amp;&amp; (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x == this-&gt;dims.x - 1)) {</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;            <span class="comment">// if we are in the special last-column state, only unset that flag,</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;            <span class="comment">// but don&#39;t move the cursor.</span></div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x -= 1;</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &lt; 0) {</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x += this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y -= 1;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &lt; 0) {</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;                    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a> = {0, 0};</div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;                }</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;            }</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;        }</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    <span class="keywordflow">case</span> 0x09: <span class="comment">// HT: horizontal tab</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="comment">// move cursor to next multiple of 8</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;        <span class="comment">// at least move by 1, at most by 8</span></div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="comment">// if next multiple of 8 is greater than terminal width,</span></div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="comment">// move to end of this line</span></div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="comment">// never move to next line</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = ((this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x + 8) / 8) * 8;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &gt;= this-&gt;dims.x) {</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x - 1;</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;        }</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    <span class="keywordflow">case</span> 0x0a: <span class="comment">// LF: linefeed</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;    <span class="keywordflow">case</span> 0x0b: <span class="comment">// VT: vertical tab</span></div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;    <span class="keywordflow">case</span> 0x0c: <span class="comment">// FF: form feed</span></div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <span class="comment">//all these do the same: move to beginning of next line</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y == this-&gt;dims.y - 1) {</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a752e54412ebbb08b3d8ac0edc90891ee">advance</a>(1);</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y += 1;</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;        }</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    <span class="keywordflow">case</span> 0x0d: <span class="comment">// CR: carriage return</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    <span class="keywordflow">case</span> 0x0e: <span class="comment">// SO: ignore</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;    <span class="keywordflow">case</span> 0x0f: <span class="comment">// SI: ignore</span></div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;    <span class="keywordflow">case</span> 0x10: <span class="comment">// DLE: ignore</span></div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;    <span class="keywordflow">case</span> 0x11: <span class="comment">// DC1: ignore</span></div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keywordflow">case</span> 0x12: <span class="comment">// DC2: ignore</span></div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;    <span class="keywordflow">case</span> 0x13: <span class="comment">// DC3: ignore</span></div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;    <span class="keywordflow">case</span> 0x14: <span class="comment">// DC4: ignore</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;    <span class="keywordflow">case</span> 0x15: <span class="comment">// NAK: ignore</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;    <span class="keywordflow">case</span> 0x16: <span class="comment">// SYN: ignore</span></div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;    <span class="keywordflow">case</span> 0x17: <span class="comment">// ETB: ignore</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;    <span class="keywordflow">case</span> 0x18: <span class="comment">// CAN: ignore</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;    <span class="keywordflow">case</span> 0x19: <span class="comment">// EM: ignore</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;    <span class="keywordflow">case</span> 0x1a: <span class="comment">// SUB: ignore</span></div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;    <span class="keywordflow">case</span> 0x1b: <span class="comment">// ESC: escape sequence start</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;    <span class="keywordflow">case</span> 0x1c: <span class="comment">// FS: ignore</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;    <span class="keywordflow">case</span> 0x1d: <span class="comment">// GS: ignore</span></div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keywordflow">case</span> 0x1e: <span class="comment">// RS: ignore</span></div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;    <span class="keywordflow">case</span> 0x1f: <span class="comment">// US: ignore</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;    <span class="keywordflow">case</span> 0x7f: <span class="comment">// DEL: ignore</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;    <span class="keywordflow">default</span>:   <span class="comment">// regular, printable character</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> &amp;&amp; (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x == this-&gt;dims.x - 1)) {</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;            <span class="comment">// store the fact that this line was auto-wrapped</span></div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;            <span class="comment">// and will continue in the next line</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y)-&gt;<a class="code" href="structopenage_1_1console_1_1buf__line.xhtml#af481a8ea9bc97ab5fe57e0f0d2102a6c">type</a> = <a class="code" href="namespaceopenage_1_1console.xhtml#ae5dcef92c8c76cebffd40c925cb209cd">LINE_WRAPPED</a>;</div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;            <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y == this-&gt;dims.y - 1) {</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a752e54412ebbb08b3d8ac0edc90891ee">advance</a>(1);</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y += 1;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;            }</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        }</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;        <span class="comment">// set char at current cursor pos</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;        buf_char *ptr = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>);</div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;        *ptr = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>;</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        ptr-&gt;<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4b4588eb3c49f45c281f67a95ec58973">cp</a> = cp;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;        buf_line *lineptr = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y);</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        <span class="comment">// store the fact that this line has been written to</span></div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;        <span class="keywordflow">if</span> (lineptr-&gt;type == <a class="code" href="namespaceopenage_1_1console.xhtml#aa09a20fff5c3fe6f00987bb27d28c3ff">LINE_EMPTY</a>) {</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            lineptr-&gt;type = <a class="code" href="namespaceopenage_1_1console.xhtml#a2f8b6f12c1655f3259fbdc6873ccb0a2">LINE_REGULAR</a>;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        }</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        <span class="comment">// advance cursor to the right</span></div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x++;</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x == this-&gt;dims.x) {</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x -= 1;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        }</div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;    }</div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1console_xhtml_aa09a20fff5c3fe6f00987bb27d28c3ff"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#aa09a20fff5c3fe6f00987bb27d28c3ff">openage::console::LINE_EMPTY</a></div><div class="ttdeci">constexpr linetype_t LINE_EMPTY</div><div class="ttdoc">the line has not been written yet (or cleared in between)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00099">buf.h:99</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aabe7c503936227e510bb7be84bde2fa3"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">openage::console::Buf::escaped</a></div><div class="ttdeci">bool escaped</div><div class="ttdoc">true if we are currently reading an escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00458">buf.h:458</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a752e54412ebbb08b3d8ac0edc90891ee"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a752e54412ebbb08b3d8ac0edc90891ee">openage::console::Buf::advance</a></div><div class="ttdeci">void advance(unsigned linecount=1)</div><div class="ttdoc">advances the buffer by the specified number of lines.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00341">buf.cpp:341</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a25719bddd1345d6b86e4373dfa474825"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">openage::console::Buf::cursorpos</a></div><div class="ttdeci">coord::term cursorpos</div><div class="ttdoc">cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00433">buf.h:433</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a4c48f84f2a29ae7472c54bce03fcbd65"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">openage::console::Buf::linedataptr</a></div><div class="ttdeci">buf_line * linedataptr(coord::term_t lineno)</div><div class="ttdoc">returns a valid pointer to the line info for the line designated by lineno</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01151">buf.cpp:1151</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_afd9db1c1324909e2a0a98cafa53d9cd4"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#afd9db1c1324909e2a0a98cafa53d9cd4">openage::console::Buf::bell</a></div><div class="ttdeci">bool bell</div><div class="ttdoc">true if an bell ('') has been received, but not cleared</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00468">buf.h:468</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__char_xhtml_a4b4588eb3c49f45c281f67a95ec58973"><div class="ttname"><a href="structopenage_1_1console_1_1buf__char.xhtml#a4b4588eb3c49f45c281f67a95ec58973">openage::console::buf_char::cp</a></div><div class="ttdeci">int cp</div><div class="ttdoc">unicode codepoint of the character</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00067">buf.h:67</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a53574615a1e2df75adad05bd27bf04d4"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">openage::console::Buf::cursor_special_lastcol</a></div><div class="ttdeci">bool cursor_special_lastcol</div><div class="ttdoc">true if cursor is in the last column while whole line is filled this is very special.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00451">buf.h:451</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_ae5dcef92c8c76cebffd40c925cb209cd"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ae5dcef92c8c76cebffd40c925cb209cd">openage::console::LINE_WRAPPED</a></div><div class="ttdeci">constexpr linetype_t LINE_WRAPPED</div><div class="ttdoc">the line has been written to until it auto-wrapped; its continuation can be found in the next line</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00110">buf.h:110</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a2f8b6f12c1655f3259fbdc6873ccb0a2"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a2f8b6f12c1655f3259fbdc6873ccb0a2">openage::console::LINE_REGULAR</a></div><div class="ttdeci">constexpr linetype_t LINE_REGULAR</div><div class="ttdoc">the line has some contents</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00103">buf.h:103</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6fb637bfa9764b03b7e5c732b1628a6"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">openage::console::Buf::current_char_fmt</a></div><div class="ttdeci">buf_char current_char_fmt</div><div class="ttdoc">surrently selected formatting (colors, flags).</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00483">buf.h:483</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad54e6fb8e82e15a085cae30d3646d7b7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">openage::console::Buf::chrdataptr</a></div><div class="ttdeci">buf_char * chrdataptr(coord::term pos)</div><div class="ttdoc">returns a valid pointer to the character info for the character designated by pos</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01141">buf.cpp:1141</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__line_xhtml_af481a8ea9bc97ab5fe57e0f0d2102a6c"><div class="ttname"><a href="structopenage_1_1console_1_1buf__line.xhtml#af481a8ea9bc97ab5fe57e0f0d2102a6c">openage::console::buf_line::type</a></div><div class="ttdeci">linetype_t type</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00116">buf.h:116</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8h_source.xhtml#l00468">bell</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8h_source.xhtml#l00067">openage::console::buf_char::cp</a>, <a class="el" href="buf_8h_source.xhtml#l00483">current_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00451">cursor_special_lastcol</a>, <a class="el" href="buf_8h_source.xhtml#l00433">cursorpos</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00458">escaped</a>, <a class="el" href="buf_8h_source.xhtml#l00099">openage::console::LINE_EMPTY</a>, <a class="el" href="buf_8h_source.xhtml#l00103">openage::console::LINE_REGULAR</a>, <a class="el" href="buf_8h_source.xhtml#l00110">openage::console::LINE_WRAPPED</a>, <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>, and <a class="el" href="buf_8h_source.xhtml#l00116">openage::console::buf_line::type</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>.</p>
<div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ab2dd3bbdbc82ae2a4276a433b40aac91_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_ab2dd3bbdbc82ae2a4276a433b40aac91_icgraph.svg" width="100%" height="369"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="adcdc21533ab920bd72f92f27333716bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcdc21533ab920bd72f92f27333716bf">&#9670;&nbsp;</a></span>process_codepoint()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::process_codepoint </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>processes one unicode codepoint internally called by <a class="el" href="classopenage_1_1console_1_1_buf.xhtml#a7f70c41ed91a5283fd2dd337b7493eaa" title="write a single byte to the buffer.">write(char)</a> after feeding the char into streamdecoder </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00416">416</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                                  {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="comment">// if the terminal is currently in escaped state, tread the codepoint as</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    <span class="comment">// part of the current escape sequence.</span></div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a>) {</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.push_back(cp);</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        <span class="keywordtype">size_t</span> len = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.size();</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;        <span class="keywordtype">int</span> first = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[0];</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;        <span class="keywordtype">int</span> previous = -1;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordflow">if</span> (len &gt; 1) {</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;            previous = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[len - 2];</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;        }</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="comment">// the first char of the escape sequence determines</span></div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;        <span class="comment">// its length, terminators and allowed characters.</span></div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        <span class="keywordflow">switch</span> (first) {</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;[&#39;</span>:</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;            <span class="comment">// CSI</span></div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;            <span class="keywordflow">if</span> (len == 1 or (cp &gt;= 0x20 and cp &lt; 0x40)) {</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <span class="comment">// regular, allowed char</span></div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &gt;= 0x40 and cp &lt; 0x7f) {</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="comment">// terminator</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a83a7e7db654360cff1c6796b169efc22">process_csi_escape_sequence</a>();</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                <span class="comment">// illegal char, abortabortabort</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;            }</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;]&#39;</span>:  <span class="comment">// OSC</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;P&#39;</span>:  <span class="comment">// DCS</span></div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;_&#39;</span>:  <span class="comment">// APC</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;^&#39;</span>:  <span class="comment">// PM</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;            <span class="comment">// terminated by ESC \ or BEL</span></div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="keywordflow">if</span> ((previous == 0x1b and cp == <span class="charliteral">&#39;\\&#39;</span>) or cp == 0x07) {</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aa6ae8933e3c2bbaafa8d81cf1c405406">process_text_escape_sequence</a>();</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;            }</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;(&#39;</span>:  <span class="comment">// non-utf8-related stuff</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;)&#39;</span>:  <span class="comment">// character-set selection etc...</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;*&#39;</span>:  <span class="comment">// these are all 2-char sequences</span></div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;+&#39;</span>:</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;-&#39;</span>:</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;/&#39;</span>:</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;.&#39;</span>:</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;%&#39;</span>:</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;#&#39;</span>:</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39; &#39;</span>:</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            <span class="comment">// not implemented</span></div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            <span class="keywordflow">if</span> (len == 2) {</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            }</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;        <span class="keywordflow">default</span>: <span class="comment">// no known multi-cp sequence, treat as single escaped cp</span></div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a809f4a27cd3bf92c2458a5b3176fae43">process_escaped_cp</a>(first);</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;        }</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;        <span class="comment">// we&#39;re not currently escaped, so the char is printed...</span></div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;        <span class="comment">// at least if it&#39;s a printable character.</span></div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab2dd3bbdbc82ae2a4276a433b40aac91">print_codepoint</a>(cp);</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    }</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aabe7c503936227e510bb7be84bde2fa3"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">openage::console::Buf::escaped</a></div><div class="ttdeci">bool escaped</div><div class="ttdoc">true if we are currently reading an escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00458">buf.h:458</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab2dd3bbdbc82ae2a4276a433b40aac91"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab2dd3bbdbc82ae2a4276a433b40aac91">openage::console::Buf::print_codepoint</a></div><div class="ttdeci">void print_codepoint(int cp)</div><div class="ttdoc">prints one unicode codepoint interally called by process_codepoint(int cp) after sorting out escape s...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00479">buf.cpp:479</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">openage::console::Buf::escape_sequence_aborted</a></div><div class="ttdeci">void escape_sequence_aborted()</div><div class="ttdoc">aborts the current escape sequence (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00609">buf.cpp:609</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aa6ae8933e3c2bbaafa8d81cf1c405406"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aa6ae8933e3c2bbaafa8d81cf1c405406">openage::console::Buf::process_text_escape_sequence</a></div><div class="ttdeci">void process_text_escape_sequence()</div><div class="ttdoc">processes a text escape sequence that is one of OSC, DCS, APC or PM</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00633">buf.cpp:633</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a83a7e7db654360cff1c6796b169efc22"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a83a7e7db654360cff1c6796b169efc22">openage::console::Buf::process_csi_escape_sequence</a></div><div class="ttdeci">void process_csi_escape_sequence()</div><div class="ttdoc">processes the CSI escape sequence currently stored in escape_sequence.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00661">buf.cpp:661</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a381b42f50364ebd1842d1e330bae5909"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">openage::console::Buf::escape_sequence</a></div><div class="ttdeci">std::vector&lt; int &gt; escape_sequence</div><div class="ttdoc">current escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00463">buf.h:463</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a809f4a27cd3bf92c2458a5b3176fae43"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a809f4a27cd3bf92c2458a5b3176fae43">openage::console::Buf::process_escaped_cp</a></div><div class="ttdeci">void process_escaped_cp(int cp)</div><div class="ttdoc">processes a single-codepoint escape sequence.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00621">buf.cpp:621</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00463">escape_sequence</a>, <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, <a class="el" href="buf_8h_source.xhtml#l00458">escaped</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00621">process_escaped_cp()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00633">process_text_escape_sequence()</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00382">write()</a>.</p>
<div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_adcdc21533ab920bd72f92f27333716bf_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_adcdc21533ab920bd72f92f27333716bf_icgraph.svg" width="360" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a83a7e7db654360cff1c6796b169efc22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83a7e7db654360cff1c6796b169efc22">&#9670;&nbsp;</a></span>process_csi_escape_sequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::process_csi_escape_sequence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>processes the CSI escape sequence currently stored in escape_sequence. </p>
<p>invalid sequences are ignored. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00661">661</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;                                      {</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;    <span class="keywordtype">size_t</span> len = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.size();</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;    <span class="keywordtype">int</span> type = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[len - 1];</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;    <span class="keywordtype">bool</span> starts_with_questionmark = <span class="keyword">false</span>;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;    std::vector&lt;int&gt; params;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;    <span class="keywordtype">bool</span> in_param = <span class="keyword">false</span>;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;    <span class="keywordtype">int</span> currentparam;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> pos = 1; pos &lt; len - 1; pos++) {</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        <span class="keywordtype">int</span> cp = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[pos];</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;        <span class="keywordflow">if</span> (cp == <span class="charliteral">&#39;?&#39;</span> &amp;&amp; pos == 1) {</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            starts_with_questionmark = <span class="keyword">true</span>;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; cp &lt;= <span class="charliteral">&#39;9&#39;</span>) {</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            <span class="keywordflow">if</span> (!in_param) {</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                in_param = <span class="keyword">true</span>;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                currentparam = 0;</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            }</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;            currentparam = 10 * currentparam + (cp - <span class="charliteral">&#39;0&#39;</span>);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp == <span class="charliteral">&#39;;&#39;</span>) {</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            <span class="keywordflow">if</span> (!in_param) {</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                <span class="comment">// this &#39;;&#39; did not have a number before it</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;                <span class="comment">// (ommited)</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;                currentparam = -1;</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            }</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;            params.push_back(currentparam);</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;            in_param = <span class="keyword">false</span>;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            <span class="comment">// unexpected character, we want a nice</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            <span class="comment">// semicolon-separated list of decimal numbers.</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;            <span class="comment">// abortabortabort</span></div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        }</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    }</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordflow">if</span> (in_param) {</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;        <span class="comment">// there&#39;s no semicolon at the end, finish the param</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;        params.push_back(currentparam);</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;        <span class="comment">// there&#39;s a semicolon at the end, or we had no params</span></div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;        <span class="comment">// at all. add param with default value.</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;        params.push_back(-1);</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;    }</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;    <span class="comment">// default values</span></div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;    <span class="keywordtype">int</span> defaultval;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;    <span class="keywordtype">unsigned</span> minparamcount;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;    <span class="keywordflow">switch</span> (type) {</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;H&#39;</span>:</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>:</div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        minparamcount = 2;</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;        defaultval = 1;</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;J&#39;</span>:</div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;K&#39;</span>:</div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;m&#39;</span>:</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;        minparamcount = 1;</div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;        defaultval = 0;</div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;s&#39;</span>:</div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;u&#39;</span>:</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;        minparamcount = 0;</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;        defaultval = 0;</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;        minparamcount = 1;</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;        defaultval = 1;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;    }</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;    <span class="comment">// apply default value requirements</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;    <span class="keywordflow">while</span> (params.size() &lt; minparamcount) {</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;        params.push_back(-1);</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;    }</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> &amp;p: params) {</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;        <span class="keywordflow">if</span> (p == -1) {</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;            p = defaultval;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;        }</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;    }</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;    <span class="comment">// execute the escape sequence</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;    <span class="keywordflow">switch</span> (type) {</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;@&#39;</span>: <span class="comment">// ICH: insert n blank characters</span></div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; params[0]; i++) {</div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab2dd3bbdbc82ae2a4276a433b40aac91">print_codepoint</a>(0x20);</div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;        }</div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;A&#39;</span>: <span class="comment">// CUU: move cursor up</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y -= params[0];</div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &lt; 0) {</div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = 0;</div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;        }</div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;e&#39;</span>: <span class="comment">// VPR: vertical position relative</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;        <span class="comment">//fall through</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;B&#39;</span>: <span class="comment">// CUD: move cursor down</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y += params[0];</div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &gt;= this-&gt;dims.y) {</div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y - 1;</div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;        }</div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;C&#39;</span>: <span class="comment">// CUF: move cursor to the right</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x += params[0];</div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &gt;= this-&gt;dims.x) {</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x - 1;</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;        }</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;D&#39;</span>: <span class="comment">// CUB: move cursor to the left</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x -= params[0];</div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &lt; 0) {</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;        }</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;E&#39;</span>: <span class="comment">// CNL: move cursor down and to beginning of line</span></div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y += params[0];</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &gt;= this-&gt;dims.y) {</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y - 1;</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;        }</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;F&#39;</span>: <span class="comment">// CPL: move cursor up and to beginning of line</span></div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y -= params[0];</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &lt; 0) {</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = 0;</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;        }</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;G&#39;</span>: <span class="comment">// CHA: set cursorpos.x</span></div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = params[0] - 1;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &lt; 0) {</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        }</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &gt;= this-&gt;dims.x) {</div><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x - 1;</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;        }</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;f&#39;</span>: <span class="comment">// HVP: set cursorpos</span></div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;        <span class="comment">//fall through</span></div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;H&#39;</span>: <span class="comment">// CUP: set cursorpos</span></div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = params[0] - 1;</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = params[1] - 1;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &lt; 0) {</div><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = 0;</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;        }</div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x &gt;= this-&gt;dims.x) {</div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x - 1;</div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;        }</div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &lt; 0) {</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = 0;</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;        }</div><div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &gt;= this-&gt;dims.y) {</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y - 1;</div><div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;        }</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;d&#39;</span>: <span class="comment">// VPA: vertical position absolute</span></div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = params[0] - 1;</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &lt; 0) {</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = 0;</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;        }</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y &gt;= this-&gt;dims.y) {</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y - 1;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;        }</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;J&#39;</span>: <span class="comment">// ED: erase display</span></div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        <span class="keywordflow">switch</span> (params[0]) {</div><div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;        <span class="keywordflow">case</span> 0: <span class="comment">// clear screen buffer from cursor to end</span></div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>, {0, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y});</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        <span class="keywordflow">case</span> 1: <span class="comment">// clear screen buffer from beginning to cursor</span></div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, 0}, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>, <span class="keyword">true</span>);</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;        <span class="keywordflow">case</span> 2: <span class="comment">// clear screen buffer</span></div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, 0}, {0, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y});</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;        <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;        }</div><div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;K&#39;</span>: <span class="comment">// EL: erase line</span></div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;        <span class="keywordflow">switch</span> (params[0]) {</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;        <span class="keywordflow">case</span> 0: <span class="comment">// clear current line from cursor to end</span></div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>, {0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y + 1)});</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;        <span class="keywordflow">case</span> 1: <span class="comment">// clear current line from beginning to cursor</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y}, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>, <span class="keyword">true</span>);</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;        <span class="keywordflow">case</span> 2: <span class="comment">// clear current line</span></div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y}, {0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>.y + 1)});</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;        <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;        }</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;m&#39;</span>: <span class="comment">// SGR: set graphics rendition</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a9320618afe1ebdf770518ab69cc72271">process_sgr_code</a>(params);</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;s&#39;</span>: <span class="comment">// SCP: save cursor position</span></div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">saved_cursorpos</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a>;</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;u&#39;</span>: <span class="comment">// RCP: restore cursor position</span></div><div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">saved_cursorpos</a>;</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;l&#39;</span>: <span class="comment">// set mode</span></div><div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;        <span class="keywordflow">if</span> (starts_with_questionmark) {</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;            <span class="keywordflow">switch</span>(params[0]) {</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;            <span class="keywordflow">case</span> 25: <span class="comment">// cursor invisible</span></div><div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">cursor_visible</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;            <span class="keywordflow">case</span> 1049: <span class="comment">// switch to alternate screen</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;                <span class="comment">// TBI</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;                <span class="comment">// idea: use last dims.y lines of scrollback</span></div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;                <span class="comment">// buffer to save regular screen data</span></div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;            <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;            }</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;            <span class="keywordflow">switch</span>(params[0]) {</div><div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;            <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;            }</div><div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;        }</div><div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;h&#39;</span>: <span class="comment">// reset mode</span></div><div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;        <span class="keywordflow">if</span> (starts_with_questionmark) {</div><div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;            <span class="keywordflow">switch</span>(params[0]) {</div><div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;            <span class="keywordflow">case</span> 25: <span class="comment">// cursor visible</span></div><div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">cursor_visible</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;            <span class="keywordflow">case</span> 1049: <span class="comment">// restore regular screen</span></div><div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;                <span class="comment">// TBI</span></div><div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;            <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;            }</div><div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;            <span class="keywordflow">switch</span>(params[0]) {</div><div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;            <span class="keywordflow">default</span>: <span class="comment">// unknown/unimplemented parameter</span></div><div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;            }</div><div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;        }</div><div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;S&#39;</span>: <span class="comment">// SU</span></div><div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;T&#39;</span>: <span class="comment">// SD</span></div><div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;n&#39;</span>: <span class="comment">// DSR</span></div><div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;        <span class="comment">// not implemented; fall through.</span></div><div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;        <span class="comment">// not implemented (or nonexisting)</span></div><div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;    }</div><div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3e924482fd0e3524e44b20acc316fb19">escape_sequence_processed</a>();</div><div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a7d65c2c715635ae80a3362abc61abc22"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">openage::console::Buf::saved_cursorpos</a></div><div class="ttdeci">coord::term saved_cursorpos</div><div class="ttdoc">saved cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00438">buf.h:438</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6b49e0178333e01a08fd61ca2006219"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">openage::console::Buf::clear</a></div><div class="ttdeci">void clear(coord::term start, coord::term end, bool clear_end=false)</div><div class="ttdoc">clears the screen character and line buffers.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01078">buf.cpp:1078</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab2dd3bbdbc82ae2a4276a433b40aac91"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab2dd3bbdbc82ae2a4276a433b40aac91">openage::console::Buf::print_codepoint</a></div><div class="ttdeci">void print_codepoint(int cp)</div><div class="ttdoc">prints one unicode codepoint interally called by process_codepoint(int cp) after sorting out escape s...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00479">buf.cpp:479</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a25719bddd1345d6b86e4373dfa474825"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">openage::console::Buf::cursorpos</a></div><div class="ttdeci">coord::term cursorpos</div><div class="ttdoc">cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00433">buf.h:433</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a9320618afe1ebdf770518ab69cc72271"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a9320618afe1ebdf770518ab69cc72271">openage::console::Buf::process_sgr_code</a></div><div class="ttdeci">void process_sgr_code(const std::vector&lt; int &gt; &amp;params)</div><div class="ttdoc">sets graphics rendition parameters; called by process_escape_sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00919">buf.cpp:919</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3b4aca71e4891bd71a0c57ca5fa58e86"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">openage::console::Buf::cursor_visible</a></div><div class="ttdeci">bool cursor_visible</div><div class="ttdoc">true if the cursor is visible</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00443">buf.h:443</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">openage::console::Buf::escape_sequence_aborted</a></div><div class="ttdeci">void escape_sequence_aborted()</div><div class="ttdoc">aborts the current escape sequence (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00609">buf.cpp:609</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a381b42f50364ebd1842d1e330bae5909"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">openage::console::Buf::escape_sequence</a></div><div class="ttdeci">std::vector&lt; int &gt; escape_sequence</div><div class="ttdoc">current escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00463">buf.h:463</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3e924482fd0e3524e44b20acc316fb19"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3e924482fd0e3524e44b20acc316fb19">openage::console::Buf::escape_sequence_processed</a></div><div class="ttdeci">void escape_sequence_processed()</div><div class="ttdoc">called when a escape sequence has been successfully processed, clears the sequence.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00616">buf.cpp:616</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>, <a class="el" href="buf_8h_source.xhtml#l00443">cursor_visible</a>, <a class="el" href="buf_8h_source.xhtml#l00433">cursorpos</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00463">escape_sequence</a>, <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00616">escape_sequence_processed()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00919">process_sgr_code()</a>, and <a class="el" href="buf_8h_source.xhtml#l00438">saved_cursorpos</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>.</p>
<div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a83a7e7db654360cff1c6796b169efc22_cgraph.svg" width="100%" height="560"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a83a7e7db654360cff1c6796b169efc22_icgraph.svg" width="559" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a809f4a27cd3bf92c2458a5b3176fae43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a809f4a27cd3bf92c2458a5b3176fae43">&#9670;&nbsp;</a></span>process_escaped_cp()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::process_escaped_cp </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cp</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>processes a single-codepoint escape sequence. </p>
<p>invalid codepoints are ignored. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00621">621</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;                                   {</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;    <span class="keywordflow">switch</span> (cp) {</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;c&#39;</span>: <span class="comment">//RIS (full reset)</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a23267e4cb18a2921f14406e6307cbb95">reset</a>();</div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;        <span class="comment">//unimplemented or invalid codepoint</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;    }</div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a23267e4cb18a2921f14406e6307cbb95"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a23267e4cb18a2921f14406e6307cbb95">openage::console::Buf::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdoc">resets the buffer to its constructor defaults</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00052">buf.cpp:52</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">openage::console::Buf::escape_sequence_aborted</a></div><div class="ttdeci">void escape_sequence_aborted()</div><div class="ttdoc">aborts the current escape sequence (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00609">buf.cpp:609</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>.</p>
<div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a809f4a27cd3bf92c2458a5b3176fae43_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a809f4a27cd3bf92c2458a5b3176fae43_icgraph.svg" width="562" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9320618afe1ebdf770518ab69cc72271"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9320618afe1ebdf770518ab69cc72271">&#9670;&nbsp;</a></span>process_sgr_code()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::process_sgr_code </td>
          <td>(</td>
          <td class="paramtype">const std::vector&lt; int &gt; &amp;&#160;</td>
          <td class="paramname"><em>params</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets graphics rendition parameters; called by process_escape_sequence </p>
<p>params: numerical params list from escape sequence </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00919">919</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;                                                       {</div><div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; params.size(); i++) {</div><div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;        <span class="keywordtype">int</span> p = params[i];</div><div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;        <span class="keywordflow">switch</span> (p) {</div><div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;        <span class="keywordflow">case</span> 0: <span class="comment">// reset</span></div><div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>;</div><div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;        <span class="keywordflow">case</span> 1: <span class="comment">// bold</span></div><div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a9745bb286bb9090f6a1108ab396a7b8a">CHR_BOLD</a>;</div><div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a8344de72e80fee53e75bb2d8ed0d05fa">CHR_FAINT</a>;</div><div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;        <span class="keywordflow">case</span> 2: <span class="comment">// faint</span></div><div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a8344de72e80fee53e75bb2d8ed0d05fa">CHR_FAINT</a>;</div><div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a9745bb286bb9090f6a1108ab396a7b8a">CHR_BOLD</a>;</div><div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;        <span class="keywordflow">case</span> 3: <span class="comment">// italic</span></div><div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a0c77f6f996bfc8d29bcf3328dd59a7ed">CHR_ITALIC</a>;</div><div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#ab5697bf92be9d8d51dcf4302601bca8b">CHR_FRAKTUR</a>;</div><div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;        <span class="keywordflow">case</span> 4: <span class="comment">// underline</span></div><div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a93039d0f5b2e81d5c16ea27f24726d46">CHR_UNDERLINED</a>;</div><div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;        <span class="keywordflow">case</span> 5: <span class="comment">// blink slowly</span></div><div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#af47bf3d97cd359c6c10f897202d86f6e">CHR_BLINKING</a>;</div><div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a4c87ac281f12c1a70ce7a42e994b1f4e">CHR_BLINKINGFAST</a>;</div><div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;        <span class="keywordflow">case</span> 6: <span class="comment">// blink fast</span></div><div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a4c87ac281f12c1a70ce7a42e994b1f4e">CHR_BLINKINGFAST</a>;</div><div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#af47bf3d97cd359c6c10f897202d86f6e">CHR_BLINKING</a>;</div><div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;        <span class="keywordflow">case</span> 7: <span class="comment">// negative</span></div><div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a704887dfb1063ef039b3d0b3a47c8e3a">CHR_NEGATIVE</a>;</div><div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;        <span class="keywordflow">case</span> 8: <span class="comment">// invisible</span></div><div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#afb42dd8609458df8845f0fcfe1369a02">CHR_INVISIBLE</a>;</div><div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;        <span class="keywordflow">case</span> 9: <span class="comment">// struck out</span></div><div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a5e51abe4b309530b0e3ce99dd7e15542">CHR_STRUCKOUT</a>;</div><div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;        <span class="comment">// cases 10-19: font selectors. not implemented.</span></div><div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;        <span class="keywordflow">case</span> 20: <span class="comment">// fraktur</span></div><div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#ab5697bf92be9d8d51dcf4302601bca8b">CHR_FRAKTUR</a>;</div><div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a0c77f6f996bfc8d29bcf3328dd59a7ed">CHR_ITALIC</a>;</div><div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;        <span class="keywordflow">case</span> 21: <span class="comment">// bold off</span></div><div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a9745bb286bb9090f6a1108ab396a7b8a">CHR_BOLD</a>;</div><div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;        <span class="keywordflow">case</span> 22: <span class="comment">// bold and faint off</span></div><div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a9745bb286bb9090f6a1108ab396a7b8a">CHR_BOLD</a>;</div><div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a8344de72e80fee53e75bb2d8ed0d05fa">CHR_FAINT</a>;</div><div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;        <span class="keywordflow">case</span> 23: <span class="comment">// italic and fraktur off</span></div><div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a0c77f6f996bfc8d29bcf3328dd59a7ed">CHR_ITALIC</a>;</div><div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#ab5697bf92be9d8d51dcf4302601bca8b">CHR_FRAKTUR</a>;</div><div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;        <span class="keywordflow">case</span> 24: <span class="comment">// underline off</span></div><div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a93039d0f5b2e81d5c16ea27f24726d46">CHR_UNDERLINED</a>;</div><div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;        <span class="keywordflow">case</span> 25: <span class="comment">// blinking and blinkingfast off</span></div><div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#af47bf3d97cd359c6c10f897202d86f6e">CHR_BLINKING</a>;</div><div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a4c87ac281f12c1a70ce7a42e994b1f4e">CHR_BLINKINGFAST</a>;</div><div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;        <span class="comment">// case 26: not yet standardized</span></div><div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;        <span class="keywordflow">case</span> 27: <span class="comment">// negative off</span></div><div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a704887dfb1063ef039b3d0b3a47c8e3a">CHR_NEGATIVE</a>;</div><div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;        <span class="keywordflow">case</span> 28: <span class="comment">// invisible off</span></div><div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#afb42dd8609458df8845f0fcfe1369a02">CHR_INVISIBLE</a>;</div><div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;        <span class="keywordflow">case</span> 29: <span class="comment">// struck out off</span></div><div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a5e51abe4b309530b0e3ce99dd7e15542">CHR_STRUCKOUT</a>;</div><div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;        <span class="keywordflow">case</span> 30:</div><div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;        <span class="keywordflow">case</span> 31:</div><div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;        <span class="keywordflow">case</span> 32:</div><div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;        <span class="keywordflow">case</span> 33:</div><div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;        <span class="keywordflow">case</span> 34:</div><div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;        <span class="keywordflow">case</span> 35:</div><div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;        <span class="keywordflow">case</span> 36:</div><div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;        <span class="keywordflow">case</span> 37: <span class="comment">// foreground color (8 colors)</span></div><div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a205c87e5042f1bdeb3bb60580196620d">fgcol</a> = (p - 30);</div><div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;        <span class="keywordflow">case</span> 38: <span class="comment">// foreground color (256 colors)</span></div><div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;            i += 2;</div><div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;            <span class="keywordflow">if</span> (i &gt;= params.size() || params[i] &lt; 0 || params[i] &gt;= 256) {</div><div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;                <span class="comment">// invalid 256-color SGR code.</span></div><div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;            }</div><div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a205c87e5042f1bdeb3bb60580196620d">fgcol</a> = params[i];</div><div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;        <span class="keywordflow">case</span> 39: <span class="comment">// reset foreground color</span></div><div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a205c87e5042f1bdeb3bb60580196620d">fgcol</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a205c87e5042f1bdeb3bb60580196620d">fgcol</a>;</div><div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;        <span class="keywordflow">case</span> 40:</div><div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;        <span class="keywordflow">case</span> 41:</div><div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;        <span class="keywordflow">case</span> 42:</div><div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;        <span class="keywordflow">case</span> 43:</div><div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;        <span class="keywordflow">case</span> 44:</div><div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;        <span class="keywordflow">case</span> 45:</div><div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;        <span class="keywordflow">case</span> 46:</div><div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;        <span class="keywordflow">case</span> 47: <span class="comment">// background color (8 colors)</span></div><div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#ad268cc5e0d42a2c6c533805f2749c3ac">bgcol</a> = (p - 40);</div><div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;        <span class="keywordflow">case</span> 48: <span class="comment">// background color (256 colors)</span></div><div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;            i += 2;</div><div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;            <span class="keywordflow">if</span> (i &gt;= params.size() || params[i] &lt; 0 || params[i] &gt;= 256) {</div><div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;                <span class="comment">// invalid 256-color SGR code.</span></div><div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;                <span class="comment">// abortabortabort</span></div><div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;            }</div><div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#ad268cc5e0d42a2c6c533805f2749c3ac">bgcol</a> = params[i];</div><div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;        <span class="keywordflow">case</span> 49: <span class="comment">// reset background color</span></div><div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#ad268cc5e0d42a2c6c533805f2749c3ac">bgcol</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#ad268cc5e0d42a2c6c533805f2749c3ac">bgcol</a>;</div><div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;        <span class="comment">// case 50: not yet standardized</span></div><div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;        <span class="keywordflow">case</span> 51: <span class="comment">// framed</span></div><div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a5ed01c84ea51ab071895ba4893def65a">CHR_FRAMED</a>;</div><div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a5b36a87df8bd26b15cd6cf9c405be21e">CHR_ENCIRCLED</a>;</div><div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;        <span class="keywordflow">case</span> 52: <span class="comment">// encircled</span></div><div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a5b36a87df8bd26b15cd6cf9c405be21e">CHR_ENCIRCLED</a>;</div><div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a5ed01c84ea51ab071895ba4893def65a">CHR_FRAMED</a>;</div><div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;        <span class="keywordflow">case</span> 53: <span class="comment">// overlined</span></div><div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#ac1c0a1692341ff6e2f561f047ae69443">CHR_OVERLINED</a>;</div><div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;        <span class="keywordflow">case</span> 54: <span class="comment">// framed and encircled off</span></div><div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a5ed01c84ea51ab071895ba4893def65a">CHR_FRAMED</a>;</div><div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a5b36a87df8bd26b15cd6cf9c405be21e">CHR_ENCIRCLED</a>;</div><div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;        <span class="keywordflow">case</span> 55: <span class="comment">// overlined off</span></div><div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#ac1c0a1692341ff6e2f561f047ae69443">CHR_OVERLINED</a>;</div><div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;        <span class="comment">// cases 56-59: not yet standardized</span></div><div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;        <span class="keywordflow">case</span> 60: <span class="comment">// right side line</span></div><div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#ad9457c58e4cd80cf614f2fdfd9746a52">CHR_RIGHTLINED</a>;</div><div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;        <span class="comment">// case 61: double right side line. not implemented.</span></div><div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;        <span class="keywordflow">case</span> 62: <span class="comment">// left side line</span></div><div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a0e58c4dd9bc39bc92df452fed1d3b3bd">CHR_LEFTLINED</a>;</div><div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;        <span class="comment">// case 63: double left side line. not implemented.</span></div><div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;        <span class="keywordflow">case</span> 64: <span class="comment">// stress ideogram (whatever that is)</span></div><div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> |= <a class="code" href="namespaceopenage_1_1console.xhtml#a2fdcdc91078a83eb1c89e268f9b45426">CHR_STRESS_IDEOGRAM</a>;</div><div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;        <span class="keywordflow">case</span> 65: <span class="comment">// disables effects 60-64</span></div><div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#ad9457c58e4cd80cf614f2fdfd9746a52">CHR_RIGHTLINED</a>;</div><div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a>.<a class="code" href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">flags</a> &amp;= ~<a class="code" href="namespaceopenage_1_1console.xhtml#a0e58c4dd9bc39bc92df452fed1d3b3bd">CHR_LEFTLINED</a>;</div><div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;        <span class="comment">// cases above 65 are not standardized.</span></div><div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;            <span class="comment">// not implemented or not defined.</span></div><div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;            <span class="comment">// abortabortabort</span></div><div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;        }</div><div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;    }</div><div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1console_xhtml_ab5697bf92be9d8d51dcf4302601bca8b"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ab5697bf92be9d8d51dcf4302601bca8b">openage::console::CHR_FRAKTUR</a></div><div class="ttdeci">constexpr chrflags_t CHR_FRAKTUR</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00037">buf.h:37</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_afb42dd8609458df8845f0fcfe1369a02"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#afb42dd8609458df8845f0fcfe1369a02">openage::console::CHR_INVISIBLE</a></div><div class="ttdeci">constexpr chrflags_t CHR_INVISIBLE</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00039">buf.h:39</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a93039d0f5b2e81d5c16ea27f24726d46"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a93039d0f5b2e81d5c16ea27f24726d46">openage::console::CHR_UNDERLINED</a></div><div class="ttdeci">constexpr chrflags_t CHR_UNDERLINED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00035">buf.h:35</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_af47bf3d97cd359c6c10f897202d86f6e"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#af47bf3d97cd359c6c10f897202d86f6e">openage::console::CHR_BLINKING</a></div><div class="ttdeci">constexpr chrflags_t CHR_BLINKING</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00033">buf.h:33</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a5ed01c84ea51ab071895ba4893def65a"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a5ed01c84ea51ab071895ba4893def65a">openage::console::CHR_FRAMED</a></div><div class="ttdeci">constexpr chrflags_t CHR_FRAMED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00040">buf.h:40</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__char_xhtml_a4488bd83177a49837fcc93128d18c5cb"><div class="ttname"><a href="structopenage_1_1console_1_1buf__char.xhtml#a4488bd83177a49837fcc93128d18c5cb">openage::console::buf_char::flags</a></div><div class="ttdeci">chrflags_t flags</div><div class="ttdoc">flags of the character</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00079">buf.h:79</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3fa3840a58379ede7a40f6382f95cc06"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">openage::console::Buf::default_char_fmt</a></div><div class="ttdeci">const buf_char default_char_fmt</div><div class="ttdoc">the default buf char, which will be used for filling new lines, or determining whether a line is empt...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00491">buf.h:491</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a4c87ac281f12c1a70ce7a42e994b1f4e"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a4c87ac281f12c1a70ce7a42e994b1f4e">openage::console::CHR_BLINKINGFAST</a></div><div class="ttdeci">constexpr chrflags_t CHR_BLINKINGFAST</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00034">buf.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a8344de72e80fee53e75bb2d8ed0d05fa"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a8344de72e80fee53e75bb2d8ed0d05fa">openage::console::CHR_FAINT</a></div><div class="ttdeci">constexpr chrflags_t CHR_FAINT</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00031">buf.h:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a0e58c4dd9bc39bc92df452fed1d3b3bd"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a0e58c4dd9bc39bc92df452fed1d3b3bd">openage::console::CHR_LEFTLINED</a></div><div class="ttdeci">constexpr chrflags_t CHR_LEFTLINED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00044">buf.h:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_ad9457c58e4cd80cf614f2fdfd9746a52"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ad9457c58e4cd80cf614f2fdfd9746a52">openage::console::CHR_RIGHTLINED</a></div><div class="ttdeci">constexpr chrflags_t CHR_RIGHTLINED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00043">buf.h:43</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a0c77f6f996bfc8d29bcf3328dd59a7ed"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a0c77f6f996bfc8d29bcf3328dd59a7ed">openage::console::CHR_ITALIC</a></div><div class="ttdeci">constexpr chrflags_t CHR_ITALIC</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00032">buf.h:32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a2fdcdc91078a83eb1c89e268f9b45426"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a2fdcdc91078a83eb1c89e268f9b45426">openage::console::CHR_STRESS_IDEOGRAM</a></div><div class="ttdeci">constexpr chrflags_t CHR_STRESS_IDEOGRAM</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00045">buf.h:45</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__char_xhtml_ad268cc5e0d42a2c6c533805f2749c3ac"><div class="ttname"><a href="structopenage_1_1console_1_1buf__char.xhtml#ad268cc5e0d42a2c6c533805f2749c3ac">openage::console::buf_char::bgcol</a></div><div class="ttdeci">chrcol_t bgcol</div><div class="ttdoc">(256-col) background color</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00075">buf.h:75</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a9745bb286bb9090f6a1108ab396a7b8a"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a9745bb286bb9090f6a1108ab396a7b8a">openage::console::CHR_BOLD</a></div><div class="ttdeci">constexpr chrflags_t CHR_BOLD</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00030">buf.h:30</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a704887dfb1063ef039b3d0b3a47c8e3a"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a704887dfb1063ef039b3d0b3a47c8e3a">openage::console::CHR_NEGATIVE</a></div><div class="ttdeci">constexpr chrflags_t CHR_NEGATIVE</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00038">buf.h:38</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a5b36a87df8bd26b15cd6cf9c405be21e"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a5b36a87df8bd26b15cd6cf9c405be21e">openage::console::CHR_ENCIRCLED</a></div><div class="ttdeci">constexpr chrflags_t CHR_ENCIRCLED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00041">buf.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6fb637bfa9764b03b7e5c732b1628a6"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">openage::console::Buf::current_char_fmt</a></div><div class="ttdeci">buf_char current_char_fmt</div><div class="ttdoc">surrently selected formatting (colors, flags).</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00483">buf.h:483</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_ac1c0a1692341ff6e2f561f047ae69443"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#ac1c0a1692341ff6e2f561f047ae69443">openage::console::CHR_OVERLINED</a></div><div class="ttdeci">constexpr chrflags_t CHR_OVERLINED</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00042">buf.h:42</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_xhtml_a5e51abe4b309530b0e3ce99dd7e15542"><div class="ttname"><a href="namespaceopenage_1_1console.xhtml#a5e51abe4b309530b0e3ce99dd7e15542">openage::console::CHR_STRUCKOUT</a></div><div class="ttdeci">constexpr chrflags_t CHR_STRUCKOUT</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00036">buf.h:36</a></div></div>
<div class="ttc" id="structopenage_1_1console_1_1buf__char_xhtml_a205c87e5042f1bdeb3bb60580196620d"><div class="ttname"><a href="structopenage_1_1console_1_1buf__char.xhtml#a205c87e5042f1bdeb3bb60580196620d">openage::console::buf_char::fgcol</a></div><div class="ttdeci">chrcol_t fgcol</div><div class="ttdoc">(256-col) color of the character</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00071">buf.h:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00075">openage::console::buf_char::bgcol</a>, <a class="el" href="buf_8h_source.xhtml#l00033">openage::console::CHR_BLINKING</a>, <a class="el" href="buf_8h_source.xhtml#l00034">openage::console::CHR_BLINKINGFAST</a>, <a class="el" href="buf_8h_source.xhtml#l00030">openage::console::CHR_BOLD</a>, <a class="el" href="buf_8h_source.xhtml#l00041">openage::console::CHR_ENCIRCLED</a>, <a class="el" href="buf_8h_source.xhtml#l00031">openage::console::CHR_FAINT</a>, <a class="el" href="buf_8h_source.xhtml#l00037">openage::console::CHR_FRAKTUR</a>, <a class="el" href="buf_8h_source.xhtml#l00040">openage::console::CHR_FRAMED</a>, <a class="el" href="buf_8h_source.xhtml#l00039">openage::console::CHR_INVISIBLE</a>, <a class="el" href="buf_8h_source.xhtml#l00032">openage::console::CHR_ITALIC</a>, <a class="el" href="buf_8h_source.xhtml#l00044">openage::console::CHR_LEFTLINED</a>, <a class="el" href="buf_8h_source.xhtml#l00038">openage::console::CHR_NEGATIVE</a>, <a class="el" href="buf_8h_source.xhtml#l00042">openage::console::CHR_OVERLINED</a>, <a class="el" href="buf_8h_source.xhtml#l00043">openage::console::CHR_RIGHTLINED</a>, <a class="el" href="buf_8h_source.xhtml#l00045">openage::console::CHR_STRESS_IDEOGRAM</a>, <a class="el" href="buf_8h_source.xhtml#l00036">openage::console::CHR_STRUCKOUT</a>, <a class="el" href="buf_8h_source.xhtml#l00035">openage::console::CHR_UNDERLINED</a>, <a class="el" href="buf_8h_source.xhtml#l00483">current_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00491">default_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00071">openage::console::buf_char::fgcol</a>, and <a class="el" href="buf_8h_source.xhtml#l00079">openage::console::buf_char::flags</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>.</p>
<div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a9320618afe1ebdf770518ab69cc72271_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aa6ae8933e3c2bbaafa8d81cf1c405406"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6ae8933e3c2bbaafa8d81cf1c405406">&#9670;&nbsp;</a></span>process_text_escape_sequence()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::process_text_escape_sequence </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>processes a text escape sequence that is one of OSC, DCS, APC or PM </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00633">633</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;                                       {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;    <span class="keywordtype">size_t</span> len = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>.size();</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;    <span class="keywordflow">switch</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[0]) {</div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;    <span class="keywordflow">case</span> <span class="charliteral">&#39;]&#39;</span>: <span class="comment">//OSC</span></div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keywordflow">switch</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[1]) {</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;0&#39;</span>:</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;        <span class="keywordflow">case</span> <span class="charliteral">&#39;2&#39;</span>:</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;            <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[2] == <span class="charliteral">&#39;;&#39;</span>) {</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;                <span class="comment">//set window title</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;                <span class="keywordtype">int</span> maxidx = len - 1;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;                <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[len - 1] == <span class="charliteral">&#39;\\&#39;</span>) {</div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;                    maxidx = len - 2;</div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;                }</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a51310590a608b1d2b601d3303893500d">title</a>.clear();</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 3; i &lt; maxidx; i++) {</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a51310590a608b1d2b601d3303893500d">title</a>.push_back(this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">escape_sequence</a>[i]);</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                }</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3e924482fd0e3524e44b20acc316fb19">escape_sequence_processed</a>();</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            }</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        }</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    }</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;    <span class="comment">//not implemented or invalid</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">escape_sequence_aborted</a>();</div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a51310590a608b1d2b601d3303893500d"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a51310590a608b1d2b601d3303893500d">openage::console::Buf::title</a></div><div class="ttdeci">std::vector&lt; int &gt; title</div><div class="ttdoc">window title</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00473">buf.h:473</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac59a20dcbdcb3aaffaedc8d9d21d0ec9"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac59a20dcbdcb3aaffaedc8d9d21d0ec9">openage::console::Buf::escape_sequence_aborted</a></div><div class="ttdeci">void escape_sequence_aborted()</div><div class="ttdoc">aborts the current escape sequence (e.g.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00609">buf.cpp:609</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a381b42f50364ebd1842d1e330bae5909"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a381b42f50364ebd1842d1e330bae5909">openage::console::Buf::escape_sequence</a></div><div class="ttdeci">std::vector&lt; int &gt; escape_sequence</div><div class="ttdoc">current escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00463">buf.h:463</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3e924482fd0e3524e44b20acc316fb19"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3e924482fd0e3524e44b20acc316fb19">openage::console::Buf::escape_sequence_processed</a></div><div class="ttdeci">void escape_sequence_processed()</div><div class="ttdoc">called when a escape sequence has been successfully processed, clears the sequence.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00616">buf.cpp:616</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00463">escape_sequence</a>, <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00616">escape_sequence_processed()</a>, and <a class="el" href="buf_8h_source.xhtml#l00473">title</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>.</p>
<div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_aa6ae8933e3c2bbaafa8d81cf1c405406_cgraph.svg" width="650" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_aa6ae8933e3c2bbaafa8d81cf1c405406_icgraph.svg" width="563" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a23267e4cb18a2921f14406e6307cbb95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23267e4cb18a2921f14406e6307cbb95">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>resets the buffer to its constructor defaults </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00052">52</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">cursorpos</a> = {0, 0};</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">saved_cursorpos</a> = {0, 0};</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">cursor_visible</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">cursor_special_lastcol</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">escaped</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#afd9db1c1324909e2a0a98cafa53d9cd4">bell</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">current_char_fmt</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a> = 0;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> = 0;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">//fully clear data and linedata</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">clear</a>({0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) -this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>}, {0, this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.y});</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a7d65c2c715635ae80a3362abc61abc22"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a7d65c2c715635ae80a3362abc61abc22">openage::console::Buf::saved_cursorpos</a></div><div class="ttdeci">coord::term saved_cursorpos</div><div class="ttdoc">saved cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00438">buf.h:438</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6b49e0178333e01a08fd61ca2006219"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6b49e0178333e01a08fd61ca2006219">openage::console::Buf::clear</a></div><div class="ttdeci">void clear(coord::term start, coord::term end, bool clear_end=false)</div><div class="ttdoc">clears the screen character and line buffers.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01078">buf.cpp:1078</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aabe7c503936227e510bb7be84bde2fa3"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aabe7c503936227e510bb7be84bde2fa3">openage::console::Buf::escaped</a></div><div class="ttdeci">bool escaped</div><div class="ttdoc">true if we are currently reading an escape sequence</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00458">buf.h:458</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aed68e2efd6dfa0dc6e4d2c6985965458"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">openage::console::Buf::scrollback_pos</a></div><div class="ttdeci">coord::term_t scrollback_pos</div><div class="ttdoc">how many lines the buffer is currently scrolled back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00518">buf.h:518</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a25719bddd1345d6b86e4373dfa474825"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a25719bddd1345d6b86e4373dfa474825">openage::console::Buf::cursorpos</a></div><div class="ttdeci">coord::term cursorpos</div><div class="ttdoc">cursor position</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00433">buf.h:433</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a324edefddfbe59f14ecd7841d2598c29"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">openage::console::Buf::scrollback_possible</a></div><div class="ttdeci">coord::term_t scrollback_possible</div><div class="ttdoc">how far it's currently possible to scroll back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00501">buf.h:501</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3fa3840a58379ede7a40f6382f95cc06"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">openage::console::Buf::default_char_fmt</a></div><div class="ttdeci">const buf_char default_char_fmt</div><div class="ttdoc">the default buf char, which will be used for filling new lines, or determining whether a line is empt...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00491">buf.h:491</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3b4aca71e4891bd71a0c57ca5fa58e86"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3b4aca71e4891bd71a0c57ca5fa58e86">openage::console::Buf::cursor_visible</a></div><div class="ttdeci">bool cursor_visible</div><div class="ttdoc">true if the cursor is visible</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00443">buf.h:443</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_afd9db1c1324909e2a0a98cafa53d9cd4"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#afd9db1c1324909e2a0a98cafa53d9cd4">openage::console::Buf::bell</a></div><div class="ttdeci">bool bell</div><div class="ttdoc">true if an bell ('') has been received, but not cleared</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00468">buf.h:468</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a53574615a1e2df75adad05bd27bf04d4"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a53574615a1e2df75adad05bd27bf04d4">openage::console::Buf::cursor_special_lastcol</a></div><div class="ttdeci">bool cursor_special_lastcol</div><div class="ttdoc">true if cursor is in the last column while whole line is filled this is very special.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00451">buf.h:451</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a14f2cdfd24154571850ed8ca005d3efc"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">openage::console::Buf::scrollback_lines</a></div><div class="ttdeci">coord::term_t scrollback_lines</div><div class="ttdoc">scrollback buffer height; scrollback buffer width is identical to screen buffer width.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00426">buf.h:426</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af6fb637bfa9764b03b7e5c732b1628a6"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af6fb637bfa9764b03b7e5c732b1628a6">openage::console::Buf::current_char_fmt</a></div><div class="ttdeci">buf_char current_char_fmt</div><div class="ttdoc">surrently selected formatting (colors, flags).</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00483">buf.h:483</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00468">bell</a>, <a class="el" href="buf_8cpp_source.xhtml#l01078">clear()</a>, <a class="el" href="buf_8h_source.xhtml#l00483">current_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00451">cursor_special_lastcol</a>, <a class="el" href="buf_8h_source.xhtml#l00443">cursor_visible</a>, <a class="el" href="buf_8h_source.xhtml#l00433">cursorpos</a>, <a class="el" href="buf_8h_source.xhtml#l00491">default_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00458">escaped</a>, <a class="el" href="buf_8h_source.xhtml#l00438">saved_cursorpos</a>, <a class="el" href="buf_8h_source.xhtml#l00426">scrollback_lines</a>, <a class="el" href="buf_8h_source.xhtml#l00518">scrollback_pos</a>, and <a class="el" href="buf_8h_source.xhtml#l00501">scrollback_possible</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00621">process_escaped_cp()</a>.</p>
<div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a23267e4cb18a2921f14406e6307cbb95_cgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a23267e4cb18a2921f14406e6307cbb95_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a7060ca85ba5a820b0c8e55870a9919c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7060ca85ba5a820b0c8e55870a9919c8">&#9670;&nbsp;</a></span>resize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::resize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a>&#160;</td>
          <td class="paramname"><em>new_dims</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>resizes the screen buffer </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000002">Todo:</a></b></dt><dd>copy line by line, considering the value stored in old_linedata_pos-&gt;auto_wrapped. start with the first line of the scrollback buffer, and stop with the last line of the screen buffer. do not copy empty characters, unless they are followed by filled characters in the same line, or a continued wrapped line. store in term_t variables the locations in the new buffer of the first/last line of the old scrollback buffer the first/last line of the old screen buffer these variables need to take into account events where upmost lines of a buffer are overwritten by new lines. commented out for now </dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000003">Todo:</a></b></dt><dd>depending on the variables defined in the previous section, decide which line is the first line of the screen buffer int new_chrbuf, and which parts of new_chrbuf must be cleared. </dd></dl>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00214">214</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                              {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    term old_dims = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">if</span> (new_dims.x &lt; this-&gt;min_width) {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        new_dims.x = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">min_width</a>;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    }</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">if</span> (new_dims.y &lt; 1) {</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        new_dims.y = 1;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="comment">// allocate new buffers</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    <span class="keywordtype">size_t</span> new_linedata_size = new_dims.y + this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    buf_line *new_linedata = <span class="keyword">new</span> buf_line[new_linedata_size];</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    buf_line *new_linedata_end = new_linedata + new_linedata_size;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordtype">size_t</span> new_chrdata_size = new_dims.x * new_linedata_size;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    buf_char *new_chrdata = <span class="keyword">new</span> buf_char[new_chrdata_size];</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    buf_char *new_chrdata_end = new_chrdata + new_chrdata_size;</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// working positions in new buffers: start at beginning of buffer</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    buf_line *new_linedata_pos = new_linedata;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    buf_char *new_chrdata_pos = new_chrdata;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="comment">// working positions in old buffers: start with oldest line of</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="comment">// scrollback buffer</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    buf_line *old_linedata_scrollbackstart = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">linedataptr</a>(-<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    buf_char *old_chrdata_scrollbackstart = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">chrdataptr</a>({0, (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) -<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">scrollback_lines</a>});</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    buf_line *old_linedata_pos = old_linedata_scrollbackstart;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    buf_char *old_chrdata_pos = old_chrdata_scrollbackstart;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="comment">// term_t scrollback_buf_start;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="comment">// term_t scrollback_buf_end;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="comment">// term_t screen_buf_start;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">// term_t screen_buf_end;</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="comment">// count the number of empty chars that we&#39;ve found in this line,</span></div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="comment">// and we may or may not still have to copy.</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordtype">size_t</span> empty_chars = 0;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">while</span> (old_linedata_pos != old_linedata_scrollbackstart) {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="comment">// should never be &gt;, always ==</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="comment">// also, both checks should always yield identical results</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="comment">// \todo do an ASSERT to assure this?)</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keywordflow">if</span> (old_linedata_pos &gt;= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">linedata_end</a>) {</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;            old_linedata_pos = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">linedata</a>;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        }</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">if</span> (old_chrdata_pos &gt;= this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">chrdata_end</a>) {</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            old_chrdata_pos = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">chrdata</a>;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="comment">// should never be &gt;, always ==</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="comment">// also, both checks should always yield identical results</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        <span class="comment">// \todo do an ASSERT to assure this?)</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        <span class="keywordflow">if</span> (new_linedata_pos &gt;= new_linedata_end) {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;            new_linedata_pos = new_linedata;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        }</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <span class="keywordflow">if</span> (new_chrdata_pos &gt;= new_chrdata_end) {</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;            new_chrdata_pos = new_chrdata;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        }</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        <span class="keywordflow">for</span> (<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a> x = 0; x &lt; old_dims.x; x++) {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">if</span> (*old_chrdata_pos == this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">default_char_fmt</a>) {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;                empty_chars++;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">while</span> (empty_chars &gt; 0) {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                    <span class="comment">// \todo write the empty chars</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                <span class="comment">// \todo write the char</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            }</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;            old_chrdata_pos++;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        }</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    }</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="comment">// \todo copy</span></div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a> = new_dims;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3fa3840a58379ede7a40f6382f95cc06"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3fa3840a58379ede7a40f6382f95cc06">openage::console::Buf::default_char_fmt</a></div><div class="ttdeci">const buf_char default_char_fmt</div><div class="ttdoc">the default buf char, which will be used for filling new lines, or determining whether a line is empt...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00491">buf.h:491</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_af591ad8b27d0d5528dd83f39589a377f"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#af591ad8b27d0d5528dd83f39589a377f">openage::console::Buf::chrdata</a></div><div class="ttdeci">buf_char * chrdata</div><div class="ttdoc">the complete (2-dimensional) terminal output buffer content</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00347">buf.h:347</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a4c48f84f2a29ae7472c54bce03fcbd65"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a4c48f84f2a29ae7472c54bce03fcbd65">openage::console::Buf::linedataptr</a></div><div class="ttdeci">buf_line * linedataptr(coord::term_t lineno)</div><div class="ttdoc">returns a valid pointer to the line info for the line designated by lineno</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01151">buf.cpp:1151</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ab0c8a14f50eaeb58afc86d20bbb01158"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ab0c8a14f50eaeb58afc86d20bbb01158">openage::console::Buf::linedata_end</a></div><div class="ttdeci">buf_line * linedata_end</div><div class="ttdoc">see chrdata_end</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00402">buf.h:402</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad524a3276262d17b952233d58d735fb2"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad524a3276262d17b952233d58d735fb2">openage::console::Buf::linedata</a></div><div class="ttdeci">buf_line * linedata</div><div class="ttdoc">similar to how data holds information about all characters, linedata holds information about all line...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00392">buf.h:392</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdoc">screen buffer dimensions (in characters)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ac33c1a30d0a22cfee3d3eeabd33a606d"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ac33c1a30d0a22cfee3d3eeabd33a606d">openage::console::Buf::min_width</a></div><div class="ttdeci">coord::term_t min_width</div><div class="ttdoc">minimum screen buffer width</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00415">buf.h:415</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a55229c780654c2e7445cb313fde990a7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a55229c780654c2e7445cb313fde990a7">openage::console::Buf::chrdata_end</a></div><div class="ttdeci">buf_char * chrdata_end</div><div class="ttdoc">stores the end of the region allocated for data, for performance and convenience reasons.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00366">buf.h:366</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a14f2cdfd24154571850ed8ca005d3efc"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a14f2cdfd24154571850ed8ca005d3efc">openage::console::Buf::scrollback_lines</a></div><div class="ttdeci">coord::term_t scrollback_lines</div><div class="ttdoc">scrollback buffer height; scrollback buffer width is identical to screen buffer width.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00426">buf.h:426</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ad54e6fb8e82e15a085cae30d3646d7b7"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ad54e6fb8e82e15a085cae30d3646d7b7">openage::console::Buf::chrdataptr</a></div><div class="ttdeci">buf_char * chrdataptr(coord::term pos)</div><div class="ttdoc">returns a valid pointer to the character info for the character designated by pos</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l01141">buf.cpp:1141</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00347">chrdata</a>, <a class="el" href="buf_8h_source.xhtml#l00366">chrdata_end</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8h_source.xhtml#l00491">default_char_fmt</a>, <a class="el" href="buf_8h_source.xhtml#l00420">dims</a>, <a class="el" href="buf_8h_source.xhtml#l00392">linedata</a>, <a class="el" href="buf_8h_source.xhtml#l00402">linedata_end</a>, <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>, <a class="el" href="buf_8h_source.xhtml#l00415">min_width</a>, and <a class="el" href="buf_8h_source.xhtml#l00426">scrollback_lines</a>.</p>
<div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a7060ca85ba5a820b0c8e55870a9919c8_cgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a06f58f1b06e5aae9664b1d07d8607048"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06f58f1b06e5aae9664b1d07d8607048">&#9670;&nbsp;</a></span>scroll()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::scroll </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a>&#160;</td>
          <td class="paramname"><em>lines</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>scrolls up or down by the given number of lines </p>
<p>lines amount of lines to scroll up - may be negative if the upper or lower limit is reached, this is capped. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00322">322</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;                             {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="keywordflow">if</span> (lines &lt; 0) {</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="comment">// scroll down</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        lines = -lines;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="keywordflow">if</span> ((<a class="code" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">term_t</a>) this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> &lt; lines) {</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> = 0;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> -= lines;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="comment">// scroll up</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> += lines;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> &gt; this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a>) {</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">scrollback_pos</a> = this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">scrollback_possible</a>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        }</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    }</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_aed68e2efd6dfa0dc6e4d2c6985965458"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#aed68e2efd6dfa0dc6e4d2c6985965458">openage::console::Buf::scrollback_pos</a></div><div class="ttdeci">coord::term_t scrollback_pos</div><div class="ttdoc">how many lines the buffer is currently scrolled back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00518">buf.h:518</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a324edefddfbe59f14ecd7841d2598c29"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a324edefddfbe59f14ecd7841d2598c29">openage::console::Buf::scrollback_possible</a></div><div class="ttdeci">coord::term_t scrollback_possible</div><div class="ttdoc">how far it's currently possible to scroll back.</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00501">buf.h:501</a></div></div>
<div class="ttc" id="namespaceopenage_1_1coord_xhtml_a0eec10a35243d1dcb3e4d1154a82127c"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">openage::coord::term_t</a></div><div class="ttdeci">int term_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00060">declarations.h:60</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="buf_8h_source.xhtml#l00518">scrollback_pos</a>, and <a class="el" href="buf_8h_source.xhtml#l00501">scrollback_possible</a>.</p>

</div>
</div>
<a id="a3db6d160e44c8db825a37c0cfbc143ea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3db6d160e44c8db825a37c0cfbc143ea">&#9670;&nbsp;</a></span>write() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::write </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>len</em> = <code>-1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>write a byte string to the buffer </p>
<p>the string is assumed to be UTF-8 encoded.</p>
<p>if len &gt;= 0, it describes the length of the string. otherwise, the string is assumed to be null-terminated. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00309">309</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;                                          {</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">if</span> (len &gt;= 0) {</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;        <span class="keywordflow">for</span> (; len &gt; 0; len--) {</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">write</a>(*c);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            c++;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        }</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordflow">for</span> (; *c; c++) {</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">write</a>(*c);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        }</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;}</div><div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3db6d160e44c8db825a37c0cfbc143ea"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">openage::console::Buf::write</a></div><div class="ttdeci">void write(const char *c, ssize_t len=-1)</div><div class="ttdoc">write a byte string to the buffer</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00309">buf.cpp:309</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="console_8cpp_source.xhtml#l00058">openage::console::Console::register_to_engine()</a>, <a class="el" href="console_2tests_8cpp_source.xhtml#l00039">openage::console::tests::render()</a>, and <a class="el" href="console_8cpp_source.xhtml#l00119">openage::console::Console::write()</a>.</p>
<div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a3db6d160e44c8db825a37c0cfbc143ea_icgraph.svg" width="100%" height="406"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a7f70c41ed91a5283fd2dd337b7493eaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f70c41ed91a5283fd2dd337b7493eaa">&#9670;&nbsp;</a></span>write() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::console::Buf::write </td>
          <td>(</td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>write a single byte to the buffer. </p>
<p>assumed to be UTF-8 encoded. </p>

<p class="definition">Definition at line <a class="el" href="buf_8cpp_source.xhtml#l00382">382</a> of file <a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;                      {</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ae41adb957a289c65c86f5e79702399de">streamdecoder</a>.<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ad74a496758770d9f1be27e9b3fec4dd0">feed</a>(c)) {</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;        <span class="comment">// an error has been detected in the input stream</span></div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf">process_codepoint</a>(0xFFFD);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    };</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ae41adb957a289c65c86f5e79702399de">streamdecoder</a>.<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> == 0 &amp;&amp; this-&gt;streamdecoder.out &gt;= 0) {</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf">process_codepoint</a>(<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#ae41adb957a289c65c86f5e79702399de">streamdecoder</a>.<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a>);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    }</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_ac5e38c7efcc1e8d4b7f7668da156ba4b"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">openage::util::utf8_decoder::out</a></div><div class="ttdeci">codepoint_t out</div><div class="ttdoc">current result character code point; overwritten on feed().</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8h_source.xhtml#l00028">unicode.h:28</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_a55d64109af786e729e84a4da7d275c19"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">openage::util::utf8_decoder::remaining</a></div><div class="ttdeci">unsigned remaining</div><div class="ttdoc">number of remaining characters</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8h_source.xhtml#l00033">unicode.h:33</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_ad74a496758770d9f1be27e9b3fec4dd0"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#ad74a496758770d9f1be27e9b3fec4dd0">openage::util::utf8_decoder::feed</a></div><div class="ttdeci">bool feed(char c)</div><div class="ttdoc">feeds one char to the decoder state machine returns false on decoding error, true else</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00019">unicode.cpp:19</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_adcdc21533ab920bd72f92f27333716bf"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#adcdc21533ab920bd72f92f27333716bf">openage::console::Buf::process_codepoint</a></div><div class="ttdeci">void process_codepoint(int cp)</div><div class="ttdoc">processes one unicode codepoint internally called by write(char) after feeding the char into streamde...</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00416">buf.cpp:416</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_ae41adb957a289c65c86f5e79702399de"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#ae41adb957a289c65c86f5e79702399de">openage::console::Buf::streamdecoder</a></div><div class="ttdeci">util::utf8_decoder streamdecoder</div><div class="ttdoc">utf-8 state-machine that reads input bytes and outputs unicode codepoints</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00188">buf.h:188</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unicode_8cpp_source.xhtml#l00019">openage::util::utf8_decoder::feed()</a>, <a class="el" href="unicode_8h_source.xhtml#l00028">openage::util::utf8_decoder::out</a>, <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>, <a class="el" href="unicode_8h_source.xhtml#l00033">openage::util::utf8_decoder::remaining</a>, and <a class="el" href="buf_8h_source.xhtml#l00188">streamdecoder</a>.</p>
<div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1console_1_1_buf_a7f70c41ed91a5283fd2dd337b7493eaa_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a94f6263ebbf6ccfef936eb5c410c2ada"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94f6263ebbf6ccfef936eb5c410c2ada">&#9670;&nbsp;</a></span>NewBuf</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classopenage_1_1console_1_1_new_buf.xhtml">NewBuf</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00122">122</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="afd9db1c1324909e2a0a98cafa53d9cd4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd9db1c1324909e2a0a98cafa53d9cd4">&#9670;&nbsp;</a></span>bell</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::console::Buf::bell</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>true if an bell ('<em></em>') has been received, but not cleared </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00468">468</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

</div>
</div>
<a id="af591ad8b27d0d5528dd83f39589a377f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af591ad8b27d0d5528dd83f39589a377f">&#9670;&nbsp;</a></span>chrdata</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>* openage::console::Buf::chrdata</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>the complete (2-dimensional) terminal output buffer content </p>
<p>contains the screen buffer (where the cursor may move), and the scrollback buffer (which is invisible while not scrolled back)</p>
<p>thus, its size is always screen buffer size + scrollback buffer size (dims.x * dims.y + dims.x * scrollback_lines)</p>
<p>on resize, this buffer is completely re-created.</p>
<p>the first entry of data is not neccesarily the first character of the screen or scrollback buffer; see screen_chrdata. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00347">347</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01111">chrdata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00046">~Buf()</a>.</p>

</div>
</div>
<a id="a55229c780654c2e7445cb313fde990a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55229c780654c2e7445cb313fde990a7">&#9670;&nbsp;</a></span>chrdata_end</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>* openage::console::Buf::chrdata_end</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>stores the end of the region allocated for data, for performance and convenience reasons. </p>
<p>points to the first memory region outside the data buffer.</p>
<p>always has the value data + chrdata_size </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00366">366</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01111">chrdata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>

</div>
</div>
<a id="ad3b09ac6afcafdabc8ac7cad2bbb1991"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3b09ac6afcafdabc8ac7cad2bbb1991">&#9670;&nbsp;</a></span>chrdata_size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t openage::console::Buf::chrdata_size</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>stores the (array) size of data, for performance and convenience reasons. </p>
<p>always has the value dims.x * (dims.y + scrollback_lines) </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00356">356</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>.</p>

</div>
</div>
<a id="af6fb637bfa9764b03b7e5c732b1628a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6fb637bfa9764b03b7e5c732b1628a6">&#9670;&nbsp;</a></span>current_char_fmt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> openage::console::Buf::current_char_fmt</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>surrently selected formatting (colors, flags). </p>
<p>all printed chars, as well as all buffer clearing, will use this until it is changed by an SGR escape sequence.</p>
<p>the codepoint is the codepoint used for filling empty chars (e.g. 0x20 ('space')) </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00483">483</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l01111">chrdata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00919">process_sgr_code()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

</div>
</div>
<a id="a53574615a1e2df75adad05bd27bf04d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a53574615a1e2df75adad05bd27bf04d4">&#9670;&nbsp;</a></span>cursor_special_lastcol</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::console::Buf::cursor_special_lastcol</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>true if cursor is in the last column while whole line is filled this is very special. </p>
<p>this allows CR after fully-filled lines to return to the same line, instead of being in the next line. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00451">451</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

</div>
</div>
<a id="a3b4aca71e4891bd71a0c57ca5fa58e86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3b4aca71e4891bd71a0c57ca5fa58e86">&#9670;&nbsp;</a></span>cursor_visible</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::console::Buf::cursor_visible</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>true if the cursor is visible </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00443">443</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<a id="a25719bddd1345d6b86e4373dfa474825"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25719bddd1345d6b86e4373dfa474825">&#9670;&nbsp;</a></span>cursorpos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> openage::console::Buf::cursorpos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>cursor position </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00433">433</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<a id="a3fa3840a58379ede7a40f6382f95cc06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fa3840a58379ede7a40f6382f95cc06">&#9670;&nbsp;</a></span>default_char_fmt</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a> openage::console::Buf::default_char_fmt</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>the default buf char, which will be used for filling new lines, or determining whether a line is empty. </p>
<p>should have space (0x20) as its char, and the desired default values for fgcol and bgcol. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00491">491</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00919">process_sgr_code()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>

</div>
</div>
<a id="a06e75c551d4009e9976cd43dab18fb30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a06e75c551d4009e9976cd43dab18fb30">&#9670;&nbsp;</a></span>dims</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> openage::console::Buf::dims</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>screen buffer dimensions (in characters) </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00420">420</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00014">Buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01162">get_dims()</a>, <a class="el" href="console_2tests_8cpp_source.xhtml#l00055">openage::console::tests::interactive()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00393">pop_last_char()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>, <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<a id="a381b42f50364ebd1842d1e330bae5909"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a381b42f50364ebd1842d1e330bae5909">&#9670;&nbsp;</a></span>escape_sequence</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; openage::console::Buf::escape_sequence</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>current escape sequence </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00463">463</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00616">escape_sequence_processed()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00633">process_text_escape_sequence()</a>.</p>

</div>
</div>
<a id="aabe7c503936227e510bb7be84bde2fa3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabe7c503936227e510bb7be84bde2fa3">&#9670;&nbsp;</a></span>escaped</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::console::Buf::escaped</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>true if we are currently reading an escape sequence </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00458">458</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00609">escape_sequence_aborted()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00616">escape_sequence_processed()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00479">print_codepoint()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00416">process_codepoint()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

</div>
</div>
<a id="ad524a3276262d17b952233d58d735fb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad524a3276262d17b952233d58d735fb2">&#9670;&nbsp;</a></span>linedata</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a>* openage::console::Buf::linedata</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>similar to how data holds information about all characters, linedata holds information about all lines. </p>
<p>currently, the only held information is whether the line has been started by wrapping an existing line (and thus is not a 'real' new line) </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00392">392</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01126">linedata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00046">~Buf()</a>.</p>

</div>
</div>
<a id="ab0c8a14f50eaeb58afc86d20bbb01158"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0c8a14f50eaeb58afc86d20bbb01158">&#9670;&nbsp;</a></span>linedata_end</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a>* openage::console::Buf::linedata_end</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>see chrdata_end </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00402">402</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01126">linedata_clear()</a>, <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>

</div>
</div>
<a id="a0980d008e8fc8a7fc02f7bc51b253dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0980d008e8fc8a7fc02f7bc51b253dc5">&#9670;&nbsp;</a></span>linedata_size</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t openage::console::Buf::linedata_size</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>see chrdata_size </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00397">397</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00133">openage::console::NewBuf::apply_to_buf()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>.</p>

</div>
</div>
<a id="ac33c1a30d0a22cfee3d3eeabd33a606d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac33c1a30d0a22cfee3d3eeabd33a606d">&#9670;&nbsp;</a></span>min_width</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> openage::console::Buf::min_width</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>minimum screen buffer width </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00415">415</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>

</div>
</div>
<a id="a7d65c2c715635ae80a3362abc61abc22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d65c2c715635ae80a3362abc61abc22">&#9670;&nbsp;</a></span>saved_cursorpos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1coord_1_1term.xhtml">coord::term</a> openage::console::Buf::saved_cursorpos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>saved cursor position </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00438">438</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00661">process_csi_escape_sequence()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>.</p>

</div>
</div>
<a id="aae04bf7f71d8d61153a63c8016756bd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae04bf7f71d8d61153a63c8016756bd0">&#9670;&nbsp;</a></span>screen_chrdata</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__char.xhtml">buf_char</a>* openage::console::Buf::screen_chrdata</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>points to the first character that belongs to the screen buffer, inside the data buffer. </p>
<p>this pointer is changed when the terminal buffer advances one line.</p>
<p>note that screen_chrdata may NOT be directly indexed, as *screen_chrdata[k] might be &gt;= chrdata_end. in this case, the correct memory location will be *screen_chrdata[k - chrdata_size].</p>
<p>*screen_chrdata[0] always is the correct memory location of the screen buffer top left corner.</p>
<p>*screen_chrdata[dims.x * dims.y] is the memory location of the scrollback buffer top left corner, but it might be neccesary to subtract chrdata_size to get an actually valid memory location. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00384">384</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l01141">chrdataptr()</a>.</p>

</div>
</div>
<a id="a75cdec48d09432a80bc7e32182a4775a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75cdec48d09432a80bc7e32182a4775a">&#9670;&nbsp;</a></span>screen_linedata</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1console_1_1buf__line.xhtml">buf_line</a>* openage::console::Buf::screen_linedata</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>as an analog to screen_chrdata, this points to the entry in linedata that holds metadata about the top line of the screen buffer. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00408">408</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l01151">linedataptr()</a>.</p>

</div>
</div>
<a id="a14f2cdfd24154571850ed8ca005d3efc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14f2cdfd24154571850ed8ca005d3efc">&#9670;&nbsp;</a></span>scrollback_lines</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> openage::console::Buf::scrollback_lines</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>scrollback buffer height; scrollback buffer width is identical to screen buffer width. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00426">426</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, and <a class="el" href="buf_8cpp_source.xhtml#l00214">resize()</a>.</p>

</div>
</div>
<a id="aed68e2efd6dfa0dc6e4d2c6985965458"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed68e2efd6dfa0dc6e4d2c6985965458">&#9670;&nbsp;</a></span>scrollback_pos</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> openage::console::Buf::scrollback_pos</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>how many lines the buffer is currently scrolled back. </p>
<p>if 0, the screen buffer is wholly rendered. if the terminal is being advanced, this stays 0. this makes the terminal follow newly printed text. if &gt; 0, the bottom lines of the screen buffer are not rendered, and the bottom lines of the scrollback buffer are rendered instead. if screen buffer advances, this is increased accordingly (unless it would become &gt;= scrollback_lines). this causes the currently scrolled-to position to remain scrolled-to even when new text is printed.</p>
<p>must be &gt;= 0 and &lt;= scrollback_possible. </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00518">518</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00322">scroll()</a>, <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<a id="a324edefddfbe59f14ecd7841d2598c29"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a324edefddfbe59f14ecd7841d2598c29">&#9670;&nbsp;</a></span>scrollback_possible</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1coord.xhtml#a0eec10a35243d1dcb3e4d1154a82127c">coord::term_t</a> openage::console::Buf::scrollback_possible</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>how far it's currently possible to scroll back. </p>
<p>this value steadily increases when the buffer advances.</p>
<p>if this is 0, all lines outside the screen buffer are empty.</p>
<p>must be &gt;= 0 and &lt;= scrollback_lines </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00501">501</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00341">advance()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00052">reset()</a>, <a class="el" href="buf_8cpp_source.xhtml#l00322">scroll()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<a id="ae41adb957a289c65c86f5e79702399de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae41adb957a289c65c86f5e79702399de">&#9670;&nbsp;</a></span>streamdecoder</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1utf8__decoder.xhtml">util::utf8_decoder</a> openage::console::Buf::streamdecoder</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>utf-8 state-machine that reads input bytes and outputs unicode codepoints </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00188">188</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00382">write()</a>.</p>

</div>
</div>
<a id="a51310590a608b1d2b601d3303893500d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a51310590a608b1d2b601d3303893500d">&#9670;&nbsp;</a></span>title</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;int&gt; openage::console::Buf::title</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>window title </p>

<p class="definition">Definition at line <a class="el" href="buf_8h_source.xhtml#l00473">473</a> of file <a class="el" href="buf_8h_source.xhtml">buf.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="buf_8cpp_source.xhtml#l00633">process_text_escape_sequence()</a>, and <a class="el" href="draw_8cpp_source.xhtml#l00091">openage::console::draw::to_terminal()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/console/<a class="el" href="buf_8h_source.xhtml">buf.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/console/<a class="el" href="buf_8cpp_source.xhtml">buf.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1console.xhtml">console</a></li><li class="navelem"><a class="el" href="classopenage_1_1console_1_1_buf.xhtml">Buf</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
