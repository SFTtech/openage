<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::log Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1log.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">openage::log Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceopenage_1_1log_1_1tests"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log_1_1tests.xhtml">tests</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_cpp_handler.xhtml">CppHandler</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1log_1_1_cpp_handler.xhtml" title="CppHandler calls into the CPP logging system if the library has been loaded.">CppHandler</a> calls into the CPP logging system if the library has been loaded.  <a href="classopenage_1_1log_1_1_cpp_handler.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_file_sink.xhtml">FileSink</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1log_1_1level.xhtml">level</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available logging levels.  <a href="structopenage_1_1log_1_1level.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1log_1_1level__value.xhtml">level_value</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Data associated with a log level.  <a href="structopenage_1_1log_1_1level__value.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_sink.xhtml">LogSink</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base for classes that - in one way or an other - print log messages.  <a href="classopenage_1_1log_1_1_log_sink.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_sink_list.xhtml">LogSinkList</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Holds a list of all registered log sinks; Maintained from the <a class="el" href="classopenage_1_1log_1_1_log_sink.xhtml" title="Abstract base for classes that - in one way or an other - print log messages.">LogSink</a> constructors/destructors.  <a href="classopenage_1_1log_1_1_log_sink_list.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml">LogSource</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Any class that wants to provide .<a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df" title="Logs a message (get one via MSG(level)).">log()</a> shall inherit from this.  <a href="classopenage_1_1log_1_1_log_source.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A complete log/exception message, containing a text message and metadata.  <a href="structopenage_1_1log_1_1message.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_message_builder.xhtml">MessageBuilder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wrapper around a log message that allows appending to the message with operator &lt;&lt;.  <a href="classopenage_1_1log_1_1_message_builder.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_named_log_source.xhtml">NamedLogSource</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple pure log source class with a string name.  <a href="classopenage_1_1log_1_1_named_log_source.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_std_out_sink.xhtml">StdOutSink</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simple logsink that prints messages to stdout (via std::cout).  <a href="classopenage_1_1log_1_1_std_out_sink.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a0eff614e7d6e818746700ed9d29e583f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log</a> (const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;msg)</td></tr>
<tr class="memdesc:a0eff614e7d6e818746700ed9d29e583f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience method that makes use of the 'general' <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml" title="Any class that wants to provide .log() shall inherit from this.">LogSource</a>.  <a href="#a0eff614e7d6e818746700ed9d29e583f">More...</a><br /></td></tr>
<tr class="separator:a0eff614e7d6e818746700ed9d29e583f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8660073c35f9900e8c1169f2899b7d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#ac8660073c35f9900e8c1169f2899b7d2">set_level</a> (<a class="el" href="structopenage_1_1log_1_1level.xhtml">level</a> lvl)</td></tr>
<tr class="memdesc:ac8660073c35f9900e8c1169f2899b7d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the log level of the global stdout sink.  <a href="#ac8660073c35f9900e8c1169f2899b7d2">More...</a><br /></td></tr>
<tr class="separator:ac8660073c35f9900e8c1169f2899b7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4bb73b8b2616017522132a64c52c756"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#ae4bb73b8b2616017522132a64c52c756">operator&lt;&lt;</a> (std::ostream &amp;os, const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;msg)</td></tr>
<tr class="memdesc:ae4bb73b8b2616017522132a64c52c756"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints message to a stream (with color codes and everything!)  <a href="#ae4bb73b8b2616017522132a64c52c756">More...</a><br /></td></tr>
<tr class="separator:ae4bb73b8b2616017522132a64c52c756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fbb0c225d01e222648ec28a43507188"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1log_1_1_named_log_source.xhtml">NamedLogSource</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a3fbb0c225d01e222648ec28a43507188">general_source</a> ()</td></tr>
<tr class="memdesc:a3fbb0c225d01e222648ec28a43507188"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to a general named log source, for use by <a class="el" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f" title="Convenience method that makes use of the &#39;general&#39; LogSource.">log::log()</a>.  <a href="#a3fbb0c225d01e222648ec28a43507188">More...</a><br /></td></tr>
<tr class="separator:a3fbb0c225d01e222648ec28a43507188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2885be9c3a09b9ff7ee8764b2e5f39"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1log_1_1_std_out_sink.xhtml">StdOutSink</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a3d2885be9c3a09b9ff7ee8764b2e5f39">global_stdoutsink</a> ()</td></tr>
<tr class="memdesc:a3d2885be9c3a09b9ff7ee8764b2e5f39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the global stdout logsink object; Initializes the object if needed.  <a href="#a3d2885be9c3a09b9ff7ee8764b2e5f39">More...</a><br /></td></tr>
<tr class="separator:a3d2885be9c3a09b9ff7ee8764b2e5f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a9ba75ed4a75173bfe7c3a77345a7d"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a37a9ba75ed4a75173bfe7c3a77345a7d">level_colorcode</a> (lvl)</td></tr>
<tr class="memdesc:a37a9ba75ed4a75173bfe7c3a77345a7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the same color codes as in <a class="el" href="level_8cpp.xhtml">libopenage/log/level.cpp</a>.  <a href="#a37a9ba75ed4a75173bfe7c3a77345a7d">More...</a><br /></td></tr>
<tr class="separator:a37a9ba75ed4a75173bfe7c3a77345a7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cf607c879d89be419d5a68dedc211ab"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a7cf607c879d89be419d5a68dedc211ab">_spam</a> (self, msg, *args, **kwargs)</td></tr>
<tr class="memdesc:a7cf607c879d89be419d5a68dedc211ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Log 'msg % args' with severity 'SPAM'.  <a href="#a7cf607c879d89be419d5a68dedc211ab">More...</a><br /></td></tr>
<tr class="separator:a7cf607c879d89be419d5a68dedc211ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a701e516b9632ad3b4ccccf28d12fbc48"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a701e516b9632ad3b4ccccf28d12fbc48">setup_logging</a> ()</td></tr>
<tr class="memdesc:a701e516b9632ad3b4ccccf28d12fbc48"><td class="mdescLeft">&#160;</td><td class="mdescRight">setup the logging system  <a href="#a701e516b9632ad3b4ccccf28d12fbc48">More...</a><br /></td></tr>
<tr class="separator:a701e516b9632ad3b4ccccf28d12fbc48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78bab1bc2016bebde4ef3cde06936702"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">set_loglevel</a> (<a class="el" href="structopenage_1_1log_1_1level.xhtml">level</a>)</td></tr>
<tr class="memdesc:a78bab1bc2016bebde4ef3cde06936702"><td class="mdescLeft">&#160;</td><td class="mdescRight">sets the log level  <a href="#a78bab1bc2016bebde4ef3cde06936702">More...</a><br /></td></tr>
<tr class="separator:a78bab1bc2016bebde4ef3cde06936702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b8905069877587c7f8624a11d524bbc"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">get_loglevel</a> ()</td></tr>
<tr class="memdesc:a2b8905069877587c7f8624a11d524bbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">gets the log level  <a href="#a2b8905069877587c7f8624a11d524bbc">More...</a><br /></td></tr>
<tr class="separator:a2b8905069877587c7f8624a11d524bbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a173fdf777356d529586708570ee36be4"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a173fdf777356d529586708570ee36be4">spam</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:a173fdf777356d529586708570ee36be4"><td class="mdescLeft">&#160;</td><td class="mdescRight">spam message  <a href="#a173fdf777356d529586708570ee36be4">More...</a><br /></td></tr>
<tr class="separator:a173fdf777356d529586708570ee36be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad3d76b2466dbc4f81552935f2d84faa"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:aad3d76b2466dbc4f81552935f2d84faa"><td class="mdescLeft">&#160;</td><td class="mdescRight">debug message  <a href="#aad3d76b2466dbc4f81552935f2d84faa">More...</a><br /></td></tr>
<tr class="separator:aad3d76b2466dbc4f81552935f2d84faa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f1815b698faf5786fc5e20bcac7704b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:a3f1815b698faf5786fc5e20bcac7704b"><td class="mdescLeft">&#160;</td><td class="mdescRight">info message  <a href="#a3f1815b698faf5786fc5e20bcac7704b">More...</a><br /></td></tr>
<tr class="separator:a3f1815b698faf5786fc5e20bcac7704b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ca418e1b1fcf210ff91cd25dc8e6a36"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:a7ca418e1b1fcf210ff91cd25dc8e6a36"><td class="mdescLeft">&#160;</td><td class="mdescRight">warning message  <a href="#a7ca418e1b1fcf210ff91cd25dc8e6a36">More...</a><br /></td></tr>
<tr class="separator:a7ca418e1b1fcf210ff91cd25dc8e6a36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a325b0901ddb3f2af36f93781b7dd9744"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:a325b0901ddb3f2af36f93781b7dd9744"><td class="mdescLeft">&#160;</td><td class="mdescRight">error message  <a href="#a325b0901ddb3f2af36f93781b7dd9744">More...</a><br /></td></tr>
<tr class="separator:a325b0901ddb3f2af36f93781b7dd9744"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8a0cc74a7c0fa3c022264b99797dfbf"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#ae8a0cc74a7c0fa3c022264b99797dfbf">crit</a> (msg, *args, **kwargs)</td></tr>
<tr class="memdesc:ae8a0cc74a7c0fa3c022264b99797dfbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">critical error message  <a href="#ae8a0cc74a7c0fa3c022264b99797dfbf">More...</a><br /></td></tr>
<tr class="separator:ae8a0cc74a7c0fa3c022264b99797dfbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10c8ba63b955b0c97dc3b3323f73a4b2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a10c8ba63b955b0c97dc3b3323f73a4b2">verbosity_to_level</a> (verbosity)</td></tr>
<tr class="memdesc:a10c8ba63b955b0c97dc3b3323f73a4b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Translates an integer verbosity to a log level.  <a href="#a10c8ba63b955b0c97dc3b3323f73a4b2">More...</a><br /></td></tr>
<tr class="separator:a10c8ba63b955b0c97dc3b3323f73a4b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8384c2e3977d17adc4ceac0e8aacc5d3"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">env_verbosity</a> ()</td></tr>
<tr class="memdesc:a8384c2e3977d17adc4ceac0e8aacc5d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to retrieve verbosity from the VERBOSITY environment variable.  <a href="#a8384c2e3977d17adc4ceac0e8aacc5d3">More...</a><br /></td></tr>
<tr class="separator:a8384c2e3977d17adc4ceac0e8aacc5d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a4a8298d6cabc1d52a88e4a967b376892"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="structopenage_1_1log_1_1level__value.xhtml">level_value</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a4a8298d6cabc1d52a88e4a967b376892">undefined</a> {{&quot;UNDEFINED&quot;, 999}, &quot;5&quot;}</td></tr>
<tr class="separator:a4a8298d6cabc1d52a88e4a967b376892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba6ceacbd33d6828bd46edb55569ab14"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#aba6ceacbd33d6828bd46edb55569ab14">PYTHON_TO_CPP_LOG_LEVEL</a> = {}</td></tr>
<tr class="separator:aba6ceacbd33d6828bd46edb55569ab14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46a996a4054d7e95ae33b1df746c4ec3"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a46a996a4054d7e95ae33b1df746c4ec3">CPP_HANDLER</a> = <a class="el" href="classopenage_1_1log_1_1_cpp_handler.xhtml">CppHandler</a>()</td></tr>
<tr class="separator:a46a996a4054d7e95ae33b1df746c4ec3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4873e15c7fe197151a68a153904c2461"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a4873e15c7fe197151a68a153904c2461">SPAM</a> = 5</td></tr>
<tr class="separator:a4873e15c7fe197151a68a153904c2461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96bf92c0c16156a44e3428bc2023dee2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1log.xhtml#a96bf92c0c16156a44e3428bc2023dee2">ENV_VERBOSITY</a> = <a class="el" href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">env_verbosity</a>()</td></tr>
<tr class="separator:a96bf92c0c16156a44e3428bc2023dee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a7cf607c879d89be419d5a68dedc211ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cf607c879d89be419d5a68dedc211ab">&#9670;&nbsp;</a></span>_spam()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log._spam </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Log 'msg % args' with severity 'SPAM'. </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00070">70</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a701e516b9632ad3b4ccccf28d12fbc48">setup_logging</a>():</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; setup the logging system &quot;&quot;&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    logging.Logger.spam = _spam</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a701e516b9632ad3b4ccccf28d12fbc48"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a701e516b9632ad3b4ccccf28d12fbc48">openage::log.setup_logging</a></div><div class="ttdeci">def setup_logging()</div><div class="ttdoc">setup the logging system</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00076">__init__.py:76</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ae8a0cc74a7c0fa3c022264b99797dfbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8a0cc74a7c0fa3c022264b99797dfbf">&#9670;&nbsp;</a></span>crit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.crit </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>critical error message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00129">129</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a10c8ba63b955b0c97dc3b3323f73a4b2">verbosity_to_level</a>(verbosity):</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">    Translates an integer verbosity to a log level.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a10c8ba63b955b0c97dc3b3323f73a4b2"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a10c8ba63b955b0c97dc3b3323f73a4b2">openage::log.verbosity_to_level</a></div><div class="ttdeci">def verbosity_to_level(verbosity)</div><div class="ttdoc">Translates an integer verbosity to a log level.</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00136">__init__.py:136</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="demo_8py_source.xhtml#l00016">openage.convert.opus.demo.convert()</a>, <a class="el" href="test_8cpp_source.xhtml#l00041">openage::log::tests.demo()</a>, and <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui.gui_log()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_ae8a0cc74a7c0fa3c022264b99797dfbf_icgraph.svg" width="612" height="155"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="aad3d76b2466dbc4f81552935f2d84faa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad3d76b2466dbc4f81552935f2d84faa">&#9670;&nbsp;</a></span>dbg()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.dbg </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>debug message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00109">109</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; info message &quot;&quot;&quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    logging.info(msg, *args, **kwargs)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a3f1815b698faf5786fc5e20bcac7704b"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">openage::log.info</a></div><div class="ttdeci">def info(msg, *args, **kwargs)</div><div class="ttdoc">info message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00114">__init__.py:114</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="cab_8py_source.xhtml#l00229">openage.cabextract.cab.CABFile.__init__()</a>, <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path.a_star()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00082">openage::Terrain.attach_chunk()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00436">openage.convert.main.conversion_required()</a>, <a class="el" href="driver_8py_source.xhtml#l00144">openage.convert.driver.convert_metadata()</a>, <a class="el" href="generator_8cpp_source.xhtml#l00153">openage::Generator.create_regions()</a>, <a class="el" href="test_8cpp_source.xhtml#l00041">openage::log::tests.demo()</a>, <a class="el" href="windowvk_8cpp_source.xhtml#l00039">openage::renderer::vulkan.find_capabilities()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01227">openage::AttackAction.fire_projectile()</a>, <a class="el" href="colortable_8py_source.xhtml#l00086">openage.convert.colortable.ColorTable.gen_image()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00136">openage::GameSpec.get_graphic_data()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00125">openage::GameSpec.get_sound()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00091">openage::GameSpec.get_texture()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00115">openage::GameSpec.get_unit_texture()</a>, <a class="el" href="context_8cpp_source.xhtml#l00086">openage::renderer::opengl::GlContext.GlContext()</a>, <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui.gui_log()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer.initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer.initialise()</a>, <a class="el" href="civilisation_8cpp_source.xhtml#l00047">openage::Civilisation.initialise_unit_types()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00140">openage::GarrisonAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00161">openage::UngarrisonAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00184">openage::TrainAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00230">openage::BuildAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00257">openage::GatherAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00292">openage::AttackAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00320">openage::RepairAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00348">openage::HealAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00368">openage::PatrolAbility.invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00393">openage::ConvertAbility.invoke()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00102">openage::gameio.load()</a>, <a class="el" href="texture_8cpp_source.xhtml#l00061">openage::Texture.load()</a>, <a class="el" href="empiresdat_8py_source.xhtml#l00382">openage.convert.gamedata.empiresdat.load_gamespec()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00329">openage::GameSpec.load_terrain()</a>, <a class="el" href="logsink_8cpp_source.xhtml#l00013">openage::log::LogSink.LogSink()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01155">openage::GatherAction.nearest_dropsite()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00932">openage::BuildAction.on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01135">openage::GatherAction.on_completion_in_range()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00102">openage::ActionMode.on_game_control_set()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00547">openage::EditorMode.on_game_control_set()</a>, <a class="el" href="engine_8cpp_source.xhtml#l00242">openage::Engine.on_resize()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00294">openage::ObjectProducer.place()</a>, <a class="el" href="unit__type_8cpp_source.xhtml#l00138">openage::NyanType.place()</a>, <a class="el" href="cab_8py_source.xhtml#l00356">openage.cabextract.cab.CABFile.read_file_headers()</a>, <a class="el" href="cab_8py_source.xhtml#l00300">openage.cabextract.cab.CABFile.read_folder_headers()</a>, <a class="el" href="hdlanguagefile_8py_source.xhtml#l00101">openage.convert.hdlanguagefile.read_hd_language_file()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00070">openage::gameio.save()</a>, <a class="el" href="blendomatic_8py_source.xhtml#l00269">openage.convert.blendomatic.Blendomatic.save()</a>, <a class="el" href="setup_8py_source.xhtml#l00030">openage.cppinterface.setup.setup()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00382">openage.convert.main.source_dir_proposals()</a>, <a class="el" href="texture__data_8cpp_source.xhtml#l00056">openage::renderer::resources::Texture2dData.Texture2dData()</a>, <a class="el" href="opengl_2window_8cpp_source.xhtml#l00058">openage::renderer::opengl::GlWindow.update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00591">openage::MoveAction.update()</a>, <a class="el" href="windowvk_8cpp_source.xhtml#l00022">openage::renderer::vulkan.vlk_debug_cb()</a>, <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">openage::renderer::vulkan::VlkGraphicsDevice.VlkGraphicsDevice()</a>, <a class="el" href="vulkan_2shader__program_8h_source.xhtml#l00032">openage::renderer::vulkan::VlkShaderProgram.VlkShaderProgram()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00045">openage::Terrain.~Terrain()</a>, and <a class="el" href="terrain__object_8cpp_source.xhtml#l00032">openage::TerrainObject.~TerrainObject()</a>.</p>

</div>
</div>
<a id="a8384c2e3977d17adc4ceac0e8aacc5d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8384c2e3977d17adc4ceac0e8aacc5d3">&#9670;&nbsp;</a></span>env_verbosity()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.env_verbosity </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tries to retrieve verbosity from the VERBOSITY environment variable. </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00152">152</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">return</span> logging.WARNING</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> val.lower() <span class="keywordflow">in</span> {<span class="stringliteral">&#39;max&#39;</span>}:</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">return</span> logging.CRITICAL</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">return</span> int(val)</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">except</span> ValueError:</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">return</span> logging.INFO</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;ENV_VERBOSITY = <a class="code" href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">env_verbosity</a>()</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a8384c2e3977d17adc4ceac0e8aacc5d3"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">openage::log.env_verbosity</a></div><div class="ttdeci">def env_verbosity()</div><div class="ttdoc">Tries to retrieve verbosity from the VERBOSITY environment variable.</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00152">__init__.py:152</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a325b0901ddb3f2af36f93781b7dd9744"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a325b0901ddb3f2af36f93781b7dd9744">&#9670;&nbsp;</a></span>err()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.err </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>error message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00124">124</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#ae8a0cc74a7c0fa3c022264b99797dfbf">crit</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; critical error message &quot;&quot;&quot;</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    logging.critical(msg, *args, **kwargs)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_ae8a0cc74a7c0fa3c022264b99797dfbf"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#ae8a0cc74a7c0fa3c022264b99797dfbf">openage::log.crit</a></div><div class="ttdeci">def crit(msg, *args, **kwargs)</div><div class="ttdoc">critical error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00129">__init__.py:129</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="setup_8cpp_source.xhtml#l00044">openage::pyinterface.add_py_if_component()</a>, <a class="el" href="mesh__data_8cpp_source.xhtml#l00050">openage::renderer::resources::VertexInputInfo.add_shader_input_map()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00269">openage::util::compress::BitStream&lt; 4096 &gt;.align_bitstream()</a>, <a class="el" href="misc_8h_source.xhtml#l00111">openage::util.array8_to_uint64()</a>, <a class="el" href="buffer_8cpp_source.xhtml#l00047">openage::renderer::opengl::GlBuffer.bind()</a>, <a class="el" href="subprocess_8cpp_source.xhtml#l00072">openage::subprocess.call()</a>, <a class="el" href="program_8cpp_source.xhtml#l00072">openage::shader::Program.check()</a>, <a class="el" href="setup_8cpp_source.xhtml#l00073">openage::pyinterface.check()</a>, <a class="el" href="context_8cpp_source.xhtml#l00158">openage::renderer::opengl::GlContext.check_error()</a>, <a class="el" href="functional_8h_source.xhtml#l00111">openage::pyinterface::Func&lt; ReturnType, ArgTypes ... &gt;.check_fptr()</a>, <a class="el" href="shader__program_8cpp_source.xhtml#l00022">openage::renderer::opengl.check_program_status()</a>, <a class="el" href="codegen_8py_source.xhtml#l00118">openage.codegen.codegen.codegen()</a>, <a class="el" href="slp__converter__pool_8py_source.xhtml#l00092">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>, <a class="el" href="gl__debug_8cpp_source.xhtml#l00045">openage::error.create_debug_context()</a>, <a class="el" href="loop_8cpp_source.xhtml#l00021">openage::event::Loop.create_event()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00617">openage::util::compress::LZXDStream.decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">openage::util::compress::LZXDStream.decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00740">openage::util::compress::LZXDStream.decompress_next_frame()</a>, <a class="el" href="test_8cpp_source.xhtml#l00041">openage::log::tests.demo()</a>, <a class="el" href="vulkan_2renderer_8cpp_source.xhtml#l00020">openage::renderer::vulkan::VlkRenderer.do_the_thing()</a>, <a class="el" href="opengl_2geometry_8cpp_source.xhtml#l00054">openage::renderer::opengl::GlGeometry.draw()</a>, <a class="el" href="screenshot_8cpp_source.xhtml#l00065">openage::ScreenshotManager.encode_png()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00214">openage::util::compress::BitStream&lt; 4096 &gt;.ensure_bits()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00140">openage::util::compress::BitStream&lt; 4096 &gt;.ensure_input_bytes()</a>, <a class="el" href="exctranslate__tests_8cpp_source.xhtml#l00029">openage::pyinterface::tests.err_cpp_to_py_helper()</a>, <a class="el" href="exctranslate__tests_8cpp_source.xhtml#l00108">openage::pyinterface::tests.err_py_to_cpp_demo()</a>, <a class="el" href="os_8cpp_source.xhtml#l00102">openage::os.execute_file()</a>, <a class="el" href="shader__program_8cpp_source.xhtml#l00301">openage::renderer::opengl::GlShaderProgram.execute_with()</a>, <a class="el" href="constexpr__map_8h_source.xhtml#l00207">openage::datastructure::ConstMap&lt; K, V, 0 &gt;.fetch()</a>, <a class="el" href="context_8cpp_source.xhtml#l00020">openage::renderer::opengl.find_capabilities()</a>, <a class="el" href="font__manager_8h_source.xhtml#l00022">openage::renderer::FreeTypeLibrary.FreeTypeLibrary()</a>, <a class="el" href="rng_8cpp_source.xhtml#l00157">openage::rng::RNG.from_stream()</a>, <a class="el" href="unit__container_8cpp_source.xhtml#l00042">openage::UnitReference.get()</a>, <a class="el" href="program_8cpp_source.xhtml#l00118">openage::shader::Program.get_attribute_id()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00919">openage::GameControl.get_engine()</a>, <a class="el" href="audio__manager_8cpp_source.xhtml#l00142">openage::audio::AudioManager.get_sound()</a>, <a class="el" href="texture__info_8cpp_source.xhtml#l00061">openage::renderer::resources::Texture2dInfo.get_subtexture()</a>, <a class="el" href="unit__container_8cpp_source.xhtml#l00066">openage::UnitContainer.get_terrain()</a>, <a class="el" href="opengl_8cpp_source.xhtml#l00012">openage::util.gl_check_error()</a>, <a class="el" href="context_8cpp_source.xhtml#l00086">openage::renderer::opengl::GlContext.GlContext()</a>, <a class="el" href="opengl_2window_8cpp_source.xhtml#l00016">openage::renderer::opengl::GlWindow.GlWindow()</a>, <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui.gui_log()</a>, <a class="el" href="exctranslate_8cpp_source.xhtml#l00137">openage::pyinterface.init_exc_message()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00477">openage::util::compress::LZXDStream.init_next_block()</a>, <a class="el" href="font_8cpp_source.xhtml#l00111">openage::renderer::Font.initialize()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00127">openage::util::compress::BitStream&lt; 4096 &gt;.input_bytes_available()</a>, <a class="el" href="console_2tests_8cpp_source.xhtml#l00055">openage::console::tests.interactive()</a>, <a class="el" href="quaternion_8h_source.xhtml#l00202">openage::util::Quaternion&lt; T &gt;.inverse()</a>, <a class="el" href="texture_8cpp_source.xhtml#l00061">openage::Texture.load()</a>, <a class="el" href="console_8cpp_source.xhtml#l00048">openage::console::Console.load_colors()</a>, <a class="el" href="game_2main_8py_source.xhtml#l00029">openage.game.main.main()</a>, <a class="el" href="sdl__global_8cpp_source.xhtml#l00015">openage::renderer::SDL.make_available()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00259">openage::util::compress::HuffmanTable&lt; LZX_PRETREE_MAXSYMBOLS, LZX_PRETREE_TABLEBITS &gt;.make_decode_table()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00706">openage::MoveAction.next_waypoint()</a>, <a class="el" href="terrain__object_8cpp_source.xhtml#l00071">openage::TerrainObject.place()</a>, <a class="el" href="pairing__heap_8h_source.xhtml#l00246">openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;.pop_node()</a>, <a class="el" href="generator_8cpp_source.xhtml#l00017">openage.random_tile()</a>, <a class="el" href="csv_8h_source.xhtml#l00059">openage::util::CSVCollection.read()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00329">openage::util::compress::BitStream&lt; 4096 &gt;.read_bytes()</a>, <a class="el" href="texture__data_8h_source.xhtml#l00047">openage::renderer::resources::Texture2dData.read_pixel()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00353">openage::util::compress::BitStream&lt; 4096 &gt;.read_single_byte()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00240">openage::util::compress::HuffmanTable&lt; LZX_PRETREE_MAXSYMBOLS, LZX_PRETREE_TABLEBITS &gt;.read_sym()</a>, <a class="el" href="os_8cpp_source.xhtml#l00028">openage::os.read_symlink()</a>, <a class="el" href="engine_8cpp_source.xhtml#l00533">openage::Engine.render_text()</a>, <a class="el" href="renderer_2tests_8cpp_source.xhtml#l00280">openage::renderer::tests.renderer_demo()</a>, <a class="el" href="rng_8cpp_source.xhtml#l00058">openage::rng::RNG.seed()</a>, <a class="el" href="glyph__atlas_8cpp_source.xhtml#l00100">openage::renderer::GlyphAtlas.set()</a>, <a class="el" href="program_8cpp_source.xhtml#l00137">openage::shader::Program.set_attribute_id()</a>, <a class="el" href="terrain__object_8cpp_source.xhtml#l00188">openage::TerrainObject.set_ground()</a>, <a class="el" href="shader_2shader_8cpp_source.xhtml#l00029">openage::shader::Shader.Shader()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00072">openage::util::ExternalProfiler.show_results()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00032">openage::util::ExternalProfiler.start()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00052">openage::util::ExternalProfiler.stop()</a>, <a class="el" href="texture__data_8cpp_source.xhtml#l00150">openage::renderer::resources::Texture2dData.store()</a>, <a class="el" href="unit__texture_8cpp_source.xhtml#l00151">openage::UnitTexture.subtexture()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00384">openage::util::compress::BitStream&lt; 4096 &gt;.switch_to_bitstream_mode()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00406">openage::util::compress::BitStream&lt; 4096 &gt;.switch_to_bytestream_mode()</a>, <a class="el" href="text__to__event_8cpp_source.xhtml#l00076">openage::input.text_to_event()</a>, <a class="el" href="texture__data_8cpp_source.xhtml#l00056">openage::renderer::resources::Texture2dData.Texture2dData()</a>, <a class="el" href="texture__subinfo_8cpp_source.xhtml#l00010">openage::renderer::resources::Texture2dSubInfo.Texture2dSubInfo()</a>, <a class="el" href="exctranslate__tests_8cpp_source.xhtml#l00024">openage::pyinterface::tests.throw_foo&lt; 0 &gt;()</a>, <a class="el" href="terrain__chunk_8cpp_source.xhtml#l00160">openage::TerrainChunk.tile_position()</a>, <a class="el" href="rng_8cpp_source.xhtml#l00148">openage::rng::RNG.to_stream()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00053">openage::Unit.top()</a>, <a class="el" href="exctranslate_8cpp_source.xhtml#l00047">openage::pyinterface.translate_exc_cpp_to_py()</a>, <a class="el" href="exctranslate_8cpp_source.xhtml#l00110">openage::pyinterface.translate_exc_py_to_cpp()</a>, <a class="el" href="rng_8cpp_source.xhtml#l00191">openage::rng.try_random_device()</a>, <a class="el" href="shader__program_8h_source.xhtml#l00069">openage::renderer::ShaderProgram.update_uniform_input()</a>, <a class="el" href="opengl_2geometry_8cpp_source.xhtml#l00041">openage::renderer::opengl::GlGeometry.update_verts_offset()</a>, <a class="el" href="renderer_2opengl_2texture_8cpp_source.xhtml#l00095">openage::renderer::opengl::GlTexture2d.upload()</a>, <a class="el" href="opengl_2texture__array_8cpp_source.xhtml#l00079">openage::renderer::opengl::GlTexture2dArray.upload()</a>, <a class="el" href="buffer_8cpp_source.xhtml#l00038">openage::renderer::opengl::GlBuffer.upload_data()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00173">openage::Terrain.validate_mask()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00164">openage::Terrain.validate_terrain()</a>, <a class="el" href="constexpr__map_8h_source.xhtml#l00122">openage::datastructure::ConstMap&lt; K, V, pos &gt;.verify_no_duplicates()</a>, <a class="el" href="vulkan_2shader__program_8h_source.xhtml#l00016">openage::renderer::vulkan.vk_shader_stage()</a>, <a class="el" href="loader_8cpp_source.xhtml#l00025">openage::renderer::vulkan::VlkLoader.vkCreateDebugReportCallbackEXT()</a>, <a class="el" href="loader_8cpp_source.xhtml#l00042">openage::renderer::vulkan::VlkLoader.vkDestroyDebugReportCallbackEXT()</a>, <a class="el" href="vulkan_2render__target_8h_source.xhtml#l00073">openage::renderer::vulkan::VlkDrawableDisplay.VlkDrawableDisplay()</a>, <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">openage::renderer::vulkan::VlkGraphicsDevice.VlkGraphicsDevice()</a>, <a class="el" href="vulkan_2shader__program_8h_source.xhtml#l00032">openage::renderer::vulkan::VlkShaderProgram.VlkShaderProgram()</a>, and <a class="el" href="windowvk_8cpp_source.xhtml#l00080">openage::renderer::vulkan::VlkWindow.VlkWindow()</a>.</p>

</div>
</div>
<a id="a3fbb0c225d01e222648ec28a43507188"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fbb0c225d01e222648ec28a43507188">&#9670;&nbsp;</a></span>general_source()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1log_1_1_named_log_source.xhtml">NamedLogSource</a> &amp; openage::log::general_source </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to a general named log source, for use by <a class="el" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f" title="Convenience method that makes use of the &#39;general&#39; LogSource.">log::log()</a>. </p>

<p class="definition">Definition at line <a class="el" href="named__logsource_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="named__logsource_8cpp_source.xhtml">named_logsource.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;                                 {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keyword">static</span> NamedLogSource value{<span class="stringliteral">&quot;general&quot;</span>};</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="log_8cpp_source.xhtml#l00013">log()</a>, and <a class="el" href="stdout__logsink_8cpp_source.xhtml#l00048">openage::log::StdOutSink::output_log_message()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a3fbb0c225d01e222648ec28a43507188_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a2b8905069877587c7f8624a11d524bbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b8905069877587c7f8624a11d524bbc">&#9670;&nbsp;</a></span>get_loglevel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.get_loglevel </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>gets the log level </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00099">99</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a173fdf777356d529586708570ee36be4">spam</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; spam message &quot;&quot;&quot;</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    logging.spam(msg, *args, **kwargs)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a173fdf777356d529586708570ee36be4"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a173fdf777356d529586708570ee36be4">openage::log.spam</a></div><div class="ttdeci">def spam(msg, *args, **kwargs)</div><div class="ttdoc">spam message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00104">__init__.py:104</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="log_2____init_____8py_source.xhtml#l00091">set_loglevel()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a2b8905069877587c7f8624a11d524bbc_icgraph.svg" width="600" height="168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a3d2885be9c3a09b9ff7ee8764b2e5f39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d2885be9c3a09b9ff7ee8764b2e5f39">&#9670;&nbsp;</a></span>global_stdoutsink()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1log_1_1_std_out_sink.xhtml">StdOutSink</a> &amp; openage::log::global_stdoutsink </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a reference to the global stdout logsink object; Initializes the object if needed. </p>

<p class="definition">Definition at line <a class="el" href="stdout__logsink_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="stdout__logsink_8cpp_source.xhtml">stdout_logsink.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keyword">static</span> StdOutSink value;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordflow">return</span> value;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="logsource_8cpp_source.xhtml#l00019">openage::log::LogSource::log()</a>, and <a class="el" href="log_8cpp_source.xhtml#l00018">set_level()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a3d2885be9c3a09b9ff7ee8764b2e5f39_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3f1815b698faf5786fc5e20bcac7704b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f1815b698faf5786fc5e20bcac7704b">&#9670;&nbsp;</a></span>info()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.info </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>info message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00114">114</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; warning message &quot;&quot;&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    logging.warning(msg, *args, **kwargs)</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a7ca418e1b1fcf210ff91cd25dc8e6a36"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">openage::log.warn</a></div><div class="ttdeci">def warn(msg, *args, **kwargs)</div><div class="ttdoc">warning message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00119">__init__.py:119</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="opengl_2renderer_8cpp_source.xhtml#l00027">openage::renderer::opengl::GlRenderer.add_texture()</a>, <a class="el" href="changelog_8py_source.xhtml#l00052">openage.convert.changelog.changes()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00436">openage.convert.main.conversion_required()</a>, <a class="el" href="demo_8py_source.xhtml#l00016">openage.convert.opus.demo.convert()</a>, <a class="el" href="driver_8py_source.xhtml#l00114">openage.convert.driver.convert()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00162">openage.convert.main.convert_assets()</a>, <a class="el" href="driver_8py_source.xhtml#l00239">openage.convert.driver.convert_media()</a>, <a class="el" href="driver_8py_source.xhtml#l00144">openage.convert.driver.convert_metadata()</a>, <a class="el" href="test_8cpp_source.xhtml#l00041">openage::log::tests.demo()</a>, <a class="el" href="demo_8cpp_source.xhtml#l00045">openage::error.demo()</a>, <a class="el" href="vulkan_2renderer_8cpp_source.xhtml#l00020">openage::renderer::vulkan::VlkRenderer.do_the_thing()</a>, <a class="el" href="screenshot_8cpp_source.xhtml#l00065">openage::ScreenshotManager.encode_png()</a>, <a class="el" href="exctranslate__tests_8cpp_source.xhtml#l00108">openage::pyinterface::tests.err_py_to_cpp_demo()</a>, <a class="el" href="civilisation_8cpp_source.xhtml#l00038">openage::Civilisation.get_building_data()</a>, <a class="el" href="player_8cpp_source.xhtml#l00119">openage::Player.get_type()</a>, <a class="el" href="player_8cpp_source.xhtml#l00129">openage::Player.get_type_index()</a>, <a class="el" href="context_8cpp_source.xhtml#l00086">openage::renderer::opengl::GlContext.GlContext()</a>, <a class="el" href="opengl_2renderer_8cpp_source.xhtml#l00017">openage::renderer::opengl::GlRenderer.GlRenderer()</a>, <a class="el" href="opengl_2window_8cpp_source.xhtml#l00016">openage::renderer::opengl::GlWindow.GlWindow()</a>, <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui.gui_log()</a>, <a class="el" href="player_8cpp_source.xhtml#l00138">openage::Player.initialise_unit_types()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00034">openage::GameSpec.initialize()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00503">openage.convert.main.interactive_browser()</a>, <a class="el" href="config__file_8py_source.xhtml#l00018">openage.cvar.config_file.load_config_file()</a>, <a class="el" href="empiresdat_8py_source.xhtml#l00382">openage.convert.gamedata.empiresdat.load_gamespec()</a>, <a class="el" href="game_2main_8py_source.xhtml#l00029">openage.game.main.main()</a>, <a class="el" href="singlefile_8py_source.xhtml#l00039">openage.convert.singlefile.main()</a>, <a class="el" href="sdl__global_8cpp_source.xhtml#l00015">openage::renderer::SDL.make_available()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00098">openage.convert.main.mount_input()</a>, <a class="el" href="main__args__link_8cpp_source.xhtml#l00030">openage::gui::MainArgsLink.provider()</a>, <a class="el" href="engine__link_8cpp_source.xhtml#l00054">openage::gui::EngineLink.provider()</a>, <a class="el" href="main_8cpp_source.xhtml#l00024">openage.run_game()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00382">openage.convert.main.source_dir_proposals()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00032">openage::util::ExternalProfiler.start()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00052">openage::util::ExternalProfiler.stop()</a>, and <a class="el" href="sdl__global_8cpp_source.xhtml#l00039">openage::renderer::SDL.~SDL()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a3f1815b698faf5786fc5e20bcac7704b_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a37a9ba75ed4a75173bfe7c3a77345a7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37a9ba75ed4a75173bfe7c3a77345a7d">&#9670;&nbsp;</a></span>level_colorcode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.level_colorcode </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>lvl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the same color codes as in <a class="el" href="level_8cpp.xhtml">libopenage/log/level.cpp</a>. </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00054">54</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    colorcodes = {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        logging.WARNING: <span class="stringliteral">&quot;33&quot;</span>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        logging.ERROR: <span class="stringliteral">&quot;31;1&quot;</span>,</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        logging.CRITICAL: <span class="stringliteral">&quot;31;1;47&quot;</span>,</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> colorcodes.get(lvl, <span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;SPAM = 5</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="log_2____init_____8py_source.xhtml#l00038">openage.log.CppHandler.emit()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a37a9ba75ed4a75173bfe7c3a77345a7d_icgraph.svg" width="435" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a0eff614e7d6e818746700ed9d29e583f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0eff614e7d6e818746700ed9d29e583f">&#9670;&nbsp;</a></span>log()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::log::log </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;&#160;</td>
          <td class="paramname"><em>msg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convenience method that makes use of the 'general' <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml" title="Any class that wants to provide .log() shall inherit from this.">LogSource</a>. </p>
<p>Invokes <a class="el" href="namespaceopenage_1_1log.xhtml#a3fbb0c225d01e222648ec28a43507188" title="Returns a reference to a general named log source, for use by log::log().">general_source()</a>-&gt;log(msg). </p>

<p class="definition">Definition at line <a class="el" href="log_8cpp_source.xhtml#l00013">13</a> of file <a class="el" href="log_8cpp_source.xhtml">log.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;                             {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a3fbb0c225d01e222648ec28a43507188">general_source</a>().<a class="code" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">log</a>(msg);</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;}</div><div class="ttc" id="classopenage_1_1log_1_1_log_source_xhtml_a5640099e20af4cd368c767dbcef3a1df"><div class="ttname"><a href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">openage::log::LogSource::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdoc">Logs a message (get one via MSG(level)).</div><div class="ttdef"><b>Definition:</b> <a href="logsource_8cpp_source.xhtml#l00019">logsource.cpp:19</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3fbb0c225d01e222648ec28a43507188"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3fbb0c225d01e222648ec28a43507188">openage::log::general_source</a></div><div class="ttdeci">NamedLogSource &amp; general_source()</div><div class="ttdoc">Returns a reference to a general named log source, for use by log::log().</div><div class="ttdef"><b>Definition:</b> <a href="named__logsource_8cpp_source.xhtml#l00019">named_logsource.cpp:19</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="named__logsource_8cpp_source.xhtml#l00019">general_source()</a>, and <a class="el" href="logsource_8cpp_source.xhtml#l00019">openage::log::LogSource::log()</a>.</p>

<p class="reference">Referenced by <a class="el" href="a__star_8cpp_source.xhtml#l00066">openage::path::a_star()</a>, <a class="el" href="eventqueue_8cpp_source.xhtml#l00082">openage::event::EventQueue::add_change()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00028">openage::allowed_terrains()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00082">openage::Terrain::attach_chunk()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00355">openage::ActionMode::available()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00579">openage::EditorMode::available()</a>, <a class="el" href="subprocess_8cpp_source.xhtml#l00072">openage::subprocess::call()</a>, <a class="el" href="eventtarget_8cpp_source.xhtml#l00014">openage::event::EventTarget::changes()</a>, <a class="el" href="assetmanager_8cpp_source.xhtml#l00133">openage::AssetManager::check_updates()</a>, <a class="el" href="assetmanager_8cpp_source.xhtml#l00185">openage::AssetManager::clear()</a>, <a class="el" href="input_2action_8cpp_source.xhtml#l00117">openage::input::ActionManager::create()</a>, <a class="el" href="event_2loop_8h_source.xhtml#l00137">openage::event::Loop::create_change()</a>, <a class="el" href="eventqueue_8cpp_source.xhtml#l00016">openage::event::EventQueue::create_event()</a>, <a class="el" href="generator_8cpp_source.xhtml#l00153">openage::Generator::create_regions()</a>, <a class="el" href="csv_8cpp_source.xhtml#l00016">openage::util::CSVCollection::CSVCollection()</a>, <a class="el" href="curve__types_8cpp_source.xhtml#l00014">openage::curve::tests::curve_types()</a>, <a class="el" href="demo_8cpp_source.xhtml#l00045">openage::error::demo()</a>, <a class="el" href="event_2event_8cpp_source.xhtml#l00026">openage::event::Event::depend_on()</a>, <a class="el" href="screenshot_8cpp_source.xhtml#l00065">openage::ScreenshotManager::encode_png()</a>, <a class="el" href="exctranslate__tests_8cpp_source.xhtml#l00108">openage::pyinterface::tests::err_py_to_cpp_demo()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00228">openage::event::tests::eventtrigger()</a>, <a class="el" href="loop_8cpp_source.xhtml#l00090">openage::event::Loop::execute_events()</a>, <a class="el" href="os_8cpp_source.xhtml#l00102">openage::os::execute_file()</a>, <a class="el" href="windowvk_8cpp_source.xhtml#l00039">openage::renderer::vulkan::find_capabilities()</a>, <a class="el" href="civilisation_8cpp_source.xhtml#l00038">openage::Civilisation::get_building_data()</a>, <a class="el" href="font__manager_8cpp_source.xhtml#l00014">openage::renderer::FontManager::get_font_filename()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00136">openage::GameSpec::get_graphic_data()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00125">openage::GameSpec::get_sound()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00091">openage::GameSpec::get_texture()</a>, <a class="el" href="player_8cpp_source.xhtml#l00119">openage::Player::get_type()</a>, <a class="el" href="player_8cpp_source.xhtml#l00129">openage::Player::get_type_index()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00115">openage::GameSpec::get_unit_texture()</a>, <a class="el" href="context_8cpp_source.xhtml#l00086">openage::renderer::opengl::GlContext::GlContext()</a>, <a class="el" href="opengl_2renderer_8cpp_source.xhtml#l00017">openage::renderer::opengl::GlRenderer::GlRenderer()</a>, <a class="el" href="opengl_2window_8cpp_source.xhtml#l00016">openage::renderer::opengl::GlWindow::GlWindow()</a>, <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui::gui_log()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00362">openage::event::demo::Physics::init()</a>, <a class="el" href="civilisation_8cpp_source.xhtml#l00047">openage::Civilisation::initialise_unit_types()</a>, <a class="el" href="player_8cpp_source.xhtml#l00138">openage::Player::initialise_unit_types()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00034">openage::GameSpec::initialize()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00100">openage::event::tests::TestEventClass::invoke()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00138">openage::event::demo::BallReflectPanel::invoke()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00146">openage::event::tests::TestEventClassTwo::invoke()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00185">openage::event::tests::EventTypeTestClass::invoke()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00275">openage::event::demo::ResetGame::invoke()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00102">openage::gameio::load()</a>, <a class="el" href="texture_8cpp_source.xhtml#l00061">openage::Texture::load()</a>, <a class="el" href="cvar_8cpp_source.xhtml#l00049">openage::cvar::CVarManager::load_all()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00329">openage::GameSpec::load_terrain()</a>, <a class="el" href="assetmanager_8cpp_source.xhtml#l00058">openage::AssetManager::load_texture()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00066">openage::event::tests::TestState::log_dbg()</a>, <a class="el" href="sdl__global_8cpp_source.xhtml#l00015">openage::renderer::SDL::make_available()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00102">openage::ActionMode::on_game_control_set()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00547">openage::EditorMode::on_game_control_set()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00192">openage::GameSpec::on_gamedata_loaded()</a>, <a class="el" href="engine_8cpp_source.xhtml#l00242">openage::Engine::on_resize()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00431">openage::Sound::play()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00215">openage::event::demo::BallReflectPanel::predict_invoke_time()</a>, <a class="el" href="generator_8cpp_source.xhtml#l00017">openage::random_tile()</a>, <a class="el" href="loop_8cpp_source.xhtml#l00056">openage::event::Loop::reach_time()</a>, <a class="el" href="os_8cpp_source.xhtml#l00028">openage::os::read_symlink()</a>, <a class="el" href="renderer_2tests_8cpp_source.xhtml#l00280">openage::renderer::tests::renderer_demo()</a>, <a class="el" href="renderer_2tests_8cpp_source.xhtml#l00033">openage::renderer::tests::renderer_demo_0()</a>, <a class="el" href="main_8cpp_source.xhtml#l00024">openage::run_game()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00070">openage::gameio::save()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00228">openage::UnitSelection::select_point()</a>, <a class="el" href="actions__list__model_8cpp_source.xhtml#l00031">openage::gui::ActionsListModel::set_active_buttons()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00793">openage::GameControl::set_modes()</a>, <a class="el" href="event_2tests_8cpp_source.xhtml#l00175">openage::event::tests::EventTypeTestClass::setup_event()</a>, <a class="el" href="eventtarget_8cpp_source.xhtml#l00094">openage::event::EventTarget::show_dependents()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00072">openage::util::ExternalProfiler::show_results()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00032">openage::util::ExternalProfiler::start()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00031">openage::job::JobManager::start()</a>, <a class="el" href="externalprofiler_8cpp_source.xhtml#l00052">openage::util::ExternalProfiler::stop()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00043">openage::job::JobManager::stop()</a>, <a class="el" href="texture__data_8cpp_source.xhtml#l00150">openage::renderer::resources::Texture2dData::store()</a>, <a class="el" href="unit__texture_8cpp_source.xhtml#l00151">openage::UnitTexture::subtexture()</a>, <a class="el" href="texture__data_8cpp_source.xhtml#l00056">openage::renderer::resources::Texture2dData::Texture2dData()</a>, <a class="el" href="eventtarget_8cpp_source.xhtml#l00064">openage::event::EventTarget::trigger()</a>, <a class="el" href="opengl_2window_8cpp_source.xhtml#l00058">openage::renderer::opengl::GlWindow::update()</a>, <a class="el" href="loop_8cpp_source.xhtml#l00158">openage::event::Loop::update_changes()</a>, <a class="el" href="windowvk_8cpp_source.xhtml#l00022">openage::renderer::vulkan::vlk_debug_cb()</a>, <a class="el" href="graphics__device_8cpp_source.xhtml#l00093">openage::renderer::vulkan::VlkGraphicsDevice::VlkGraphicsDevice()</a>, <a class="el" href="vulkan_2shader__program_8h_source.xhtml#l00032">openage::renderer::vulkan::VlkShaderProgram::VlkShaderProgram()</a>, <a class="el" href="subprocess_8cpp_source.xhtml#l00037">openage::subprocess::which()</a>, <a class="el" href="sdl__global_8cpp_source.xhtml#l00039">openage::renderer::SDL::~SDL()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00045">openage::Terrain::~Terrain()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a0eff614e7d6e818746700ed9d29e583f_cgraph.svg" width="616" height="170"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae4bb73b8b2616017522132a64c52c756"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4bb73b8b2616017522132a64c52c756">&#9670;&nbsp;</a></span>operator&lt;&lt;()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; openage::log::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>os</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;&#160;</td>
          <td class="paramname"><em>msg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prints message to a stream (with color codes and everything!) </p>

<p class="definition">Definition at line <a class="el" href="message_8cpp_source.xhtml#l00051">51</a> of file <a class="el" href="message_8cpp_source.xhtml">message.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                                                            {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;\x1b[&quot;</span> &lt;&lt; msg.lvl-&gt;colorcode &lt;&lt; <span class="stringliteral">&quot;m&quot;</span> &lt;&lt; std::setw(4) &lt;&lt; msg.lvl-&gt;name &lt;&lt; <span class="stringliteral">&quot;\x1b[m &quot;</span>;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    os &lt;&lt; msg.filename &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; msg.lineno &lt;&lt; <span class="stringliteral">&quot; &quot;</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;(&quot;</span> &lt;&lt; msg.functionname;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;, thread &quot;</span> &lt;&lt; msg.thread_id &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    os &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; msg.text;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00063">openage::log::message::filename</a>, <a class="el" href="message_8h_source.xhtml#l00073">openage::log::message::functionname</a>, <a class="el" href="message_8h_source.xhtml#l00068">openage::log::message::lineno</a>, <a class="el" href="message_8h_source.xhtml#l00078">openage::log::message::lvl</a>, <a class="el" href="message_8h_source.xhtml#l00058">openage::log::message::text</a>, and <a class="el" href="message_8h_source.xhtml#l00083">openage::log::message::thread_id</a>.</p>

</div>
</div>
<a id="ac8660073c35f9900e8c1169f2899b7d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8660073c35f9900e8c1169f2899b7d2">&#9670;&nbsp;</a></span>set_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> void openage::log::set_level </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1log_1_1level.xhtml">level</a>&#160;</td>
          <td class="paramname"><em>lvl</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the log level of the global stdout sink. </p>
<p>pxd: void <a class="el" href="namespaceopenage_1_1log.xhtml#ac8660073c35f9900e8c1169f2899b7d2" title="Sets the log level of the global stdout sink.">set_level(level lvl)</a> except + </p>

<p class="definition">Definition at line <a class="el" href="log_8cpp_source.xhtml#l00018">18</a> of file <a class="el" href="log_8cpp_source.xhtml">log.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                          {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a3d2885be9c3a09b9ff7ee8764b2e5f39">global_stdoutsink</a>().<a class="code" href="classopenage_1_1log_1_1_log_sink.xhtml#ac795e3966c4816c4c09fab3a68642cca">set_loglevel</a>(lvl);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div><div class="ttc" id="classopenage_1_1log_1_1_log_sink_xhtml_ac795e3966c4816c4c09fab3a68642cca"><div class="ttname"><a href="classopenage_1_1log_1_1_log_sink.xhtml#ac795e3966c4816c4c09fab3a68642cca">openage::log::LogSink::set_loglevel</a></div><div class="ttdeci">void set_loglevel(level loglevel)</div><div class="ttdef"><b>Definition:</b> <a href="logsink_8cpp_source.xhtml#l00025">logsink.cpp:25</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3d2885be9c3a09b9ff7ee8764b2e5f39"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3d2885be9c3a09b9ff7ee8764b2e5f39">openage::log::global_stdoutsink</a></div><div class="ttdeci">StdOutSink &amp; global_stdoutsink()</div><div class="ttdoc">Returns a reference to the global stdout logsink object; Initializes the object if needed.</div><div class="ttdef"><b>Definition:</b> <a href="stdout__logsink_8cpp_source.xhtml#l00064">stdout_logsink.cpp:64</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="stdout__logsink_8cpp_source.xhtml#l00064">global_stdoutsink()</a>, and <a class="el" href="logsink_8cpp_source.xhtml#l00025">openage::log::LogSink::set_loglevel()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_ac8660073c35f9900e8c1169f2899b7d2_cgraph.svg" width="100%" height="436"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a78bab1bc2016bebde4ef3cde06936702"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a78bab1bc2016bebde4ef3cde06936702">&#9670;&nbsp;</a></span>set_loglevel()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.set_loglevel </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>level</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>sets the log level </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00091">91</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">return</span> old_level</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">get_loglevel</a>():</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; gets the log level &quot;&quot;&quot;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <span class="keywordflow">return</span> logging.root.level</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a2b8905069877587c7f8624a11d524bbc"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">openage::log.get_loglevel</a></div><div class="ttdeci">def get_loglevel()</div><div class="ttdoc">gets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00099">__init__.py:99</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00099">get_loglevel()</a>.</p>

<p class="reference">Referenced by <a class="el" href="slp__converter__pool_8py_source.xhtml#l00135">openage.convert.slp_converter_pool.converter_process()</a>, <a class="el" href="tests_8py_source.xhtml#l00015">openage::log::tests.demo()</a>, and <a class="el" href="____main_____8py_source.xhtml#l00036">openage.__main__.main()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a78bab1bc2016bebde4ef3cde06936702_cgraph.svg" width="384" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a78bab1bc2016bebde4ef3cde06936702_icgraph.svg" width="390" height="168"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a701e516b9632ad3b4ccccf28d12fbc48"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a701e516b9632ad3b4ccccf28d12fbc48">&#9670;&nbsp;</a></span>setup_logging()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.setup_logging </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>setup the logging system </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00076">76</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment"># https://docs.python.org/3/library/logging.html#logging-levels</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    logging.addLevelName(1, <span class="stringliteral">&quot;MIN&quot;</span>)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    logging.addLevelName(SPAM, <span class="stringliteral">&quot;SPAM&quot;</span>)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    logging.addLevelName(51, <span class="stringliteral">&quot;MAX&quot;</span>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    root = logging.getLogger()</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    root.addHandler(CPP_HANDLER)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    logging.spam = root.spam</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">set_loglevel</a>(level):</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; sets the log level &quot;&quot;&quot;</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    old_level = <a class="code" href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">get_loglevel</a>()</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    logging.root.setLevel(level)</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a78bab1bc2016bebde4ef3cde06936702"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a78bab1bc2016bebde4ef3cde06936702">openage::log.set_loglevel</a></div><div class="ttdeci">def set_loglevel(level)</div><div class="ttdoc">sets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00091">__init__.py:91</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a2b8905069877587c7f8624a11d524bbc"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a2b8905069877587c7f8624a11d524bbc">openage::log.get_loglevel</a></div><div class="ttdeci">def get_loglevel()</div><div class="ttdoc">gets the log level</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00099">__init__.py:99</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a173fdf777356d529586708570ee36be4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a173fdf777356d529586708570ee36be4">&#9670;&nbsp;</a></span>spam()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.spam </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>spam message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00104">104</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; debug message &quot;&quot;&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    logging.debug(msg, *args, **kwargs)</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="texture_8py_source.xhtml#l00106">openage.convert.texture.Texture.__init__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00060">openage.convert.dataformat.content_snippet.ContentSnippet.add_required_snippets()</a>, <a class="el" href="tests_8py_source.xhtml#l00015">openage::log::tests.demo()</a>, <a class="el" href="config__file_8py_source.xhtml#l00018">openage.cvar.config_file.load_config_file()</a>, <a class="el" href="empiresdat_8py_source.xhtml#l00382">openage.convert.gamedata.empiresdat.load_gamespec()</a>, <a class="el" href="texture_8py_source.xhtml#l00210">openage.convert.texture.merge_frames()</a>, and <a class="el" href="drs_8py_source.xhtml#l00120">openage.convert.drs.DRS.read_tables()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a173fdf777356d529586708570ee36be4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a10c8ba63b955b0c97dc3b3323f73a4b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10c8ba63b955b0c97dc3b3323f73a4b2">&#9670;&nbsp;</a></span>verbosity_to_level()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.verbosity_to_level </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>verbosity</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Translates an integer verbosity to a log level. </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00136">136</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;              logging.INFO,</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;              logging.WARNING,</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;              logging.ERROR,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;              logging.CRITICAL,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;              logging.getLevelName(<span class="stringliteral">&quot;MAX&quot;</span>)]</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment"># return INFO when verbosity is 0</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">return</span> levels[<a class="code" href="namespaceopenage_1_1util_1_1math.xhtml#a7d719fd9d57ba43e020f3443b3fc2c7a">clamp</a>(-verbosity + 3, 0, len(levels) - 1)]</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">env_verbosity</a>():</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">    Tries to retrieve verbosity from the VERBOSITY environment variable.</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a8384c2e3977d17adc4ceac0e8aacc5d3"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">openage::log.env_verbosity</a></div><div class="ttdeci">def env_verbosity()</div><div class="ttdoc">Tries to retrieve verbosity from the VERBOSITY environment variable.</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00152">__init__.py:152</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1math_xhtml_a7d719fd9d57ba43e020f3443b3fc2c7a"><div class="ttname"><a href="namespaceopenage_1_1util_1_1math.xhtml#a7d719fd9d57ba43e020f3443b3fc2c7a">openage::util.math.clamp</a></div><div class="ttdeci">def clamp(val, minval, maxval)</div><div class="ttdoc">clamps val to be at least minval, and at most maxval.</div><div class="ttdef"><b>Definition:</b> <a href="math_8py_source.xhtml#l00029">math.py:29</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="math_8py_source.xhtml#l00029">openage.util.math.clamp()</a>.</p>

<p class="reference">Referenced by <a class="el" href="tests_8py_source.xhtml#l00015">openage::log::tests.demo()</a>, and <a class="el" href="____main_____8py_source.xhtml#l00036">openage.__main__.main()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a10c8ba63b955b0c97dc3b3323f73a4b2_cgraph.svg" width="100%" height="396"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a10c8ba63b955b0c97dc3b3323f73a4b2_icgraph.svg" width="368" height="88"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a7ca418e1b1fcf210ff91cd25dc8e6a36"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ca418e1b1fcf210ff91cd25dc8e6a36">&#9670;&nbsp;</a></span>warn()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.warn </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">*&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">**&#160;</td>
          <td class="paramname"><em>kwargs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>warning message </p>

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00119">119</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(msg, *args, **kwargs):</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; error message &quot;&quot;&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    logging.error(msg, *args, **kwargs)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00028">openage.allowed_terrains()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00355">openage::ActionMode.available()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00579">openage::EditorMode.available()</a>, <a class="el" href="changelog_8py_source.xhtml#l00052">openage.convert.changelog.changes()</a>, <a class="el" href="slp__converter__pool_8py_source.xhtml#l00092">openage.convert.slp_converter_pool.SLPConverterPool.convert()</a>, <a class="el" href="test_8cpp_source.xhtml#l00041">openage::log::tests.demo()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00163">openage::Unit.draw()</a>, <a class="el" href="program_8cpp_source.xhtml#l00147">openage::shader::Program.dump_active_attributes()</a>, <a class="el" href="gui__log_8cpp_source.xhtml#l00012">openage::gui.gui_log()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00503">openage.convert.main.interactive_browser()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00102">openage::gameio.load()</a>, <a class="el" href="empiresdat_8py_source.xhtml#l00382">openage.convert.gamedata.empiresdat.load_gamespec()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00749">openage::BuildingProducer.make_annex()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00098">openage.convert.main.mount_input()</a>, <a class="el" href="game__control__link_8cpp_source.xhtml#l00135">openage::gui::ActionModeLink.on_population_changed()</a>, <a class="el" href="game__spec_8cpp_source.xhtml#l00431">openage::Sound.play()</a>, <a class="el" href="convert_2main_8py_source.xhtml#l00292">openage.convert.main.query_source_dir()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00228">openage::UnitSelection.select_point()</a>, <a class="el" href="actions__list__model_8cpp_source.xhtml#l00031">openage::gui::ActionsListModel.set_active_buttons()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00793">openage::GameControl.set_modes()</a>, and <a class="el" href="externalprofiler_8cpp_source.xhtml#l00072">openage::util::ExternalProfiler.show_results()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1log_a7ca418e1b1fcf210ff91cd25dc8e6a36_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a46a996a4054d7e95ae33b1df746c4ec3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46a996a4054d7e95ae33b1df746c4ec3">&#9670;&nbsp;</a></span>CPP_HANDLER</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.log.CPP_HANDLER = <a class="el" href="classopenage_1_1log_1_1_cpp_handler.xhtml">CppHandler</a>()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00050">50</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>

</div>
</div>
<a id="a96bf92c0c16156a44e3428bc2023dee2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96bf92c0c16156a44e3428bc2023dee2">&#9670;&nbsp;</a></span>ENV_VERBOSITY</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.log.ENV_VERBOSITY = <a class="el" href="namespaceopenage_1_1log.xhtml#a8384c2e3977d17adc4ceac0e8aacc5d3">env_verbosity</a>()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00167">167</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>

</div>
</div>
<a id="aba6ceacbd33d6828bd46edb55569ab14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba6ceacbd33d6828bd46edb55569ab14">&#9670;&nbsp;</a></span>PYTHON_TO_CPP_LOG_LEVEL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary openage.log.PYTHON_TO_CPP_LOG_LEVEL = {}</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00018">18</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>

</div>
</div>
<a id="a4873e15c7fe197151a68a153904c2461"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4873e15c7fe197151a68a153904c2461">&#9670;&nbsp;</a></span>SPAM</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage.log.SPAM = 5</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="log_2____init_____8py_source.xhtml#l00064">64</a> of file <a class="el" href="log_2____init_____8py_source.xhtml">__init__.py</a>.</p>

</div>
</div>
<a id="a4a8298d6cabc1d52a88e4a967b376892"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a8298d6cabc1d52a88e4a967b376892">&#9670;&nbsp;</a></span>undefined</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="structopenage_1_1log_1_1level__value.xhtml">level_value</a> openage::log::undefined {{&quot;UNDEFINED&quot;, 999}, &quot;5&quot;}</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="level_8cpp_source.xhtml#l00009">9</a> of file <a class="el" href="level_8cpp_source.xhtml">level.cpp</a>.</p>

<p class="reference">Referenced by <a class="el" href="level_8cpp_source.xhtml#l00011">openage::log::level::level()</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1log.xhtml">log</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
