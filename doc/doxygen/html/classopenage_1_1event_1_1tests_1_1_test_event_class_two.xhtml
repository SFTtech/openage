<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::event::tests::TestEventClassTwo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classopenage_1_1event_1_1tests_1_1_test_event_class_two-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::tests::TestEventClassTwo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::event::tests::TestEventClassTwo:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1tests_1_1_test_event_class_two__inherit__graph.svg" width="194" height="360"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::event::tests::TestEventClassTwo:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1tests_1_1_test_event_class_two__coll__graph.svg" width="194" height="360"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a49c6a614f3999462bd75a7465432cd7a"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#a49c6a614f3999462bd75a7465432cd7a">TestEventClassTwo</a> (const std::string &amp;name)</td></tr>
<tr class="separator:a49c6a614f3999462bd75a7465432cd7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d8b2054cc30b622db08b26bc12e9b46"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#a1d8b2054cc30b622db08b26bc12e9b46">setup_event</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;target, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate) override</td></tr>
<tr class="memdesc:a1d8b2054cc30b622db08b26bc12e9b46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called for each event that is created for this <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml" title="A eventclass has to be implemented for every type of event that exists.">EventClass</a>.  <a href="#a1d8b2054cc30b622db08b26bc12e9b46">More...</a><br /></td></tr>
<tr class="separator:a1d8b2054cc30b622db08b26bc12e9b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af47dbc011710ba5e6986493b63dead0e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#af47dbc011710ba5e6986493b63dead0e">invoke</a> (<a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;gtarget, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;gstate, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;time, const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;) override</td></tr>
<tr class="memdesc:af47dbc011710ba5e6986493b63dead0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method implements the effects of the event.  <a href="#af47dbc011710ba5e6986493b63dead0e">More...</a><br /></td></tr>
<tr class="separator:af47dbc011710ba5e6986493b63dead0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaeabcec80a4ee92ce170b3ff509afea"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#aaaeabcec80a4ee92ce170b3ff509afea">predict_invoke_time</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;at) override</td></tr>
<tr class="memdesc:aaaeabcec80a4ee92ce170b3ff509afea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Is called to calculate the execution time for an event of this eventclass.  <a href="#aaaeabcec80a4ee92ce170b3ff509afea">More...</a><br /></td></tr>
<tr class="separator:aaaeabcec80a4ee92ce170b3ff509afea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a> (const std::string &amp;name, const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>)</td></tr>
<tr class="memdesc:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to be constructed with the unique identifier.  <a href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">More...</a><br /></td></tr>
<tr class="separator:ab0c2bcad30599b017efabe0078d8f1f8 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">~EventClass</a> ()=default</td></tr>
<tr class="separator:a852a361912677c956069048d2fa2d025 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">id</a> ()</td></tr>
<tr class="memdesc:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return a unique identifier.  <a href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">More...</a><br /></td></tr>
<tr class="separator:af88d224fea9820027ac3ebfb314537d0 inherit pub_methods_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> { <br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">trigger_type::DEPENDENCY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">trigger_type::DEPENDENCY_IMMEDIATELY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">trigger_type::TRIGGER</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">trigger_type::REPEAT</a>, 
<br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">trigger_type::ONCE</a>
<br />
 }</td></tr>
<tr class="memdesc:a911de25538d1280c375a90ed694bb717"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available types for the event class: These decide when an event of this event class will be executed.  <a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">More...</a><br /></td></tr>
<tr class="separator:a911de25538d1280c375a90ed694bb717 inherit pub_types_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1event_1_1_event_class"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1event_1_1_event_class')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">openage::event::EventClass</a></td></tr>
<tr class="memitem:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a></td></tr>
<tr class="memdesc:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">The event type this event class represents.  <a href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">More...</a><br /></td></tr>
<tr class="separator:a8a540e9ae9989e2fdeaa9139e00370fa inherit pub_attribs_classopenage_1_1event_1_1_event_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="event_2tests_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a49c6a614f3999462bd75a7465432cd7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49c6a614f3999462bd75a7465432cd7a">&#9670;&nbsp;</a></span>TestEventClassTwo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::event::tests::TestEventClassTwo::TestEventClassTwo </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="event_2tests_8cpp_source.xhtml#l00135">135</a> of file <a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        :</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a>(name, <a class="code" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">EventClass::trigger_type::DEPENDENCY</a>) {}</div><div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_ab0c2bcad30599b017efabe0078d8f1f8"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">openage::event::EventClass::EventClass</a></div><div class="ttdeci">EventClass(const std::string &amp;name, const trigger_type &amp;type)</div><div class="ttdoc">Constructor to be constructed with the unique identifier.</div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8cpp_source.xhtml#l00013">eventclass.cpp:13</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_xhtml_a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">openage::event::EventClass::trigger_type::DEPENDENCY</a></div><div class="ttdoc">Such events are emitted when a modification is done on a target.</div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af47dbc011710ba5e6986493b63dead0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af47dbc011710ba5e6986493b63dead0e">&#9670;&nbsp;</a></span>invoke()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::tests::TestEventClassTwo::invoke </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;&#160;</td>
          <td class="paramname"><em>loop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method implements the effects of the event. </p>
<p>It will be called at the time that was determined by <code>predict_invoke_time</code>.</p>
<p>Called from the <a class="el" href="classopenage_1_1event_1_1_loop.xhtml" title="The core class to manage event class and targets.">Loop</a>. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="event_2tests_8cpp_source.xhtml#l00146">146</a> of file <a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                                                       {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;TestState&gt;(gstate);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keyword">auto</span> target = std::dynamic_pointer_cast&lt;TestState::TestObject&gt;(gtarget);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        state-&gt;objectB-&gt;set_number(target-&gt;number + 1, time);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a> &lt;&lt; <span class="stringliteral">&quot;I am EventClassTwo. Setting B.number to &quot;</span> &lt;&lt; state-&gt;objectB-&gt;number);</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        state-&gt;trace.emplace_back(<span class="stringliteral">&quot;B&quot;</span>, time);</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdoc">Convenience method that makes use of the 'general' LogSource.</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_a49606be7356624568932ec81c0d429f4"><div class="ttname"><a href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a></div><div class="ttdeci">#define DBG</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00176">message.h:176</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00176">DBG</a>, and <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1tests_1_1_test_event_class_two_af47dbc011710ba5e6986493b63dead0e_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aaaeabcec80a4ee92ce170b3ff509afea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaaeabcec80a4ee92ce170b3ff509afea">&#9670;&nbsp;</a></span>predict_invoke_time()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> openage::event::tests::TestEventClassTwo::predict_invoke_time </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>at</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Is called to calculate the execution time for an event of this eventclass. </p>
<p>This is called whenever one of the set up dependencies was changed, or when a REPEAT event was executed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>the target the event was created for </td></tr>
    <tr><td class="paramname">state</td><td>the state this shall work on </td></tr>
    <tr><td class="paramname">at</td><td>the time when the change happened, from there on it shall be calculated onwards</td></tr>
  </table>
  </dd>
</dl>
<p>If the event is obsolete, return &lt;time_t&gt;<a class="el" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min()</a>.</p>
<p>If the time is lower than the previous time, then dependencies may not be resolved perfectly anymore (if other events have already been calculated before that). </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="event_2tests_8cpp_source.xhtml#l00160">160</a> of file <a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                                                                      {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="comment">// \todo recalculate a hit time</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">return</span> at + <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(1);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdoc">Factory function to get a fixed-point number from a double.</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00192">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1tests_1_1_test_event_class_two_aaaeabcec80a4ee92ce170b3ff509afea_cgraph.svg" width="395" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a1d8b2054cc30b622db08b26bc12e9b46"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d8b2054cc30b622db08b26bc12e9b46">&#9670;&nbsp;</a></span>setup_event()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::event::tests::TestEventClassTwo::setup_event </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called for each event that is created for this <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml" title="A eventclass has to be implemented for every type of event that exists.">EventClass</a>. </p>
<p>The job of the setup function is to add all dependencies with other event targets found in state. </p>

<p>Implements <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">openage::event::EventClass</a>.</p>

<p class="definition">Definition at line <a class="el" href="event_2tests_8cpp_source.xhtml#l00139">139</a> of file <a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                                                                  {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;TestState&gt;(gstate);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        target-&gt;depend_on(state-&gt;objectA);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div></div><!-- fragment -->
</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/<a class="el" href="event_2tests_8cpp_source.xhtml">tests.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event_1_1tests.xhtml">tests</a></li><li class="navelem"><a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml">TestEventClassTwo</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
