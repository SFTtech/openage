<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.dataformat.util Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.dataformat.util Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a54a8af4c9c5573541a15c7660e862111"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a54a8af4c9c5573541a15c7660e862111">encode_value</a> (<a class="el" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>)</td></tr>
<tr class="separator:a54a8af4c9c5573541a15c7660e862111"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a356499a04a03d301b12a37c3ade40415"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a356499a04a03d301b12a37c3ade40415">gather_data</a> (obj, members)</td></tr>
<tr class="separator:a356499a04a03d301b12a37c3ade40415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe9d9997e55017fa14737a7603afadba"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a> (for_type)</td></tr>
<tr class="memdesc:abe9d9997e55017fa14737a7603afadba"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the includable headers for using the given C type.  <a href="#abe9d9997e55017fa14737a7603afadba">More...</a><br /></td></tr>
<tr class="separator:abe9d9997e55017fa14737a7603afadba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e3a7c5e8aeddbd762f9a158f9bc5aab"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a> (for_types)</td></tr>
<tr class="separator:a5e3a7c5e8aeddbd762f9a158f9bc5aab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2937bddd2ac154bee7b301341da2e0c"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#ad2937bddd2ac154bee7b301341da2e0c">commentify_lines</a> (commentstr, text)</td></tr>
<tr class="separator:ad2937bddd2ac154bee7b301341da2e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a7f2333e8a836d3ce2a476726ed0bbfed"><td class="memItemLeft" align="right" valign="top">dictionary&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a7f2333e8a836d3ce2a476726ed0bbfed">struct_type_lookup</a></td></tr>
<tr class="separator:a7f2333e8a836d3ce2a476726ed0bbfed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ad2937bddd2ac154bee7b301341da2e0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2937bddd2ac154bee7b301341da2e0c">&#9670;&nbsp;</a></span>commentify_lines()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.util.commentify_lines </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>commentstr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00139">139</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>
<div class="fragment"></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition.generate_csv()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_ad2937bddd2ac154bee7b301341da2e0c_icgraph.svg" width="576" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="abe9d9997e55017fa14737a7603afadba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe9d9997e55017fa14737a7603afadba">&#9670;&nbsp;</a></span>determine_header()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.util.determine_header </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>for_type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the includable headers for using the given C type. </p>

<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00071">71</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="comment"># these headers are needed for the type</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    ret = set()</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">from</span> .header_snippet <span class="keyword">import</span> HeaderSnippet</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="comment"># yes, i know. but we can hardly do better.</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment"># pylint: disable=too-many-locals</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    cstddefh = HeaderSnippet(<span class="stringliteral">&quot;cstddef&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    cstdinth = HeaderSnippet(<span class="stringliteral">&quot;cstdint&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    cstdioh = HeaderSnippet(<span class="stringliteral">&quot;cstdio&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    cstringh = HeaderSnippet(<span class="stringliteral">&quot;cstring&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    stringh = HeaderSnippet(<span class="stringliteral">&quot;string&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    vectorh = HeaderSnippet(<span class="stringliteral">&quot;vector&quot;</span>, is_global=<span class="keyword">True</span>)</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    error_error_h = HeaderSnippet(<span class="stringliteral">&quot;error/error.h&quot;</span>, is_global=<span class="keyword">False</span>)</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    log_h = HeaderSnippet(<span class="stringliteral">&quot;log.h&quot;</span>, is_global=<span class="keyword">False</span>)</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    util_csv_h = HeaderSnippet(<span class="stringliteral">&quot;util/csv.h&quot;</span>, is_global=<span class="keyword">False</span>)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    util_path_h = HeaderSnippet(<span class="stringliteral">&quot;util/path.h&quot;</span>, is_global=<span class="keyword">False</span>)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    util_strings_h = HeaderSnippet(<span class="stringliteral">&quot;util/strings.h&quot;</span>, is_global=<span class="keyword">False</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment"># lookup for type-&gt;{header}</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    type_map = {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="stringliteral">&quot;int8_t&quot;</span>:          {cstdinth},</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="stringliteral">&quot;uint8_t&quot;</span>:         {cstdinth},</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="stringliteral">&quot;int16_t&quot;</span>:         {cstdinth},</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="stringliteral">&quot;uint16_t&quot;</span>:        {cstdinth},</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="stringliteral">&quot;int32_t&quot;</span>:         {cstdinth},</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="stringliteral">&quot;uint32_t&quot;</span>:        {cstdinth},</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="stringliteral">&quot;int64_t&quot;</span>:         {cstdinth},</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="stringliteral">&quot;uint64_t&quot;</span>:        {cstdinth},</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="stringliteral">&quot;std::string&quot;</span>:     {stringh},</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="stringliteral">&quot;std::vector&quot;</span>:     {vectorh},</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="stringliteral">&quot;strcmp&quot;</span>:          {cstringh},</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="stringliteral">&quot;strncpy&quot;</span>:         {cstringh},</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="stringliteral">&quot;strtok_custom&quot;</span>:   {util_strings_h},</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="stringliteral">&quot;sscanf&quot;</span>:          {cstdioh},</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="stringliteral">&quot;size_t&quot;</span>:          {cstddefh},</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="stringliteral">&quot;float&quot;</span>:           set(),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="stringliteral">&quot;int&quot;</span>:             set(),</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="stringliteral">&quot;csv_collection&quot;</span>:  {util_csv_h},</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="stringliteral">&quot;read_csv_file&quot;</span>:   {util_csv_h},</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="stringliteral">&quot;csv_subdata&quot;</span>:     {util_csv_h},</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="stringliteral">&quot;engine_error&quot;</span>:    {error_error_h},</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="stringliteral">&quot;engine_log&quot;</span>:      {log_h},</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="stringliteral">&quot;util::Path&quot;</span>:      {util_path_h},</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> for_type <span class="keywordflow">in</span> type_map:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        ret |= type_map[for_type]</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;could not determine header for {}&quot;</span>.format(for_type))</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a>(for_types):</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> any(isinstance(for_types, type) <span class="keywordflow">for</span> type <span class="keywordflow">in</span> (list, tuple, set)):</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_a5e3a7c5e8aeddbd762f9a158f9bc5aab"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">openage.convert.dataformat.util.determine_headers</a></div><div class="ttdeci">def determine_headers(for_types)</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00128">util.py:128</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="util_8py_source.xhtml#l00128">openage.convert.dataformat.util.determine_headers()</a>, <a class="el" href="struct__definition_8py_source.xhtml#l00146">openage.convert.dataformat.struct_definition.StructDefinition.generate_struct()</a>, <a class="el" href="members_8py_source.xhtml#l00299">openage.convert.dataformat.members.NumberMember.get_headers()</a>, <a class="el" href="members_8py_source.xhtml#l00548">openage.convert.dataformat.members.CharArrayMember.get_headers()</a>, <a class="el" href="members_8py_source.xhtml#l00615">openage.convert.dataformat.members.MultisubtypeMember.get_headers()</a>, <a class="el" href="members_8py_source.xhtml#l00828">openage.convert.dataformat.members.SubdataMember.get_headers()</a>, <a class="el" href="members_8py_source.xhtml#l00286">openage.convert.dataformat.members.NumberMember.get_parsers()</a>, <a class="el" href="members_8py_source.xhtml#l00523">openage.convert.dataformat.members.CharArrayMember.get_parsers()</a>, and <a class="el" href="members_8py_source.xhtml#l00663">openage.convert.dataformat.members.MultisubtypeMember.get_snippets()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_abe9d9997e55017fa14737a7603afadba_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a5e3a7c5e8aeddbd762f9a158f9bc5aab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e3a7c5e8aeddbd762f9a158f9bc5aab">&#9670;&nbsp;</a></span>determine_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.util.determine_headers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>for_types</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00128">128</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        for_types = {for_types}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    ret = set()</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">for</span> t <span class="keywordflow">in</span> for_types:</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        ret |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(t)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#ad2937bddd2ac154bee7b301341da2e0c">commentify_lines</a>(commentstr, text):</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>.join(commentstr + line + <span class="stringliteral">&quot;\n&quot;</span> <span class="keywordflow">for</span> line <span class="keywordflow">in</span> text.split(<span class="stringliteral">&quot;\n&quot;</span>))</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_ad2937bddd2ac154bee7b301341da2e0c"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#ad2937bddd2ac154bee7b301341da2e0c">openage.convert.dataformat.util.commentify_lines</a></div><div class="ttdeci">def commentify_lines(commentstr, text)</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00139">util.py:139</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="util_8py_source.xhtml#l00071">openage.convert.dataformat.util.determine_header()</a>.</p>

<p class="reference">Referenced by <a class="el" href="members_8py_source.xhtml#l00361">openage.convert.dataformat.members.ContinueReadMember.get_parsers()</a>, <a class="el" href="members_8py_source.xhtml#l00394">openage.convert.dataformat.members.EnumMember.get_parsers()</a>, and <a class="el" href="members_8py_source.xhtml#l00663">openage.convert.dataformat.members.MultisubtypeMember.get_snippets()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_a5e3a7c5e8aeddbd762f9a158f9bc5aab_cgraph.svg" width="584" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_a5e3a7c5e8aeddbd762f9a158f9bc5aab_icgraph.svg" width="564" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a54a8af4c9c5573541a15c7660e862111"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54a8af4c9c5573541a15c7660e862111">&#9670;&nbsp;</a></span>encode_value()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.util.encode_value </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00042">42</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    val = <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(val)</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    val = val.replace(<span class="stringliteral">&quot;\\&quot;</span>, <span class="stringliteral">&quot;\\\\&quot;</span>)</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    val = val.replace(<span class="stringliteral">&quot;,&quot;</span>, <span class="stringliteral">&quot;\\,&quot;</span>)</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    val = val.replace(<span class="stringliteral">&quot;\n&quot;</span>, <span class="stringliteral">&quot;\\n&quot;</span>)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> val</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a356499a04a03d301b12a37c3ade40415">gather_data</a>(obj, members):</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">    queries the given object for the given member variables</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">    and returns that as a dict.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral">    key: member name</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">    value: obj&#39;s member value</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    ret = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>()</div><div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdoc">dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_a356499a04a03d301b12a37c3ade40415"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a356499a04a03d301b12a37c3ade40415">openage.convert.dataformat.util.gather_data</a></div><div class="ttdeci">def gather_data(obj, members)</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00059">util.py:59</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdoc">str(value);</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="pyobject_8cpp_source.xhtml#l00331">openage::py.str()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_a54a8af4c9c5573541a15c7660e862111_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a356499a04a03d301b12a37c3ade40415"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a356499a04a03d301b12a37c3ade40415">&#9670;&nbsp;</a></span>gather_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.util.gather_data </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>members</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00059">59</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">for</span> attr, _ <span class="keywordflow">in</span> members:</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        ret[attr] = getattr(obj, attr)</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(for_type):</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="pyobject_8cpp_source.xhtml#l00352">openage::py.dict()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1convert_1_1dataformat_1_1util_a356499a04a03d301b12a37c3ade40415_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a id="a7f2333e8a836d3ce2a476726ed0bbfed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f2333e8a836d3ce2a476726ed0bbfed">&#9670;&nbsp;</a></span>struct_type_lookup</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">dictionary openage.convert.dataformat.util.struct_type_lookup</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Initial value:</b><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;=  {</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    <span class="stringliteral">&quot;char&quot;</span>:               <span class="stringliteral">&quot;b&quot;</span>,</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    <span class="stringliteral">&quot;unsigned char&quot;</span>:      <span class="stringliteral">&quot;B&quot;</span>,</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    <span class="stringliteral">&quot;int8_t&quot;</span>:             <span class="stringliteral">&quot;b&quot;</span>,</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    <span class="stringliteral">&quot;uint8_t&quot;</span>:            <span class="stringliteral">&quot;B&quot;</span>,</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    <span class="stringliteral">&quot;short&quot;</span>:              <span class="stringliteral">&quot;h&quot;</span>,</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    <span class="stringliteral">&quot;unsigned short&quot;</span>:     <span class="stringliteral">&quot;H&quot;</span>,</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    <span class="stringliteral">&quot;int16_t&quot;</span>:            <span class="stringliteral">&quot;h&quot;</span>,</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    <span class="stringliteral">&quot;uint16_t&quot;</span>:           <span class="stringliteral">&quot;H&quot;</span>,</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    <span class="stringliteral">&quot;int&quot;</span>:                <span class="stringliteral">&quot;i&quot;</span>,</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <span class="stringliteral">&quot;unsigned int&quot;</span>:       <span class="stringliteral">&quot;I&quot;</span>,</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    <span class="stringliteral">&quot;int32_t&quot;</span>:            <span class="stringliteral">&quot;i&quot;</span>,</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="stringliteral">&quot;uint32_t&quot;</span>:           <span class="stringliteral">&quot;I&quot;</span>,</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="stringliteral">&quot;long&quot;</span>:               <span class="stringliteral">&quot;l&quot;</span>,</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="stringliteral">&quot;unsigned long&quot;</span>:      <span class="stringliteral">&quot;L&quot;</span>,</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="stringliteral">&quot;long long&quot;</span>:          <span class="stringliteral">&quot;q&quot;</span>,</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="stringliteral">&quot;unsigned long long&quot;</span>: <span class="stringliteral">&quot;Q&quot;</span>,</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="stringliteral">&quot;int64_t&quot;</span>:            <span class="stringliteral">&quot;q&quot;</span>,</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="stringliteral">&quot;uint64_t&quot;</span>:           <span class="stringliteral">&quot;Q&quot;</span>,</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="stringliteral">&quot;float&quot;</span>:              <span class="stringliteral">&quot;f&quot;</span>,</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="stringliteral">&quot;double&quot;</span>:             <span class="stringliteral">&quot;d&quot;</span>,</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="stringliteral">&quot;char[]&quot;</span>:             <span class="stringliteral">&quot;s&quot;</span>,</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div></div><!-- fragment -->
<p class="definition">Definition at line <a class="el" href="util_8py_source.xhtml#l00013">13</a> of file <a class="el" href="util_8py_source.xhtml">util.py</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml">util</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
