<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/exctranslate.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('exctranslate_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">exctranslate.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="exctranslate_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * This hack replaces Cython&#39;s default &#39;except +&#39; exception translator</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * with the one defined here.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This is _the_ entry point for the translation magic!</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="exctranslate_8h.xhtml#ab9664731e41a98fe3cc7c67daeaa84d4">   11</a></span>&#160;<span class="preprocessor">#define __Pyx_CppExn2PyErr ::openage::pyinterface::translate_exc_cpp_to_py</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">// pxd: from libcpp cimport bool as cppbool</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// pxd: from libcpp.string cimport string</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// pxd: from libopenage.error.error cimport Error</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">// pxd: from libopenage.log.message cimport message</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">// pxd: from libopenage.pyinterface.pyexception cimport PyException</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">class </span>PyException;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a17ffe36150248f6802ac372166798637">translate_exc_cpp_to_py</a>();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">translate_exc_py_to_cpp</a>();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a942ae5fea51139bab5bdc29ac244125d">init_exc_message</a>(log::message *msg, <span class="keyword">const</span> std::string &amp;<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lineno, <span class="keyword">const</span> std::string &amp;functionname) noexcept;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="comment"> * The PyIfFunc callback wrapper can _not_ be used to wrap these</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="comment"> * functions, because those methods are used from within the Func code</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="comment"> * itself, leading to</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment"> *  - infinite loops</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="comment"> *  - immediate back-conversion of raised Python CPPException objects</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="comment"> * Thus, we&#39;re using old-school function pointers here.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="comment"> * Note that this should be the only place in the entire C++ code base where</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="comment"> * this is necessary.</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="comment"> * Everybody who calls one of those function pointers must manually ensure</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="comment"> * that they are not nullptr (which would occur if libopenage has not been</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="comment"> * properly initialized by the Python part of the code).</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1e67cfae25169883a59e6d15324decfb">set_exc_translation_funcs</a>(</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordtype">void</span> (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a>)(Error *),</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordtype">void</span> (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">raise_cpp_pyexception</a>)(PyException *),</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordtype">bool</span> (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">check_for_py_exception</a>)(),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">void</span> (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">describe_py_exception</a>)(PyException *));</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}} <span class="comment">// openage::pyinterface</span></div><div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdoc">get the filename (last part) of a given path</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a1ed950b8158655d0bcb54fbb36404873"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">openage::pyinterface::raise_cpp_pyexception</a></div><div class="ttdeci">void(* raise_cpp_pyexception)(PyException *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00025">exctranslate.cpp:25</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_aea581b919984cda327632efe3d11f8b3"><div class="ttname"><a href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a></div><div class="ttdeci">#define OAAPI</div><div class="ttdoc">DLL entry-point decorations.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00026">compiler.h:26</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a53f43e6841f4160dfdaea8592cb0db3d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">openage::pyinterface::raise_cpp_error</a></div><div class="ttdeci">void(* raise_cpp_error)(Error *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00024">exctranslate.cpp:24</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aa215bdc802dfaf2c82acb6b3acf3d6e6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">openage::pyinterface::check_for_py_exception</a></div><div class="ttdeci">bool(* check_for_py_exception)()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00028">exctranslate.cpp:28</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a29e783fc0db24c266caed883f5781e96"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">openage::pyinterface::describe_py_exception</a></div><div class="ttdeci">void(* describe_py_exception)(PyException *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00027">exctranslate.cpp:27</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a942ae5fea51139bab5bdc29ac244125d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a942ae5fea51139bab5bdc29ac244125d">openage::pyinterface::init_exc_message</a></div><div class="ttdeci">void init_exc_message(log::message *msg, const std::string &amp;filename, unsigned int lineno, const std::string &amp;functionname) noexcept</div><div class="ttdoc">For use by Python, to initialize a message's meta data.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00137">exctranslate.cpp:137</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a17ffe36150248f6802ac372166798637"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a17ffe36150248f6802ac372166798637">openage::pyinterface::translate_exc_cpp_to_py</a></div><div class="ttdeci">void translate_exc_cpp_to_py()</div><div class="ttdoc">Analyzes the current C++ exception, and creates and raises an analogous Python CPPException object.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00047">exctranslate.cpp:47</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a1e67cfae25169883a59e6d15324decfb"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a1e67cfae25169883a59e6d15324decfb">openage::pyinterface::set_exc_translation_funcs</a></div><div class="ttdeci">void set_exc_translation_funcs(void(*raise_cpp_error_impl)(Error *), void(*raise_cpp_pyexception_impl)(PyException *), bool(*check_for_py_exception_impl)(), void(*describe_py_exception_impl)(PyException *))</div><div class="ttdoc">Installs the basic interface functions that are used for exception translation.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00031">exctranslate.cpp:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a89529648faa2ef530fefcc90f1c1ab70"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">openage::pyinterface::translate_exc_py_to_cpp</a></div><div class="ttdeci">void translate_exc_py_to_cpp()</div><div class="ttdoc">Analyzes the current Python exception, and creates and throws an analogous C++ PyException object.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00110">exctranslate.cpp:110</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="exctranslate_8h.xhtml">exctranslate.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
