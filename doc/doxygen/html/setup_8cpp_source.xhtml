<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/setup.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('setup_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">setup.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="setup_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2016 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="setup_8h.xhtml">setup.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;mutex&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;set&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../util/compiler.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">// no need for these global objects to have any linkage.</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">namespace </span>{</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">struct </span>state {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// secures the state object</span></div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">   22</a></span>&#160;    std::mutex <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// holds the checker function for each component</span></div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">   25</a></span>&#160;    <a class="code" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">std::map</a>&lt;<span class="keywordtype">void</span> *, std::function&lt;bool ()&gt;&gt; <a class="code" href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="comment">// holds the components that have been destroyed so far</span></div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="setup_8cpp.xhtml#a72d863a2c441cc15b23670e4cf9cfb02">   28</a></span>&#160;    std::set&lt;void *&gt; <a class="code" href="setup_8cpp.xhtml#a72d863a2c441cc15b23670e4cf9cfb02">destroyed_components</a>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="comment">// set to true once the check has run for the first time.</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="setup_8cpp.xhtml#a9df65dc74cf0e679af16311b54d2219d">   31</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="setup_8cpp.xhtml#a9df65dc74cf0e679af16311b54d2219d">check_performed</a>;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// returns the global singleton object</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keyword">static</span> state &amp;get() {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keyword">static</span> state <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>{{}, {}, {}, <span class="keyword">false</span>};</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;} <span class="comment">// anonymous namespace</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a591d9bd55fa1f9904547f3f2dcb3796d">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a591d9bd55fa1f9904547f3f2dcb3796d">add_py_if_component</a>(<span class="keywordtype">void</span> *thisptr, std::function&lt;<span class="keywordtype">bool</span> ()&gt; checker) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    state &amp;checkers = state::get();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{checkers.lock};</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// enforce that the object has an associated symbol name.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(not <a class="code" href="namespaceopenage_1_1util.xhtml#ae411a50a0e24d32ab564979b2df6ed24">util::is_symbol</a>(thisptr))) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="stringliteral">&quot;Can&#39;t instantiate py interface component as non-global object. &quot;</span> &lt;&lt;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="stringliteral">&quot;Attempted instantiation at &quot;</span> &lt;&lt;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="namespaceopenage_1_1util.xhtml#aff957b2c0c7a7eb98cf68468cc04c1d8">util::symbol_name</a>(thisptr) &lt;&lt; <span class="stringliteral">&quot;.&quot;</span>,</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="keyword">true</span>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    checkers.map[thisptr] = checker;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a3eda9726ffb3eeec9b423f300ec70c07">   63</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3eda9726ffb3eeec9b423f300ec70c07">destroy_py_if_component</a>(<span class="keywordtype">void</span> *thisptr) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    state &amp;checkers = state::get();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{checkers.lock};</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    checkers.destroyed_components.insert(thisptr);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    checkers.map.erase(thisptr);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a7c3f96bce0d4711ba04a941b5c460b17">   73</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7c3f96bce0d4711ba04a941b5c460b17">check</a>() {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    state &amp;checkers = state::get();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{checkers.lock};</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (checkers.check_performed) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            <span class="stringliteral">&quot;py interface initialization check has already been performed. &quot;</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="stringliteral">&quot;fix your init code.&quot;</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    checkers.check_performed = <span class="keyword">true</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keywordtype">bool</span> error_found = <span class="keyword">false</span>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keyword">auto</span> msg = <a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    msg &lt;&lt; <span class="stringliteral">&quot;Fix your init code: &quot;</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">if</span> (not checkers.destroyed_components.empty()) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        msg &lt;&lt; std::endl &lt;&lt;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="stringliteral">&quot;Py interface components have been de-initialized before &quot;</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="stringliteral">&quot;initialization had even been completed:&quot;</span>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">void</span> *thisptr : checkers.destroyed_components) {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            msg &lt;&lt; std::endl &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#aff957b2c0c7a7eb98cf68468cc04c1d8">util::symbol_name</a>(thisptr);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        }</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        error_found = <span class="keyword">true</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    checkers.destroyed_components.clear();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">bool</span> first = <span class="keyword">true</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;checker : checkers.map) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">if</span> (not checker.second()) {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <span class="keywordflow">if</span> (first) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                msg &lt;&lt; std::endl &lt;&lt;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                    <span class="stringliteral">&quot;The following components have not been initialized:&quot;</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                first = <span class="keyword">false</span>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                error_found = <span class="keyword">true</span>;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;            msg &lt;&lt; std::endl &lt;&lt; <span class="stringliteral">&quot;\t&quot;</span> &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#aff957b2c0c7a7eb98cf68468cc04c1d8">util::symbol_name</a>(checker.first);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    checkers.map.clear();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span> (error_found) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(msg);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}} <span class="comment">// openage::pyinterface</span></div><div class="ttc" id="setup_8cpp_xhtml_a96dd93a55be2a0953e454b56d83f65da"><div class="ttname"><a href="setup_8cpp.xhtml#a96dd93a55be2a0953e454b56d83f65da">map</a></div><div class="ttdeci">std::map&lt; void *, std::function&lt; bool()&gt; &gt; map</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00025">setup.cpp:25</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aa0ccb5ee6d882ee3605ff47745c6467b"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a></div><div class="ttdeci">int val</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00017">constinit_vector.cpp:17</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="setup_8h_xhtml"><div class="ttname"><a href="setup_8h.xhtml">setup.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a591d9bd55fa1f9904547f3f2dcb3796d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a591d9bd55fa1f9904547f3f2dcb3796d">openage::pyinterface::add_py_if_component</a></div><div class="ttdeci">void add_py_if_component(void *thisptr, std::function&lt; bool()&gt; checker)</div><div class="ttdoc">Adds a Python interface component.</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00044">setup.cpp:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a7c3f96bce0d4711ba04a941b5c460b17"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a7c3f96bce0d4711ba04a941b5c460b17">openage::pyinterface::check</a></div><div class="ttdeci">void check()</div><div class="ttdoc">Checks whether all objects that have been registered via add_py_if_component have been properly initi...</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00073">setup.cpp:73</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a9df65dc74cf0e679af16311b54d2219d"><div class="ttname"><a href="setup_8cpp.xhtml#a9df65dc74cf0e679af16311b54d2219d">check_performed</a></div><div class="ttdeci">bool check_performed</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00031">setup.cpp:31</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3eda9726ffb3eeec9b423f300ec70c07"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3eda9726ffb3eeec9b423f300ec70c07">openage::pyinterface::destroy_py_if_component</a></div><div class="ttdeci">void destroy_py_if_component(void *thisptr)</div><div class="ttdoc">Signals that an interface component that has been previously registered via add_py_if_component is no...</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00063">setup.cpp:63</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aff957b2c0c7a7eb98cf68468cc04c1d8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aff957b2c0c7a7eb98cf68468cc04c1d8">openage::util::symbol_name</a></div><div class="ttdeci">std::string symbol_name(const void *addr, bool require_exact_addr, bool no_pure_addrs)</div><div class="ttdoc">Returns the (demangled) symbol name for a given address.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8cpp_source.xhtml#l00098">compiler.cpp:98</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_ae411a50a0e24d32ab564979b2df6ed24"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#ae411a50a0e24d32ab564979b2df6ed24">openage::util::is_symbol</a></div><div class="ttdeci">bool is_symbol(const void *addr)</div><div class="ttdoc">Returns true if the address is the (exact) address of a symbol.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8cpp_source.xhtml#l00136">compiler.cpp:136</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a72d863a2c441cc15b23670e4cf9cfb02"><div class="ttname"><a href="setup_8cpp.xhtml#a72d863a2c441cc15b23670e4cf9cfb02">destroyed_components</a></div><div class="ttdeci">std::set&lt; void * &gt; destroyed_components</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00028">setup.cpp:28</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="setup_8cpp.xhtml">setup.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
