<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::renderer::resources::VertexInputInfo Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::renderer::resources::VertexInputInfo Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::renderer::resources::VertexInputInfo:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info__coll__graph.svg" width="187" height="279"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a308ed14c9ec5b78f99e722838f6c2692"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a308ed14c9ec5b78f99e722838f6c2692">VertexInputInfo</a> (std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt;, <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>, <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>)</td></tr>
<tr class="memdesc:a308ed14c9ec5b78f99e722838f6c2692"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize an input info for array rendering.  <a href="#a308ed14c9ec5b78f99e722838f6c2692">More...</a><br /></td></tr>
<tr class="separator:a308ed14c9ec5b78f99e722838f6c2692"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d8947d3bdc86e93912ef4befc82a8ef"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4d8947d3bdc86e93912ef4befc82a8ef">VertexInputInfo</a> (std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt;, <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>, <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>, <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a>)</td></tr>
<tr class="memdesc:a4d8947d3bdc86e93912ef4befc82a8ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialize an input info for indexed rendering.  <a href="#a4d8947d3bdc86e93912ef4befc82a8ef">More...</a><br /></td></tr>
<tr class="separator:a4d8947d3bdc86e93912ef4befc82a8ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefd82002b1835beb566cc1d3c13ee46d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#aefd82002b1835beb566cc1d3c13ee46d">add_shader_input_map</a> (std::unordered_map&lt; size_t, size_t &gt; &amp;&amp;)</td></tr>
<tr class="separator:aefd82002b1835beb566cc1d3c13ee46d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8514f8a1d3cbc486739b284e9aa6363"><td class="memItemLeft" align="right" valign="top">const std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ae8514f8a1d3cbc486739b284e9aa6363">get_inputs</a> () const</td></tr>
<tr class="memdesc:ae8514f8a1d3cbc486739b284e9aa6363"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the list of per-vertex inputs.  <a href="#ae8514f8a1d3cbc486739b284e9aa6363">More...</a><br /></td></tr>
<tr class="separator:ae8514f8a1d3cbc486739b284e9aa6363"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadb7fe23f4de138d41db62cf561dd30f"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::unordered_map&lt; size_t, size_t &gt; &gt; const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#aadb7fe23f4de138d41db62cf561dd30f">get_shader_input_map</a> () const</td></tr>
<tr class="memdesc:aadb7fe23f4de138d41db62cf561dd30f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the shader input map or an empty optional if it's not present.  <a href="#aadb7fe23f4de138d41db62cf561dd30f">More...</a><br /></td></tr>
<tr class="separator:aadb7fe23f4de138d41db62cf561dd30f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4e8c28446f4ace83ef39b2e8404213c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ab4e8c28446f4ace83ef39b2e8404213c">get_layout</a> () const</td></tr>
<tr class="memdesc:ab4e8c28446f4ace83ef39b2e8404213c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the layout of vertices in memory.  <a href="#ab4e8c28446f4ace83ef39b2e8404213c">More...</a><br /></td></tr>
<tr class="separator:ab4e8c28446f4ace83ef39b2e8404213c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32cc6408584ff4eecd6d43565eed9864"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a32cc6408584ff4eecd6d43565eed9864">vert_size</a> () const</td></tr>
<tr class="memdesc:a32cc6408584ff4eecd6d43565eed9864"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of a single vertex.  <a href="#a32cc6408584ff4eecd6d43565eed9864">More...</a><br /></td></tr>
<tr class="separator:a32cc6408584ff4eecd6d43565eed9864"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fee3c6c1055d24831ff1d3f70f84ce6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a5fee3c6c1055d24831ff1d3f70f84ce6">get_primitive</a> () const</td></tr>
<tr class="memdesc:a5fee3c6c1055d24831ff1d3f70f84ce6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the primitive interpretation mode.  <a href="#a5fee3c6c1055d24831ff1d3f70f84ce6">More...</a><br /></td></tr>
<tr class="separator:a5fee3c6c1055d24831ff1d3f70f84ce6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7d92ae6a61fdb107af66136ef469fef"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac7d92ae6a61fdb107af66136ef469fef">get_index_type</a> () const</td></tr>
<tr class="separator:ac7d92ae6a61fdb107af66136ef469fef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:ac512843d39139e54c1d7f94c7ffff2f4"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a></td></tr>
<tr class="memdesc:ac512843d39139e54c1d7f94c7ffff2f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">What kind of data the vertices contain and how it is laid out in memory.  <a href="#ac512843d39139e54c1d7f94c7ffff2f4">More...</a><br /></td></tr>
<tr class="separator:ac512843d39139e54c1d7f94c7ffff2f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25777981ba7e0b61f05057aa46d13e2e"><td class="memItemLeft" align="right" valign="top">std::optional&lt; std::unordered_map&lt; size_t, size_t &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a25777981ba7e0b61f05057aa46d13e2e">shader_input_map</a></td></tr>
<tr class="separator:a25777981ba7e0b61f05057aa46d13e2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4341539ce916999fff622c87be27c263"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a></td></tr>
<tr class="memdesc:a4341539ce916999fff622c87be27c263"><td class="mdescLeft">&#160;</td><td class="mdescRight">How the vertices are laid out in the data buffer.  <a href="#a4341539ce916999fff622c87be27c263">More...</a><br /></td></tr>
<tr class="separator:a4341539ce916999fff622c87be27c263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc3d84a9d1e0aec615037acd32efa4a5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a></td></tr>
<tr class="memdesc:abc3d84a9d1e0aec615037acd32efa4a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">The primitive type.  <a href="#abc3d84a9d1e0aec615037acd32efa4a5">More...</a><br /></td></tr>
<tr class="separator:abc3d84a9d1e0aec615037acd32efa4a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbb070a581eb6af7094eb621d14294af"><td class="memItemLeft" align="right" valign="top">std::optional&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">index_type</a></td></tr>
<tr class="memdesc:afbb070a581eb6af7094eb621d14294af"><td class="mdescLeft">&#160;</td><td class="mdescRight">The type of indices if they exist.  <a href="#afbb070a581eb6af7094eb621d14294af">More...</a><br /></td></tr>
<tr class="separator:afbb070a581eb6af7094eb621d14294af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Information about vertex input data - which components a vertex contains and how vertices are laid out in memory. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00059">59</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a308ed14c9ec5b78f99e722838f6c2692"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a308ed14c9ec5b78f99e722838f6c2692">&#9670;&nbsp;</a></span>VertexInputInfo() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::resources::VertexInputInfo::VertexInputInfo </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>&#160;</td>
          <td class="paramname"><em>layout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>&#160;</td>
          <td class="paramname"><em>primitive</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize an input info for array rendering. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00039">39</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    : <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>))</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    , <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a>)</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    , <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a>) {}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_abc3d84a9d1e0aec615037acd32efa4a5"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">openage::renderer::resources::VertexInputInfo::primitive</a></div><div class="ttdeci">vertex_primitive_t primitive</div><div class="ttdoc">The primitive type.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00108">mesh_data.h:108</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_ac512843d39139e54c1d7f94c7ffff2f4"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">openage::renderer::resources::VertexInputInfo::inputs</a></div><div class="ttdeci">std::vector&lt; vertex_input_t &gt; inputs</div><div class="ttdoc">What kind of data the vertices contain and how it is laid out in memory.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00097">mesh_data.h:97</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_a4341539ce916999fff622c87be27c263"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">openage::renderer::resources::VertexInputInfo::layout</a></div><div class="ttdeci">vertex_layout_t layout</div><div class="ttdoc">How the vertices are laid out in the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00105">mesh_data.h:105</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

</div>
</div>
<a id="a4d8947d3bdc86e93912ef4befc82a8ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d8947d3bdc86e93912ef4befc82a8ef">&#9670;&nbsp;</a></span>VertexInputInfo() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::resources::VertexInputInfo::VertexInputInfo </td>
          <td>(</td>
          <td class="paramtype">std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a>&#160;</td>
          <td class="paramname"><em>layout</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a>&#160;</td>
          <td class="paramname"><em>primitive</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a>&#160;</td>
          <td class="paramname"><em>index_type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initialize an input info for indexed rendering. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    : <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>))</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    , <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    , <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">index_type</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">index_type</a>) {}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_abc3d84a9d1e0aec615037acd32efa4a5"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">openage::renderer::resources::VertexInputInfo::primitive</a></div><div class="ttdeci">vertex_primitive_t primitive</div><div class="ttdoc">The primitive type.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00108">mesh_data.h:108</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_ac512843d39139e54c1d7f94c7ffff2f4"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">openage::renderer::resources::VertexInputInfo::inputs</a></div><div class="ttdeci">std::vector&lt; vertex_input_t &gt; inputs</div><div class="ttdoc">What kind of data the vertices contain and how it is laid out in memory.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00097">mesh_data.h:97</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_afbb070a581eb6af7094eb621d14294af"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">openage::renderer::resources::VertexInputInfo::index_type</a></div><div class="ttdeci">std::optional&lt; index_t &gt; index_type</div><div class="ttdoc">The type of indices if they exist.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00111">mesh_data.h:111</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_a4341539ce916999fff622c87be27c263"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">openage::renderer::resources::VertexInputInfo::layout</a></div><div class="ttdeci">vertex_layout_t layout</div><div class="ttdoc">How the vertices are laid out in the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00105">mesh_data.h:105</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aefd82002b1835beb566cc1d3c13ee46d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefd82002b1835beb566cc1d3c13ee46d">&#9670;&nbsp;</a></span>add_shader_input_map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::resources::VertexInputInfo::add_shader_input_map </td>
          <td>(</td>
          <td class="paramtype">std::unordered_map&lt; size_t, size_t &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>in_map</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Adds a mesh-&gt;shader input mapping to the info. By default, attributes are mapped one-to-one according to their order in the input vector, e.g. (vec2 pos, vec2 uv) maps into (0: vec2 pos, 1: vec2 uv) in the shader. However, if a shader skips indices in the layout or takes its inputs in a different order, this can be specified using the map. The map entries must have the format (index_in_vector, index_in_shader) and will overwrite the default mapping. If an entry for a given index in the vector is missing, that attribute and its data will be skipped. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                                                                    {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> mapping : in_map) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(mapping.first &gt;= this-&gt;inputs.size())) {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;A shader input mapping is out-of-range, exceeding the available number of attributes.&quot;</span>);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a25777981ba7e0b61f05057aa46d13e2e">shader_input_map</a> = <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(in_map);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_a25777981ba7e0b61f05057aa46d13e2e"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a25777981ba7e0b61f05057aa46d13e2e">openage::renderer::resources::VertexInputInfo::shader_input_map</a></div><div class="ttdeci">std::optional&lt; std::unordered_map&lt; size_t, size_t &gt; &gt; shader_input_map</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00102">mesh_data.h:102</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="mesh__data_8h_source.xhtml#l00102">shader_input_map</a>, and <a class="el" href="compiler_8h_source.xhtml#l00053">unlikely</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_aefd82002b1835beb566cc1d3c13ee46d_cgraph.svg" width="343" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ac7d92ae6a61fdb107af66136ef469fef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac7d92ae6a61fdb107af66136ef469fef">&#9670;&nbsp;</a></span>get_index_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a> &gt; openage::renderer::resources::VertexInputInfo::get_index_type </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Returns the type of indices used for indexed drawing, which may not be present if array drawing is used. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00084">84</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                           {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">index_type</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_afbb070a581eb6af7094eb621d14294af"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#afbb070a581eb6af7094eb621d14294af">openage::renderer::resources::VertexInputInfo::index_type</a></div><div class="ttdeci">std::optional&lt; index_t &gt; index_type</div><div class="ttdoc">The type of indices if they exist.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00111">mesh_data.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00111">index_type</a>.</p>

</div>
</div>
<a id="ae8514f8a1d3cbc486739b284e9aa6363"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8514f8a1d3cbc486739b284e9aa6363">&#9670;&nbsp;</a></span>get_inputs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::vector&lt; <a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a> &gt; &amp; openage::renderer::resources::VertexInputInfo::get_inputs </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the list of per-vertex inputs. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00068">68</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                                   {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_ac512843d39139e54c1d7f94c7ffff2f4"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">openage::renderer::resources::VertexInputInfo::inputs</a></div><div class="ttdeci">std::vector&lt; vertex_input_t &gt; inputs</div><div class="ttdoc">What kind of data the vertices contain and how it is laid out in memory.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00097">mesh_data.h:97</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00097">inputs</a>.</p>

</div>
</div>
<a id="ab4e8c28446f4ace83ef39b2e8404213c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab4e8c28446f4ace83ef39b2e8404213c">&#9670;&nbsp;</a></span>get_layout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a> openage::renderer::resources::VertexInputInfo::get_layout </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the layout of vertices in memory. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00076">76</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                  {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">layout</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_a4341539ce916999fff622c87be27c263"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a4341539ce916999fff622c87be27c263">openage::renderer::resources::VertexInputInfo::layout</a></div><div class="ttdeci">vertex_layout_t layout</div><div class="ttdoc">How the vertices are laid out in the data buffer.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00105">mesh_data.h:105</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00105">layout</a>.</p>

</div>
</div>
<a id="a5fee3c6c1055d24831ff1d3f70f84ce6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fee3c6c1055d24831ff1d3f70f84ce6">&#9670;&nbsp;</a></span>get_primitive()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a> openage::renderer::resources::VertexInputInfo::get_primitive </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the primitive interpretation mode. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00080">80</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                                                        {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">primitive</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_abc3d84a9d1e0aec615037acd32efa4a5"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#abc3d84a9d1e0aec615037acd32efa4a5">openage::renderer::resources::VertexInputInfo::primitive</a></div><div class="ttdeci">vertex_primitive_t primitive</div><div class="ttdoc">The primitive type.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00108">mesh_data.h:108</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00108">primitive</a>.</p>

</div>
</div>
<a id="aadb7fe23f4de138d41db62cf561dd30f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadb7fe23f4de138d41db62cf561dd30f">&#9670;&nbsp;</a></span>get_shader_input_map()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt; std::unordered_map&lt; size_t, size_t &gt; &gt; const  &amp; openage::renderer::resources::VertexInputInfo::get_shader_input_map </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the shader input map or an empty optional if it's not present. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                                                                                                 {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a25777981ba7e0b61f05057aa46d13e2e">shader_input_map</a>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_a25777981ba7e0b61f05057aa46d13e2e"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#a25777981ba7e0b61f05057aa46d13e2e">openage::renderer::resources::VertexInputInfo::shader_input_map</a></div><div class="ttdeci">std::optional&lt; std::unordered_map&lt; size_t, size_t &gt; &gt; shader_input_map</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00102">mesh_data.h:102</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00102">shader_input_map</a>.</p>

</div>
</div>
<a id="a32cc6408584ff4eecd6d43565eed9864"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32cc6408584ff4eecd6d43565eed9864">&#9670;&nbsp;</a></span>vert_size()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">size_t openage::renderer::resources::VertexInputInfo::vert_size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the size of a single vertex. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                        {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordtype">size_t</span> size = 0;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> in : this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">inputs</a>) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        size += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">vertex_input_size</a>(in);</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    }</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> size;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_xhtml_ac512843d39139e54c1d7f94c7ffff2f4"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml#ac512843d39139e54c1d7f94c7ffff2f4">openage::renderer::resources::VertexInputInfo::inputs</a></div><div class="ttdeci">std::vector&lt; vertex_input_t &gt; inputs</div><div class="ttdoc">What kind of data the vertices contain and how it is laid out in memory.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8h_source.xhtml#l00097">mesh_data.h:97</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a11c3247d50ab63967293c59f92c47368"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">openage::renderer::resources::vertex_input_size</a></div><div class="ttdeci">size_t vertex_input_size(vertex_input_t in)</div><div class="ttdoc">Returns the size in bytes of a per-vertex input.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8cpp_source.xhtml#l00031">mesh_data.cpp:31</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="mesh__data_8h_source.xhtml#l00097">inputs</a>, and <a class="el" href="mesh__data_8cpp_source.xhtml#l00031">openage::renderer::resources::vertex_input_size()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info_a32cc6408584ff4eecd6d43565eed9864_cgraph.svg" width="419" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="afbb070a581eb6af7094eb621d14294af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afbb070a581eb6af7094eb621d14294af">&#9670;&nbsp;</a></span>index_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;<a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a54d05175ef647265b520f9e562bb34f8">index_t</a>&gt; openage::renderer::resources::VertexInputInfo::index_type</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The type of indices if they exist. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00111">111</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="mesh__data_8cpp_source.xhtml#l00084">get_index_type()</a>.</p>

</div>
</div>
<a id="ac512843d39139e54c1d7f94c7ffff2f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac512843d39139e54c1d7f94c7ffff2f4">&#9670;&nbsp;</a></span>inputs</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a342b8db8dc29b5bddbb3b4ae987d1ff3">vertex_input_t</a>&gt; openage::renderer::resources::VertexInputInfo::inputs</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>What kind of data the vertices contain and how it is laid out in memory. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00097">97</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="mesh__data_8cpp_source.xhtml#l00068">get_inputs()</a>, and <a class="el" href="mesh__data_8cpp_source.xhtml#l00060">vert_size()</a>.</p>

</div>
</div>
<a id="a4341539ce916999fff622c87be27c263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4341539ce916999fff622c87be27c263">&#9670;&nbsp;</a></span>layout</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50c">vertex_layout_t</a> openage::renderer::resources::VertexInputInfo::layout</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>How the vertices are laid out in the data buffer. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00105">105</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="mesh__data_8cpp_source.xhtml#l00076">get_layout()</a>.</p>

</div>
</div>
<a id="abc3d84a9d1e0aec615037acd32efa4a5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abc3d84a9d1e0aec615037acd32efa4a5">&#9670;&nbsp;</a></span>primitive</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a3d2603af7637716eccfdfa718f01bcb7">vertex_primitive_t</a> openage::renderer::resources::VertexInputInfo::primitive</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The primitive type. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00108">108</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="mesh__data_8cpp_source.xhtml#l00080">get_primitive()</a>.</p>

</div>
</div>
<a id="a25777981ba7e0b61f05057aa46d13e2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25777981ba7e0b61f05057aa46d13e2e">&#9670;&nbsp;</a></span>shader_input_map</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::optional&lt;std::unordered_map&lt;size_t, size_t&gt; &gt; openage::renderer::resources::VertexInputInfo::shader_input_map</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>An optional attribute specifying how vertex inputs in the mesh map to vertex inputs in a given shader, for example to reorder inputs of the form (pos, uv) into a shader that takes in (uv, pos) inputs. </p>

<p class="definition">Definition at line <a class="el" href="mesh__data_8h_source.xhtml#l00102">102</a> of file <a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="mesh__data_8cpp_source.xhtml#l00050">add_shader_input_map()</a>, and <a class="el" href="mesh__data_8cpp_source.xhtml#l00072">get_shader_input_map()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/resources/<a class="el" href="mesh__data_8h_source.xhtml">mesh_data.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/resources/<a class="el" href="mesh__data_8cpp_source.xhtml">mesh_data.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer.xhtml">renderer</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer_1_1resources.xhtml">resources</a></li><li class="navelem"><a class="el" href="classopenage_1_1renderer_1_1resources_1_1_vertex_input_info.xhtml">VertexInputInfo</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
