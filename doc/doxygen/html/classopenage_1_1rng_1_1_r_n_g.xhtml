<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::rng::RNG Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1rng_1_1_r_n_g.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#pri-static-attribs">Static Private Attributes</a> &#124;
<a href="classopenage_1_1rng_1_1_r_n_g-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::rng::RNG Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="rng_8h_source.xhtml">rng.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for openage::rng::RNG:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1rng_1_1_r_n_g__coll__graph.svg" width="144" height="279"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ade1468036c9d6dcb19a7d32b500e049b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ade1468036c9d6dcb19a7d32b500e049b">RNG</a> (uint64_t <a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a76d8d1e95491447e8b8ed7946ff4c695">seed</a>)</td></tr>
<tr class="separator:ade1468036c9d6dcb19a7d32b500e049b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a75b6d2b1900c1166d7aeea9c777f6f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a7a75b6d2b1900c1166d7aeea9c777f6f">RNG</a> (const void *data, size_t count)</td></tr>
<tr class="separator:a7a75b6d2b1900c1166d7aeea9c777f6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7afae418b44df4e10bbb3fcd09c21f56"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a7afae418b44df4e10bbb3fcd09c21f56">RNG</a> (const std::string &amp;instr)</td></tr>
<tr class="separator:a7afae418b44df4e10bbb3fcd09c21f56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d14a4486213742ed28bcdd360cf0dc9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a7d14a4486213742ed28bcdd360cf0dc9">RNG</a> (std::istream &amp;instream)</td></tr>
<tr class="separator:a7d14a4486213742ed28bcdd360cf0dc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76d8d1e95491447e8b8ed7946ff4c695"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a76d8d1e95491447e8b8ed7946ff4c695">seed</a> (uint64_t <a class="el" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>)</td></tr>
<tr class="separator:a76d8d1e95491447e8b8ed7946ff4c695"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a196e215960939e55ac626c9c75a451e0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a196e215960939e55ac626c9c75a451e0">seed</a> (const void *data, size_t count)</td></tr>
<tr class="separator:a196e215960939e55ac626c9c75a451e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f8c2c7e00ab2531e0e6c33ae70e154"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a95f8c2c7e00ab2531e0e6c33ae70e154">random</a> ()</td></tr>
<tr class="separator:a95f8c2c7e00ab2531e0e6c33ae70e154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af15bf503f42fbb7d08fa5273065ae0ef"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#af15bf503f42fbb7d08fa5273065ae0ef">operator()</a> ()</td></tr>
<tr class="separator:af15bf503f42fbb7d08fa5273065ae0ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7b2ba8c495b7ee100b7708b633bc060"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ad7b2ba8c495b7ee100b7708b633bc060">random_range</a> (uint64_t lower, uint64_t upper)</td></tr>
<tr class="separator:ad7b2ba8c495b7ee100b7708b633bc060"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab24ce8fabde7df2ec900e3e1883281a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ab24ce8fabde7df2ec900e3e1883281a4">probability</a> (double prob)</td></tr>
<tr class="separator:ab24ce8fabde7df2ec900e3e1883281a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d906c2de63a31a89589a34bac2a3dd8"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a2d906c2de63a31a89589a34bac2a3dd8">real</a> ()</td></tr>
<tr class="separator:a2d906c2de63a31a89589a34bac2a3dd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8fa5c414eb4888ee638441585fdcec"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a7f8fa5c414eb4888ee638441585fdcec">real_range</a> (double lower, double upper)</td></tr>
<tr class="separator:a7f8fa5c414eb4888ee638441585fdcec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a4af9133abbcd242c9adf3921bbd89"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a77a4af9133abbcd242c9adf3921bbd89">fill</a> (uint64_t *data, size_t len)</td></tr>
<tr class="separator:a77a4af9133abbcd242c9adf3921bbd89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7dbd0bef0c06a30b6724f2352af833c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ab7dbd0bef0c06a30b6724f2352af833c">fill_real</a> (double *data, size_t len)</td></tr>
<tr class="separator:ab7dbd0bef0c06a30b6724f2352af833c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36e03ae10106b4de88c7af38f0c0dedc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a36e03ae10106b4de88c7af38f0c0dedc">discard</a> (size_t num_discard)</td></tr>
<tr class="separator:a36e03ae10106b4de88c7af38f0c0dedc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a144e524ab2720b65d7369fdfaf6f3136"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a144e524ab2720b65d7369fdfaf6f3136">to_stream</a> (std::ostream &amp;out) const</td></tr>
<tr class="separator:a144e524ab2720b65d7369fdfaf6f3136"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7d9467b4f3d76c68a9a7f85a78510cd"><td class="memItemLeft" align="right" valign="top">std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ae7d9467b4f3d76c68a9a7f85a78510cd">from_stream</a> (std::istream &amp;in)</td></tr>
<tr class="separator:ae7d9467b4f3d76c68a9a7f85a78510cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2fc24293e9eb420a93a696b544d812"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a3d2fc24293e9eb420a93a696b544d812">to_string</a> () const</td></tr>
<tr class="separator:a3d2fc24293e9eb420a93a696b544d812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4167cc984c7979737fe798e9b79265f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ad4167cc984c7979737fe798e9b79265f">from_string</a> (const std::string &amp;instr)</td></tr>
<tr class="separator:ad4167cc984c7979737fe798e9b79265f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:accd55f47ffd4049900e96f032f0a9375"><td class="memItemLeft" align="right" valign="top">static constexpr uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#accd55f47ffd4049900e96f032f0a9375">max</a> ()</td></tr>
<tr class="separator:accd55f47ffd4049900e96f032f0a9375"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb4883daeb3ccf4d99167a89ab1513da"><td class="memItemLeft" align="right" valign="top">static constexpr uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#abb4883daeb3ccf4d99167a89ab1513da">min</a> ()</td></tr>
<tr class="separator:abb4883daeb3ccf4d99167a89ab1513da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a6b0ce95fbbca6511dc9f1a683fa452f9"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a6b0ce95fbbca6511dc9f1a683fa452f9">state</a> [2]</td></tr>
<tr class="separator:a6b0ce95fbbca6511dc9f1a683fa452f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-static-attribs"></a>
Static Private Attributes</h2></td></tr>
<tr class="memitem:ad04d259df8af8d4f0bc1deed13641a12"><td class="memItemLeft" align="right" valign="top">static constexpr size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#ad04d259df8af8d4f0bc1deed13641a12">discard_on_seed</a> = 50</td></tr>
<tr class="separator:ad04d259df8af8d4f0bc1deed13641a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class holds an xorshift128+ rng, as well as utility generator functions </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00016">16</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ade1468036c9d6dcb19a7d32b500e049b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade1468036c9d6dcb19a7d32b500e049b">&#9670;&nbsp;</a></span>RNG() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::rng::RNG::RNG </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>seed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Creates an rng and seeds it with the 64 bit seed </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">seed</td><td>The inital seed for the following number generation. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00033">33</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a7a75b6d2b1900c1166d7aeea9c777f6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a75b6d2b1900c1166d7aeea9c777f6f">&#9670;&nbsp;</a></span>RNG() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::rng::RNG::RNG </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the rng using data from the buffer pointed to by data </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>The buffer that contains data for seeding the rng </td></tr>
    <tr><td class="paramname">count</td><td>The number of bytes in the buffer </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if 0 bytes are passed </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00038">38</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a7afae418b44df4e10bbb3fcd09c21f56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7afae418b44df4e10bbb3fcd09c21f56">&#9670;&nbsp;</a></span>RNG() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::rng::RNG::RNG </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>instr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads the rng in from the passed string. If you want to use the data in the string as a seed, then pass the c_str() to rng(const void*, size_t). </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">instr</td><td>The string from which the rng is serialized </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if the rng cannot be read from the string </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00043">43</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a7d14a4486213742ed28bcdd360cf0dc9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d14a4486213742ed28bcdd360cf0dc9">&#9670;&nbsp;</a></span>RNG() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::rng::RNG::RNG </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>instream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads the rng in from the passed std::istream. This serializes the rng, and does not use the data as a random seed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">instream</td><td>The input stream for serializing the rng </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if stream initialization fails </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a36e03ae10106b4de88c7af38f0c0dedc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36e03ae10106b4de88c7af38f0c0dedc">&#9670;&nbsp;</a></span>discard()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::discard </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>num_discard</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Discards num_discard numbers from the generator. </p>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00130">130</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a77a4af9133abbcd242c9adf3921bbd89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77a4af9133abbcd242c9adf3921bbd89">&#9670;&nbsp;</a></span>fill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::fill </td>
          <td>(</td>
          <td class="paramtype">uint64_t *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Effeciently fills a chunk of 64 bit integers. Gives identical result to calling <a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a95f8c2c7e00ab2531e0e6c33ae70e154">random()</a> len times </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>The buffer to be filled with random numbers </td></tr>
    <tr><td class="paramname">len</td><td>the length of the data </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00120">120</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="ab7dbd0bef0c06a30b6724f2352af833c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7dbd0bef0c06a30b6724f2352af833c">&#9670;&nbsp;</a></span>fill_real()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::fill_real </td>
          <td>(</td>
          <td class="paramtype">double *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>len</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Fills an array of doubles with values in [0, 1) Gives identical results as <a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml#a2d906c2de63a31a89589a34bac2a3dd8">real()</a> but more effeciently </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>A pointer t0 the buffer of doubles </td></tr>
    <tr><td class="paramname">len</td><td>The length of the buffer </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00138">138</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="ae7d9467b4f3d76c68a9a7f85a78510cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7d9467b4f3d76c68a9a7f85a78510cd">&#9670;&nbsp;</a></span>from_stream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::istream &amp; openage::rng::RNG::from_stream </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>in</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads the rng state from a stream </p><dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if reading the stream fails </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00157">157</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="ad4167cc984c7979737fe798e9b79265f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4167cc984c7979737fe798e9b79265f">&#9670;&nbsp;</a></span>from_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::from_string </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>instr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Reads the rng in from a string </p><dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if reading from the string fails </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="accd55f47ffd4049900e96f032f0a9375"></a>
<h2 class="memtitle"><span class="permalink"><a href="#accd55f47ffd4049900e96f032f0a9375">&#9670;&nbsp;</a></span>max()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr uint64_t openage::rng::RNG::max </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00165">165</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="abb4883daeb3ccf4d99167a89ab1513da"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb4883daeb3ccf4d99167a89ab1513da">&#9670;&nbsp;</a></span>min()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static constexpr uint64_t openage::rng::RNG::min </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00170">170</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="af15bf503f42fbb7d08fa5273065ae0ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af15bf503f42fbb7d08fa5273065ae0ef">&#9670;&nbsp;</a></span>operator()()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t openage::rng::RNG::operator() </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieves a random value from the generator </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00077">77</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="ab24ce8fabde7df2ec900e3e1883281a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab24ce8fabde7df2ec900e3e1883281a4">&#9670;&nbsp;</a></span>probability()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::rng::RNG::probability </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>prob</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns true with the passed probability </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00093">93</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="a95f8c2c7e00ab2531e0e6c33ae70e154"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95f8c2c7e00ab2531e0e6c33ae70e154">&#9670;&nbsp;</a></span>random()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t openage::rng::RNG::random </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Retrieves a random value from the generator </p>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00089">89</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="ad7b2ba8c495b7ee100b7708b633bc060"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7b2ba8c495b7ee100b7708b633bc060">&#9670;&nbsp;</a></span>random_range()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t openage::rng::RNG::random_range </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>upper</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns a random integer in the range [lower, upper] </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00085">85</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="a2d906c2de63a31a89589a34bac2a3dd8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d906c2de63a31a89589a34bac2a3dd8">&#9670;&nbsp;</a></span>real()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double openage::rng::RNG::real </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Retrieves a double in [0, 1) </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00101">101</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="a7f8fa5c414eb4888ee638441585fdcec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7f8fa5c414eb4888ee638441585fdcec">&#9670;&nbsp;</a></span>real_range()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">double openage::rng::RNG::real_range </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>lower</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>upper</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns a double in the range [min, max) </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00109">109</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="a76d8d1e95491447e8b8ed7946ff4c695"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76d8d1e95491447e8b8ed7946ff4c695">&#9670;&nbsp;</a></span>seed() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::seed </td>
          <td>(</td>
          <td class="paramtype">uint64_t&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Seeds with the 64 bit seed </p>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a196e215960939e55ac626c9c75a451e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a196e215960939e55ac626c9c75a451e0">&#9670;&nbsp;</a></span>seed() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::rng::RNG::seed </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Initializes the rng using bits from the buffer pointed to by data </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>The buffer that contains data for seeding the rng </td></tr>
    <tr><td class="paramname">count</td><td>The number of bytes in the buffer </td></tr>
  </table>
  </dd>
</dl>
<dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if 0 bytes are passed </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00058">58</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a144e524ab2720b65d7369fdfaf6f3136"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a144e524ab2720b65d7369fdfaf6f3136">&#9670;&nbsp;</a></span>to_stream()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream &amp; openage::rng::RNG::to_stream </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Outputs the rng state to a stream </p><dl class="exception"><dt>Exceptions</dt><dd>
  <table class="exception">
    <tr><td class="paramname">Error</td><td>if writing data fails </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00148">148</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<a id="a3d2fc24293e9eb420a93a696b544d812"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d2fc24293e9eb420a93a696b544d812">&#9670;&nbsp;</a></span>to_string()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string openage::rng::RNG::to_string </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Writes the rng state to a string </p>

<p class="definition">Definition at line <a class="el" href="rng_8cpp_source.xhtml#l00166">166</a> of file <a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ad04d259df8af8d4f0bc1deed13641a12"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad04d259df8af8d4f0bc1deed13641a12">&#9670;&nbsp;</a></span>discard_on_seed</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr size_t openage::rng::RNG::discard_on_seed = 50</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>elements to discard on seed to escape from high-zero seeds </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00185">185</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<a id="a6b0ce95fbbca6511dc9f1a683fa452f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b0ce95fbbca6511dc9f1a683fa452f9">&#9670;&nbsp;</a></span>state</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">uint64_t openage::rng::RNG::state[2]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The internal state array </p>

<p class="definition">Definition at line <a class="el" href="rng_8h_source.xhtml#l00179">179</a> of file <a class="el" href="rng_8h_source.xhtml">rng.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>libopenage/rng/<a class="el" href="rng_8h_source.xhtml">rng.h</a></li>
<li>libopenage/rng/<a class="el" href="rng_8cpp_source.xhtml">rng.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1rng.xhtml">rng</a></li><li class="navelem"><a class="el" href="classopenage_1_1rng_1_1_r_n_g.xhtml">RNG</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
