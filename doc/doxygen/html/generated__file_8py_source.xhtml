<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/generated_file.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('generated__file_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">generated_file.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="generated__file_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1dataformat_1_1generated__file.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"># TODO pylint: disable=C,R</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">from</span> string <span class="keyword">import</span> Template</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">from</span> .content_snippet <span class="keyword">import</span> ContentSnippet, SectionType</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> .header_snippet <span class="keyword">import</span> HeaderSnippet</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml">GeneratedFile</a>:</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="stringliteral">    represents a writable file that was generated automatically.</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="stringliteral">    it&#39;s filled by many ContentSnippets before its contents are generated.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml">   18</a></span>&#160;    namespaces = (<span class="stringliteral">&quot;openage&quot;</span>, <span class="stringliteral">&quot;gamedata&quot;</span>)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">   20</a></span>&#160;    @classmethod</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aca0798e335bb1af131dc172dfa3957a6">namespacify</a>(cls, var_type):</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;%s::%s&quot;</span> % (<span class="stringliteral">&quot;::&quot;</span>.join(cls.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">namespaces</a>), var_type)</div><div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aca0798e335bb1af131dc172dfa3957a6">   23</a></span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment"># default preferences for output modes</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    default_preferences = {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="stringliteral">&quot;folder&quot;</span>:         <span class="stringliteral">&quot;&quot;</span>,</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a3ffd3d8a611c4f3c35fe6a9aa5a70443">   27</a></span>&#160;        <span class="stringliteral">&quot;file_suffix&quot;</span>:    <span class="stringliteral">&quot;&quot;</span>,</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="stringliteral">&quot;process&quot;</span>:        <span class="keyword">True</span>,</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="stringliteral">&quot;content_prefix&quot;</span>: Template(<span class="stringliteral">&quot;&quot;</span>),</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="stringliteral">&quot;content_suffix&quot;</span>: Template(<span class="stringliteral">&quot;&quot;</span>),</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment"># override the default preferences with the</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment"># configuration for all the output formats</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    output_preferences = {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="stringliteral">&quot;csv&quot;</span>: {</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a22fe1959583948bbcb76cd7c55341154">   37</a></span>&#160;            <span class="stringliteral">&quot;folder&quot;</span>:      <span class="stringliteral">&quot;&quot;</span>,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="stringliteral">&quot;file_suffix&quot;</span>: <span class="stringliteral">&quot;.docx&quot;</span>,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            <span class="stringliteral">&quot;process&quot;</span>:     <span class="keyword">False</span>,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        },</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="comment"># main file structure for generated headers</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="stringliteral">&quot;struct&quot;</span>: {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="stringliteral">&quot;file_suffix&quot;</span>: <span class="stringliteral">&quot;.gen.h&quot;</span>,</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="stringliteral">&quot;content_prefix&quot;</span>: Template(</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="stringliteral">&quot;#pragma once\n&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="stringliteral">&quot;${headers}\n&quot;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="stringliteral">&quot;\n\n&quot;</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="stringliteral">&quot;${opennamespaces}\n&quot;</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            ),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="stringliteral">&quot;content_suffix&quot;</span>: Template(</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                <span class="stringliteral">&quot;${closenamespaces}\n&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            ),</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        },</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="comment"># file structure for generated c++ implementation files</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="stringliteral">&quot;structimpl&quot;</span>: {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="stringliteral">&quot;file_suffix&quot;</span>:    <span class="stringliteral">&quot;.gen.cpp&quot;</span>,</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="stringliteral">&quot;content_prefix&quot;</span>: Template(</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;                <span class="stringliteral">&quot;${headers}\n&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="stringliteral">&quot;${opennamespaces}\n&quot;</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            ),</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="stringliteral">&quot;content_suffix&quot;</span>: Template(</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="stringliteral">&quot;${closenamespaces}\n&quot;</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            ),</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ab6e3f9f22dad619d3b2202e060539904">__init__</a>(self, file_name, format_):</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a>  = set()</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ab6e3f9f22dad619d3b2202e060539904">   76</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a>  = set()</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">   77</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">typerefs</a>  = set()</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">   78</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a> = file_name</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">   79</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a>   = format_</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">   80</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">included_typedefs</a> = set()</div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">   81</a></span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">   82</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">add_snippet</a>(self, snippet, inherit_typedefs=True):</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(snippet, ContentSnippet):</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">   84</a></span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;only ContentSnippets can be added to generated files, &quot;</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                            <span class="stringliteral">&quot;tried %s&quot;</span> % type(snippet))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> snippet.file_name == self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a> <span class="keywordflow">and</span> <span class="keywordflow">not</span> snippet.file_name:</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;only snippets with the same target file_name &quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                            <span class="stringliteral">&quot;can be put into the same generated file.&quot;</span>)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordflow">if</span> snippet <span class="keywordflow">not</span> <span class="keywordflow">in</span> (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a>):</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a>.add(snippet)</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keywordflow">if</span> inherit_typedefs:</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;                self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a> |= snippet.typedefs</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">typerefs</a> |= snippet.typerefs</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">included_typedefs</a> |= snippet.typedefs</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            <span class="comment"># add all included snippets, namely HeaderSnippets for #include lol.h</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">for</span> s <span class="keywordflow">in</span> snippet.includes:</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">add_snippet</a>(s, inherit_typedefs=<span class="keyword">False</span>)</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a04eade25083ec6a497f465c0e4675508">get_include_snippet</a>(self, file_name=True):</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="stringliteral">        return a snippet with a header entry for this file to be able to include it.</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a04eade25083ec6a497f465c0e4675508">  109</a></span>&#160;        ret = <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1header__snippet_1_1_header_snippet.xhtml">HeaderSnippet</a>(</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;            self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a> + self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a22fe1959583948bbcb76cd7c55341154">output_preferences</a>[self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a>][<span class="stringliteral">&quot;file_suffix&quot;</span>],</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            file_name=file_name,</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            is_global=<span class="keyword">False</span>,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        )</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        ret.typedefs |= self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a37aae935de963e1abdb6f501c6e75076">create_xref_headers</a>(self, file_pool):</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">        discover and add needed header snippets for type references accross files.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a37aae935de963e1abdb6f501c6e75076">  123</a></span>&#160;        new_resolves = set()</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">for</span> include_candidate <span class="keywordflow">in</span> file_pool:</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            candidate_resolves = include_candidate.typedefs &amp; (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">typerefs</a> - self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a>)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">if</span> len(candidate_resolves) &gt; 0:</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                new_header = include_candidate.get_include_snippet()</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">add_snippet</a>(new_header, inherit_typedefs=<span class="keyword">False</span>)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                new_resolves |= candidate_resolves</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        still_missing = ((self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">typerefs</a> - self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">typedefs</a>) - self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">included_typedefs</a>) - new_resolves</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">if</span> len(still_missing) &gt; 0:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;still missing types for %s:\n%s&quot;</span> % (self, still_missing))</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aa99235f1e4f21d5c57e7e95da321b33e">create_forward_declarations</a>(self, file_pool):</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="stringliteral">        create forward declarations for this generated file.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="stringliteral">        a forward declatation is needed when a referenced type is defined</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        in an included header, that includes a header that includes the first one.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aa99235f1e4f21d5c57e7e95da321b33e">  146</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ad1e3e3ba7c5728c42f2c8d9619a93e7a">generate</a>(self):</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">        actually generate the content for this file.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ad1e3e3ba7c5728c42f2c8d9619a93e7a">  151</a></span>&#160;        <span class="comment"># TODO: create new snippets for resolving cyclic dependencies (forward declarations)</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="comment"># apply preference overrides</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        prefs = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a3ffd3d8a611c4f3c35fe6a9aa5a70443">default_preferences</a>.copy()</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        prefs.update(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a22fe1959583948bbcb76cd7c55341154">output_preferences</a>[self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a>])</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment"># if there is no need for sorting and resolving dependencies, just return the snippets</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="comment"># as they have been added</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> prefs[<span class="stringliteral">&quot;process&quot;</span>]:</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            file_data = <span class="stringliteral">&quot;\n&quot;</span>.join(snippet.get_data() <span class="keywordflow">for</span> snippet <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a>)</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keywordflow">return</span> prefs[<span class="stringliteral">&quot;folder&quot;</span>] + <span class="stringliteral">&#39;/&#39;</span> + self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a> + prefs[<span class="stringliteral">&quot;file_suffix&quot;</span>], file_data</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        snippets_header = {s <span class="keywordflow">for</span> s <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a> <span class="keywordflow">if</span> s.section == SectionType.section_header}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        snippets_body   = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a> - snippets_header</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span> len(snippets_body) == 0:</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;generated file %s has no body snippets!&quot;</span> % (<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self)))</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="comment"># type references in this file that could not be resolved</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        missing_types = set()</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="comment"># put snippets into list in correct order</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="comment"># snippets will be written according to this [(snippet, prio), ...] list</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        snippets_priorized = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        <span class="comment"># determine each snippet&#39;s priority by number of type references and definitions</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment"># smaller prio means written earlier in the file.</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment"># also, find snippet dependencies</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keywordflow">for</span> s <span class="keywordflow">in</span> sorted(snippets_body):</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            snippet_prio = len(s.typerefs) - len(s.typedefs)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            snippets_priorized.append((s, snippet_prio))</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="comment"># let each snippet find others as dependencies</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            missing_types |= s.add_required_snippets(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">snippets</a>)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keywordflow">if</span> len(missing_types) &gt; 0:</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            <span class="keyword">import</span> pprint</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;missing types for %s:\n%s&quot;</span> % (<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self), pprint.pformat(missing_types)))</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="comment"># sort snippets according to their priority determined above</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        snippets_priorized_sorted = sorted(snippets_priorized, key=<span class="keyword">lambda</span> s: s[1])</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment"># create list of snippets to be put in the generated file.</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="comment"># [(snippet, prio)]</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        snippets_body_sorted = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        snippets_body_set = set()</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="comment"># fetch list of all required snippets for all snippets to put in the file</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="keywordflow">for</span> snippet, _ <span class="keywordflow">in</span> snippets_priorized_sorted:</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            snippet_candidates = snippet.get_required_snippets()</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            <span class="keywordflow">for</span> s <span class="keywordflow">in</span> snippet_candidates:</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;                <span class="keywordflow">if</span> s.section == SectionType.section_header:</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                    <span class="keywordflow">if</span> s <span class="keywordflow">not</span> <span class="keywordflow">in</span> snippets_header:</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;                        snippets_header.add(s)</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;                        <span class="keywordflow">continue</span></div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;                <span class="keywordflow">elif</span> s.section == SectionType.section_body:</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                    <span class="keywordflow">if</span> s <span class="keywordflow">not</span> <span class="keywordflow">in</span> snippets_body_set:</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;                        snippets_body_sorted.append(s)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;                        snippets_body_set.add(s)</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                        <span class="keywordflow">continue</span></div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment"># these snippets will be written outside the namespace</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="comment"># in the #include section</span></div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        snippets_header_sorted = sorted(snippets_header, key=<span class="keyword">lambda</span> h: (<span class="keywordflow">not</span> h.is_global, h.name))</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="comment"># merge file contents</span></div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        header_data = <span class="stringliteral">&quot;&quot;</span>.join(header.get_data() <span class="keywordflow">for</span> header <span class="keywordflow">in</span> snippets_header_sorted)</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        file_data   = <span class="stringliteral">&quot;\n&quot;</span>.join(snippet.get_data() <span class="keywordflow">for</span> snippet <span class="keywordflow">in</span> snippets_body_sorted)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="comment"># fill file header and footer with the generated file_name</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        content_prefix = prefs[<span class="stringliteral">&quot;content_prefix&quot;</span>].substitute(</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            headers=header_data,</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;            opennamespaces=<span class="stringliteral">&quot;\n&quot;</span>.join([<span class="stringliteral">&quot;namespace %s {&quot;</span> % spc</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                      <span class="keywordflow">for</span> spc <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">namespaces</a>]),</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        )</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        content_suffix = prefs[<span class="stringliteral">&quot;content_suffix&quot;</span>].substitute(</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            closenamespaces=<span class="stringliteral">&quot;\n&quot;</span>.join([<span class="stringliteral">&quot;} // %s&quot;</span> % spc</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                                       <span class="keywordflow">for</span> spc <span class="keywordflow">in</span> reversed(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">namespaces</a>)]),</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        )</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment"># this is the final file content</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        file_data = <span class="stringliteral">&quot;&quot;</span>.join((content_prefix, file_data, content_suffix))</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <span class="comment"># whee, return (file_name, content)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">return</span> prefs[<span class="stringliteral">&quot;folder&quot;</span>] + <span class="stringliteral">&#39;/&#39;</span> + self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a> + prefs[<span class="stringliteral">&quot;file_suffix&quot;</span>], file_data</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a2ee4f758fdcdce9c8e9d22406d1865d9">__repr__</a>(self):</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;GeneratedFile&lt;%s&gt;(file_name=%s)&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">format_</a>, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">file_name</a>)</div><div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a9a160d2930b05acfa392333022dd8310"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a9a160d2930b05acfa392333022dd8310">openage.convert.dataformat.generated_file.GeneratedFile.typerefs</a></div><div class="ttdeci">typerefs</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00079">generated_file.py:79</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a066f78e6d40708f497833c4280a75217"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a066f78e6d40708f497833c4280a75217">openage.convert.dataformat.generated_file.GeneratedFile.add_snippet</a></div><div class="ttdeci">def add_snippet(self, snippet, inherit_typedefs=True)</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00084">generated_file.py:84</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a3ffd3d8a611c4f3c35fe6a9aa5a70443"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a3ffd3d8a611c4f3c35fe6a9aa5a70443">openage.convert.dataformat.generated_file.GeneratedFile.default_preferences</a></div><div class="ttdeci">dictionary default_preferences</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00027">generated_file.py:27</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_adade02a07e45d832cd7f02ab0bbba325"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#adade02a07e45d832cd7f02ab0bbba325">openage.convert.dataformat.generated_file.GeneratedFile.namespaces</a></div><div class="ttdeci">tuple namespaces</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00020">generated_file.py:20</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a0712668513c20ee009a5f1dfbdd2558a"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a0712668513c20ee009a5f1dfbdd2558a">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a></div><div class="ttdeci">file_name</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00080">generated_file.py:80</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_ad1e3e3ba7c5728c42f2c8d9619a93e7a"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ad1e3e3ba7c5728c42f2c8d9619a93e7a">openage.convert.dataformat.generated_file.GeneratedFile.generate</a></div><div class="ttdeci">def generate(self)</div><div class="ttdoc">actually generate the content for this file.</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00151">generated_file.py:151</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a04eade25083ec6a497f465c0e4675508"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a04eade25083ec6a497f465c0e4675508">openage.convert.dataformat.generated_file.GeneratedFile.get_include_snippet</a></div><div class="ttdeci">def get_include_snippet(self, file_name=True)</div><div class="ttdoc">return a snippet with a header entry for this file to be able to include it.</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00109">generated_file.py:109</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml">openage.convert.dataformat.generated_file.GeneratedFile</a></div><div class="ttdoc">represents a writable file that was generated automatically.</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00018">generated_file.py:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a22fe1959583948bbcb76cd7c55341154"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a22fe1959583948bbcb76cd7c55341154">openage.convert.dataformat.generated_file.GeneratedFile.output_preferences</a></div><div class="ttdeci">dictionary output_preferences</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00037">generated_file.py:37</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a57b986d9e3dc7dd47c2d0bce2f4c9ba9"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a57b986d9e3dc7dd47c2d0bce2f4c9ba9">openage.convert.dataformat.generated_file.GeneratedFile.included_typedefs</a></div><div class="ttdeci">included_typedefs</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00082">generated_file.py:82</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_aa99235f1e4f21d5c57e7e95da321b33e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aa99235f1e4f21d5c57e7e95da321b33e">openage.convert.dataformat.generated_file.GeneratedFile.create_forward_declarations</a></div><div class="ttdeci">def create_forward_declarations(self, file_pool)</div><div class="ttdoc">create forward declarations for this generated file.</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00146">generated_file.py:146</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a47be248058b8a58d86be245676073e19"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a47be248058b8a58d86be245676073e19">openage.convert.dataformat.generated_file.GeneratedFile.snippets</a></div><div class="ttdeci">snippets</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00077">generated_file.py:77</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a97457c65f7f41e262176d22b099c6126"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a97457c65f7f41e262176d22b099c6126">openage.convert.dataformat.generated_file.GeneratedFile.typedefs</a></div><div class="ttdeci">typedefs</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00078">generated_file.py:78</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_aca0798e335bb1af131dc172dfa3957a6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#aca0798e335bb1af131dc172dfa3957a6">openage.convert.dataformat.generated_file.GeneratedFile.namespacify</a></div><div class="ttdeci">def namespacify(cls, var_type)</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00023">generated_file.py:23</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_ab6e3f9f22dad619d3b2202e060539904"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#ab6e3f9f22dad619d3b2202e060539904">openage.convert.dataformat.generated_file.GeneratedFile.__init__</a></div><div class="ttdeci">def __init__(self, file_name, format_)</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00076">generated_file.py:76</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a2ee4f758fdcdce9c8e9d22406d1865d9"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a2ee4f758fdcdce9c8e9d22406d1865d9">openage.convert.dataformat.generated_file.GeneratedFile.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00242">generated_file.py:242</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1header__snippet_1_1_header_snippet_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1header__snippet_1_1_header_snippet.xhtml">openage.convert.dataformat.header_snippet.HeaderSnippet</a></div><div class="ttdoc">represents an includable C header</div><div class="ttdef"><b>Definition:</b> <a href="header__snippet_8py_source.xhtml#l00013">header_snippet.py:13</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a37aae935de963e1abdb6f501c6e75076"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a37aae935de963e1abdb6f501c6e75076">openage.convert.dataformat.generated_file.GeneratedFile.create_xref_headers</a></div><div class="ttdeci">def create_xref_headers(self, file_pool)</div><div class="ttdoc">discover and add needed header snippets for type references accross files.</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00123">generated_file.py:123</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file_xhtml_a5d0c53827f43a1378de3cc4d31b8ed22"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1generated__file_1_1_generated_file.xhtml#a5d0c53827f43a1378de3cc4d31b8ed22">openage.convert.dataformat.generated_file.GeneratedFile.format_</a></div><div class="ttdeci">format_</div><div class="ttdef"><b>Definition:</b> <a href="generated__file_8py_source.xhtml#l00081">generated_file.py:81</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_f8c2790f072062ca31393539e9a4c2e7.xhtml">convert</a></li><li class="navelem"><a class="el" href="dir_2220708b3a09db22ca7ba5a5fcfaa7ea.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="generated__file_8py.xhtml">generated_file.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
