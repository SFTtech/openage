<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::Unit Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1_unit.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1_unit-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::Unit Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A game object with current state represented by a stack of actions since this class represents both unit and building objects it may be better to name as GameObject.  
 <a href="classopenage_1_1_unit.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="unit_8h_source.xhtml">unit.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::Unit:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::Unit:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0d28eef2303cf46adc72001bc1cc3619"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a0d28eef2303cf46adc72001bc1cc3619">Unit</a> (<a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *c, <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a> <a class="el" href="classopenage_1_1_unit.xhtml#aa5e4275675942d5e5e6b12a83dbf577a">id</a>)</td></tr>
<tr class="separator:a0d28eef2303cf46adc72001bc1cc3619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619f807de65d2a8488d7decbe31866f7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a619f807de65d2a8488d7decbe31866f7">~Unit</a> ()</td></tr>
<tr class="memdesc:a619f807de65d2a8488d7decbe31866f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">unit cleanup will delete terrain object  <a href="#a619f807de65d2a8488d7decbe31866f7">More...</a><br /></td></tr>
<tr class="separator:a619f807de65d2a8488d7decbe31866f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memTemplParams" colspan="2">template&lt;class T , typename ... Arg&gt; </td></tr>
<tr class="memitem:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a76a10b9ab26e62d7b712a6c796052ee3">make_location</a> (Arg ... args)</td></tr>
<tr class="memdesc:a76a10b9ab26e62d7b712a6c796052ee3"><td class="mdescLeft">&#160;</td><td class="mdescRight">constructs a new location for this unit replacing any existing locatio  <a href="#a76a10b9ab26e62d7b712a6c796052ee3">More...</a><br /></td></tr>
<tr class="separator:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ad46b827d50be1c5af4eccc5111929"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a24ad46b827d50be1c5af4eccc5111929">reset</a> ()</td></tr>
<tr class="memdesc:a24ad46b827d50be1c5af4eccc5111929"><td class="mdescLeft">&#160;</td><td class="mdescRight">removes all actions and abilities current attributes are kept  <a href="#a24ad46b827d50be1c5af4eccc5111929">More...</a><br /></td></tr>
<tr class="separator:a24ad46b827d50be1c5af4eccc5111929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a257ef8a7aeceb306d372ef745b40ef90"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">has_action</a> () const</td></tr>
<tr class="memdesc:a257ef8a7aeceb306d372ef745b40ef90"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks the entity has an action, if it has no action it should be removed from the game  <a href="#a257ef8a7aeceb306d372ef745b40ef90">More...</a><br /></td></tr>
<tr class="separator:a257ef8a7aeceb306d372ef745b40ef90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21542f7813db482fd36799cf12971979"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a21542f7813db482fd36799cf12971979">accept_commands</a> () const</td></tr>
<tr class="memdesc:a21542f7813db482fd36799cf12971979"><td class="mdescLeft">&#160;</td><td class="mdescRight">true when the unit is alive and able to add new actions  <a href="#a21542f7813db482fd36799cf12971979">More...</a><br /></td></tr>
<tr class="separator:a21542f7813db482fd36799cf12971979"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba4a16068cf5a6b218a4c78f499874b0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aba4a16068cf5a6b218a4c78f499874b0">is_own_unit</a> (const <a class="el" href="classopenage_1_1_player.xhtml">Player</a> &amp;player)</td></tr>
<tr class="memdesc:aba4a16068cf5a6b218a4c78f499874b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">checks whether the current player is the owner of this unit  <a href="#aba4a16068cf5a6b218a4c78f499874b0">More...</a><br /></td></tr>
<tr class="separator:aba4a16068cf5a6b218a4c78f499874b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a49987e082055274e98a142baffad8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a> () const</td></tr>
<tr class="memdesc:a86a49987e082055274e98a142baffad8"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the current action on top of the stack  <a href="#a86a49987e082055274e98a142baffad8">More...</a><br /></td></tr>
<tr class="separator:a86a49987e082055274e98a142baffad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4923193cf464188a2e5f8563dd85ff43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a4923193cf464188a2e5f8563dd85ff43">before</a> (const <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *action) const</td></tr>
<tr class="memdesc:a4923193cf464188a2e5f8563dd85ff43"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns action under the passed action in the stack returns null if stack size is less than 2  <a href="#a4923193cf464188a2e5f8563dd85ff43">More...</a><br /></td></tr>
<tr class="separator:a4923193cf464188a2e5f8563dd85ff43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6090576402dce0bcc8f3f584ae0c1db5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a6090576402dce0bcc8f3f584ae0c1db5">update</a> (<a class="el" href="namespaceopenage.xhtml#aab633747a9b25e86119eec83106fb2ae">time_nsec_t</a> lastframe_duration)</td></tr>
<tr class="memdesc:a6090576402dce0bcc8f3f584ae0c1db5"><td class="mdescLeft">&#160;</td><td class="mdescRight">update this object using the action currently on top of the stack  <a href="#a6090576402dce0bcc8f3f584ae0c1db5">More...</a><br /></td></tr>
<tr class="separator:a6090576402dce0bcc8f3f584ae0c1db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae422123ecc6a2e930ba86e45bf8a5a37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">draw</a> (const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="memdesc:ae422123ecc6a2e930ba86e45bf8a5a37"><td class="mdescLeft">&#160;</td><td class="mdescRight">draws this action by taking the graphic type of the top action the graphic is found from the current graphic set  <a href="#ae422123ecc6a2e930ba86e45bf8a5a37">More...</a><br /></td></tr>
<tr class="separator:ae422123ecc6a2e930ba86e45bf8a5a37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4499be2634985e11b0c10f895978b85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af4499be2634985e11b0c10f895978b85">draw</a> (<a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *loc, const <a class="el" href="namespaceopenage.xhtml#a905fde9cff5779781eb779ca95d80cf1">graphic_set</a> &amp;graphics, const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="memdesc:af4499be2634985e11b0c10f895978b85"><td class="mdescLeft">&#160;</td><td class="mdescRight">an generalized draw function which is useful for drawing annexes  <a href="#af4499be2634985e11b0c10f895978b85">More...</a><br /></td></tr>
<tr class="separator:af4499be2634985e11b0c10f895978b85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8b821f1e22d782134986784fd94dbe3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af8b821f1e22d782134986784fd94dbe3">draw</a> (<a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> draw_pos, std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_texture.xhtml">UnitTexture</a> &gt; graphic, unsigned int frame, const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="memdesc:af8b821f1e22d782134986784fd94dbe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">draws with a specific graphic and frame  <a href="#af8b821f1e22d782134986784fd94dbe3">More...</a><br /></td></tr>
<tr class="separator:af8b821f1e22d782134986784fd94dbe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f35cd78b09fea32514ed2b2dd87b64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a37f35cd78b09fea32514ed2b2dd87b64">give_ability</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;)</td></tr>
<tr class="memdesc:a37f35cd78b09fea32514ed2b2dd87b64"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds an available ability to this unit this turns targeted objects into actions which are pushed onto the stack, eg.  <a href="#a37f35cd78b09fea32514ed2b2dd87b64">More...</a><br /></td></tr>
<tr class="separator:a37f35cd78b09fea32514ed2b2dd87b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0e740b8fd1b0f948916c854b9910ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2f0e740b8fd1b0f948916c854b9910ec">get_ability</a> (<a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a> type)</td></tr>
<tr class="memdesc:a2f0e740b8fd1b0f948916c854b9910ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">get ability with specified type, null if not available  <a href="#a2f0e740b8fd1b0f948916c854b9910ec">More...</a><br /></td></tr>
<tr class="separator:a2f0e740b8fd1b0f948916c854b9910ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd686fafc67487f4df4d3637f2621f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aecd686fafc67487f4df4d3637f2621f4">push_action</a> (std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; action, bool force=false)</td></tr>
<tr class="memdesc:aecd686fafc67487f4df4d3637f2621f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds a new action on top of the action stack will be performed immediately  <a href="#aecd686fafc67487f4df4d3637f2621f4">More...</a><br /></td></tr>
<tr class="separator:aecd686fafc67487f4df4d3637f2621f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b29886dcd48b1db9381dcc7fd252ebc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a8b29886dcd48b1db9381dcc7fd252ebc">secondary_action</a> (std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; action)</td></tr>
<tr class="memdesc:a8b29886dcd48b1db9381dcc7fd252ebc"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds a secondary action which is always updated  <a href="#a8b29886dcd48b1db9381dcc7fd252ebc">More...</a><br /></td></tr>
<tr class="separator:a8b29886dcd48b1db9381dcc7fd252ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab74b08bb7725863fc63839d798f6aedb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ab74b08bb7725863fc63839d798f6aedb">add_attribute</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_attribute_container.xhtml">AttributeContainer</a> &gt; attr)</td></tr>
<tr class="memdesc:ab74b08bb7725863fc63839d798f6aedb"><td class="mdescLeft">&#160;</td><td class="mdescRight">give a new attribute this this unit this is used to set things like color, hitpoints and speed  <a href="#ab74b08bb7725863fc63839d798f6aedb">More...</a><br /></td></tr>
<tr class="separator:ab74b08bb7725863fc63839d798f6aedb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46fb7ca65071c68a85f492a8235302e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af46fb7ca65071c68a85f492a8235302e">add_attributes</a> (const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;attr)</td></tr>
<tr class="memdesc:af46fb7ca65071c68a85f492a8235302e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give new attributes to this unit.  <a href="#af46fb7ca65071c68a85f492a8235302e">More...</a><br /></td></tr>
<tr class="separator:af46fb7ca65071c68a85f492a8235302e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a598937325db2a289810c08b4e0a140bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a598937325db2a289810c08b4e0a140bd">add_attributes</a> (const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;attr, bool shared, bool unshared)</td></tr>
<tr class="memdesc:a598937325db2a289810c08b4e0a140bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give new attributes to this unit.  <a href="#a598937325db2a289810c08b4e0a140bd">More...</a><br /></td></tr>
<tr class="separator:a598937325db2a289810c08b4e0a140bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c56a8b7e9856a8e0535cacbe831bae7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">has_attribute</a> (<a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36">attr_type</a> type) const</td></tr>
<tr class="memdesc:a6c56a8b7e9856a8e0535cacbe831bae7"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns whether attribute is available  <a href="#a6c56a8b7e9856a8e0535cacbe831bae7">More...</a><br /></td></tr>
<tr class="separator:a6c56a8b7e9856a8e0535cacbe831bae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e12324401051119f44e212dae1a87ce"><td class="memTemplParams" colspan="2">template&lt;attr_type T&gt; </td></tr>
<tr class="memitem:a3e12324401051119f44e212dae1a87ce"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_attribute.xhtml">Attribute</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a3e12324401051119f44e212dae1a87ce">get_attribute</a> ()</td></tr>
<tr class="memdesc:a3e12324401051119f44e212dae1a87ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns attribute based on templated value  <a href="#a3e12324401051119f44e212dae1a87ce">More...</a><br /></td></tr>
<tr class="separator:a3e12324401051119f44e212dae1a87ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5dcdf3180dcd4bdce67b765d8ef2134"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ac5dcdf3180dcd4bdce67b765d8ef2134">queue_cmd</a> (const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;cmd)</td></tr>
<tr class="memdesc:ac5dcdf3180dcd4bdce67b765d8ef2134"><td class="mdescLeft">&#160;</td><td class="mdescRight">queues a command to be applied to this unit on the next update  <a href="#ac5dcdf3180dcd4bdce67b765d8ef2134">More...</a><br /></td></tr>
<tr class="separator:ac5dcdf3180dcd4bdce67b765d8ef2134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a238fb029bd4cc32e393506533facd976"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a238fb029bd4cc32e393506533facd976">stop_gather</a> ()</td></tr>
<tr class="memdesc:a238fb029bd4cc32e393506533facd976"><td class="mdescLeft">&#160;</td><td class="mdescRight">removes all gather actions without calling their on_complete actions this cancels the gathering action completely  <a href="#a238fb029bd4cc32e393506533facd976">More...</a><br /></td></tr>
<tr class="separator:a238fb029bd4cc32e393506533facd976"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f53ef015fca7c42ff3bf9d0779145a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a9f53ef015fca7c42ff3bf9d0779145a3">stop_actions</a> ()</td></tr>
<tr class="memdesc:a9f53ef015fca7c42ff3bf9d0779145a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">removes all actions above and including the first interuptable action this will stop any of the units current moving or attacking actions a direct command from the user will invoke this function  <a href="#a9f53ef015fca7c42ff3bf9d0779145a3">More...</a><br /></td></tr>
<tr class="separator:a9f53ef015fca7c42ff3bf9d0779145a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7f76de394d832d927a9e6d46bd3c93f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ad7f76de394d832d927a9e6d46bd3c93f">delete_unit</a> ()</td></tr>
<tr class="memdesc:ad7f76de394d832d927a9e6d46bd3c93f"><td class="mdescLeft">&#160;</td><td class="mdescRight">begins unit removal by popping some actions  <a href="#ad7f76de394d832d927a9e6d46bd3c93f">More...</a><br /></td></tr>
<tr class="separator:ad7f76de394d832d927a9e6d46bd3c93f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfea298b04684ab09dd8f499dabb8715"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_reference.xhtml">UnitReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#adfea298b04684ab09dd8f499dabb8715">get_ref</a> ()</td></tr>
<tr class="memdesc:adfea298b04684ab09dd8f499dabb8715"><td class="mdescLeft">&#160;</td><td class="mdescRight">get a reference which can check against the container to ensure this object still exists  <a href="#adfea298b04684ab09dd8f499dabb8715">More...</a><br /></td></tr>
<tr class="separator:adfea298b04684ab09dd8f499dabb8715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9937d84fe91d95cbe273f6fe986068"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2e9937d84fe91d95cbe273f6fe986068">get_container</a> () const</td></tr>
<tr class="memdesc:a2e9937d84fe91d95cbe273f6fe986068"><td class="mdescLeft">&#160;</td><td class="mdescRight">the container used when constructing this unit  <a href="#a2e9937d84fe91d95cbe273f6fe986068">More...</a><br /></td></tr>
<tr class="separator:a2e9937d84fe91d95cbe273f6fe986068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae769f520dfdb148ec831c151a954a881"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ae769f520dfdb148ec831c151a954a881">logsource_name</a> () override</td></tr>
<tr class="memdesc:ae769f520dfdb148ec831c151a954a881"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the unit's name as the LogSource name.  <a href="#ae769f520dfdb148ec831c151a954a881">More...</a><br /></td></tr>
<tr class="separator:ae769f520dfdb148ec831c151a954a881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1log_1_1_log_source"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1log_1_1_log_source')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml">openage::log::LogSource</a></td></tr>
<tr class="memitem:aa2ff50c079c20b6ff1dfa08f45080b0a inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#aa2ff50c079c20b6ff1dfa08f45080b0a">LogSource</a> ()</td></tr>
<tr class="separator:aa2ff50c079c20b6ff1dfa08f45080b0a inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa74e829150dd523fea5173cd5d864285 inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#aa74e829150dd523fea5173cd5d864285">~LogSource</a> ()=default</td></tr>
<tr class="separator:aa74e829150dd523fea5173cd5d864285 inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5640099e20af4cd368c767dbcef3a1df inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">log</a> (const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;msg)</td></tr>
<tr class="memdesc:a5640099e20af4cd368c767dbcef3a1df inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Logs a message (get one via <a class="el" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG(level)</a>).  <a href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">More...</a><br /></td></tr>
<tr class="separator:a5640099e20af4cd368c767dbcef3a1df inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aa5e4275675942d5e5e6b12a83dbf577a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aa5e4275675942d5e5e6b12a83dbf577a">id</a></td></tr>
<tr class="memdesc:aa5e4275675942d5e5e6b12a83dbf577a"><td class="mdescLeft">&#160;</td><td class="mdescRight">this units unique id value  <a href="#aa5e4275675942d5e5e6b12a83dbf577a">More...</a><br /></td></tr>
<tr class="separator:aa5e4275675942d5e5e6b12a83dbf577a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d7da7c7ccd95557e10d54a58a033187"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1_unit_type.xhtml">UnitType</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2d7da7c7ccd95557e10d54a58a033187">unit_type</a></td></tr>
<tr class="memdesc:a2d7da7c7ccd95557e10d54a58a033187"><td class="mdescLeft">&#160;</td><td class="mdescRight">type of this object, this is set by the the <a class="el" href="classopenage_1_1_unit_type.xhtml" title="units in aoc have a class and a type">UnitType</a> which was most recently applied to this unit  <a href="#a2d7da7c7ccd95557e10d54a58a033187">More...</a><br /></td></tr>
<tr class="separator:a2d7da7c7ccd95557e10d54a58a033187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00fd6387097ed12ae6f6b6ec2ab2939e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a00fd6387097ed12ae6f6b6ec2ab2939e">selected</a></td></tr>
<tr class="memdesc:a00fd6387097ed12ae6f6b6ec2ab2939e"><td class="mdescLeft">&#160;</td><td class="mdescRight">should selection features be drawn  <a href="#a00fd6387097ed12ae6f6b6ec2ab2939e">More...</a><br /></td></tr>
<tr class="separator:a00fd6387097ed12ae6f6b6ec2ab2939e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12811894b98383b4c3cfe6769bc3ff80"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a></td></tr>
<tr class="memdesc:a12811894b98383b4c3cfe6769bc3ff80"><td class="mdescLeft">&#160;</td><td class="mdescRight">space on the map used by this unit null if the object is not yet placed or garrisoned  <a href="#a12811894b98383b4c3cfe6769bc3ff80">More...</a><br /></td></tr>
<tr class="separator:a12811894b98383b4c3cfe6769bc3ff80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49ca534b218c7a77336914f450d71602"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a></td></tr>
<tr class="memdesc:a49ca534b218c7a77336914f450d71602"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classopenage_1_1_unit.xhtml" title="A game object with current state represented by a stack of actions since this class represents both u...">Unit</a> attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for each type.  <a href="#a49ca534b218c7a77336914f450d71602">More...</a><br /></td></tr>
<tr class="separator:a49ca534b218c7a77336914f450d71602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1log_1_1_log_source"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1log_1_1_log_source')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml">openage::log::LogSource</a></td></tr>
<tr class="memitem:ae75ede4764f389add2e8a870584807bb inherit pub_attribs_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">const size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#ae75ede4764f389add2e8a870584807bb">logger_id</a></td></tr>
<tr class="memdesc:ae75ede4764f389add2e8a870584807bb inherit pub_attribs_classopenage_1_1log_1_1_log_source"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialized during the <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml" title="Any class that wants to provide .log() shall inherit from this.">LogSource</a> constructor, guaranteed to be unique.  <a href="classopenage_1_1log_1_1_log_source.xhtml#ae75ede4764f389add2e8a870584807bb">More...</a><br /></td></tr>
<tr class="separator:ae75ede4764f389add2e8a870584807bb inherit pub_attribs_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a627bc25cc4e546ff34b06cfa809f8946"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a627bc25cc4e546ff34b06cfa809f8946">apply_all_cmds</a> ()</td></tr>
<tr class="memdesc:a627bc25cc4e546ff34b06cfa809f8946"><td class="mdescLeft">&#160;</td><td class="mdescRight">applies new commands as part of the units update process  <a href="#a627bc25cc4e546ff34b06cfa809f8946">More...</a><br /></td></tr>
<tr class="separator:a627bc25cc4e546ff34b06cfa809f8946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef7363eab8f805124114c4967470379d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aef7363eab8f805124114c4967470379d">apply_cmd</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; ability, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;cmd)</td></tr>
<tr class="memdesc:aef7363eab8f805124114c4967470379d"><td class="mdescLeft">&#160;</td><td class="mdescRight">applies one command using a chosen ability locks the command queue mutex while operating  <a href="#aef7363eab8f805124114c4967470379d">More...</a><br /></td></tr>
<tr class="separator:aef7363eab8f805124114c4967470379d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf08f7acc4fd00636671fb21ba4cbaf0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aaf08f7acc4fd00636671fb21ba4cbaf0">update_secondary</a> (int64_t time_elapsed)</td></tr>
<tr class="memdesc:aaf08f7acc4fd00636671fb21ba4cbaf0"><td class="mdescLeft">&#160;</td><td class="mdescRight">update all secondary actions  <a href="#aaf08f7acc4fd00636671fb21ba4cbaf0">More...</a><br /></td></tr>
<tr class="separator:aaf08f7acc4fd00636671fb21ba4cbaf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae0b3f53cb1d75823391322876d199ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a> (std::function&lt; bool(std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &amp;)&gt; func, bool run_completed=true)</td></tr>
<tr class="memdesc:aae0b3f53cb1d75823391322876d199ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">erase from action specified by func to the end of the stack all actions erased will have the on_complete function called  <a href="#aae0b3f53cb1d75823391322876d199ef">More...</a><br /></td></tr>
<tr class="separator:aae0b3f53cb1d75823391322876d199ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a57f5c6434774eee7ab25124f4ddb2a6c"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>, std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a></td></tr>
<tr class="memdesc:a57f5c6434774eee7ab25124f4ddb2a6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">ability available &ndash; actions that this entity can perform when controlled  <a href="#a57f5c6434774eee7ab25124f4ddb2a6c">More...</a><br /></td></tr>
<tr class="separator:a57f5c6434774eee7ab25124f4ddb2a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878fa4f611ba7b3a4d01f3ab6fd16b2a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a></td></tr>
<tr class="memdesc:a878fa4f611ba7b3a4d01f3ab6fd16b2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">action stack &ndash; top action determines graphic to be drawn  <a href="#a878fa4f611ba7b3a4d01f3ab6fd16b2a">More...</a><br /></td></tr>
<tr class="separator:a878fa4f611ba7b3a4d01f3ab6fd16b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ac507ed4ccdbae729577ade59adf0ad"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a></td></tr>
<tr class="memdesc:a7ac507ed4ccdbae729577ade59adf0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">secondary actions are always updated  <a href="#a7ac507ed4ccdbae729577ade59adf0ad">More...</a><br /></td></tr>
<tr class="separator:a7ac507ed4ccdbae729577ade59adf0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affad2da15f99e71f16baa669b2c86b73"><td class="memItemLeft" align="right" valign="top">std::queue&lt; std::pair&lt; std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a></td></tr>
<tr class="memdesc:affad2da15f99e71f16baa669b2c86b73"><td class="mdescLeft">&#160;</td><td class="mdescRight">queue commands to be applied on the next update  <a href="#affad2da15f99e71f16baa669b2c86b73">More...</a><br /></td></tr>
<tr class="separator:affad2da15f99e71f16baa669b2c86b73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc59d516f370891e74777246cef87ed8"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">command_queue_lock</a></td></tr>
<tr class="memdesc:afc59d516f370891e74777246cef87ed8"><td class="mdescLeft">&#160;</td><td class="mdescRight">mutex controlling updates to the command queue  <a href="#afc59d516f370891e74777246cef87ed8">More...</a><br /></td></tr>
<tr class="separator:afc59d516f370891e74777246cef87ed8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74d9dca7027740fdf81be8563c0dd906"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a></td></tr>
<tr class="memdesc:a74d9dca7027740fdf81be8563c0dd906"><td class="mdescLeft">&#160;</td><td class="mdescRight">pop any destructable actions on the next update cycle and prevent additional actions being added  <a href="#a74d9dca7027740fdf81be8563c0dd906">More...</a><br /></td></tr>
<tr class="separator:a74d9dca7027740fdf81be8563c0dd906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf42842a4886bf35b64147c7f44d797b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">container</a></td></tr>
<tr class="memdesc:acf42842a4886bf35b64147c7f44d797b"><td class="mdescLeft">&#160;</td><td class="mdescRight">the container that updates this unit  <a href="#acf42842a4886bf35b64147c7f44d797b">More...</a><br /></td></tr>
<tr class="separator:acf42842a4886bf35b64147c7f44d797b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A game object with current state represented by a stack of actions since this class represents both unit and building objects it may be better to name as GameObject. </p>
<p>it is possible that abilities are not required here and they could be moved to selection controller &ndash; units only need the attributes </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00036">36</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0d28eef2303cf46adc72001bc1cc3619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d28eef2303cf46adc72001bc1cc3619">&#9670;&nbsp;</a></span>Unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Unit::Unit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a>&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    :</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordtype">id</span>{<span class="keywordtype">id</span>},</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="classopenage_1_1_unit.xhtml#a2d7da7c7ccd95557e10d54a58a033187">unit_type</a>{<span class="keyword">nullptr</span>},</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="classopenage_1_1_unit.xhtml#a00fd6387097ed12ae6f6b6ec2ab2939e">selected</a>{<span class="keyword">false</span>},</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a>{<span class="keyword">false</span>},</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">container</a>(c) {}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_acf42842a4886bf35b64147c7f44d797b"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">openage::Unit::container</a></div><div class="ttdeci">UnitContainer * container</div><div class="ttdoc">the container that updates this unit</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00296">unit.h:296</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a74d9dca7027740fdf81be8563c0dd906"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">openage::Unit::pop_destructables</a></div><div class="ttdeci">bool pop_destructables</div><div class="ttdoc">pop any destructable actions on the next update cycle and prevent additional actions being added</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00291">unit.h:291</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a2d7da7c7ccd95557e10d54a58a033187"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a2d7da7c7ccd95557e10d54a58a033187">openage::Unit::unit_type</a></div><div class="ttdeci">const UnitType * unit_type</div><div class="ttdoc">type of this object, this is set by the the UnitType which was most recently applied to this unit</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00054">unit.h:54</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a00fd6387097ed12ae6f6b6ec2ab2939e"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a00fd6387097ed12ae6f6b6ec2ab2939e">openage::Unit::selected</a></div><div class="ttdeci">bool selected</div><div class="ttdoc">should selection features be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00061">unit.h:61</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a619f807de65d2a8488d7decbe31866f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a619f807de65d2a8488d7decbe31866f7">&#9670;&nbsp;</a></span>~Unit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::Unit::~Unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>unit cleanup will delete terrain object </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="comment">// remove any used location from the map</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>-&gt;remove();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a12811894b98383b4c3cfe6769bc3ff80"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">openage::Unit::location</a></div><div class="ttdeci">std::unique_ptr&lt; TerrainObject &gt; location</div><div class="ttdoc">space on the map used by this unit null if the object is not yet placed or garrisoned</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00068">unit.h:68</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00068">location</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a21542f7813db482fd36799cf12971979"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21542f7813db482fd36799cf12971979">&#9670;&nbsp;</a></span>accept_commands()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::accept_commands </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>true when the unit is alive and able to add new actions </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                                 {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">has_action</a>() &amp;&amp; this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a>()-&gt;allow_control());</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a257ef8a7aeceb306d372ef745b40ef90"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">openage::Unit::has_action</a></div><div class="ttdeci">bool has_action() const</div><div class="ttdoc">checks the entity has an action, if it has no action it should be removed from the game</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00041">unit.cpp:41</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a86a49987e082055274e98a142baffad8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">openage::Unit::top</a></div><div class="ttdeci">UnitAction * top() const</div><div class="ttdoc">returns the current action on top of the stack</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00053">unit.cpp:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00041">has_action()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00053">top()</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00235">push_action()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a21542f7813db482fd36799cf12971979_cgraph.svg" width="498" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a21542f7813db482fd36799cf12971979_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab74b08bb7725863fc63839d798f6aedb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab74b08bb7725863fc63839d798f6aedb">&#9670;&nbsp;</a></span>add_attribute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attribute </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_attribute_container.xhtml">AttributeContainer</a> &gt;&#160;</td>
          <td class="paramname"><em>attr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>give a new attribute this this unit this is used to set things like color, hitpoints and speed </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                                                               {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a>.<a class="code" href="classopenage_1_1_attributes.xhtml#a9ffc8cfe4d75fbea84e7846cc6a8196f">add</a>(attr);</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a49ca534b218c7a77336914f450d71602"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">openage::Unit::attributes</a></div><div class="ttdeci">Attributes attributes</div><div class="ttdoc">Unit attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for ea...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00254">unit.h:254</a></div></div>
<div class="ttc" id="classopenage_1_1_attributes_xhtml_a9ffc8cfe4d75fbea84e7846cc6a8196f"><div class="ttname"><a href="classopenage_1_1_attributes.xhtml#a9ffc8cfe4d75fbea84e7846cc6a8196f">openage::Attributes::add</a></div><div class="ttdeci">void add(const std::shared_ptr&lt; AttributeContainer &gt; attr)</div><div class="ttdoc">Add an attribute or replace any attribute of the same type.</div><div class="ttdef"><b>Definition:</b> <a href="attributes_8cpp_source.xhtml#l00007">attributes.cpp:7</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="attributes_8cpp_source.xhtml#l00007">openage::Attributes::add()</a>, and <a class="el" href="unit_8h_source.xhtml#l00254">attributes</a>.</p>

<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00399">openage::MovableProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00449">openage::LivingProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer::initialise()</a>, and <a class="el" href="producer_8cpp_source.xhtml#l00826">openage::ProjectileProducer::initialise()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ab74b08bb7725863fc63839d798f6aedb_cgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ab74b08bb7725863fc63839d798f6aedb_icgraph.svg" width="100%" height="514"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af46fb7ca65071c68a85f492a8235302e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af46fb7ca65071c68a85f492a8235302e">&#9670;&nbsp;</a></span>add_attributes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attributes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Give new attributes to this unit. </p>
<p>This is used to add the default attributes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;                                                {</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a>.<a class="code" href="classopenage_1_1_attributes.xhtml#ae8924d1ae2fafd0c13418ab238848afb">add_copies</a>(attr);</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a49ca534b218c7a77336914f450d71602"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">openage::Unit::attributes</a></div><div class="ttdeci">Attributes attributes</div><div class="ttdoc">Unit attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for ea...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00254">unit.h:254</a></div></div>
<div class="ttc" id="classopenage_1_1_attributes_xhtml_ae8924d1ae2fafd0c13418ab238848afb"><div class="ttname"><a href="classopenage_1_1_attributes.xhtml#ae8924d1ae2fafd0c13418ab238848afb">openage::Attributes::add_copies</a></div><div class="ttdeci">void add_copies(const Attributes &amp;attrs)</div><div class="ttdoc">Add copies of all the attributes from the given Attributes.</div><div class="ttdef"><b>Definition:</b> <a href="attributes_8cpp_source.xhtml#l00011">attributes.cpp:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="attributes_8cpp_source.xhtml#l00011">openage::Attributes::add_copies()</a>, and <a class="el" href="unit_8h_source.xhtml#l00254">attributes</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit__type_8cpp_source.xhtml#l00086">openage::UnitType::copy_attributes()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_af46fb7ca65071c68a85f492a8235302e_cgraph.svg" width="324" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_af46fb7ca65071c68a85f492a8235302e_icgraph.svg" width="522" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a598937325db2a289810c08b4e0a140bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a598937325db2a289810c08b4e0a140bd">&#9670;&nbsp;</a></span>add_attributes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attributes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>shared</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>unshared</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Give new attributes to this unit. </p>
<p>If shared is false, shared attributes are ignored. If unshared is false, unshared attributes are ignored. </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                                                            {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a>.<a class="code" href="classopenage_1_1_attributes.xhtml#ae8924d1ae2fafd0c13418ab238848afb">add_copies</a>(attr, shared, unshared);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a49ca534b218c7a77336914f450d71602"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">openage::Unit::attributes</a></div><div class="ttdeci">Attributes attributes</div><div class="ttdoc">Unit attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for ea...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00254">unit.h:254</a></div></div>
<div class="ttc" id="classopenage_1_1_attributes_xhtml_ae8924d1ae2fafd0c13418ab238848afb"><div class="ttname"><a href="classopenage_1_1_attributes.xhtml#ae8924d1ae2fafd0c13418ab238848afb">openage::Attributes::add_copies</a></div><div class="ttdeci">void add_copies(const Attributes &amp;attrs)</div><div class="ttdoc">Add copies of all the attributes from the given Attributes.</div><div class="ttdef"><b>Definition:</b> <a href="attributes_8cpp_source.xhtml#l00011">attributes.cpp:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="attributes_8cpp_source.xhtml#l00011">openage::Attributes::add_copies()</a>, and <a class="el" href="unit_8h_source.xhtml#l00254">attributes</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a598937325db2a289810c08b4e0a140bd_cgraph.svg" width="324" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a627bc25cc4e546ff34b06cfa809f8946"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a627bc25cc4e546ff34b06cfa809f8946">&#9670;&nbsp;</a></span>apply_all_cmds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::apply_all_cmds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>applies new commands as part of the units update process </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                          {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">command_queue_lock</a>);</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordflow">while</span> (!this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a>.empty()) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keyword">auto</span> &amp;action = this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a>.front();</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aef7363eab8f805124114c4967470379d">apply_cmd</a>(action.first, action.second);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a>.pop();</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_aef7363eab8f805124114c4967470379d"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#aef7363eab8f805124114c4967470379d">openage::Unit::apply_cmd</a></div><div class="ttdeci">void apply_cmd(std::shared_ptr&lt; UnitAbility &gt; ability, const Command &amp;cmd)</div><div class="ttdoc">applies one command using a chosen ability locks the command queue mutex while operating</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00144">unit.cpp:144</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_afc59d516f370891e74777246cef87ed8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">openage::Unit::command_queue_lock</a></div><div class="ttdeci">std::mutex command_queue_lock</div><div class="ttdoc">mutex controlling updates to the command queue</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00284">unit.h:284</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_affad2da15f99e71f16baa669b2c86b73"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">openage::Unit::command_queue</a></div><div class="ttdeci">std::queue&lt; std::pair&lt; std::shared_ptr&lt; UnitAbility &gt;, const Command &gt; &gt; command_queue</div><div class="ttdoc">queue commands to be applied on the next update</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00279">unit.h:279</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00144">apply_cmd()</a>, <a class="el" href="unit_8h_source.xhtml#l00279">command_queue</a>, <a class="el" href="unit_8h_source.xhtml#l00284">command_queue_lock</a>, and <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a627bc25cc4e546ff34b06cfa809f8946_cgraph.svg" width="100%" height="410"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a627bc25cc4e546ff34b06cfa809f8946_icgraph.svg" width="350" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aef7363eab8f805124114c4967470379d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef7363eab8f805124114c4967470379d">&#9670;&nbsp;</a></span>apply_cmd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::apply_cmd </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td>
          <td class="paramname"><em>ability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>applies one command using a chosen ability locks the command queue mutex while operating </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                                                                           {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="comment">// if the interrupt flag is set, discard ongoing actions</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordtype">bool</span> is_direct = cmd.has_flag(<a class="code" href="namespaceopenage.xhtml#a355391982e6c1257c3fc4de3b6402b3aa2414c252176310b2c04547257948c7b7">command_flag::interrupt</a>);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (is_direct) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a9f53ef015fca7c42ff3bf9d0779145a3">stop_actions</a>();</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">if</span> (ability-&gt;can_invoke(*<span class="keyword">this</span>, cmd)) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        ability-&gt;invoke(*<span class="keyword">this</span>, cmd, is_direct);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    }</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a9f53ef015fca7c42ff3bf9d0779145a3"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a9f53ef015fca7c42ff3bf9d0779145a3">openage::Unit::stop_actions</a></div><div class="ttdeci">void stop_actions()</div><div class="ttdoc">removes all actions above and including the first interuptable action this will stop any of the units...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00289">unit.cpp:289</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a355391982e6c1257c3fc4de3b6402b3aa2414c252176310b2c04547257948c7b7"><div class="ttname"><a href="namespaceopenage.xhtml#a355391982e6c1257c3fc4de3b6402b3aa2414c252176310b2c04547257948c7b7">openage::command_flag::interrupt</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="command_8cpp_source.xhtml#l00099">openage::Command::has_flag()</a>, <a class="el" href="namespaceopenage.xhtml#a355391982e6c1257c3fc4de3b6402b3aa2414c252176310b2c04547257948c7b7">openage::interrupt</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00289">stop_actions()</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00134">apply_all_cmds()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aef7363eab8f805124114c4967470379d_cgraph.svg" width="100%" height="410"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aef7363eab8f805124114c4967470379d_icgraph.svg" width="571" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4923193cf464188a2e5f8563dd85ff43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4923193cf464188a2e5f8563dd85ff43">&#9670;&nbsp;</a></span>before()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> * openage::Unit::before </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td>
          <td class="paramname"><em>action</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns action under the passed action in the stack returns null if stack size is less than 2 </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                                                       {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keyword">auto</span> start = std::find_if(</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        std::begin(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>),</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>),</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        [action](<span class="keyword">const</span> std::unique_ptr&lt;UnitAction&gt; &amp;a) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            <span class="keywordflow">return</span> action == a.get();</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        });</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">if</span> (start != std::begin(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>) &amp;&amp;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        start != std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>)) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="keywordflow">return</span> (*(start - 1)).get();</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>.</p>

</div>
</div>
<a id="ad7f76de394d832d927a9e6d46bd3c93f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7f76de394d832d927a9e6d46bd3c93f">&#9670;&nbsp;</a></span>delete_unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::delete_unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>begins unit removal by popping some actions </p>
<p>this is the action that occurs when pressing the delete key which plays death sequence and does not remove instantly </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                       {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a74d9dca7027740fdf81be8563c0dd906"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">openage::Unit::pop_destructables</a></div><div class="ttdeci">bool pop_destructables</div><div class="ttdoc">pop any destructable actions on the next update cycle and prevent additional actions being added</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00291">unit.h:291</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00291">pop_destructables</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00183">openage::UnitSelection::kill_unit()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ad7f76de394d832d927a9e6d46bd3c93f_icgraph.svg" width="591" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae422123ecc6a2e930ba86e45bf8a5a37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae422123ecc6a2e930ba86e45bf8a5a37">&#9670;&nbsp;</a></span>draw() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>draws this action by taking the graphic type of the top action the graphic is found from the current graphic set </p>
<p>this function should be used for most draw purposes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                                    {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// the top action decides the graphic type and action</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">draw</a>(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>.get(), this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a>()-&gt;<a class="code" href="classopenage_1_1_unit_action.xhtml#a6cd7405af72dd0cf3994cee74608cf8b">current_graphics</a>(), engine);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_action_xhtml_a6cd7405af72dd0cf3994cee74608cf8b"><div class="ttname"><a href="classopenage_1_1_unit_action.xhtml#a6cd7405af72dd0cf3994cee74608cf8b">openage::UnitAction::current_graphics</a></div><div class="ttdeci">virtual const graphic_set &amp; current_graphics() const</div><div class="ttdoc">determines which graphic should be used for drawing this unit finds the default graphic using the uni...</div><div class="ttdef"><b>Definition:</b> <a href="unit_2action_8cpp_source.xhtml#l00127">action.cpp:127</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a12811894b98383b4c3cfe6769bc3ff80"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">openage::Unit::location</a></div><div class="ttdeci">std::unique_ptr&lt; TerrainObject &gt; location</div><div class="ttdoc">space on the map used by this unit null if the object is not yet placed or garrisoned</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00068">unit.h:68</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_ae422123ecc6a2e930ba86e45bf8a5a37"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">openage::Unit::draw</a></div><div class="ttdeci">void draw(const Engine &amp;engine)</div><div class="ttdoc">draws this action by taking the graphic type of the top action the graphic is found from the current ...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00156">unit.cpp:156</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a86a49987e082055274e98a142baffad8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">openage::Unit::top</a></div><div class="ttdeci">UnitAction * top() const</div><div class="ttdoc">returns the current action on top of the stack</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00053">unit.cpp:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_2action_8cpp_source.xhtml#l00127">openage::UnitAction::current_graphics()</a>, <a class="el" href="unit_8h_source.xhtml#l00068">location</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00053">top()</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00163">draw()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00294">openage::ObjectProducer::place()</a>, and <a class="el" href="producer_8cpp_source.xhtml#l00682">openage::BuildingProducer::place()</a>.</p>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ae422123ecc6a2e930ba86e45bf8a5a37_cgraph.svg" width="494" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ae422123ecc6a2e930ba86e45bf8a5a37_icgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af4499be2634985e11b0c10f895978b85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4499be2634985e11b0c10f895978b85">&#9670;&nbsp;</a></span>draw() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *&#160;</td>
          <td class="paramname"><em>loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage.xhtml#a905fde9cff5779781eb779ca95d80cf1">graphic_set</a> &amp;&#160;</td>
          <td class="paramname"><em>graphics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>an generalized draw function which is useful for drawing annexes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                                                                                 {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(loc != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;there should always be a location for a placed unit&quot;</span>);</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keyword">auto</span> top_action = this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a>();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keyword">auto</span> draw_graphic = top_action-&gt;type();</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">if</span> (grpc.count(draw_graphic) == 0) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a>) &lt;&lt; <span class="stringliteral">&quot;Graphic not available&quot;</span>);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// the texture to draw with</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keyword">auto</span> draw_texture = grpc.at(draw_graphic);</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span> (!draw_texture) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">warn</a>) &lt;&lt; <span class="stringliteral">&quot;Graphic null&quot;</span>);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment">// frame specified by the current action</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keyword">auto</span> draw_frame = top_action-&gt;current_frame();</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">draw</a>(loc-&gt;pos.draw, draw_texture, draw_frame, engine);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="comment">// draw a shadow if the graphic is available</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keywordflow">if</span> (grpc.count(<a class="code" href="namespaceopenage.xhtml#a5e6378e44a27518a589cc11f2ee36a3ba3bf1114a986ba87ed28fc1b5884fc2f8">graphic_type::shadow</a>) &gt; 0) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="keyword">auto</span> draw_shadow = grpc.at(<a class="code" href="namespaceopenage.xhtml#a5e6378e44a27518a589cc11f2ee36a3ba3bf1114a986ba87ed28fc1b5884fc2f8">graphic_type::shadow</a>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">if</span> (draw_shadow) {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="comment">// position without height component</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="comment">// \todo terrain elevation</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            coord::phys3 shadow_pos = loc-&gt;pos.draw;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            shadow_pos.up = 0;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">draw</a>(shadow_pos, draw_shadow, draw_frame, engine);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="comment">// draw debug details</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    top_action-&gt;draw_debug(engine);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="classopenage_1_1log_1_1_log_source_xhtml_a5640099e20af4cd368c767dbcef3a1df"><div class="ttname"><a href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">openage::log::LogSource::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdoc">Logs a message (get one via MSG(level)).</div><div class="ttdef"><b>Definition:</b> <a href="logsource_8cpp_source.xhtml#l00019">logsource.cpp:19</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a5e6378e44a27518a589cc11f2ee36a3ba3bf1114a986ba87ed28fc1b5884fc2f8"><div class="ttname"><a href="namespaceopenage.xhtml#a5e6378e44a27518a589cc11f2ee36a3ba3bf1114a986ba87ed28fc1b5884fc2f8">openage::graphic_type::shadow</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_ae422123ecc6a2e930ba86e45bf8a5a37"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">openage::Unit::draw</a></div><div class="ttdeci">void draw(const Engine &amp;engine)</div><div class="ttdoc">draws this action by taking the graphic type of the top action the graphic is found from the current ...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00156">unit.cpp:156</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a86a49987e082055274e98a142baffad8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">openage::Unit::top</a></div><div class="ttdeci">UnitAction * top() const</div><div class="ttdoc">returns the current action on top of the stack</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00053">unit.cpp:53</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a7ca418e1b1fcf210ff91cd25dc8e6a36"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a7ca418e1b1fcf210ff91cd25dc8e6a36">openage::log.warn</a></div><div class="ttdeci">def warn(msg, *args, **kwargs)</div><div class="ttdoc">warning message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00119">__init__.py:119</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain__object_8h_source.xhtml#l00038">openage::tile_range::draw</a>, <a class="el" href="unit_8cpp_source.xhtml#l00156">draw()</a>, <a class="el" href="error_2error_8h_source.xhtml#l00155">ENSURE</a>, <a class="el" href="logsource_8cpp_source.xhtml#l00019">openage::log::LogSource::log()</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="terrain__object_8h_source.xhtml#l00085">openage::TerrainObject::pos</a>, <a class="el" href="namespaceopenage.xhtml#a5e6378e44a27518a589cc11f2ee36a3ba3bf1114a986ba87ed28fc1b5884fc2f8">openage::shadow</a>, <a class="el" href="unit_8cpp_source.xhtml#l00053">top()</a>, and <a class="el" href="log_2____init_____8py_source.xhtml#l00119">openage::log::warn()</a>.</p>
<div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_af4499be2634985e11b0c10f895978b85_cgraph.svg" width="100%" height="515"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af8b821f1e22d782134986784fd94dbe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8b821f1e22d782134986784fd94dbe3">&#9670;&nbsp;</a></span>draw() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a>&#160;</td>
          <td class="paramname"><em>draw_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_texture.xhtml">UnitTexture</a> &gt;&#160;</td>
          <td class="paramname"><em>graphic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>draws with a specific graphic and frame </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                                                                                                 {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="comment">// players color if available</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a> = 0;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">has_attribute</a>(<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36a72122ce96bfec66e2396d2e25225d70a">attr_type::owner</a>)) {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        <span class="keyword">auto</span> &amp;own_attr = this-&gt;get_attribute&lt;attr_type::owner&gt;();</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a> = own_attr.player.color;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    }</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="comment">// check if object has a direction</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">has_attribute</a>(<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36aef72c37be9d1b9e6e5bbd6ef09448abe">attr_type::direction</a>)) {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="comment">// directional textures</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keyword">auto</span> &amp;d_attr = this-&gt;get_attribute&lt;attr_type::direction&gt;();</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        coord::phys3_delta draw_dir = d_attr.unit_dir;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        graphic-&gt;draw(engine.coord, draw_pos.to_camgame(engine.coord), draw_dir, frame, <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a>);</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    }</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        graphic-&gt;draw(engine.coord, draw_pos.to_camgame(engine.coord), frame, <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a>);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a6c56a8b7e9856a8e0535cacbe831bae7"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">openage::Unit::has_attribute</a></div><div class="ttdeci">bool has_attribute(attr_type type) const</div><div class="ttdoc">returns whether attribute is available</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00258">unit.cpp:258</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a82374b732aa3c4123fee88dc25508564"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">openage::texturefont_shader::color</a></div><div class="ttdeci">GLint color</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00016">text.cpp:16</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36a72122ce96bfec66e2396d2e25225d70a"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36a72122ce96bfec66e2396d2e25225d70a">openage::attr_type::owner</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36aef72c37be9d1b9e6e5bbd6ef09448abe"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36aef72c37be9d1b9e6e5bbd6ef09448abe">openage::attr_type::direction</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8cpp_source.xhtml#l00016">openage::texturefont_shader::color</a>, <a class="el" href="engine_8h_source.xhtml#l00294">openage::Engine::coord</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36aef72c37be9d1b9e6e5bbd6ef09448abe">openage::direction</a>, <a class="el" href="unit_8cpp_source.xhtml#l00258">has_attribute()</a>, <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36a72122ce96bfec66e2396d2e25225d70a">openage::owner</a>, and <a class="el" href="phys_8cpp_source.xhtml#l00093">openage::coord::phys3::to_camgame()</a>.</p>
<div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_af8b821f1e22d782134986784fd94dbe3_cgraph.svg" width="563" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aae0b3f53cb1d75823391322876d199ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae0b3f53cb1d75823391322876d199ef">&#9670;&nbsp;</a></span>erase_after()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::erase_after </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; bool(std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &amp;)&gt;&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>run_completed</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>erase from action specified by func to the end of the stack all actions erased will have the on_complete function called </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">run_completed</td><td>usually each action has an on_complete() function called when it is removed but when run_completed is false this on_complete() function is not called for all popped actions </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00315">315</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                                                                              {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keyword">auto</span> position_it = std::find_if(</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        std::begin(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>),</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>),</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        func);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;    <span class="keywordflow">if</span> (position_it != std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>)) {</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;        <span class="keyword">auto</span> completed_action = <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(*position_it);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="comment">// erase from the stack</span></div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.erase(position_it, std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>));</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;        <span class="comment">// perform any completion actions</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        <span class="keywordflow">if</span> (run_completed) {</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            completed_action-&gt;on_completion();</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        }</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    }</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>, and <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00289">stop_actions()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00282">stop_gather()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>
<div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aae0b3f53cb1d75823391322876d199ef_icgraph.svg" width="100%" height="382"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a2f0e740b8fd1b0f948916c854b9910ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f0e740b8fd1b0f948916c854b9910ec">&#9670;&nbsp;</a></span>get_ability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> * openage::Unit::get_ability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get ability with specified type, null if not available </p>
<p>To invoke commands use the invoke function instead </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;                                                {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>.count(type) &gt; 0) {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>[type].get();</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a57f5c6434774eee7ab25124f4ddb2a6c"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">openage::Unit::ability_available</a></div><div class="ttdeci">std::unordered_map&lt; ability_type, std::shared_ptr&lt; UnitAbility &gt; &gt; ability_available</div><div class="ttdoc">ability available – actions that this entity can perform when controlled</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00261">unit.h:261</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00261">ability_available</a>.</p>

</div>
</div>
<a id="a3e12324401051119f44e212dae1a87ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e12324401051119f44e212dae1a87ce">&#9670;&nbsp;</a></span>get_attribute()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;attr_type T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_attribute.xhtml">Attribute</a>&lt;T&gt;&amp; openage::Unit::get_attribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>returns attribute based on templated value </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00199">199</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;                                  {</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span>Attribute&lt;T&gt; *<span class="keyword">&gt;</span>(<a class="code" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a>.<a class="code" href="classopenage_1_1_attributes.xhtml#a08f927be3be6911e7cf77604f9ead10f">get</a>(T).get());</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        <span class="comment">// \todo change to (templates errors)</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="comment">//return attributes.get&lt;T&gt;();</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    }</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a49ca534b218c7a77336914f450d71602"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">openage::Unit::attributes</a></div><div class="ttdeci">Attributes attributes</div><div class="ttdoc">Unit attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for ea...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00254">unit.h:254</a></div></div>
<div class="ttc" id="classopenage_1_1_attributes_xhtml_a08f927be3be6911e7cf77604f9ead10f"><div class="ttname"><a href="classopenage_1_1_attributes.xhtml#a08f927be3be6911e7cf77604f9ead10f">openage::Attributes::get</a></div><div class="ttdeci">std::shared_ptr&lt; AttributeContainer &gt; get(const attr_type type) const</div><div class="ttdoc">Get the attribute based on the type.</div><div class="ttdef"><b>Definition:</b> <a href="attributes_8cpp_source.xhtml#l00040">attributes.cpp:40</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00254">attributes</a>, and <a class="el" href="attributes_8cpp_source.xhtml#l00040">openage::Attributes::get()</a>.</p>

<p class="reference">Referenced by <a class="el" href="player_8cpp_source.xhtml#l00148">openage::Player::active_unit_added()</a>, <a class="el" href="player_8cpp_source.xhtml#l00193">openage::Player::active_unit_removed()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00136">openage::UnitSelection::add_unit()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01215">openage::AttackAction::attack()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00122">openage::GarrisonAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00153">openage::UngarrisonAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00176">openage::TrainAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00197">openage::ResearchAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00219">openage::BuildAbility::can_invoke()</a>, <a class="el" href="terrain__object_8cpp_source.xhtml#l00487">openage::complete_building()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00405">openage::DeadAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00447">openage::FoundationAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00536">openage::IdleAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01210">openage::AttackAction::completed_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01270">openage::HealAction::completed_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00147">openage::UnitAction::damage_unit()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00140">openage::UnitAction::face_towards()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01227">openage::AttackAction::fire_projectile()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00071">openage::UnitAction::get_attack_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00080">openage::UnitAction::get_heal_range()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00016">openage::UnitAbility::has_hitpoints()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00026">openage::UnitAbility::has_resource()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01276">openage::HealAction::heal()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00449">openage::LivingProducer::initialise()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00570">openage::MoveAction::initialise()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00111">openage::SetPointAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00042">openage::UnitAbility::is_ally()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00021">openage::UnitAbility::is_damaged()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00052">openage::UnitAbility::is_enemy()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00031">openage::UnitAbility::is_same_player()</a>, <a class="el" href="player_8cpp_source.xhtml#l00276">openage::Player::is_unit_pending()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00208">openage::UnitAction::move_to()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00396">openage::DeadAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00428">openage::FoundationAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00932">openage::BuildAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01135">openage::GatherAction::on_completion_in_range()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00028">openage::UnitSelection::on_drawhud()</a>, <a class="el" href="player_8cpp_source.xhtml#l00055">openage::Player::owns()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00847">openage::ProjectileProducer::place()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00020">openage::gameio::save_unit()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00283">openage::UnitSelection::show_attributes()</a>, <a class="el" href="attribute_8cpp_source.xhtml#l00013">openage::Attribute&lt; attr_type::multitype &gt;::switchType()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00372">openage::DeadAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00464">openage::IdleAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00591">openage::MoveAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00762">openage::UngarrisonAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00808">openage::TrainAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01343">openage::ProjectileAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00744">openage::GarrisonAction::update_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00891">openage::BuildAction::update_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00991">openage::RepairAction::update_in_range()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l01050">openage::GatherAction::update_in_range()</a>.</p>
<div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a3e12324401051119f44e212dae1a87ce_cgraph.svg" width="348" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2e9937d84fe91d95cbe273f6fe986068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e9937d84fe91d95cbe273f6fe986068">&#9670;&nbsp;</a></span>get_container()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> * openage::Unit::get_container </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>the container used when constructing this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00307">307</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;                                         {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">container</a>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_acf42842a4886bf35b64147c7f44d797b"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">openage::Unit::container</a></div><div class="ttdeci">UnitContainer * container</div><div class="ttdoc">the container that updates this unit</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00296">unit.h:296</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00296">container</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_2action_8cpp_source.xhtml#l01227">openage::AttackAction::fire_projectile()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l00808">openage::TrainAction::update()</a>.</p>
<div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a2e9937d84fe91d95cbe273f6fe986068_icgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="adfea298b04684ab09dd8f499dabb8715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfea298b04684ab09dd8f499dabb8715">&#9670;&nbsp;</a></span>get_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_reference.xhtml">UnitReference</a> openage::Unit::get_ref </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get a reference which can check against the container to ensure this object still exists </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00303">303</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;                            {</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span> UnitReference(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">container</a>, <span class="keywordtype">id</span>, <span class="keyword">this</span>);</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_acf42842a4886bf35b64147c7f44d797b"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">openage::Unit::container</a></div><div class="ttdeci">UnitContainer * container</div><div class="ttdoc">the container that updates this unit</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00296">unit.h:296</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00296">container</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00136">openage::UnitSelection::add_unit()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01227">openage::AttackAction::fire_projectile()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00140">openage::GarrisonAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00230">openage::BuildAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00257">openage::GatherAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00292">openage::AttackAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00320">openage::RepairAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00348">openage::HealAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00393">openage::ConvertAbility::invoke()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01155">openage::GatherAction::nearest_dropsite()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l00744">openage::GarrisonAction::update_in_range()</a>.</p>
<div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_adfea298b04684ab09dd8f499dabb8715_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a37f35cd78b09fea32514ed2b2dd87b64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37f35cd78b09fea32514ed2b2dd87b64">&#9670;&nbsp;</a></span>give_ability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::give_ability </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td>
          <td class="paramname"><em>ability</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds an available ability to this unit this turns targeted objects into actions which are pushed onto the stack, eg. </p>
<p>targeting a relic may push a collect relic action </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;                                                          {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>.emplace(std::make_pair(ability-&gt;type(), ability));</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a57f5c6434774eee7ab25124f4ddb2a6c"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">openage::Unit::ability_available</a></div><div class="ttdeci">std::unordered_map&lt; ability_type, std::shared_ptr&lt; UnitAbility &gt; &gt; ability_available</div><div class="ttdoc">ability available – actions that this entity can perform when controlled</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00261">unit.h:261</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00261">ability_available</a>.</p>

<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00449">openage::LivingProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer::initialise()</a>, and <a class="el" href="unit__type_8cpp_source.xhtml#l00118">openage::NyanType::initialise()</a>.</p>
<div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a37f35cd78b09fea32514ed2b2dd87b64_icgraph.svg" width="100%" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a257ef8a7aeceb306d372ef745b40ef90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a257ef8a7aeceb306d372ef745b40ef90">&#9670;&nbsp;</a></span>has_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::has_action </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks the entity has an action, if it has no action it should be removed from the game </p>
<dl class="section return"><dt>Returns</dt><dd>true if the entity currently has an action </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                            {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> !this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.empty();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00045">accept_commands()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>
<div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a257ef8a7aeceb306d372ef745b40ef90_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a6c56a8b7e9856a8e0535cacbe831bae7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c56a8b7e9856a8e0535cacbe831bae7">&#9670;&nbsp;</a></span>has_attribute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::has_attribute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36">attr_type</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns whether attribute is available </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;                                             {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a>.<a class="code" href="classopenage_1_1_attributes.xhtml#aee38f453ac85b68821958ad74cdd8df5">has</a>(type);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a49ca534b218c7a77336914f450d71602"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">openage::Unit::attributes</a></div><div class="ttdeci">Attributes attributes</div><div class="ttdoc">Unit attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for ea...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00254">unit.h:254</a></div></div>
<div class="ttc" id="classopenage_1_1_attributes_xhtml_aee38f453ac85b68821958ad74cdd8df5"><div class="ttname"><a href="classopenage_1_1_attributes.xhtml#aee38f453ac85b68821958ad74cdd8df5">openage::Attributes::has</a></div><div class="ttdeci">bool has(const attr_type type) const</div><div class="ttdoc">Check if the attribute of the given type exists.</div><div class="ttdef"><b>Definition:</b> <a href="attributes_8cpp_source.xhtml#l00036">attributes.cpp:36</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00254">attributes</a>, and <a class="el" href="attributes_8cpp_source.xhtml#l00036">openage::Attributes::has()</a>.</p>

<p class="reference">Referenced by <a class="el" href="player_8cpp_source.xhtml#l00148">openage::Player::active_unit_added()</a>, <a class="el" href="player_8cpp_source.xhtml#l00193">openage::Player::active_unit_removed()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00136">openage::UnitSelection::add_unit()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00106">openage::SetPointAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00122">openage::GarrisonAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00153">openage::UngarrisonAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00176">openage::TrainAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00197">openage::ResearchAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00219">openage::BuildAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00246">openage::GatherAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00276">openage::AttackAbility::can_invoke()</a>, <a class="el" href="terrain__object_8cpp_source.xhtml#l00487">openage::complete_building()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00405">openage::DeadAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00447">openage::FoundationAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00536">openage::IdleAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00147">openage::UnitAction::damage_unit()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00202">draw()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00140">openage::UnitAction::face_towards()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00071">openage::UnitAction::get_attack_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00080">openage::UnitAction::get_heal_range()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00319">openage::UnitSelection::get_unit_selection_type()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00016">openage::UnitAbility::has_hitpoints()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00026">openage::UnitAbility::has_resource()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01276">openage::HealAction::heal()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00399">openage::MovableProducer::initialise()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00570">openage::MoveAction::initialise()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00042">openage::UnitAbility::is_ally()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00021">openage::UnitAbility::is_damaged()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00052">openage::UnitAbility::is_enemy()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00031">openage::UnitAbility::is_same_player()</a>, <a class="el" href="player_8cpp_source.xhtml#l00276">openage::Player::is_unit_pending()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00396">openage::DeadAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00428">openage::FoundationAction::on_completion()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00028">openage::UnitSelection::on_drawhud()</a>, <a class="el" href="player_8cpp_source.xhtml#l00055">openage::Player::owns()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00020">openage::gameio::save_unit()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00283">openage::UnitSelection::show_attributes()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00289">stop_actions()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00372">openage::DeadAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00464">openage::IdleAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00808">openage::TrainAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00891">openage::BuildAction::update_in_range()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l01050">openage::GatherAction::update_in_range()</a>.</p>
<div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a6c56a8b7e9856a8e0535cacbe831bae7_cgraph.svg" width="354" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a6c56a8b7e9856a8e0535cacbe831bae7_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aba4a16068cf5a6b218a4c78f499874b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba4a16068cf5a6b218a4c78f499874b0">&#9670;&nbsp;</a></span>is_own_unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::is_own_unit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_player.xhtml">Player</a> &amp;&#160;</td>
          <td class="paramname"><em>player</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>checks whether the current player is the owner of this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                           {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">return</span> player.owns(*<span class="keyword">this</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="player_8cpp_source.xhtml#l00055">openage::Player::owns()</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00319">openage::UnitSelection::get_unit_selection_type()</a>, and <a class="el" href="selection_8cpp_source.xhtml#l00183">openage::UnitSelection::kill_unit()</a>.</p>
<div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aba4a16068cf5a6b218a4c78f499874b0_cgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aba4a16068cf5a6b218a4c78f499874b0_icgraph.svg" width="100%" height="432"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ae769f520dfdb148ec831c151a954a881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae769f520dfdb148ec831c151a954a881">&#9670;&nbsp;</a></span>logsource_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string openage::Unit::logsource_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the unit's name as the LogSource name. </p>

<p>Implements <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#a7f4d82915a2298899da93d55ab92e7dc">openage::log::LogSource</a>.</p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00311">311</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;                               {</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;Unit &quot;</span> + <a class="code" href="namespacestd.xhtml#a26aa0f4be3a77ac5cc3ce0cabb545042">std::to_string</a>(this-&gt;<span class="keywordtype">id</span>);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div><div class="ttc" id="namespacestd_xhtml_a26aa0f4be3a77ac5cc3ce0cabb545042"><div class="ttname"><a href="namespacestd.xhtml#a26aa0f4be3a77ac5cc3ce0cabb545042">std::to_string</a></div><div class="ttdeci">string to_string(const openage::game_resource &amp;res)</div><div class="ttdef"><b>Definition:</b> <a href="gamestate_2resource_8cpp_source.xhtml#l00193">resource.cpp:193</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="gamestate_2resource_8cpp_source.xhtml#l00193">std::to_string()</a>.</p>
<div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ae769f520dfdb148ec831c151a954a881_cgraph.svg" width="363" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a76a10b9ab26e62d7b712a6c796052ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76a10b9ab26e62d7b712a6c796052ee3">&#9670;&nbsp;</a></span>make_location()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename ... Arg&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::make_location </td>
          <td>(</td>
          <td class="paramtype">Arg ...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>constructs a new location for this unit replacing any existing locatio </p>
<p>uses same args as the location constructor except the first which will filled automatically </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00078">78</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                     {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">// remove any existing location first</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>) {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>-&gt;remove();</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">// since Unit is a friend of the location</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment">// make_shared will not work</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a> = std::unique_ptr&lt;T&gt;(<span class="keyword">new</span> T(*<span class="keyword">this</span>, args ...));</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a12811894b98383b4c3cfe6769bc3ff80"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">openage::Unit::location</a></div><div class="ttdeci">std::unique_ptr&lt; TerrainObject &gt; location</div><div class="ttdoc">space on the map used by this unit null if the object is not yet placed or garrisoned</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00068">unit.h:68</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00294">openage::ObjectProducer::place()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00682">openage::BuildingProducer::place()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00847">openage::ProjectileProducer::place()</a>, and <a class="el" href="unit__type_8cpp_source.xhtml#l00138">openage::NyanType::place()</a>.</p>
<div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a76a10b9ab26e62d7b712a6c796052ee3_icgraph.svg" width="100%" height="486"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aecd686fafc67487f4df4d3637f2621f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecd686fafc67487f4df4d3637f2621f4">&#9670;&nbsp;</a></span>push_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::push_action </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt;&#160;</td>
          <td class="paramname"><em>action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds a new action on top of the action stack will be performed immediately </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;                                                                   {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="comment">// unit not being deleted -- can control unit</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">if</span> (force || this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a21542f7813db482fd36799cf12971979">accept_commands</a>()) {</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.push_back(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(action));</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    }</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a21542f7813db482fd36799cf12971979"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a21542f7813db482fd36799cf12971979">openage::Unit::accept_commands</a></div><div class="ttdeci">bool accept_commands() const</div><div class="ttdoc">true when the unit is alive and able to add new actions</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00045">unit.cpp:45</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00045">accept_commands()</a>, <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>, and <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00826">openage::ProjectileProducer::initialise()</a>, <a class="el" href="unit__type_8cpp_source.xhtml#l00118">openage::NyanType::initialise()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00140">openage::GarrisonAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00184">openage::TrainAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00207">openage::ResearchAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00230">openage::BuildAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00257">openage::GatherAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00292">openage::AttackAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00320">openage::RepairAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00348">openage::HealAbility::invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00393">openage::ConvertAbility::invoke()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l00428">openage::FoundationAction::on_completion()</a>.</p>
<div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aecd686fafc67487f4df4d3637f2621f4_cgraph.svg" width="100%" height="378"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aecd686fafc67487f4df4d3637f2621f4_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac5dcdf3180dcd4bdce67b765d8ef2134"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5dcdf3180dcd4bdce67b765d8ef2134">&#9670;&nbsp;</a></span>queue_cmd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; openage::Unit::queue_cmd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;&#160;</td>
          <td class="paramname"><em>cmd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>queues a command to be applied to this unit on the next update </p>
<dl class="section return"><dt>Returns</dt><dd>the ability which will apply the command if an action was created otherwise nullptr is returned when no ability can handle the command </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00262">262</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;                                                             {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    std::lock_guard&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">command_queue_lock</a>);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="comment">// following the specified ability priority</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="comment">// find suitable ability for this target if available</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;ability : <a class="code" href="namespaceopenage.xhtml#a435b29ad85fdfd9d975d8846daad6b2d">ability_priority</a>) {</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="keyword">auto</span> pair = this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>.find(ability);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="keywordflow">if</span> (pair != this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>.end() &amp;&amp;</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;            cmd.ability()[static_cast&lt;int&gt;(pair-&gt;first)] &amp;&amp; pair-&gt;second-&gt;can_invoke(*<span class="keyword">this</span>, cmd)) {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;            <a class="code" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a>.push(std::make_pair(pair-&gt;second, cmd));</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            <span class="keywordflow">return</span> pair-&gt;second;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_afc59d516f370891e74777246cef87ed8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">openage::Unit::command_queue_lock</a></div><div class="ttdeci">std::mutex command_queue_lock</div><div class="ttdoc">mutex controlling updates to the command queue</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00284">unit.h:284</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a57f5c6434774eee7ab25124f4ddb2a6c"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">openage::Unit::ability_available</a></div><div class="ttdeci">std::unordered_map&lt; ability_type, std::shared_ptr&lt; UnitAbility &gt; &gt; ability_available</div><div class="ttdoc">ability available – actions that this entity can perform when controlled</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00261">unit.h:261</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a435b29ad85fdfd9d975d8846daad6b2d"><div class="ttname"><a href="namespaceopenage.xhtml#a435b29ad85fdfd9d975d8846daad6b2d">openage::ability_priority</a></div><div class="ttdeci">static std::vector&lt; ability_type &gt; ability_priority</div><div class="ttdoc">the order abilities should be used when available</div><div class="ttdef"><b>Definition:</b> <a href="ability_8h_source.xhtml#l00058">ability.h:58</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_affad2da15f99e71f16baa669b2c86b73"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">openage::Unit::command_queue</a></div><div class="ttdeci">std::queue&lt; std::pair&lt; std::shared_ptr&lt; UnitAbility &gt;, const Command &gt; &gt; command_queue</div><div class="ttdoc">queue commands to be applied on the next update</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00279">unit.h:279</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="command_8cpp_source.xhtml#l00091">openage::Command::ability()</a>, <a class="el" href="unit_8h_source.xhtml#l00261">ability_available</a>, <a class="el" href="ability_8h_source.xhtml#l00058">openage::ability_priority</a>, <a class="el" href="unit_8h_source.xhtml#l00279">command_queue</a>, <a class="el" href="unit_8h_source.xhtml#l00284">command_queue_lock</a>, and <a class="el" href="setup_8cpp_source.xhtml#l00022">lock</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_2action_8cpp_source.xhtml#l00208">openage::UnitAction::move_to()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00932">openage::BuildAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01135">openage::GatherAction::on_completion_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00464">openage::IdleAction::update()</a>, and <a class="el" href="unit_2action_8cpp_source.xhtml#l01050">openage::GatherAction::update_in_range()</a>.</p>
<div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ac5dcdf3180dcd4bdce67b765d8ef2134_cgraph.svg" width="416" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_ac5dcdf3180dcd4bdce67b765d8ef2134_icgraph.svg" width="607" height="314"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a24ad46b827d50be1c5af4eccc5111929"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24ad46b827d50be1c5af4eccc5111929">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>removes all actions and abilities current attributes are kept </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                 {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a>.clear();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.clear();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a57f5c6434774eee7ab25124f4ddb2a6c"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">openage::Unit::ability_available</a></div><div class="ttdeci">std::unordered_map&lt; ability_type, std::shared_ptr&lt; UnitAbility &gt; &gt; ability_available</div><div class="ttdoc">ability available – actions that this entity can perform when controlled</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00261">unit.h:261</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a74d9dca7027740fdf81be8563c0dd906"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">openage::Unit::pop_destructables</a></div><div class="ttdeci">bool pop_destructables</div><div class="ttdoc">pop any destructable actions on the next update cycle and prevent additional actions being added</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00291">unit.h:291</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00261">ability_available</a>, <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>, and <a class="el" href="unit_8h_source.xhtml#l00291">pop_destructables</a>.</p>

<p class="reference">Referenced by <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer::initialise()</a>, and <a class="el" href="unit__type_8cpp_source.xhtml#l00118">openage::NyanType::initialise()</a>.</p>
<div id="dynsection-34" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-34-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-34-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-34-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a24ad46b827d50be1c5af4eccc5111929_icgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a8b29886dcd48b1db9381dcc7fd252ebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b29886dcd48b1db9381dcc7fd252ebc">&#9670;&nbsp;</a></span>secondary_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::secondary_action </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt;&#160;</td>
          <td class="paramname"><em>action</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds a secondary action which is always updated </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00242">242</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;                                                            {</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a>.push_back(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(action));</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div><div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a7ac507ed4ccdbae729577ade59adf0ad"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">openage::Unit::action_secondary</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_secondary</div><div class="ttdoc">secondary actions are always updated</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00273">unit.h:273</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00273">action_secondary</a>, and <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

<p class="reference">Referenced by <a class="el" href="ability_8cpp_source.xhtml#l00161">openage::UngarrisonAbility::invoke()</a>.</p>
<div id="dynsection-35" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-35-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-35-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-35-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a8b29886dcd48b1db9381dcc7fd252ebc_icgraph.svg" width="407" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9f53ef015fca7c42ff3bf9d0779145a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f53ef015fca7c42ff3bf9d0779145a3">&#9670;&nbsp;</a></span>stop_actions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::stop_actions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>removes all actions above and including the first interuptable action this will stop any of the units current moving or attacking actions a direct command from the user will invoke this function </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00289">289</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                        {</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="comment">// work around for workers continuing to work after retasking</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">has_attribute</a>(<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">attr_type::worker</a>)) {</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a238fb029bd4cc32e393506533facd976">stop_gather</a>();</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    }</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">// discard all interruptible tasks</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a>(</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        [](std::unique_ptr&lt;UnitAction&gt; &amp;e) {</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;            <span class="keywordflow">return</span> e-&gt;allow_interupt();</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        });</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_aae0b3f53cb1d75823391322876d199ef"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">openage::Unit::erase_after</a></div><div class="ttdeci">void erase_after(std::function&lt; bool(std::unique_ptr&lt; UnitAction &gt; &amp;)&gt; func, bool run_completed=true)</div><div class="ttdoc">erase from action specified by func to the end of the stack all actions erased will have the on_compl...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00315">unit.cpp:315</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a6c56a8b7e9856a8e0535cacbe831bae7"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">openage::Unit::has_attribute</a></div><div class="ttdeci">bool has_attribute(attr_type type) const</div><div class="ttdoc">returns whether attribute is available</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00258">unit.cpp:258</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::attr_type::worker</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a238fb029bd4cc32e393506533facd976"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a238fb029bd4cc32e393506533facd976">openage::Unit::stop_gather</a></div><div class="ttdeci">void stop_gather()</div><div class="ttdoc">removes all gather actions without calling their on_complete actions this cancels the gathering actio...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00282">unit.cpp:282</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00315">erase_after()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00258">has_attribute()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00282">stop_gather()</a>, and <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ab61822e8357dcaff77eaaccf348d9134">openage::worker</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00144">apply_cmd()</a>.</p>
<div id="dynsection-36" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-36-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-36-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-36-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a9f53ef015fca7c42ff3bf9d0779145a3_cgraph.svg" width="540" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-37" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-37-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-37-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-37-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a9f53ef015fca7c42ff3bf9d0779145a3_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a238fb029bd4cc32e393506533facd976"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a238fb029bd4cc32e393506533facd976">&#9670;&nbsp;</a></span>stop_gather()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::stop_gather </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>removes all gather actions without calling their on_complete actions this cancels the gathering action completely </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;                       {</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a>(</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        [](std::unique_ptr&lt;UnitAction&gt; &amp;e) {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keywordflow">return</span> e-&gt;name() == <span class="stringliteral">&quot;gather&quot;</span>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        }, <span class="keyword">false</span>);</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_aae0b3f53cb1d75823391322876d199ef"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">openage::Unit::erase_after</a></div><div class="ttdeci">void erase_after(std::function&lt; bool(std::unique_ptr&lt; UnitAction &gt; &amp;)&gt; func, bool run_completed=true)</div><div class="ttdoc">erase from action specified by func to the end of the stack all actions erased will have the on_compl...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00315">unit.cpp:315</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00315">erase_after()</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00289">stop_actions()</a>.</p>
<div id="dynsection-38" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-38-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-38-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-38-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a238fb029bd4cc32e393506533facd976_cgraph.svg" width="336" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-39" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-39-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-39-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-39-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a238fb029bd4cc32e393506533facd976_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a86a49987e082055274e98a142baffad8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86a49987e082055274e98a142baffad8">&#9670;&nbsp;</a></span>top()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> * openage::Unit::top </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns the current action on top of the stack </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                            {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.empty()) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keywordflow">throw</span> Error{<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Unit stack empty - no top action exists&quot;</span>};</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a>.back().get();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a878fa4f611ba7b3a4d01f3ab6fd16b2a"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">openage::Unit::action_stack</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_stack</div><div class="ttdoc">action stack – top action determines graphic to be drawn</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00267">unit.h:267</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00267">action_stack</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, and <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00045">accept_commands()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00156">draw()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00283">openage::UnitSelection::show_attributes()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>
<div id="dynsection-40" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-40-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-40-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-40-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a86a49987e082055274e98a142baffad8_cgraph.svg" width="298" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-41" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-41-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-41-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-41-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a86a49987e082055274e98a142baffad8_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a6090576402dce0bcc8f3f584ae0c1db5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6090576402dce0bcc8f3f584ae0c1db5">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#aab633747a9b25e86119eec83106fb2ae">time_nsec_t</a>&#160;</td>
          <td class="paramname"><em>lastframe_duration</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>update this object using the action currently on top of the stack </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                                                {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="comment">// if unit is not on the map then do nothing</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">if</span> (!this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a>) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="comment">// unit is dead (not player controlled)</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a>) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a>(</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            [](std::unique_ptr&lt;UnitAction&gt; &amp;e) {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">return</span> e-&gt;allow_interupt() || e-&gt;allow_control();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;            }, <span class="keyword">false</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="comment">     * the active action is on top</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">has_action</a>()) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// \todo change the entire unit action timing</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">//       to a higher resolution like nsecs or usecs.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="comment">// time as float, in milliseconds.</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keyword">auto</span> time_elapsed = lastframe_duration / 1e6;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a>()-&gt;<a class="code" href="classopenage_1_1_unit_action.xhtml#a0196263da38bfa208d50c2241809cd62">update</a>(time_elapsed);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">// the top primary action specifies whether</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// secondary actions are updated</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a>()-&gt;allow_control()) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aaf08f7acc4fd00636671fb21ba4cbaf0">update_secondary</a>(time_elapsed);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">// check completion of all primary actions,</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// pop completed actions and anything above</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a>(</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            [](std::unique_ptr&lt;UnitAction&gt; &amp;e) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                <span class="keywordflow">return</span> e-&gt;completed();</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            });</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="comment">// apply new queued commands</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a627bc25cc4e546ff34b06cfa809f8946">apply_all_cmds</a>();</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_aae0b3f53cb1d75823391322876d199ef"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">openage::Unit::erase_after</a></div><div class="ttdeci">void erase_after(std::function&lt; bool(std::unique_ptr&lt; UnitAction &gt; &amp;)&gt; func, bool run_completed=true)</div><div class="ttdoc">erase from action specified by func to the end of the stack all actions erased will have the on_compl...</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00315">unit.cpp:315</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_action_xhtml_a0196263da38bfa208d50c2241809cd62"><div class="ttname"><a href="classopenage_1_1_unit_action.xhtml#a0196263da38bfa208d50c2241809cd62">openage::UnitAction::update</a></div><div class="ttdeci">virtual void update(unsigned int time)=0</div><div class="ttdoc">each action has its own update functionality which gets called when this is the active action</div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a257ef8a7aeceb306d372ef745b40ef90"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">openage::Unit::has_action</a></div><div class="ttdeci">bool has_action() const</div><div class="ttdoc">checks the entity has an action, if it has no action it should be removed from the game</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00041">unit.cpp:41</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_aaf08f7acc4fd00636671fb21ba4cbaf0"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#aaf08f7acc4fd00636671fb21ba4cbaf0">openage::Unit::update_secondary</a></div><div class="ttdeci">void update_secondary(int64_t time_elapsed)</div><div class="ttdoc">update all secondary actions</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00122">unit.cpp:122</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a627bc25cc4e546ff34b06cfa809f8946"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a627bc25cc4e546ff34b06cfa809f8946">openage::Unit::apply_all_cmds</a></div><div class="ttdeci">void apply_all_cmds()</div><div class="ttdoc">applies new commands as part of the units update process</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00134">unit.cpp:134</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a74d9dca7027740fdf81be8563c0dd906"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">openage::Unit::pop_destructables</a></div><div class="ttdeci">bool pop_destructables</div><div class="ttdoc">pop any destructable actions on the next update cycle and prevent additional actions being added</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00291">unit.h:291</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a12811894b98383b4c3cfe6769bc3ff80"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">openage::Unit::location</a></div><div class="ttdeci">std::unique_ptr&lt; TerrainObject &gt; location</div><div class="ttdoc">space on the map used by this unit null if the object is not yet placed or garrisoned</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00068">unit.h:68</a></div></div>
<div class="ttc" id="classopenage_1_1_unit_xhtml_a86a49987e082055274e98a142baffad8"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">openage::Unit::top</a></div><div class="ttdeci">UnitAction * top() const</div><div class="ttdoc">returns the current action on top of the stack</div><div class="ttdef"><b>Definition:</b> <a href="unit_8cpp_source.xhtml#l00053">unit.cpp:53</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8cpp_source.xhtml#l00134">apply_all_cmds()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00315">erase_after()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00041">has_action()</a>, <a class="el" href="unit_8h_source.xhtml#l00068">location</a>, <a class="el" href="unit_8h_source.xhtml#l00291">pop_destructables</a>, <a class="el" href="unit_8cpp_source.xhtml#l00053">top()</a>, <a class="el" href="classopenage_1_1_unit_action.xhtml#a0196263da38bfa208d50c2241809cd62">openage::UnitAction::update()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00122">update_secondary()</a>.</p>
<div id="dynsection-42" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-42-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-42-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-42-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_a6090576402dce0bcc8f3f584ae0c1db5_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="aaf08f7acc4fd00636671fb21ba4cbaf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf08f7acc4fd00636671fb21ba4cbaf0">&#9670;&nbsp;</a></span>update_secondary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::update_secondary </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>time_elapsed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>update all secondary actions </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                                {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="comment">// update secondary actions and remove when completed</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keyword">auto</span> position_it = std::remove_if(</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        std::begin(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a>),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a>),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        [time_elapsed](std::unique_ptr&lt;UnitAction&gt; &amp;action) {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            action-&gt;update(time_elapsed);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">return</span> action-&gt;completed();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        });</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a>.erase(position_it, std::end(this-&gt;<a class="code" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a>));</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div><div class="ttc" id="classopenage_1_1_unit_xhtml_a7ac507ed4ccdbae729577ade59adf0ad"><div class="ttname"><a href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">openage::Unit::action_secondary</a></div><div class="ttdeci">std::vector&lt; std::unique_ptr&lt; UnitAction &gt; &gt; action_secondary</div><div class="ttdoc">secondary actions are always updated</div><div class="ttdef"><b>Definition:</b> <a href="unit_8h_source.xhtml#l00273">unit.h:273</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit_8h_source.xhtml#l00273">action_secondary</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>
<div id="dynsection-43" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-43-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-43-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-43-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit_aaf08f7acc4fd00636671fb21ba4cbaf0_icgraph.svg" width="358" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a57f5c6434774eee7ab25124f4ddb2a6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57f5c6434774eee7ab25124f4ddb2a6c">&#9670;&nbsp;</a></span>ability_available</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;<a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>, std::shared_ptr&lt;<a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a>&gt; &gt; openage::Unit::ability_available</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>ability available &ndash; actions that this entity can perform when controlled </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00261">261</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00228">get_ability()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00224">give_ability()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00262">queue_cmd()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00035">reset()</a>.</p>

</div>
</div>
<a id="a7ac507ed4ccdbae729577ade59adf0ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ac507ed4ccdbae729577ade59adf0ad">&#9670;&nbsp;</a></span>action_secondary</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a>&gt; &gt; openage::Unit::action_secondary</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>secondary actions are always updated </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00273">273</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00242">secondary_action()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00122">update_secondary()</a>.</p>

</div>
</div>
<a id="a878fa4f611ba7b3a4d01f3ab6fd16b2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878fa4f611ba7b3a4d01f3ab6fd16b2a">&#9670;&nbsp;</a></span>action_stack</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a>&gt; &gt; openage::Unit::action_stack</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>action stack &ndash; top action determines graphic to be drawn </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00267">267</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00060">before()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00315">erase_after()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00041">has_action()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00235">push_action()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00035">reset()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00053">top()</a>.</p>

</div>
</div>
<a id="a49ca534b218c7a77336914f450d71602"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49ca534b218c7a77336914f450d71602">&#9670;&nbsp;</a></span>attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> openage::Unit::attributes</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><a class="el" href="classopenage_1_1_unit.xhtml" title="A game object with current state represented by a stack of actions since this class represents both u...">Unit</a> attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for each type. </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00254">254</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00246">add_attribute()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00250">add_attributes()</a>, <a class="el" href="unit_8h_source.xhtml#l00199">get_attribute()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00258">has_attribute()</a>, and <a class="el" href="unit__type_8cpp_source.xhtml#l00035">openage::UnitType::reinitialise()</a>.</p>

</div>
</div>
<a id="affad2da15f99e71f16baa669b2c86b73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affad2da15f99e71f16baa669b2c86b73">&#9670;&nbsp;</a></span>command_queue</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::queue&lt;std::pair&lt;std::shared_ptr&lt;<a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a>&gt;, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a>&gt; &gt; openage::Unit::command_queue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>queue commands to be applied on the next update </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00279">279</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00134">apply_all_cmds()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00262">queue_cmd()</a>.</p>

</div>
</div>
<a id="afc59d516f370891e74777246cef87ed8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc59d516f370891e74777246cef87ed8">&#9670;&nbsp;</a></span>command_queue_lock</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex openage::Unit::command_queue_lock</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>mutex controlling updates to the command queue </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00284">284</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00134">apply_all_cmds()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00262">queue_cmd()</a>.</p>

</div>
</div>
<a id="acf42842a4886bf35b64147c7f44d797b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf42842a4886bf35b64147c7f44d797b">&#9670;&nbsp;</a></span>container</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a>* openage::Unit::container</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>the container that updates this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00296">296</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00307">get_container()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00303">get_ref()</a>.</p>

</div>
</div>
<a id="aa5e4275675942d5e5e6b12a83dbf577a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5e4275675942d5e5e6b12a83dbf577a">&#9670;&nbsp;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a> openage::Unit::id</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>this units unique id value </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00048">48</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00136">openage::UnitSelection::add_unit()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00170">openage::UnitSelection::remove_unit()</a>, and <a class="el" href="selection_8cpp_source.xhtml#l00128">openage::UnitSelection::toggle_unit()</a>.</p>

</div>
</div>
<a id="a12811894b98383b4c3cfe6769bc3ff80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12811894b98383b4c3cfe6769bc3ff80">&#9670;&nbsp;</a></span>location</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a>&gt; openage::Unit::location</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>space on the map used by this unit null if the object is not yet placed or garrisoned </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000044">Todo:</a></b></dt><dd>make private field </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00068">68</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_2action_8cpp_source.xhtml#l00067">openage::UnitAction::adjacent_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01215">openage::AttackAction::attack()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00067">openage::MoveAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00122">openage::GarrisonAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00219">openage::BuildAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00246">openage::GatherAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00276">openage::AttackAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00307">openage::RepairAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00335">openage::HealAbility::can_invoke()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00381">openage::ConvertAbility::can_invoke()</a>, <a class="el" href="terrain__object_8cpp_source.xhtml#l00487">openage::complete_building()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00290">openage::TargetAction::completed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01378">openage::ProjectileAction::completed()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00156">draw()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00140">openage::UnitAction::face_towards()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01227">openage::AttackAction::fire_projectile()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00453">openage::IdleAction::IdleAction()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer::initialise()</a>, <a class="el" href="ability_8cpp_source.xhtml#l00079">openage::MoveAbility::invoke()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00749">openage::BuildingProducer::make_annex()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00277">openage::TargetAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00932">openage::BuildAction::on_completion()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01135">openage::GatherAction::on_completion_in_range()</a>, <a class="el" href="selection_8cpp_source.xhtml#l00028">openage::UnitSelection::on_drawhud()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00294">openage::ObjectProducer::place()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00682">openage::BuildingProducer::place()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00847">openage::ProjectileProducer::place()</a>, <a class="el" href="unit__type_8cpp_source.xhtml#l00138">openage::NyanType::place()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00020">openage::gameio::save_unit()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00726">openage::MoveAction::set_distance()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00715">openage::MoveAction::set_path()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00422">openage::FoundationAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00464">openage::IdleAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00591">openage::MoveAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00808">openage::TrainAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l01343">openage::ProjectileAction::update()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00303">openage::TargetAction::update_distance()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00744">openage::GarrisonAction::update_in_range()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00891">openage::BuildAction::update_in_range()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00027">~Unit()</a>.</p>

</div>
</div>
<a id="a74d9dca7027740fdf81be8563c0dd906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74d9dca7027740fdf81be8563c0dd906">&#9670;&nbsp;</a></span>pop_destructables</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::pop_destructables</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>pop any destructable actions on the next update cycle and prevent additional actions being added </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00291">291</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="unit_8cpp_source.xhtml#l00278">delete_unit()</a>, <a class="el" href="unit_8cpp_source.xhtml#l00035">reset()</a>, and <a class="el" href="unit_8cpp_source.xhtml#l00075">update()</a>.</p>

</div>
</div>
<a id="a00fd6387097ed12ae6f6b6ec2ab2939e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00fd6387097ed12ae6f6b6ec2ab2939e">&#9670;&nbsp;</a></span>selected</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::selected</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>should selection features be drawn </p>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000043">Todo:</a></b></dt><dd>should be a pointer to selection to be updated when unit is removed, or null if not selected </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00061">61</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00136">openage::UnitSelection::add_unit()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00294">openage::ObjectProducer::place()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00682">openage::BuildingProducer::place()</a>, and <a class="el" href="selection_8cpp_source.xhtml#l00170">openage::UnitSelection::remove_unit()</a>.</p>

</div>
</div>
<a id="a2d7da7c7ccd95557e10d54a58a033187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d7da7c7ccd95557e10d54a58a033187">&#9670;&nbsp;</a></span>unit_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopenage_1_1_unit_type.xhtml">UnitType</a>* openage::Unit::unit_type</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>type of this object, this is set by the the <a class="el" href="classopenage_1_1_unit_type.xhtml" title="units in aoc have a class and a type">UnitType</a> which was most recently applied to this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00054">54</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="player_8cpp_source.xhtml#l00148">openage::Player::active_unit_added()</a>, <a class="el" href="player_8cpp_source.xhtml#l00193">openage::Player::active_unit_removed()</a>, <a class="el" href="unit_2action_8cpp_source.xhtml#l00127">openage::UnitAction::current_graphics()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00213">openage::ObjectProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00585">openage::BuildingProducer::initialise()</a>, <a class="el" href="producer_8cpp_source.xhtml#l00826">openage::ProjectileProducer::initialise()</a>, <a class="el" href="unit__type_8cpp_source.xhtml#l00118">openage::NyanType::initialise()</a>, <a class="el" href="player_8cpp_source.xhtml#l00233">openage::Player::killed_unit()</a>, <a class="el" href="game__save_8cpp_source.xhtml#l00020">openage::gameio::save_unit()</a>, and <a class="el" href="selection_8cpp_source.xhtml#l00283">openage::UnitSelection::show_attributes()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/unit/<a class="el" href="unit_8h_source.xhtml">unit.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/unit/<a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="classopenage_1_1_unit.xhtml">Unit</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
