<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::Unit Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1_unit.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1_unit-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::Unit Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="unit_8h_source.xhtml">unit.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for openage::Unit:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for openage::Unit:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_unit__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0d28eef2303cf46adc72001bc1cc3619"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a0d28eef2303cf46adc72001bc1cc3619">Unit</a> (<a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *c, <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a> <a class="el" href="classopenage_1_1_unit.xhtml#aa5e4275675942d5e5e6b12a83dbf577a">id</a>)</td></tr>
<tr class="separator:a0d28eef2303cf46adc72001bc1cc3619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619f807de65d2a8488d7decbe31866f7"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a619f807de65d2a8488d7decbe31866f7">~Unit</a> ()</td></tr>
<tr class="separator:a619f807de65d2a8488d7decbe31866f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memTemplParams" colspan="2">template&lt;class T , typename ... Arg&gt; </td></tr>
<tr class="memitem:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a76a10b9ab26e62d7b712a6c796052ee3">make_location</a> (Arg ... args)</td></tr>
<tr class="separator:a76a10b9ab26e62d7b712a6c796052ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ad46b827d50be1c5af4eccc5111929"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a24ad46b827d50be1c5af4eccc5111929">reset</a> ()</td></tr>
<tr class="separator:a24ad46b827d50be1c5af4eccc5111929"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a257ef8a7aeceb306d372ef745b40ef90"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a257ef8a7aeceb306d372ef745b40ef90">has_action</a> () const</td></tr>
<tr class="separator:a257ef8a7aeceb306d372ef745b40ef90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21542f7813db482fd36799cf12971979"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a21542f7813db482fd36799cf12971979">accept_commands</a> () const</td></tr>
<tr class="separator:a21542f7813db482fd36799cf12971979"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba4a16068cf5a6b218a4c78f499874b0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aba4a16068cf5a6b218a4c78f499874b0">is_own_unit</a> (const <a class="el" href="classopenage_1_1_player.xhtml">Player</a> &amp;player)</td></tr>
<tr class="separator:aba4a16068cf5a6b218a4c78f499874b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86a49987e082055274e98a142baffad8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a86a49987e082055274e98a142baffad8">top</a> () const</td></tr>
<tr class="separator:a86a49987e082055274e98a142baffad8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4923193cf464188a2e5f8563dd85ff43"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a4923193cf464188a2e5f8563dd85ff43">before</a> (const <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *action) const</td></tr>
<tr class="separator:a4923193cf464188a2e5f8563dd85ff43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6090576402dce0bcc8f3f584ae0c1db5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a6090576402dce0bcc8f3f584ae0c1db5">update</a> (<a class="el" href="namespaceopenage.xhtml#aab633747a9b25e86119eec83106fb2ae">time_nsec_t</a> lastframe_duration)</td></tr>
<tr class="separator:a6090576402dce0bcc8f3f584ae0c1db5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae422123ecc6a2e930ba86e45bf8a5a37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ae422123ecc6a2e930ba86e45bf8a5a37">draw</a> (const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="separator:ae422123ecc6a2e930ba86e45bf8a5a37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4499be2634985e11b0c10f895978b85"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af4499be2634985e11b0c10f895978b85">draw</a> (<a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *loc, const <a class="el" href="namespaceopenage.xhtml#a905fde9cff5779781eb779ca95d80cf1">graphic_set</a> &amp;graphics, const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="separator:af4499be2634985e11b0c10f895978b85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8b821f1e22d782134986784fd94dbe3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af8b821f1e22d782134986784fd94dbe3">draw</a> (<a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> draw_pos, std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_texture.xhtml">UnitTexture</a> &gt; graphic, unsigned int frame, const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;engine)</td></tr>
<tr class="separator:af8b821f1e22d782134986784fd94dbe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f35cd78b09fea32514ed2b2dd87b64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a37f35cd78b09fea32514ed2b2dd87b64">give_ability</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;)</td></tr>
<tr class="separator:a37f35cd78b09fea32514ed2b2dd87b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0e740b8fd1b0f948916c854b9910ec"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2f0e740b8fd1b0f948916c854b9910ec">get_ability</a> (<a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a> type)</td></tr>
<tr class="separator:a2f0e740b8fd1b0f948916c854b9910ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd686fafc67487f4df4d3637f2621f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aecd686fafc67487f4df4d3637f2621f4">push_action</a> (std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; action, bool force=false)</td></tr>
<tr class="separator:aecd686fafc67487f4df4d3637f2621f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b29886dcd48b1db9381dcc7fd252ebc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a8b29886dcd48b1db9381dcc7fd252ebc">secondary_action</a> (std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; action)</td></tr>
<tr class="separator:a8b29886dcd48b1db9381dcc7fd252ebc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab74b08bb7725863fc63839d798f6aedb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ab74b08bb7725863fc63839d798f6aedb">add_attribute</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_attribute_container.xhtml">AttributeContainer</a> &gt; attr)</td></tr>
<tr class="separator:ab74b08bb7725863fc63839d798f6aedb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46fb7ca65071c68a85f492a8235302e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#af46fb7ca65071c68a85f492a8235302e">add_attributes</a> (const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;attr)</td></tr>
<tr class="separator:af46fb7ca65071c68a85f492a8235302e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a598937325db2a289810c08b4e0a140bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a598937325db2a289810c08b4e0a140bd">add_attributes</a> (const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;attr, bool shared, bool unshared)</td></tr>
<tr class="separator:a598937325db2a289810c08b4e0a140bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c56a8b7e9856a8e0535cacbe831bae7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a6c56a8b7e9856a8e0535cacbe831bae7">has_attribute</a> (<a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36">attr_type</a> type) const</td></tr>
<tr class="separator:a6c56a8b7e9856a8e0535cacbe831bae7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e12324401051119f44e212dae1a87ce"><td class="memTemplParams" colspan="2">template&lt;attr_type T&gt; </td></tr>
<tr class="memitem:a3e12324401051119f44e212dae1a87ce"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_attribute.xhtml">Attribute</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a3e12324401051119f44e212dae1a87ce">get_attribute</a> ()</td></tr>
<tr class="separator:a3e12324401051119f44e212dae1a87ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5dcdf3180dcd4bdce67b765d8ef2134"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ac5dcdf3180dcd4bdce67b765d8ef2134">queue_cmd</a> (const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;cmd)</td></tr>
<tr class="separator:ac5dcdf3180dcd4bdce67b765d8ef2134"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a238fb029bd4cc32e393506533facd976"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a238fb029bd4cc32e393506533facd976">stop_gather</a> ()</td></tr>
<tr class="separator:a238fb029bd4cc32e393506533facd976"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f53ef015fca7c42ff3bf9d0779145a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a9f53ef015fca7c42ff3bf9d0779145a3">stop_actions</a> ()</td></tr>
<tr class="separator:a9f53ef015fca7c42ff3bf9d0779145a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7f76de394d832d927a9e6d46bd3c93f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ad7f76de394d832d927a9e6d46bd3c93f">delete_unit</a> ()</td></tr>
<tr class="separator:ad7f76de394d832d927a9e6d46bd3c93f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfea298b04684ab09dd8f499dabb8715"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_reference.xhtml">UnitReference</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#adfea298b04684ab09dd8f499dabb8715">get_ref</a> ()</td></tr>
<tr class="separator:adfea298b04684ab09dd8f499dabb8715"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e9937d84fe91d95cbe273f6fe986068"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2e9937d84fe91d95cbe273f6fe986068">get_container</a> () const</td></tr>
<tr class="separator:a2e9937d84fe91d95cbe273f6fe986068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae769f520dfdb148ec831c151a954a881"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#ae769f520dfdb148ec831c151a954a881">logsource_name</a> () override</td></tr>
<tr class="separator:ae769f520dfdb148ec831c151a954a881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1log_1_1_log_source"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1log_1_1_log_source')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml">openage::log::LogSource</a></td></tr>
<tr class="memitem:aa2ff50c079c20b6ff1dfa08f45080b0a inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#aa2ff50c079c20b6ff1dfa08f45080b0a">LogSource</a> ()</td></tr>
<tr class="separator:aa2ff50c079c20b6ff1dfa08f45080b0a inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa74e829150dd523fea5173cd5d864285 inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#aa74e829150dd523fea5173cd5d864285">~LogSource</a> ()=default</td></tr>
<tr class="separator:aa74e829150dd523fea5173cd5d864285 inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5640099e20af4cd368c767dbcef3a1df inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#a5640099e20af4cd368c767dbcef3a1df">log</a> (const <a class="el" href="structopenage_1_1log_1_1message.xhtml">message</a> &amp;msg)</td></tr>
<tr class="separator:a5640099e20af4cd368c767dbcef3a1df inherit pub_methods_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aa5e4275675942d5e5e6b12a83dbf577a"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aa5e4275675942d5e5e6b12a83dbf577a">id</a></td></tr>
<tr class="separator:aa5e4275675942d5e5e6b12a83dbf577a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d7da7c7ccd95557e10d54a58a033187"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1_unit_type.xhtml">UnitType</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a2d7da7c7ccd95557e10d54a58a033187">unit_type</a></td></tr>
<tr class="separator:a2d7da7c7ccd95557e10d54a58a033187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00fd6387097ed12ae6f6b6ec2ab2939e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a00fd6387097ed12ae6f6b6ec2ab2939e">selected</a></td></tr>
<tr class="separator:a00fd6387097ed12ae6f6b6ec2ab2939e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12811894b98383b4c3cfe6769bc3ff80"><td class="memItemLeft" align="right" valign="top">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a12811894b98383b4c3cfe6769bc3ff80">location</a></td></tr>
<tr class="separator:a12811894b98383b4c3cfe6769bc3ff80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49ca534b218c7a77336914f450d71602"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a49ca534b218c7a77336914f450d71602">attributes</a></td></tr>
<tr class="separator:a49ca534b218c7a77336914f450d71602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1log_1_1_log_source"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1log_1_1_log_source')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml">openage::log::LogSource</a></td></tr>
<tr class="memitem:ae75ede4764f389add2e8a870584807bb inherit pub_attribs_classopenage_1_1log_1_1_log_source"><td class="memItemLeft" align="right" valign="top">const size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#ae75ede4764f389add2e8a870584807bb">logger_id</a></td></tr>
<tr class="separator:ae75ede4764f389add2e8a870584807bb inherit pub_attribs_classopenage_1_1log_1_1_log_source"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a627bc25cc4e546ff34b06cfa809f8946"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a627bc25cc4e546ff34b06cfa809f8946">apply_all_cmds</a> ()</td></tr>
<tr class="separator:a627bc25cc4e546ff34b06cfa809f8946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef7363eab8f805124114c4967470379d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aef7363eab8f805124114c4967470379d">apply_cmd</a> (std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; ability, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;cmd)</td></tr>
<tr class="separator:aef7363eab8f805124114c4967470379d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf08f7acc4fd00636671fb21ba4cbaf0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aaf08f7acc4fd00636671fb21ba4cbaf0">update_secondary</a> (int64_t time_elapsed)</td></tr>
<tr class="separator:aaf08f7acc4fd00636671fb21ba4cbaf0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae0b3f53cb1d75823391322876d199ef"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#aae0b3f53cb1d75823391322876d199ef">erase_after</a> (std::function&lt; bool(std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &amp;)&gt; func, bool run_completed=true)</td></tr>
<tr class="separator:aae0b3f53cb1d75823391322876d199ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a57f5c6434774eee7ab25124f4ddb2a6c"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>, std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a57f5c6434774eee7ab25124f4ddb2a6c">ability_available</a></td></tr>
<tr class="separator:a57f5c6434774eee7ab25124f4ddb2a6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878fa4f611ba7b3a4d01f3ab6fd16b2a"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a878fa4f611ba7b3a4d01f3ab6fd16b2a">action_stack</a></td></tr>
<tr class="separator:a878fa4f611ba7b3a4d01f3ab6fd16b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ac507ed4ccdbae729577ade59adf0ad"><td class="memItemLeft" align="right" valign="top">std::vector&lt; std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a7ac507ed4ccdbae729577ade59adf0ad">action_secondary</a></td></tr>
<tr class="separator:a7ac507ed4ccdbae729577ade59adf0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affad2da15f99e71f16baa669b2c86b73"><td class="memItemLeft" align="right" valign="top">std::queue&lt; std::pair&lt; std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &gt; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#affad2da15f99e71f16baa669b2c86b73">command_queue</a></td></tr>
<tr class="separator:affad2da15f99e71f16baa669b2c86b73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc59d516f370891e74777246cef87ed8"><td class="memItemLeft" align="right" valign="top">std::mutex&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#afc59d516f370891e74777246cef87ed8">command_queue_lock</a></td></tr>
<tr class="separator:afc59d516f370891e74777246cef87ed8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74d9dca7027740fdf81be8563c0dd906"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#a74d9dca7027740fdf81be8563c0dd906">pop_destructables</a></td></tr>
<tr class="separator:a74d9dca7027740fdf81be8563c0dd906"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf42842a4886bf35b64147c7f44d797b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_unit.xhtml#acf42842a4886bf35b64147c7f44d797b">container</a></td></tr>
<tr class="separator:acf42842a4886bf35b64147c7f44d797b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A game object with current state represented by a stack of actions since this class represents both unit and building objects it may be better to name as GameObject</p>
<p>it is possible that abilities are not required here and they could be moved to selection controller &ndash; units only need the attributes </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00036">36</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a0d28eef2303cf46adc72001bc1cc3619"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d28eef2303cf46adc72001bc1cc3619">&#9670;&nbsp;</a></span>Unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Unit::Unit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a>&#160;</td>
          <td class="paramname"><em>id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00019">19</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a619f807de65d2a8488d7decbe31866f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a619f807de65d2a8488d7decbe31866f7">&#9670;&nbsp;</a></span>~Unit()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::Unit::~Unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>unit cleanup will delete terrain object </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00027">27</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a21542f7813db482fd36799cf12971979"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21542f7813db482fd36799cf12971979">&#9670;&nbsp;</a></span>accept_commands()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::accept_commands </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>true when the unit is alive and able to add new actions </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="ab74b08bb7725863fc63839d798f6aedb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab74b08bb7725863fc63839d798f6aedb">&#9670;&nbsp;</a></span>add_attribute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attribute </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_attribute_container.xhtml">AttributeContainer</a> &gt;&#160;</td>
          <td class="paramname"><em>attr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>give a new attribute this this unit this is used to set things like color, hitpoints and speed </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00246">246</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="af46fb7ca65071c68a85f492a8235302e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af46fb7ca65071c68a85f492a8235302e">&#9670;&nbsp;</a></span>add_attributes() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attributes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Give new attributes to this unit. This is used to add the default attributes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00250">250</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a598937325db2a289810c08b4e0a140bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a598937325db2a289810c08b4e0a140bd">&#9670;&nbsp;</a></span>add_attributes() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::add_attributes </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> &amp;&#160;</td>
          <td class="paramname"><em>attr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>shared</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>unshared</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Give new attributes to this unit. If shared is false, shared attributes are ignored. If unshared is false, unshared attributes are ignored. </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a627bc25cc4e546ff34b06cfa809f8946"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a627bc25cc4e546ff34b06cfa809f8946">&#9670;&nbsp;</a></span>apply_all_cmds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::apply_all_cmds </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>applies new commands as part of the units update process </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00134">134</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="aef7363eab8f805124114c4967470379d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef7363eab8f805124114c4967470379d">&#9670;&nbsp;</a></span>apply_cmd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::apply_cmd </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td>
          <td class="paramname"><em>ability</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;&#160;</td>
          <td class="paramname"><em>cmd</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>applies one command using a chosen ability locks the command queue mutex while operating </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00144">144</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a4923193cf464188a2e5f8563dd85ff43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4923193cf464188a2e5f8563dd85ff43">&#9670;&nbsp;</a></span>before()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> * openage::Unit::before </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> *&#160;</td>
          <td class="paramname"><em>action</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns action under the passed action in the stack returns null if stack size is less than 2 </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="ad7f76de394d832d927a9e6d46bd3c93f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7f76de394d832d927a9e6d46bd3c93f">&#9670;&nbsp;</a></span>delete_unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::delete_unit </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>begins unit removal by popping some actions</p>
<p>this is the action that occurs when pressing the delete key which plays death sequence and does not remove instantly </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="ae422123ecc6a2e930ba86e45bf8a5a37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae422123ecc6a2e930ba86e45bf8a5a37">&#9670;&nbsp;</a></span>draw() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>draws this action by taking the graphic type of the top action the graphic is found from the current graphic set</p>
<p>this function should be used for most draw purposes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00156">156</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="af4499be2634985e11b0c10f895978b85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4499be2634985e11b0c10f895978b85">&#9670;&nbsp;</a></span>draw() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *&#160;</td>
          <td class="paramname"><em>loc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage.xhtml#a905fde9cff5779781eb779ca95d80cf1">graphic_set</a> &amp;&#160;</td>
          <td class="paramname"><em>graphics</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>an generalized draw function which is useful for drawing annexes </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00163">163</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="af8b821f1e22d782134986784fd94dbe3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8b821f1e22d782134986784fd94dbe3">&#9670;&nbsp;</a></span>draw() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a>&#160;</td>
          <td class="paramname"><em>draw_pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_texture.xhtml">UnitTexture</a> &gt;&#160;</td>
          <td class="paramname"><em>graphic</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>frame</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> &amp;&#160;</td>
          <td class="paramname"><em>engine</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>draws with a specific graphic and frame </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="aae0b3f53cb1d75823391322876d199ef"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae0b3f53cb1d75823391322876d199ef">&#9670;&nbsp;</a></span>erase_after()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::erase_after </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; bool(std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt; &amp;)&gt;&#160;</td>
          <td class="paramname"><em>func</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>run_completed</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>erase from action specified by func to the end of the stack all actions erased will have the on_complete function called</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">run_completed</td><td>usually each action has an on_complete() function called when it is removed but when run_completed is false this on_complete() function is not called for all popped actions </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00315">315</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a2f0e740b8fd1b0f948916c854b9910ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f0e740b8fd1b0f948916c854b9910ec">&#9670;&nbsp;</a></span>get_ability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> * openage::Unit::get_ability </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get ability with specified type, null if not available</p>
<p>To invoke commands use the invoke function instead </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00228">228</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a3e12324401051119f44e212dae1a87ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e12324401051119f44e212dae1a87ce">&#9670;&nbsp;</a></span>get_attribute()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;attr_type T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_attribute.xhtml">Attribute</a>&lt;T&gt;&amp; openage::Unit::get_attribute </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns attribute based on templated value </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00199">199</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a2e9937d84fe91d95cbe273f6fe986068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2e9937d84fe91d95cbe273f6fe986068">&#9670;&nbsp;</a></span>get_container()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a> * openage::Unit::get_container </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>the container used when constructing this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00307">307</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="adfea298b04684ab09dd8f499dabb8715"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfea298b04684ab09dd8f499dabb8715">&#9670;&nbsp;</a></span>get_ref()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_reference.xhtml">UnitReference</a> openage::Unit::get_ref </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get a reference which can check against the container to ensure this object still exists </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00303">303</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a37f35cd78b09fea32514ed2b2dd87b64"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37f35cd78b09fea32514ed2b2dd87b64">&#9670;&nbsp;</a></span>give_ability()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::give_ability </td>
          <td>(</td>
          <td class="paramtype">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt;&#160;</td>
          <td class="paramname"><em>ability</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>adds an available ability to this unit this turns targeted objects into actions which are pushed onto the stack, eg. targeting a relic may push a collect relic action </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00224">224</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a257ef8a7aeceb306d372ef745b40ef90"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a257ef8a7aeceb306d372ef745b40ef90">&#9670;&nbsp;</a></span>has_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::has_action </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks the entity has an action, if it has no action it should be removed from the game </p><dl class="section return"><dt>Returns</dt><dd>true if the entity currently has an action </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a6c56a8b7e9856a8e0535cacbe831bae7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c56a8b7e9856a8e0535cacbe831bae7">&#9670;&nbsp;</a></span>has_attribute()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::has_attribute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36">attr_type</a>&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns whether attribute is available </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00258">258</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="aba4a16068cf5a6b218a4c78f499874b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba4a16068cf5a6b218a4c78f499874b0">&#9670;&nbsp;</a></span>is_own_unit()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::is_own_unit </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_player.xhtml">Player</a> &amp;&#160;</td>
          <td class="paramname"><em>player</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks whether the current player is the owner of this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="ae769f520dfdb148ec831c151a954a881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae769f520dfdb148ec831c151a954a881">&#9670;&nbsp;</a></span>logsource_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string openage::Unit::logsource_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the unit's name as the LogSource name. </p>

<p>Implements <a class="el" href="classopenage_1_1log_1_1_log_source.xhtml#a7f4d82915a2298899da93d55ab92e7dc">openage::log::LogSource</a>.</p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00311">311</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a76a10b9ab26e62d7b712a6c796052ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76a10b9ab26e62d7b712a6c796052ee3">&#9670;&nbsp;</a></span>make_location()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T , typename ... Arg&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::make_location </td>
          <td>(</td>
          <td class="paramtype">Arg ...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>constructs a new location for this unit replacing any existing locatio</p>
<p>uses same args as the location constructor except the first which will filled automatically </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00078">78</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="aecd686fafc67487f4df4d3637f2621f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecd686fafc67487f4df4d3637f2621f4">&#9670;&nbsp;</a></span>push_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::push_action </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt;&#160;</td>
          <td class="paramname"><em>action</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>adds a new action on top of the action stack will be performed immediately </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00235">235</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="ac5dcdf3180dcd4bdce67b765d8ef2134"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5dcdf3180dcd4bdce67b765d8ef2134">&#9670;&nbsp;</a></span>queue_cmd()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt; <a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a> &gt; openage::Unit::queue_cmd </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1_command.xhtml">Command</a> &amp;&#160;</td>
          <td class="paramname"><em>cmd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>queues a command to be applied to this unit on the next update</p>
<dl class="section return"><dt>Returns</dt><dd>the ability which will apply the command if an action was created otherwise nullptr is returned when no ability can handle the command </dd></dl>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00262">262</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a24ad46b827d50be1c5af4eccc5111929"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24ad46b827d50be1c5af4eccc5111929">&#9670;&nbsp;</a></span>reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::reset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>removes all actions and abilities current attributes are kept </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00035">35</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a8b29886dcd48b1db9381dcc7fd252ebc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8b29886dcd48b1db9381dcc7fd252ebc">&#9670;&nbsp;</a></span>secondary_action()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::secondary_action </td>
          <td>(</td>
          <td class="paramtype">std::unique_ptr&lt; <a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> &gt;&#160;</td>
          <td class="paramname"><em>action</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>adds a secondary action which is always updated </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00242">242</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a9f53ef015fca7c42ff3bf9d0779145a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f53ef015fca7c42ff3bf9d0779145a3">&#9670;&nbsp;</a></span>stop_actions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::stop_actions </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>removes all actions above and including the first interuptable action this will stop any of the units current moving or attacking actions a direct command from the user will invoke this function </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00289">289</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a238fb029bd4cc32e393506533facd976"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a238fb029bd4cc32e393506533facd976">&#9670;&nbsp;</a></span>stop_gather()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::stop_gather </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>removes all gather actions without calling their on_complete actions this cancels the gathering action completely </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00282">282</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a86a49987e082055274e98a142baffad8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a86a49987e082055274e98a142baffad8">&#9670;&nbsp;</a></span>top()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a> * openage::Unit::top </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns the current action on top of the stack </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00053">53</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="a6090576402dce0bcc8f3f584ae0c1db5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6090576402dce0bcc8f3f584ae0c1db5">&#9670;&nbsp;</a></span>update()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#aab633747a9b25e86119eec83106fb2ae">time_nsec_t</a>&#160;</td>
          <td class="paramname"><em>lastframe_duration</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>update this object using the action currently on top of the stack </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00075">75</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<a id="aaf08f7acc4fd00636671fb21ba4cbaf0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf08f7acc4fd00636671fb21ba4cbaf0">&#9670;&nbsp;</a></span>update_secondary()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Unit::update_secondary </td>
          <td>(</td>
          <td class="paramtype">int64_t&#160;</td>
          <td class="paramname"><em>time_elapsed</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>update all secondary actions </p>

<p class="definition">Definition at line <a class="el" href="unit_8cpp_source.xhtml#l00122">122</a> of file <a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a57f5c6434774eee7ab25124f4ddb2a6c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57f5c6434774eee7ab25124f4ddb2a6c">&#9670;&nbsp;</a></span>ability_available</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;<a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828">ability_type</a>, std::shared_ptr&lt;<a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a>&gt; &gt; openage::Unit::ability_available</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>ability available &ndash; actions that this entity can perform when controlled </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00261">261</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a7ac507ed4ccdbae729577ade59adf0ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7ac507ed4ccdbae729577ade59adf0ad">&#9670;&nbsp;</a></span>action_secondary</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a>&gt; &gt; openage::Unit::action_secondary</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>secondary actions are always updated </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00273">273</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a878fa4f611ba7b3a4d01f3ab6fd16b2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878fa4f611ba7b3a4d01f3ab6fd16b2a">&#9670;&nbsp;</a></span>action_stack</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;std::unique_ptr&lt;<a class="el" href="classopenage_1_1_unit_action.xhtml">UnitAction</a>&gt; &gt; openage::Unit::action_stack</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>action stack &ndash; top action determines graphic to be drawn </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00267">267</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a49ca534b218c7a77336914f450d71602"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a49ca534b218c7a77336914f450d71602">&#9670;&nbsp;</a></span>attributes</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_attributes.xhtml">Attributes</a> openage::Unit::attributes</td>
        </tr>
      </table>
</div><div class="memdoc">
<p><a class="el" href="classopenage_1_1_unit.xhtml">Unit</a> attributes include color, hitpoints, speed, objects garrisoned etc contains 0 or 1 values for each type </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00254">254</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="affad2da15f99e71f16baa669b2c86b73"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affad2da15f99e71f16baa669b2c86b73">&#9670;&nbsp;</a></span>command_queue</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::queue&lt;std::pair&lt;std::shared_ptr&lt;<a class="el" href="classopenage_1_1_unit_ability.xhtml">UnitAbility</a>&gt;, const <a class="el" href="classopenage_1_1_command.xhtml">Command</a>&gt; &gt; openage::Unit::command_queue</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>queue commands to be applied on the next update </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00279">279</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="afc59d516f370891e74777246cef87ed8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc59d516f370891e74777246cef87ed8">&#9670;&nbsp;</a></span>command_queue_lock</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::mutex openage::Unit::command_queue_lock</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>mutex controlling updates to the command queue </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00284">284</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="acf42842a4886bf35b64147c7f44d797b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf42842a4886bf35b64147c7f44d797b">&#9670;&nbsp;</a></span>container</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_unit_container.xhtml">UnitContainer</a>* openage::Unit::container</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>the container that updates this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00296">296</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="aa5e4275675942d5e5e6b12a83dbf577a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5e4275675942d5e5e6b12a83dbf577a">&#9670;&nbsp;</a></span>id</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceopenage.xhtml#a45c89654e0c3113ca40c482f47aa0401">id_t</a> openage::Unit::id</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>this units unique id value </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00048">48</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a12811894b98383b4c3cfe6769bc3ff80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12811894b98383b4c3cfe6769bc3ff80">&#9670;&nbsp;</a></span>location</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::unique_ptr&lt;<a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a>&gt; openage::Unit::location</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>space on the map used by this unit null if the object is not yet placed or garrisoned TODO: make private field </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00068">68</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a74d9dca7027740fdf81be8563c0dd906"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74d9dca7027740fdf81be8563c0dd906">&#9670;&nbsp;</a></span>pop_destructables</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::pop_destructables</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>pop any destructable actions on the next update cycle and prevent additional actions being added </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00291">291</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a00fd6387097ed12ae6f6b6ec2ab2939e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00fd6387097ed12ae6f6b6ec2ab2939e">&#9670;&nbsp;</a></span>selected</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Unit::selected</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>should selection features be drawn TODO: should be a pointer to selection to be updated when unit is removed, or null if not selected </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00061">61</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<a id="a2d7da7c7ccd95557e10d54a58a033187"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2d7da7c7ccd95557e10d54a58a033187">&#9670;&nbsp;</a></span>unit_type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopenage_1_1_unit_type.xhtml">UnitType</a>* openage::Unit::unit_type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>type of this object, this is set by the the <a class="el" href="classopenage_1_1_unit_type.xhtml">UnitType</a> which was most recently applied to this unit </p>

<p class="definition">Definition at line <a class="el" href="unit_8h_source.xhtml#l00054">54</a> of file <a class="el" href="unit_8h_source.xhtml">unit.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>libopenage/unit/<a class="el" href="unit_8h_source.xhtml">unit.h</a></li>
<li>libopenage/unit/<a class="el" href="unit_8cpp_source.xhtml">unit.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="classopenage_1_1_unit.xhtml">Unit</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
