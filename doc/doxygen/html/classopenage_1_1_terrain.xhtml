<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::Terrain Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1_terrain.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1_terrain-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::Terrain Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="terrain_8h_source.xhtml">terrain.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::Terrain:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain__coll__graph.svg" width="200" height="478"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2cd98e5c07d94c82f4ccccf507885895"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a2cd98e5c07d94c82f4ccccf507885895">Terrain</a> (<a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *<a class="el" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>, bool is_infinite)</td></tr>
<tr class="separator:a2cd98e5c07d94c82f4ccccf507885895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4855244807ea15873a7ecd3f25dcfc34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a4855244807ea15873a7ecd3f25dcfc34">~Terrain</a> ()</td></tr>
<tr class="separator:a4855244807ea15873a7ecd3f25dcfc34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143090daace4caa26b8f0e9af5b4b69c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a143090daace4caa26b8f0e9af5b4b69c">used_chunks</a> () const</td></tr>
<tr class="separator:a143090daace4caa26b8f0e9af5b4b69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5f73cac07115849392bb22598ae8fba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ac5f73cac07115849392bb22598ae8fba">fill</a> (const int *data, const <a class="el" href="structopenage_1_1coord_1_1tile__delta.xhtml">coord::tile_delta</a> &amp;size)</td></tr>
<tr class="separator:ac5f73cac07115849392bb22598ae8fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40a0b5e61397331f4efc9543f7fdd44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#af40a0b5e61397331f4efc9543f7fdd44">attach_chunk</a> (<a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *new_chunk, const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position, bool manual=true)</td></tr>
<tr class="separator:af40a0b5e61397331f4efc9543f7fdd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e0db07445c5dcc346c5e9d28458c516"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a6e0db07445c5dcc346c5e9d28458c516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c3153682d7a70b539ff15f492e0f06b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a3c3153682d7a70b539ff15f492e0f06b">get_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a3c3153682d7a70b539ff15f492e0f06b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7837ff925b6c466824b2388e55c198f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">get_create_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a7837ff925b6c466824b2388e55c198f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc8a00464422b06cd5ea0dbda4c7d2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a9fc8a00464422b06cd5ea0dbda4c7d2f">get_create_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a9fc8a00464422b06cd5ea0dbda4c7d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a437d04e21933a02a08861b50a585135e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_tile_content.xhtml">TileContent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a437d04e21933a02a08861b50a585135e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4d53dc392a6fd6da85ba49625d70478"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa4d53dc392a6fd6da85ba49625d70478">obj_at_point</a> (const <a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;point)</td></tr>
<tr class="separator:aa4d53dc392a6fd6da85ba49625d70478"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce94c372f7e86310506844b352fb20c"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1chunk__neighbors.xhtml">chunk_neighbors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a9ce94c372f7e86310506844b352fb20c">get_chunk_neighbors</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a9ce94c372f7e86310506844b352fb20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ec2ee796cfe5d6c97570ad73db43cc"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">get_subtexture_id</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;pos, unsigned atlas_size)</td></tr>
<tr class="separator:a88ec2ee796cfe5d6c97570ad73db43cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9457472de4a25ef737684e27d1d5810"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4a">tile_state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ab9457472de4a25ef737684e27d1d5810">check_tile</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:ab9457472de4a25ef737684e27d1d5810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e35745e96c0b263a74dcf2ec2abffb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa0e35745e96c0b263a74dcf2ec2abffb">check_tile_position</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:aa0e35745e96c0b263a74dcf2ec2abffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76cd02c887a27a6c91331573ecb84907"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a76cd02c887a27a6c91331573ecb84907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfa825aeaadbb2ce0a8dd13c335ffee1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#adfa825aeaadbb2ce0a8dd13c335ffee1">validate_mask</a> (ssize_t mask_id)</td></tr>
<tr class="separator:adfa825aeaadbb2ce0a8dd13c335ffee1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de0b286ad2d9129d42b4f64e3ed9ffd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">priority</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a0de0b286ad2d9129d42b4f64e3ed9ffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5704a3d8f41acd79c3c3dca6f284ce7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ae5704a3d8f41acd79c3c3dca6f284ce7">blendmode</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:ae5704a3d8f41acd79c3c3dca6f284ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e394fadeb8534aef0c7098939f25b23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a6e394fadeb8534aef0c7098939f25b23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30da324d9ca8573bb3ac45bb12166298"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a30da324d9ca8573bb3ac45bb12166298">blending_mask</a> (ssize_t mask_id)</td></tr>
<tr class="separator:a30da324d9ca8573bb3ac45bb12166298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac2534a0373a7bbd8efdcf659977a881"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aac2534a0373a7bbd8efdcf659977a881">get_blending_mode</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> base_id, <a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> neighbor_id)</td></tr>
<tr class="separator:aac2534a0373a7bbd8efdcf659977a881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8e6bd38cdaa86dcff31251de1c6deec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ae8e6bd38cdaa86dcff31251de1c6deec">draw</a> (<a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> *engine, <a class="el" href="classopenage_1_1_render_options.xhtml">RenderOptions</a> *settings)</td></tr>
<tr class="separator:ae8e6bd38cdaa86dcff31251de1c6deec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0736d57ce5014c9caea96125ad87b0d"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1terrain__render__data.xhtml">terrain_render_data</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ab0736d57ce5014c9caea96125ad87b0d">create_draw_advice</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;ab, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;cd, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;ef, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;gh, bool blending_enabled)</td></tr>
<tr class="separator:ab0736d57ce5014c9caea96125ad87b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e91ba2a775715dc81088e47e508786"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a16e91ba2a775715dc81088e47e508786">create_tile_advice</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> position, bool blending_enabled)</td></tr>
<tr class="separator:a16e91ba2a775715dc81088e47e508786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4e2cfb2010657a5384efc6c37a9748"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#adf4e2cfb2010657a5384efc6c37a9748">get_neighbors</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> basepos, struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *<a class="el" href="namespaceopenage.xhtml#ae153a7bdcb1d70441174ccfc861eee78">neigh_tiles</a>, struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *influences_by_terrain_id)</td></tr>
<tr class="separator:adf4e2cfb2010657a5384efc6c37a9748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a202cab41ccd1d5af5e0e7a5e658f3f30"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">calculate_influences</a> (struct <a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a> *base_tile, struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *<a class="el" href="namespaceopenage.xhtml#ae153a7bdcb1d70441174ccfc861eee78">neigh_tiles</a>, struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *influences_by_terrain_id)</td></tr>
<tr class="separator:a202cab41ccd1d5af5e0e7a5e658f3f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72f81eb7623d4ade8272f8163bfcb4d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a72f81eb7623d4ade8272f8163bfcb4d9">calculate_masks</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> position, struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> *<a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a>, struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> *influences)</td></tr>
<tr class="separator:a72f81eb7623d4ade8272f8163bfcb4d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a59ab681b936ea55851dcbffb4e90b7a0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">infinite</a></td></tr>
<tr class="memdesc:a59ab681b936ea55851dcbffb4e90b7a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">chunks are automagically created as soon as they are referenced  <a href="#a59ab681b936ea55851dcbffb4e90b7a0">More...</a><br /></td></tr>
<tr class="separator:a59ab681b936ea55851dcbffb4e90b7a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aa0970b751b0d154bfa6be8c4f6dc850d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a></td></tr>
<tr class="separator:aa0970b751b0d154bfa6be8c4f6dc850d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addad1085e0e15e34f8abf6ec270d5137"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a>, <a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *, <a class="el" href="structopenage_1_1coord__chunk__hash.xhtml">coord_chunk_hash</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a></td></tr>
<tr class="separator:addad1085e0e15e34f8abf6ec270d5137"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>the terrain class is the main top-management interface for dealing with cost-benefit analysis to maximize company profits.</p>
<p>actually this is just the entrypoint and container for the terrain chunks. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00175">175</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2cd98e5c07d94c82f4ccccf507885895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cd98e5c07d94c82f4ccccf507885895">&#9670;&nbsp;</a></span>Terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Terrain::Terrain </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *&#160;</td>
          <td class="paramname"><em>meta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_infinite</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    :</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">infinite</a>{is_infinite},</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>{<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>} {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// TODO:</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">//this-&gt;limit_positive =</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">//this-&gt;limit_negative =</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="comment">// maps chunk position to chunks</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a> = std::unordered_map&lt;coord::chunk, TerrainChunk *, coord_chunk_hash&gt;{};</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a59ab681b936ea55851dcbffb4e90b7a0"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">openage::Terrain::infinite</a></div><div class="ttdeci">bool infinite</div><div class="ttdoc">chunks are automagically created as soon as they are referenced</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00180">terrain.h:180</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_addad1085e0e15e34f8abf6ec270d5137"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">openage::Terrain::chunks</a></div><div class="ttdeci">std::unordered_map&lt; coord::chunk, TerrainChunk *, coord_chunk_hash &gt; chunks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00403">terrain.h:403</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a4855244807ea15873a7ecd3f25dcfc34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4855244807ea15873a7ecd3f25dcfc34">&#9670;&nbsp;</a></span>~Terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Terrain::~Terrain </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                  {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Cleanup terrain&quot;</span>);</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;chunk : this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a>) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="comment">// this chunk was autogenerated, so clean it up</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">if</span> (chunk.second-&gt;manually_created == <span class="keyword">false</span>) {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keyword">delete</span> chunk.second;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        }</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    }</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_addad1085e0e15e34f8abf6ec270d5137"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">openage::Terrain::chunks</a></div><div class="ttdeci">std::unordered_map&lt; coord::chunk, TerrainChunk *, coord_chunk_hash &gt; chunks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00403">terrain.h:403</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00403">chunks</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log::dbg()</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, and <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a4855244807ea15873a7ecd3f25dcfc34_cgraph.svg" width="100%" height="432"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af40a0b5e61397331f4efc9543f7fdd44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af40a0b5e61397331f4efc9543f7fdd44">&#9670;&nbsp;</a></span>attach_chunk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::attach_chunk </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td>
          <td class="paramname"><em>new_chunk</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>manual</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Attach a chunk to the terrain, to a given position.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_chunk</td><td>The chunk to be attached </td></tr>
    <tr><td class="paramname">position</td><td>The chunk position where the chunk will be placed </td></tr>
    <tr><td class="paramname">manually_created</td><td>Was this chunk created manually? If true, it will not be free'd automatically </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                  {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    new_chunk-&gt;set_terrain(<span class="keyword">this</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    new_chunk-&gt;manually_created = manually_created;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Inserting new chunk at (&quot;</span> &lt;&lt; position.ne &lt;&lt; <span class="stringliteral">&quot;,&quot;</span> &lt;&lt; position.se &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a>[position] = new_chunk;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">struct </span>chunk_neighbors neigh = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a9ce94c372f7e86310506844b352fb20c">get_chunk_neighbors</a>(position);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 8; i++) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        TerrainChunk *neighbor = neigh.neighbor[i];</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keywordflow">if</span> (neighbor != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="comment">//set the new chunks neighbor to the neighbor chunk</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            new_chunk-&gt;neighbors.neighbor[i] = neighbor;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="comment">//set the neighbors neighbor on the opposite direction</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="comment">//to the new chunk</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            neighbor-&gt;neighbors.neighbor[(i+4) % 8] = new_chunk;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Neighbor &quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot; gets notified of new neighbor.&quot;</span>);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Neighbor &quot;</span> &lt;&lt; i &lt;&lt; <span class="stringliteral">&quot; not found.&quot;</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_addad1085e0e15e34f8abf6ec270d5137"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">openage::Terrain::chunks</a></div><div class="ttdeci">std::unordered_map&lt; coord::chunk, TerrainChunk *, coord_chunk_hash &gt; chunks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00403">terrain.h:403</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a9ce94c372f7e86310506844b352fb20c"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a9ce94c372f7e86310506844b352fb20c">openage::Terrain::get_chunk_neighbors</a></div><div class="ttdeci">struct chunk_neighbors get_chunk_neighbors(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00212">terrain.cpp:212</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00403">chunks</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00109">openage::log::dbg()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00212">get_chunk_neighbors()</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, <a class="el" href="terrain__chunk_8h_source.xhtml#l00113">openage::TerrainChunk::manually_created</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, <a class="el" href="terrain__chunk_8h_source.xhtml#l00037">openage::chunk_neighbors::neighbor</a>, <a class="el" href="terrain__chunk_8h_source.xhtml#l00071">openage::TerrainChunk::neighbors</a>, and <a class="el" href="terrain__chunk_8cpp_source.xhtml#l00186">openage::TerrainChunk::set_terrain()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00124">get_create_chunk()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_af40a0b5e61397331f4efc9543f7fdd44_cgraph.svg" width="100%" height="482"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_af40a0b5e61397331f4efc9543f7fdd44_icgraph.svg" width="100%" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a30da324d9ca8573bb3ac45bb12166298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30da324d9ca8573bb3ac45bb12166298">&#9670;&nbsp;</a></span>blending_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> * openage::Terrain::blending_mask </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>mask_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the blendomatic mask with the given mask id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                                               {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#adfa825aeaadbb2ce0a8dd13c335ffee1">validate_mask</a>(mask_id);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#a2fdf2bb79faa0aa896e6f8cec3ffad72">blending_masks</a>[mask_id];</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div><div class="ttc" id="structopenage_1_1terrain__meta_xhtml_a2fdf2bb79faa0aa896e6f8cec3ffad72"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#a2fdf2bb79faa0aa896e6f8cec3ffad72">openage::terrain_meta::blending_masks</a></div><div class="ttdeci">std::vector&lt; Texture * &gt; blending_masks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00161">terrain.h:161</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_adfa825aeaadbb2ce0a8dd13c335ffee1"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#adfa825aeaadbb2ce0a8dd13c335ffee1">openage::Terrain::validate_mask</a></div><div class="ttdeci">bool validate_mask(ssize_t mask_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00173">terrain.cpp:173</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00161">openage::terrain_meta::blending_masks</a>, <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00173">validate_mask()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00595">calculate_masks()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a30da324d9ca8573bb3ac45bb12166298_cgraph.svg" width="639" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a30da324d9ca8573bb3ac45bb12166298_icgraph.svg" width="451" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae5704a3d8f41acd79c3c3dca6f284ce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5704a3d8f41acd79c3c3dca6f284ce7">&#9670;&nbsp;</a></span>blendmode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::blendmode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending mode/blendomatic mask set for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00187">187</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                                           {</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a>(terrain_id);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#ad4721fb504831e4c6797380603f3c734">terrain_id_blendmode_map</a>[terrain_id];</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div><div class="ttc" id="structopenage_1_1terrain__meta_xhtml_ad4721fb504831e4c6797380603f3c734"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#ad4721fb504831e4c6797380603f3c734">openage::terrain_meta::terrain_id_blendmode_map</a></div><div class="ttdeci">std::unique_ptr&lt; int[]&gt; terrain_id_blendmode_map</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00164">terrain.h:164</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a76cd02c887a27a6c91331573ecb84907"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">openage::Terrain::validate_terrain</a></div><div class="ttdeci">bool validate_terrain(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00164">terrain.cpp:164</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, <a class="el" href="terrain_8h_source.xhtml#l00164">openage::terrain_meta::terrain_id_blendmode_map</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00164">validate_terrain()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00226">get_blending_mode()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ae5704a3d8f41acd79c3c3dca6f284ce7_cgraph.svg" width="576" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ae5704a3d8f41acd79c3c3dca6f284ce7_icgraph.svg" width="619" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a202cab41ccd1d5af5e0e7a5e658f3f30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a202cab41ccd1d5af5e0e7a5e658f3f30">&#9670;&nbsp;</a></span>calculate_influences()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> openage::Terrain::calculate_influences </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a> *&#160;</td>
          <td class="paramname"><em>base_tile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *&#160;</td>
          <td class="paramname"><em>neigh_tiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *&#160;</td>
          <td class="paramname"><em>influences_by_terrain_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>look at neighbor tiles around the base_tile, and store the influence bits.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base_tile</td><td>the base tile for which influences are calculated </td></tr>
    <tr><td class="paramname">neigh_tiles</td><td>the neigbors of base_tile </td></tr>
    <tr><td class="paramname">influences_by_terrain_id</td><td>influences will be stored to this buffer, as bitmasks </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an influence group that describes the maximum 8 possible influences on the base_tile </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00500">500</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;                                                                                                 {</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    <span class="comment">// influences to actually draw (-&gt; maximum 8)</span></div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    <span class="keyword">struct </span>influence_group influences;</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    influences.count = 0;</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;</div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    <span class="comment">// process adjacent neighbors first,</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    <span class="comment">// then add diagonal influences, if no adjacent influence was found</span></div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;    constexpr <span class="keywordtype">int</span> neigh_id_lookup[] = {1, 3, 5, 7, 0, 2, 4, 6};</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 8; i++) {</div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;        <span class="comment">// diagonal neighbors: (neigh_id % 2) == 0</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;        <span class="comment">// adjacent neighbors: (neigh_id % 2) == 1</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;        <span class="keywordtype">int</span> neigh_id = neigh_id_lookup[i];</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        <span class="keywordtype">bool</span> is_adjacent_neighbor = neigh_id % 2 == 1;</div><div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;        <span class="keywordtype">bool</span> is_diagonal_neighbor = not is_adjacent_neighbor;</div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;        <span class="comment">// the current neighbor_tile.</span></div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        <span class="keyword">auto</span> neighbor = &amp;neigh_data[neigh_id];</div><div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="comment">// neighbor is nonexistant</span></div><div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;        <span class="keywordflow">if</span> (neighbor-&gt;state == <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">tile_state::missing</a>) {</div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;        }</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;        <span class="comment">// neighbor only interesting if it&#39;s a different terrain than the base.</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;        <span class="comment">// if it is the same id, the priorities are equal.</span></div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;        <span class="comment">// neighbor draws over the base if it&#39;s priority is greater.</span></div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;        <span class="keywordflow">if</span> (neighbor-&gt;priority &gt; base_tile-&gt;priority) {</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            <span class="comment">// get influence storage for the neighbor terrain id</span></div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            <span class="comment">// to group influences by id</span></div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;            <span class="keyword">auto</span> influence = &amp;influences_by_terrain_id[neighbor-&gt;terrain_id];</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <span class="comment">// check if diagonal influence is valid</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;            <span class="keywordflow">if</span> (is_diagonal_neighbor) {</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                <span class="comment">// get the adjacent neighbors to the current diagonal</span></div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                <span class="comment">// influence</span></div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                <span class="comment">//  (a &amp; 0x07) == (a % 8)</span></div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;                uint8_t adj_neigh_0 = (neigh_id - 1) &amp; 0x07;</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;                uint8_t adj_neigh_1 = (neigh_id + 1) &amp; 0x07;</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;                uint8_t neigh_mask = (1 &lt;&lt; adj_neigh_0) | (1 &lt;&lt; adj_neigh_1);</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;                <span class="comment">// the adjacent neigbors are already influencing</span></div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;                <span class="comment">// the current tile, therefore don&#39;t apply the diagonal mask</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;                <span class="keywordflow">if</span> ((influence-&gt;direction &amp; neigh_mask) != 0) {</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                    <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;                }</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;            }</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;            <span class="comment">// this terrain id hasn&#39;t had influence so far:</span></div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;            <span class="comment">// add it to the list of influences.</span></div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <span class="keywordflow">if</span> (influence-&gt;direction == 0) {</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;                influences.terrain_ids[influences.count] = neighbor-&gt;terrain_id;</div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                influences.count += 1;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;            }</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;            <span class="comment">// as tile i has influence for this priority</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;            <span class="comment">//  =&gt; bit i is set to 1 by 2^i</span></div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;            influence-&gt;direction |= 1 &lt;&lt; neigh_id;</div><div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;            influence-&gt;priority = neighbor-&gt;priority;</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;            influence-&gt;terrain_id = neighbor-&gt;terrain_id;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;        }</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;    }</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;</div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;    <span class="comment">// influences_by_terrain_id will be merged in the following,</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;    <span class="comment">// unused terrain ids will be dropped now.</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="comment">// shrink the big influence buffer that had entries for all terrains</span></div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;    <span class="comment">// by copying the possible (max 8) influences to a separate buffer.</span></div><div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 0; k &lt; influences.count; k++) {</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;        <span class="keywordtype">int</span> relevant_id    = influences.terrain_ids[k];</div><div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;        influences.data[k] = influences_by_terrain_id[relevant_id];</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    }</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;    <span class="comment">// order the influences by their priority</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> k = 1; k &lt; influences.count; k++) {</div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;        <span class="keyword">struct </span>influence tmp_influence = influences.data[k];</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;        <span class="keywordtype">int</span> l = k - 1;</div><div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;        <span class="keywordflow">while</span> (l &gt;= 0 &amp;&amp; influences.data[l].priority &gt; tmp_influence.priority) {</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;            influences.data[l + 1] = influences.data[l];</div><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;            l -= 1;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        }</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;        influences.data[l + 1] = tmp_influence;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;    }</div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;</div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;    <span class="keywordflow">return</span> influences;</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;}</div><div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">openage::tile_state::missing</a></div><div class="ttdoc">tile is not created yet</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00104">openage::influence_group::count</a>, <a class="el" href="terrain_8h_source.xhtml#l00106">openage::influence_group::data</a>, <a class="el" href="terrain_8h_source.xhtml#l00093">openage::influence::direction</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">openage::missing</a>, <a class="el" href="terrain_8h_source.xhtml#l00094">openage::influence::priority</a>, <a class="el" href="terrain_8h_source.xhtml#l00095">openage::influence::terrain_id</a>, and <a class="el" href="terrain_8h_source.xhtml#l00105">openage::influence_group::terrain_ids</a>.</p>

</div>
</div>
<a id="a72f81eb7623d4ade8272f8163bfcb4d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72f81eb7623d4ade8272f8163bfcb4d9">&#9670;&nbsp;</a></span>calculate_masks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::calculate_masks </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> *&#160;</td>
          <td class="paramname"><em>tile_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> *&#160;</td>
          <td class="paramname"><em>influences</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>calculate blending masks for a given tile position.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>the base tile position, for which the masks are calculated </td></tr>
    <tr><td class="paramname"><a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a></td><td>the buffer where the created drawing layers will be stored in </td></tr>
    <tr><td class="paramname">influences</td><td>the buffer where calculated influences were stored to</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">calculate_influences</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00595">595</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;                                                                  {</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;    <span class="comment">// influences are grouped by terrain id.</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;    <span class="comment">// the direction member has each bit set to 1 that is an influence from that direction.</span></div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;    <span class="comment">// create a mask for this direction combination.</span></div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;</div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;    <span class="comment">// the base tile is stored at position 0 of the draw_mask</span></div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;    <a class="code" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> base_terrain_id = tile_data-&gt;data[0].terrain_id;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;    <span class="comment">// iterate over all neighbors (with different terrain_ids) that have influence</span></div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;    <span class="keywordflow">for</span> (ssize_t i = 0; i &lt; influences-&gt;count; i++) {</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;</div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        <span class="comment">// neighbor id of the current influence</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;        <span class="keywordtype">char</span> direction_bits = influences-&gt;data[i].direction;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="comment">// all bits are 0 -&gt; no influence directions stored.</span></div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;        <span class="comment">//  =&gt; no influence can be ignored.</span></div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;        <span class="keywordflow">if</span> (direction_bits == 0) {</div><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;        }</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <a class="code" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> neighbor_terrain_id = influences-&gt;data[i].terrain_id;</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;        <span class="keywordtype">int</span> adjacent_mask_id = -1;</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;        <span class="comment">/* neighbor ids:</span></div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;<span class="comment">             0</span></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;<span class="comment">           7   1      =&gt; 8 neighbors that can have influence on</span></div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;<span class="comment">         6   @   2         the mask id selection.</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="comment">           5   3</span></div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="comment">             4</span></div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;<span class="comment">        */</span></div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;        <span class="comment">// filter adjacent and diagonal influences    neighbor_id: 76543210</span></div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;        uint8_t direction_bits_adjacent = direction_bits &amp; 0xAA; <span class="comment">//0b10101010</span></div><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        uint8_t direction_bits_diagonal = direction_bits &amp; 0x55; <span class="comment">//0b01010101</span></div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;        <span class="keywordflow">switch</span> (direction_bits_adjacent) {</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">case</span> 0x08:  <span class="comment">//0b00001000</span></div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            adjacent_mask_id = 0;  <span class="comment">//0..3</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;        <span class="keywordflow">case</span> 0x02:  <span class="comment">//0b00000010</span></div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;            adjacent_mask_id = 4;  <span class="comment">//4..7</span></div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;        <span class="keywordflow">case</span> 0x20:  <span class="comment">//0b00100000</span></div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            adjacent_mask_id = 8;  <span class="comment">//8..11</span></div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;        <span class="keywordflow">case</span> 0x80:  <span class="comment">//0b10000000</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            adjacent_mask_id = 12; <span class="comment">//12..15</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;        <span class="keywordflow">case</span> 0x22:  <span class="comment">//0b00100010</span></div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;            adjacent_mask_id = 20;</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;        <span class="keywordflow">case</span> 0x88:  <span class="comment">//0b10001000</span></div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            adjacent_mask_id = 21;</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;        <span class="keywordflow">case</span> 0xA0:  <span class="comment">//0b10100000</span></div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;            adjacent_mask_id = 22;</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;        <span class="keywordflow">case</span> 0x82:  <span class="comment">//0b10000010</span></div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;            adjacent_mask_id = 23;</div><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;        <span class="keywordflow">case</span> 0x28:  <span class="comment">//0b00101000</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;            adjacent_mask_id = 24;</div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <span class="keywordflow">case</span> 0x0A:  <span class="comment">//0b00001010</span></div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;            adjacent_mask_id = 25;</div><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;        <span class="keywordflow">case</span> 0x2A:  <span class="comment">//0b00101010</span></div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;            adjacent_mask_id = 26;</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;        <span class="keywordflow">case</span> 0xA8:  <span class="comment">//0b10101000</span></div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;            adjacent_mask_id = 27;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;        <span class="keywordflow">case</span> 0xA2:  <span class="comment">//0b10100010</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            adjacent_mask_id = 28;</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;        <span class="keywordflow">case</span> 0x8A:  <span class="comment">//0b10001010</span></div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;            adjacent_mask_id = 29;</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;        <span class="keywordflow">case</span> 0xAA:  <span class="comment">//0b10101010</span></div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;            adjacent_mask_id = 30;</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;        }</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;        <span class="comment">// if it&#39;s the linear adjacent mask, cycle the 4 possible masks.</span></div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;        <span class="comment">// e.g. long shorelines don&#39;t look the same then.</span></div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;        <span class="comment">//  maskid == 0x08 0x02 0x80 0x20 for that.</span></div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;        <span class="keywordflow">if</span> (adjacent_mask_id &lt;= 12 &amp;&amp; adjacent_mask_id % 4 == 0) {</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="comment">//we have 4 = 2^2 anti redundancy masks, so keep the last 2 bits</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            uint8_t anti_redundancy_offset = (position.ne + position.se) &amp; 0x03;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;            adjacent_mask_id += anti_redundancy_offset;</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;        }</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;        <span class="comment">// get the blending mode (the mask selection) for this transition</span></div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;        <span class="comment">// the mode is dependent on the two meeting terrain types</span></div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;        <span class="keywordtype">int</span> blend_mode = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aac2534a0373a7bbd8efdcf659977a881">get_blending_mode</a>(base_terrain_id, neighbor_terrain_id);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;        <span class="comment">// append the mask for the adjacent blending</span></div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;        <span class="keywordflow">if</span> (adjacent_mask_id &gt;= 0) {</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            <span class="keyword">struct </span>tile_data *overlay = &amp;tile_data-&gt;data[tile_data-&gt;count];</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;            overlay-&gt;pos        = position;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;            overlay-&gt;mask_id    = adjacent_mask_id;</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            overlay-&gt;blend_mode = blend_mode;</div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;            overlay-&gt;terrain_id = neighbor_terrain_id;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            overlay-&gt;tex        = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a>(neighbor_terrain_id);</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;            overlay-&gt;subtexture_id = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">get_subtexture_id</a>(</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;                position,</div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;                <a class="code" href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a>(overlay-&gt;tex-&gt;get_subtexture_count())</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;            );</div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;            overlay-&gt;mask_tex   = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a30da324d9ca8573bb3ac45bb12166298">blending_mask</a>(blend_mode);</div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;            overlay-&gt;state      = <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">tile_state::existing</a>;</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;            tile_data-&gt;count += 1;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;        }</div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;        <span class="comment">// append the mask for the diagonal blending</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;        <span class="keywordflow">if</span> (direction_bits_diagonal &gt; 0) {</div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">int</span> l = 0; l &lt; 4; l++) {</div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;                <span class="comment">// generate one mask for each influencing diagonal neighbor id.</span></div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="comment">// even if they all have the same terrain_id,</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                <span class="comment">// because we don&#39;t have combined diagonal influence masks.</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;</div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                <span class="comment">// l == 0: pos = 0b000000001, mask = 18</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                <span class="comment">// l == 1: pos = 0b000000100, mask = 16</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                <span class="comment">// l == 2: pos = 0b000010000, mask = 17</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                <span class="comment">// l == 3: pos = 0b001000000, mask = 19</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;</div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <span class="keywordtype">int</span> current_direction_bit = 1 &lt;&lt; (l*2);</div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                constexpr <span class="keywordtype">int</span> diag_mask_id_map[4] = {18, 16, 17, 19};</div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;</div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                <span class="keywordflow">if</span> (direction_bits_diagonal &amp; current_direction_bit) {</div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                    <span class="keyword">struct </span>tile_data *overlay = &amp;tile_data-&gt;data[tile_data-&gt;count];</div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                    overlay-&gt;pos        = position;</div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                    overlay-&gt;mask_id    = diag_mask_id_map[l];</div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                    overlay-&gt;blend_mode = blend_mode;</div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                    overlay-&gt;terrain_id = neighbor_terrain_id;</div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                    overlay-&gt;tex        = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a>(neighbor_terrain_id);</div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                    overlay-&gt;subtexture_id = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">get_subtexture_id</a>(</div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                        position,</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                        <a class="code" href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a>(overlay-&gt;tex-&gt;get_subtexture_count())</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                    );</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;                    overlay-&gt;mask_tex   = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a30da324d9ca8573bb3ac45bb12166298">blending_mask</a>(blend_mode);</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;                    overlay-&gt;state      = <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">tile_state::existing</a>;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                    tile_data-&gt;count += 1;</div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                }</div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;            }</div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;        }</div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;    }</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;}</div><div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::tile_state::existing</a></div><div class="ttdoc">tile is already existing</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a30da324d9ca8573bb3ac45bb12166298"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a30da324d9ca8573bb3ac45bb12166298">openage::Terrain::blending_mask</a></div><div class="ttdeci">Texture * blending_mask(ssize_t mask_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00197">terrain.cpp:197</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aac2534a0373a7bbd8efdcf659977a881"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aac2534a0373a7bbd8efdcf659977a881">openage::Terrain::get_blending_mode</a></div><div class="ttdeci">int get_blending_mode(terrain_t base_id, terrain_t neighbor_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00226">terrain.cpp:226</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e394fadeb8534aef0c7098939f25b23"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">openage::Terrain::texture</a></div><div class="ttdeci">Texture * texture(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00192">terrain.cpp:192</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a88ec2ee796cfe5d6c97570ad73db43cc"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">openage::Terrain::get_subtexture_id</a></div><div class="ttdeci">unsigned get_subtexture_id(const coord::tile &amp;pos, unsigned atlas_size)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00202">terrain.cpp:202</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a0078c87a2baae2c33889beb8379a8270"><div class="ttname"><a href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">openage::terrain_t</a></div><div class="ttdeci">int terrain_t</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00032">terrain.h:32</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a0fc492a11cf74e80f976b24bea2a2eb2"><div class="ttname"><a href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a></div><div class="ttdeci">constexpr double sqrt(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00470">fixed_point.h:470</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00128">openage::tile_data::blend_mode</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00197">blending_mask()</a>, <a class="el" href="terrain_8h_source.xhtml#l00104">openage::influence_group::count</a>, <a class="el" href="terrain_8h_source.xhtml#l00106">openage::influence_group::data</a>, <a class="el" href="terrain_8h_source.xhtml#l00093">openage::influence::direction</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::existing</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00226">get_blending_mode()</a>, <a class="el" href="texture_8cpp_source.xhtml#l00431">openage::Texture::get_subtexture_count()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00202">get_subtexture_id()</a>, <a class="el" href="terrain_8h_source.xhtml#l00127">openage::tile_data::mask_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00129">openage::tile_data::mask_tex</a>, <a class="el" href="terrain_8h_source.xhtml#l00123">openage::tile_data::pos</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00470">std::sqrt()</a>, <a class="el" href="terrain_8h_source.xhtml#l00130">openage::tile_data::state</a>, <a class="el" href="terrain_8h_source.xhtml#l00124">openage::tile_data::subtexture_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00095">openage::influence::terrain_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00122">openage::tile_data::terrain_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00125">openage::tile_data::tex</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00192">texture()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a72f81eb7623d4ade8272f8163bfcb4d9_cgraph.svg" width="100%" height="552"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab9457472de4a25ef737684e27d1d5810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9457472de4a25ef737684e27d1d5810">&#9670;&nbsp;</a></span>check_tile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4a">tile_state</a> openage::Terrain::check_tile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks the creation state and premissions of a given tile position. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;                                                        {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0e35745e96c0b263a74dcf2ec2abffb">check_tile_position</a>(position) == <span class="keyword">false</span>) {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">tile_state::invalid</a>;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        TerrainChunk *chunk = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a>(position);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        <span class="keywordflow">if</span> (chunk == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aa3035da8cd016b46a243c7230ac213cb6">tile_state::creatable</a>;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">tile_state::existing</a>;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        }</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0e35745e96c0b263a74dcf2ec2abffb"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0e35745e96c0b263a74dcf2ec2abffb">openage::Terrain::check_tile_position</a></div><div class="ttdeci">bool check_tile_position(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00269">terrain.cpp:269</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::tile_state::existing</a></div><div class="ttdoc">tile is already existing</div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">openage::tile_state::invalid</a></div><div class="ttdoc">tile does not exist and can not be created</div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aa3035da8cd016b46a243c7230ac213cb6"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aa3035da8cd016b46a243c7230ac213cb6">openage::tile_state::creatable</a></div><div class="ttdoc">tile does not exist but can be created</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e0db07445c5dcc346c5e9d28458c516"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">openage::Terrain::get_chunk</a></div><div class="ttdeci">TerrainChunk * get_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00109">terrain.cpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00269">check_tile_position()</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aa3035da8cd016b46a243c7230ac213cb6">openage::creatable</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::existing</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00109">get_chunk()</a>, and <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">openage::invalid</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00064">fill()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ab9457472de4a25ef737684e27d1d5810_cgraph.svg" width="406" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ab9457472de4a25ef737684e27d1d5810_icgraph.svg" width="611" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa0e35745e96c0b263a74dcf2ec2abffb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0e35745e96c0b263a74dcf2ec2abffb">&#9670;&nbsp;</a></span>check_tile_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::check_tile_position </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks whether the given tile position is allowed to exist on this terrain. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                                    {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">infinite</a> == <span class="keyword">true</span>) {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    }</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;non-infinite terrains are not supported yet&quot;</span>);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a59ab681b936ea55851dcbffb4e90b7a0"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">openage::Terrain::infinite</a></div><div class="ttdeci">bool infinite</div><div class="ttdoc">chunks are automagically created as soon as they are referenced</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00180">terrain.h:180</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="message_8h_source.xhtml#l00179">ERR</a>, and <a class="el" href="terrain_8h_source.xhtml#l00180">infinite</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00254">check_tile()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_aa0e35745e96c0b263a74dcf2ec2abffb_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ab0736d57ce5014c9caea96125ad87b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0736d57ce5014c9caea96125ad87b0d">&#9670;&nbsp;</a></span>create_draw_advice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1terrain__render__data.xhtml">terrain_render_data</a> openage::Terrain::create_draw_advice </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>ab</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>cd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>ef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>gh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blending_enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>create the drawing instruction data.</p>
<p>created draw data according to the given tile boundaries.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ab</td><td>upper left tile </td></tr>
    <tr><td class="paramname">cd</td><td>upper right tile </td></tr>
    <tr><td class="paramname">ef</td><td>lower right tile </td></tr>
    <tr><td class="paramname">gh</td><td>lower left tile</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a drawing instruction struct that contains all information for rendering </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00329">329</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;                                                                              {</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="comment">     * The passed parameters define the screen corners.</span></div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="comment">     *    ne, se coordinates</span></div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">     *    o = screen corner, where the tile coordinates can be queried.</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="comment">     *    x = corner of the rhombus that will be drawn, calculated by all o.</span></div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="comment">     *                  cb</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">     *                   x</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="comment">     *                 .   .</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">     *               .       .</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">     *          ab o===========o cd</span></div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="comment">     *           . =  visible  = .</span></div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">     *      gb x   =  screen   =   x cf</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="comment">     *           . =           = .</span></div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">     *          gh o===========o ef</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="comment">     *               .       .</span></div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">     *                 .   .</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="comment">     *                   x</span></div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">     *                  gf</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">     * The rendering area may be optimized further in the future,</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="comment">     * to exactly fit the visible screen.</span></div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">     * For now, we are drawing the big rhombus.</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <span class="comment">// procedure: find all the tiles to be drawn</span></div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="comment">// and store them to a tile drawing instruction structure</span></div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    <span class="keyword">struct </span>terrain_render_data data;</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="comment">// vector of tiles to be drawn</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    std::vector&lt;struct tile_draw_data&gt; *tiles = &amp;data.tiles;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="comment">// ordered set of objects on the terrain (buildings.)</span></div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// it&#39;s ordered by the visibility layers.</span></div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keyword">auto</span> objects = &amp;data.objects;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    coord::tile gb = {gh.ne, ab.se};</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    coord::tile cf = {cd.ne, ef.se};</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="comment">// hint the vector about the number of tiles it will contain</span></div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordtype">size_t</span> tiles_count = <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(cf.ne - gb.ne) * <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a>(cf.se - gb.se);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    tiles-&gt;reserve(tiles_count);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">// sweep the whole rhombus area</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="keywordflow">for</span> (coord::tile tilepos = gb; tilepos.ne &lt;= cf.ne; tilepos.ne++) {</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        <span class="keywordflow">for</span> (tilepos.se = gb.se; tilepos.se &lt;= cf.se; tilepos.se++) {</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;            <span class="comment">// get the terrain tile drawing data</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;            <span class="keyword">auto</span> tile = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a16e91ba2a775715dc81088e47e508786">create_tile_advice</a>(tilepos, blending_enabled);</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;            tiles-&gt;push_back(tile);</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;            <span class="comment">// get the object standing on the tile</span></div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;            <span class="comment">// TODO: make the terrain independent of objects standing on it.</span></div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;            TileContent *tile_content = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a>(tilepos);</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="keywordflow">if</span> (tile_content != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">auto</span> obj_item : tile_content-&gt;obj) {</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;                    objects-&gt;insert(obj_item);</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                }</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            }</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        }</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    }</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    <span class="keywordflow">return</span> data;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;}</div><div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a437d04e21933a02a08861b50a585135e"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">openage::Terrain::get_data</a></div><div class="ttdeci">TileContent * get_data(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00137">terrain.cpp:137</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a16e91ba2a775715dc81088e47e508786"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a16e91ba2a775715dc81088e47e508786">openage::Terrain::create_tile_advice</a></div><div class="ttdeci">struct tile_draw_data create_tile_advice(coord::tile position, bool blending_enabled)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00402">terrain.cpp:402</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="fixed__point_8h_source.xhtml#l00491">std::abs()</a>, <a class="el" href="terrain_8h_source.xhtml#l00059">openage::TileContent::obj</a>, <a class="el" href="terrain_8h_source.xhtml#l00149">openage::terrain_render_data::objects</a>, and <a class="el" href="terrain_8h_source.xhtml#l00148">openage::terrain_render_data::tiles</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00278">draw()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ab0736d57ce5014c9caea96125ad87b0d_cgraph.svg" width="506" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ab0736d57ce5014c9caea96125ad87b0d_icgraph.svg" width="375" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a16e91ba2a775715dc81088e47e508786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16e91ba2a775715dc81088e47e508786">&#9670;&nbsp;</a></span>create_tile_advice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> openage::Terrain::create_tile_advice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blending_enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>create rendering and blending information for a single tile on the terrain. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;                                                                                           {</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;    <span class="comment">// this struct will be filled with all tiles and overlays to draw.</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;    <span class="keyword">struct </span>tile_draw_data tile;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;    tile.count = 0;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    TileContent *base_tile_content = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a>(position);</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    <span class="comment">// chunk of this tile does not exist</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordflow">if</span> (base_tile_content == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="keywordflow">return</span> tile;</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    }</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keyword">struct </span>tile_data base_tile_data;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;    <span class="comment">// the base terrain id of the tile</span></div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    base_tile_data.terrain_id = base_tile_content-&gt;terrain_id;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="comment">// the base terrain is not existant.</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;    <span class="keywordflow">if</span> (base_tile_data.terrain_id &lt; 0) {</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;        <span class="keywordflow">return</span> tile;</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;    }</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a>(base_tile_data.terrain_id);</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    Texture *tex = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a>(base_tile_data.terrain_id);</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    base_tile_data.state         = <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">tile_state::existing</a>;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    base_tile_data.pos           = position;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    base_tile_data.priority      = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">priority</a>(base_tile_data.terrain_id);</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    base_tile_data.tex           = tex;</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    base_tile_data.subtexture_id = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">get_subtexture_id</a>(</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;        position,</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;        <a class="code" href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a>(tex-&gt;get_subtexture_count())</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    );</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    base_tile_data.blend_mode    = -1;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    base_tile_data.mask_tex      = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    base_tile_data.mask_id       = -1;</div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    tile.data[tile.count] = base_tile_data;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;    tile.count += 1;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="comment">// blendomatic!!111</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;    <span class="comment">//  see doc/media/blendomatic for the idea behind this.</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;    <span class="keywordflow">if</span> (blending_enabled) {</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;        <span class="comment">// the neighbors of the base tile</span></div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;        <span class="keyword">struct </span>neighbor_tile neigh_data[8];</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;        <span class="comment">// get all neighbor tiles around position, reset the influence directions.</span></div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#adf4e2cfb2010657a5384efc6c37a9748">get_neighbors</a>(position, neigh_data, this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#a80c4c8312262c03a979437c70a3eb4eb">influences_buf</a>.get());</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;        <span class="comment">// create influence list (direction, priority)</span></div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;        <span class="comment">// strip and order influences, get the final influence data structure</span></div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;        <span class="keyword">struct </span>influence_group influence_group = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">calculate_influences</a>(</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            &amp;base_tile_data, neigh_data,</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#a80c4c8312262c03a979437c70a3eb4eb">influences_buf</a>.get()</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;        );</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;        <span class="comment">// create the draw_masks from the calculated influences</span></div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a72f81eb7623d4ade8272f8163bfcb4d9">calculate_masks</a>(position, &amp;tile, &amp;influence_group);</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    }</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    <span class="keywordflow">return</span> tile;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_adf4e2cfb2010657a5384efc6c37a9748"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#adf4e2cfb2010657a5384efc6c37a9748">openage::Terrain::get_neighbors</a></div><div class="ttdeci">void get_neighbors(coord::tile basepos, struct neighbor_tile *neigh_tiles, struct influence *influences_by_terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00467">terrain.cpp:467</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::tile_state::existing</a></div><div class="ttdoc">tile is already existing</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a72f81eb7623d4ade8272f8163bfcb4d9"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a72f81eb7623d4ade8272f8163bfcb4d9">openage::Terrain::calculate_masks</a></div><div class="ttdeci">void calculate_masks(coord::tile position, struct tile_draw_data *tile_data, struct influence_group *influences)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00595">terrain.cpp:595</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a0de0b286ad2d9129d42b4f64e3ed9ffd"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">openage::Terrain::priority</a></div><div class="ttdeci">int priority(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00182">terrain.cpp:182</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e394fadeb8534aef0c7098939f25b23"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">openage::Terrain::texture</a></div><div class="ttdeci">Texture * texture(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00192">terrain.cpp:192</a></div></div>
<div class="ttc" id="structopenage_1_1terrain__meta_xhtml_a80c4c8312262c03a979437c70a3eb4eb"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#a80c4c8312262c03a979437c70a3eb4eb">openage::terrain_meta::influences_buf</a></div><div class="ttdeci">std::unique_ptr&lt; influence[]&gt; influences_buf</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00166">terrain.h:166</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a202cab41ccd1d5af5e0e7a5e658f3f30"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">openage::Terrain::calculate_influences</a></div><div class="ttdeci">struct influence_group calculate_influences(struct tile_data *base_tile, struct neighbor_tile *neigh_tiles, struct influence *influences_by_terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00500">terrain.cpp:500</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a76cd02c887a27a6c91331573ecb84907"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">openage::Terrain::validate_terrain</a></div><div class="ttdeci">bool validate_terrain(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00164">terrain.cpp:164</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a88ec2ee796cfe5d6c97570ad73db43cc"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">openage::Terrain::get_subtexture_id</a></div><div class="ttdeci">unsigned get_subtexture_id(const coord::tile &amp;pos, unsigned atlas_size)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00202">terrain.cpp:202</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a437d04e21933a02a08861b50a585135e"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">openage::Terrain::get_data</a></div><div class="ttdeci">TileContent * get_data(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00137">terrain.cpp:137</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a0fc492a11cf74e80f976b24bea2a2eb2"><div class="ttname"><a href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a></div><div class="ttdeci">constexpr double sqrt(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00470">fixed_point.h:470</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00128">openage::tile_data::blend_mode</a>, <a class="el" href="terrain_8h_source.xhtml#l00139">openage::tile_draw_data::count</a>, <a class="el" href="terrain_8h_source.xhtml#l00140">openage::tile_draw_data::data</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::existing</a>, <a class="el" href="texture_8cpp_source.xhtml#l00431">openage::Texture::get_subtexture_count()</a>, <a class="el" href="terrain_8h_source.xhtml#l00127">openage::tile_data::mask_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00129">openage::tile_data::mask_tex</a>, <a class="el" href="terrain_8h_source.xhtml#l00123">openage::tile_data::pos</a>, <a class="el" href="terrain_8h_source.xhtml#l00126">openage::tile_data::priority</a>, <a class="el" href="fixed__point_8h_source.xhtml#l00470">std::sqrt()</a>, <a class="el" href="terrain_8h_source.xhtml#l00130">openage::tile_data::state</a>, <a class="el" href="terrain_8h_source.xhtml#l00124">openage::tile_data::subtexture_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00058">openage::TileContent::terrain_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00122">openage::tile_data::terrain_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00125">openage::tile_data::tex</a>, and <a class="el" href="text_8cpp_source.xhtml#l00016">openage::texturefont_shader::texture</a>.</p>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a16e91ba2a775715dc81088e47e508786_cgraph.svg" width="584" height="111"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ae8e6bd38cdaa86dcff31251de1c6deec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8e6bd38cdaa86dcff31251de1c6deec">&#9670;&nbsp;</a></span>draw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> *&#160;</td>
          <td class="paramname"><em>engine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_render_options.xhtml">RenderOptions</a> *&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>draw the currently visible terrain area on screen. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">engine</td><td>the engine where the terrain should be drawn to. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                                                          {</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="comment">// TODO: move this draw invokation to a render manager.</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="comment">//       it can reorder the draw instructions and minimize texture switching.</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="comment">// query the window coordinates from the engine first</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    coord::viewport wbl = coord::viewport{0, 0};</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    coord::viewport wbr = coord::viewport{engine-&gt;coord.viewport_size.x, 0};</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    coord::viewport wtl = coord::viewport{0, engine-&gt;coord.viewport_size.y};</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    coord::viewport wtr = coord::viewport{engine-&gt;coord.viewport_size.x, engine-&gt;coord.viewport_size.y};</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    <span class="comment">// top left, bottom right tile coordinates</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="comment">// that are currently visible in the window</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    <span class="comment">// then convert them to tile coordinates.</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    coord::tile tl = wtl.to_tile(engine-&gt;coord);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    coord::tile tr = wtr.to_tile(engine-&gt;coord);</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;    coord::tile bl = wbl.to_tile(engine-&gt;coord);</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    coord::tile br = wbr.to_tile(engine-&gt;coord);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="comment">// main terrain calculation call: get the `terrain_render_data`</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    <span class="keyword">auto</span> draw_data = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#ab0736d57ce5014c9caea96125ad87b0d">create_draw_advice</a>(tl, tr, br, bl, settings-&gt;terrain_blending.value);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="comment">// TODO: the following loop is totally inefficient and shit.</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="comment">//       it reloads the drawing texture to the gpu FOR EACH TILE!</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="comment">//       nevertheless, currently it works.</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="comment">// draw the terrain ground</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;tile : draw_data.tiles) {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        <span class="comment">// iterate over all layers to be drawn</span></div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; tile.count; i++) {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;            <span class="keyword">struct </span>tile_data *layer = &amp;tile.data[i];</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;            <span class="comment">// position, where the tile is drawn</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;            coord::tile tile_pos = layer-&gt;pos;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keywordtype">int</span>      mask_id       = layer-&gt;mask_id;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;            Texture *<a class="code" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a>       = layer-&gt;tex;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <span class="keywordtype">int</span>      subtexture_id = layer-&gt;subtexture_id;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            Texture *<a class="code" href="namespaceopenage_1_1alphamask__shader.xhtml#a64874bd7ffd0c4f356826976af477bb3">mask_texture</a>  = layer-&gt;mask_tex;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;            <a class="code" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a>-&gt;<a class="code" href="classopenage_1_1_texture.xhtml#a0bb8ecfa34c39de191c45b95139da3ed">draw</a>(engine-&gt;coord, *<span class="keyword">this</span>, tile_pos, <a class="code" href="namespaceopenage.xhtml#a8f58bd5706ab9adf5f5905a0966d188a">ALPHAMASKED</a>, subtexture_id, <a class="code" href="namespaceopenage_1_1alphamask__shader.xhtml#a64874bd7ffd0c4f356826976af477bb3">mask_texture</a>, mask_id);</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;        }</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    }</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    <span class="comment">// TODO: drawing buildings can&#39;t be the job of the terrain..</span></div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;    <span class="comment">// draw the buildings</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;<span class="keywordtype">object</span> : draw_data.objects) {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="keywordtype">object</span>-&gt;draw(*engine);</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    }</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1alphamask__shader_xhtml_a64874bd7ffd0c4f356826976af477bb3"><div class="ttname"><a href="namespaceopenage_1_1alphamask__shader.xhtml#a64874bd7ffd0c4f356826976af477bb3">openage::alphamask_shader::mask_texture</a></div><div class="ttdeci">GLint mask_texture</div><div class="ttdef"><b>Definition:</b> <a href="texture_8cpp_source.xhtml#l00034">texture.cpp:34</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a8f58bd5706ab9adf5f5905a0966d188a"><div class="ttname"><a href="namespaceopenage.xhtml#a8f58bd5706ab9adf5f5905a0966d188a">openage::ALPHAMASKED</a></div><div class="ttdeci">constexpr int ALPHAMASKED</div><div class="ttdef"><b>Definition:</b> <a href="texture_8h_source.xhtml#l00046">texture.h:46</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_ab0736d57ce5014c9caea96125ad87b0d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#ab0736d57ce5014c9caea96125ad87b0d">openage::Terrain::create_draw_advice</a></div><div class="ttdeci">struct terrain_render_data create_draw_advice(const coord::tile &amp;ab, const coord::tile &amp;cd, const coord::tile &amp;ef, const coord::tile &amp;gh, bool blending_enabled)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00329">terrain.cpp:329</a></div></div>
<div class="ttc" id="classopenage_1_1_texture_xhtml_a0bb8ecfa34c39de191c45b95139da3ed"><div class="ttname"><a href="classopenage_1_1_texture.xhtml#a0bb8ecfa34c39de191c45b95139da3ed">openage::Texture::draw</a></div><div class="ttdeci">void draw(const coord::CoordManager &amp;mgr, coord::camhud pos, unsigned int mode=0, bool mirrored=false, int subid=0, unsigned player=0) const</div><div class="ttdef"><b>Definition:</b> <a href="texture_8cpp_source.xhtml#l00198">texture.cpp:198</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e394fadeb8534aef0c7098939f25b23"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">openage::Terrain::texture</a></div><div class="ttdeci">Texture * texture(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00192">terrain.cpp:192</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="texture_8h_source.xhtml#l00046">openage::ALPHAMASKED</a>, <a class="el" href="engine_8h_source.xhtml#l00294">openage::Engine::coord</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00329">create_draw_advice()</a>, <a class="el" href="texture_8cpp_source.xhtml#l00198">openage::Texture::draw()</a>, <a class="el" href="terrain_8h_source.xhtml#l00127">openage::tile_data::mask_id</a>, <a class="el" href="terrain_8h_source.xhtml#l00129">openage::tile_data::mask_tex</a>, <a class="el" href="texture_8cpp_source.xhtml#l00034">openage::alphamask_shader::mask_texture</a>, <a class="el" href="terrain_8h_source.xhtml#l00123">openage::tile_data::pos</a>, <a class="el" href="terrain_8h_source.xhtml#l00124">openage::tile_data::subtexture_id</a>, <a class="el" href="game__renderer_8h_source.xhtml#l00032">openage::RenderOptions::terrain_blending</a>, <a class="el" href="terrain_8h_source.xhtml#l00125">openage::tile_data::tex</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00192">texture()</a>, <a class="el" href="pixel_8cpp_source.xhtml#l00077">openage::coord::viewport::to_tile()</a>, <a class="el" href="variable_8h_source.xhtml#l00049">openage::util::Variable&lt; T &gt;::value</a>, and <a class="el" href="coordmanager_8h_source.xhtml#l00026">openage::coord::CoordManager::viewport_size</a>.</p>
<div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ae8e6bd38cdaa86dcff31251de1c6deec_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac5f73cac07115849392bb22598ae8fba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5f73cac07115849392bb22598ae8fba">&#9670;&nbsp;</a></span>fill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::fill </td>
          <td>(</td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile__delta.xhtml">coord::tile_delta</a> &amp;&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>fill the terrain with given terrain_id values. </p><dl class="section return"><dt>Returns</dt><dd>whether the data filled on the terrain was cut because of the terrains size limit. </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                                                               {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">bool</span> was_cut = <span class="keyword">false</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    coord::tile pos = {0, 0};</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">for</span> (; pos.ne &lt; size.ne; pos.ne++) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">for</span> (pos.se = 0; pos.se &lt; size.se; pos.se++) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#ab9457472de4a25ef737684e27d1d5810">check_tile</a>(pos) == <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">tile_state::invalid</a>) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                was_cut = <span class="keyword">true</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            <span class="keywordtype">int</span> terrain_id = data[pos.ne * size.ne + pos.se];</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            TerrainChunk *chunk = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">get_create_chunk</a>(pos);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            chunk-&gt;get_data(pos)-&gt;terrain_id = terrain_id;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> was_cut;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a7837ff925b6c466824b2388e55c198f4"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">openage::Terrain::get_create_chunk</a></div><div class="ttdeci">TerrainChunk * get_create_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00124">terrain.cpp:124</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">openage::tile_state::invalid</a></div><div class="ttdoc">tile does not exist and can not be created</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_ab9457472de4a25ef737684e27d1d5810"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#ab9457472de4a25ef737684e27d1d5810">openage::Terrain::check_tile</a></div><div class="ttdeci">tile_state check_tile(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00254">terrain.cpp:254</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00254">check_tile()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00124">get_create_chunk()</a>, <a class="el" href="terrain__chunk_8cpp_source.xhtml#l00046">openage::TerrainChunk::get_data()</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aafedb2d84cafe20862cb4399751a8a7e3">openage::invalid</a>, and <a class="el" href="terrain_8h_source.xhtml#l00058">openage::TileContent::terrain_id</a>.</p>

<p class="reference">Referenced by <a class="el" href="colortable_8py_source.xhtml#l00028">openage.convert.colortable.ColorTable::__init__()</a>.</p>
<div id="dynsection-16" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-16-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-16-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-16-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ac5f73cac07115849392bb22598ae8fba_cgraph.svg" width="100%" height="520"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-17" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-17-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-17-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-17-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_ac5f73cac07115849392bb22598ae8fba_icgraph.svg" width="378" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aac2534a0373a7bbd8efdcf659977a881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac2534a0373a7bbd8efdcf659977a881">&#9670;&nbsp;</a></span>get_blending_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::get_blending_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>base_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>neighbor_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending mode id for two given neighbor ids. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;                                                                       {</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="comment">     * this function may require much more code, but this simple</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">     * magnitude comparison seems to do the job.</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">     * feel free to confirm or fix the behavior.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="comment">     * my guess is that the blending mode encodes another information</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="comment">     * not publicly noticed yet: the overlay priority.</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="comment">     * the higher the blendmode id, the higher the mode priority.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="comment">     * this may also be the reason why there are mask duplicates</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="comment">     * in blendomatic.dat</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="comment">     *</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="comment">     * funny enough, just using the modes in the dat file lead</span></div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="comment">     * to a totally wrong render. the convert script reassigns the</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="comment">     * blending modes with a simple key=&gt;val mapping,</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="comment">     * and after that, it looks perfect.</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordtype">int</span> base_mode     = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#ae5704a3d8f41acd79c3c3dca6f284ce7">blendmode</a>(base_id);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordtype">int</span> neighbor_mode = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#ae5704a3d8f41acd79c3c3dca6f284ce7">blendmode</a>(neighbor_id);</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">if</span> (neighbor_mode &gt; base_mode) {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">return</span> neighbor_mode;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="keywordflow">return</span> base_mode;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    }</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_ae5704a3d8f41acd79c3c3dca6f284ce7"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#ae5704a3d8f41acd79c3c3dca6f284ce7">openage::Terrain::blendmode</a></div><div class="ttdeci">int blendmode(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00187">terrain.cpp:187</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00187">blendmode()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00595">calculate_masks()</a>.</p>
<div id="dynsection-18" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-18-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-18-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-18-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_aac2534a0373a7bbd8efdcf659977a881_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-19" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-19-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-19-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-19-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_aac2534a0373a7bbd8efdcf659977a881_icgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6e0db07445c5dcc346c5e9d28458c516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e0db07445c5dcc346c5e9d28458c516">&#9670;&nbsp;</a></span>get_chunk() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get a terrain chunk by a given chunk position.</p>
<dl class="section return"><dt>Returns</dt><dd>the chunk if exists, nullptr else </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                                           {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">auto</span> iter = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a>.find(position);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (iter == this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a>.end()) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> iter-&gt;second;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_addad1085e0e15e34f8abf6ec270d5137"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">openage::Terrain::chunks</a></div><div class="ttdeci">std::unordered_map&lt; coord::chunk, TerrainChunk *, coord_chunk_hash &gt; chunks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00403">terrain.h:403</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00403">chunks</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00254">check_tile()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00120">get_chunk()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00124">get_create_chunk()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00137">get_data()</a>.</p>
<div id="dynsection-20" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-20-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-20-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-20-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a6e0db07445c5dcc346c5e9d28458c516_icgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a3c3153682d7a70b539ff15f492e0f06b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c3153682d7a70b539ff15f492e0f06b">&#9670;&nbsp;</a></span>get_chunk() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get a terrain chunk by a given tile position.</p>
<dl class="section return"><dt>Returns</dt><dd>the chunk it exists, nullptr else </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00120">120</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                                                          {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a>(position.to_chunk());</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e0db07445c5dcc346c5e9d28458c516"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">openage::Terrain::get_chunk</a></div><div class="ttdeci">TerrainChunk * get_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00109">terrain.cpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00109">get_chunk()</a>, and <a class="el" href="tile_8cpp_source.xhtml#l00060">openage::coord::tile::to_chunk()</a>.</p>
<div id="dynsection-21" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-21-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-21-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-21-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a3c3153682d7a70b539ff15f492e0f06b_cgraph.svg" width="514" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9ce94c372f7e86310506844b352fb20c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ce94c372f7e86310506844b352fb20c">&#9670;&nbsp;</a></span>get_chunk_neighbors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1chunk__neighbors.xhtml">chunk_neighbors</a> openage::Terrain::get_chunk_neighbors </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the neighbor chunks of a given chunk.</p>
<p>chunk neighbor ids: 0 / &lt;- ne 7 1 6 @ 2 5 3 4 \ &lt;- se</p>
<p>ne se 0: 1 -1 1: 1 0 2: 1 1 3: 0 1 4: -1 1 5: -1 0 6: -1 -1 7: 0 -1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>the position of the center chunk. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00212">212</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                                                              {</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keyword">struct </span>chunk_neighbors ret;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 8; i++) {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        coord::chunk tmp {</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            position.ne + (<a class="code" href="namespaceopenage_1_1coord.xhtml#a7ef0c2cf43638acb541a4c9d37bf9e24">coord::chunk_t</a>) <a class="code" href="namespaceopenage.xhtml#a46e91d5e7a9e134b40bddec3742b1c1e">neigh_offsets</a>[i].ne,</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;            position.se + (<a class="code" href="namespaceopenage_1_1coord.xhtml#a7ef0c2cf43638acb541a4c9d37bf9e24">coord::chunk_t</a>) <a class="code" href="namespaceopenage.xhtml#a46e91d5e7a9e134b40bddec3742b1c1e">neigh_offsets</a>[i].se</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        };</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        ret.neighbor[i] = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a>(tmp);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1coord_xhtml_a7ef0c2cf43638acb541a4c9d37bf9e24"><div class="ttname"><a href="namespaceopenage_1_1coord.xhtml#a7ef0c2cf43638acb541a4c9d37bf9e24">openage::coord::chunk_t</a></div><div class="ttdeci">int32_t chunk_t</div><div class="ttdef"><b>Definition:</b> <a href="declarations_8h_source.xhtml#l00052">declarations.h:52</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a46e91d5e7a9e134b40bddec3742b1c1e"><div class="ttname"><a href="namespaceopenage.xhtml#a46e91d5e7a9e134b40bddec3742b1c1e">openage::neigh_offsets</a></div><div class="ttdeci">constexpr coord::tile_delta const neigh_offsets[]</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00066">terrain.h:66</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e0db07445c5dcc346c5e9d28458c516"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">openage::Terrain::get_chunk</a></div><div class="ttdeci">TerrainChunk * get_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00109">terrain.cpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00066">openage::neigh_offsets</a>, and <a class="el" href="terrain__chunk_8h_source.xhtml#l00037">openage::chunk_neighbors::neighbor</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00082">attach_chunk()</a>.</p>
<div id="dynsection-22" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-22-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-22-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-22-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a9ce94c372f7e86310506844b352fb20c_icgraph.svg" width="100%" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a7837ff925b6c466824b2388e55c198f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7837ff925b6c466824b2388e55c198f4">&#9670;&nbsp;</a></span>get_create_chunk() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_create_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get or create a terrain chunk for a given chunk position.</p>
<dl class="section return"><dt>Returns</dt><dd>the (maybe newly created) chunk </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                                                                  {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    TerrainChunk *res = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a>(position);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">if</span> (res == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        res = <span class="keyword">new</span> TerrainChunk();</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#af40a0b5e61397331f4efc9543f7fdd44">attach_chunk</a>(res, position, <span class="keyword">false</span>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> res;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_af40a0b5e61397331f4efc9543f7fdd44"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#af40a0b5e61397331f4efc9543f7fdd44">openage::Terrain::attach_chunk</a></div><div class="ttdeci">void attach_chunk(TerrainChunk *new_chunk, const coord::chunk &amp;position, bool manual=true)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00082">terrain.cpp:82</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e0db07445c5dcc346c5e9d28458c516"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">openage::Terrain::get_chunk</a></div><div class="ttdeci">TerrainChunk * get_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00109">terrain.cpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00082">attach_chunk()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00109">get_chunk()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00064">fill()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00133">get_create_chunk()</a>, <a class="el" href="game__control_8cpp_source.xhtml#l00625">openage::EditorMode::paint_entity_at()</a>, and <a class="el" href="game__control_8cpp_source.xhtml#l00615">openage::EditorMode::paint_terrain_at()</a>.</p>
<div id="dynsection-23" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-23-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-23-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-23-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a7837ff925b6c466824b2388e55c198f4_cgraph.svg" width="100%" height="482"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-24" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-24-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-24-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-24-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a7837ff925b6c466824b2388e55c198f4_icgraph.svg" width="576" height="242"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9fc8a00464422b06cd5ea0dbda4c7d2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fc8a00464422b06cd5ea0dbda4c7d2f">&#9670;&nbsp;</a></span>get_create_chunk() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_create_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get or create a terrain chunk for a given tile position.</p>
<dl class="section return"><dt>Returns</dt><dd>the (maybe newly created) chunk </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                                                                 {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">get_create_chunk</a>(position.to_chunk());</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a7837ff925b6c466824b2388e55c198f4"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">openage::Terrain::get_create_chunk</a></div><div class="ttdeci">TerrainChunk * get_create_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00124">terrain.cpp:124</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00124">get_create_chunk()</a>, and <a class="el" href="tile_8cpp_source.xhtml#l00060">openage::coord::tile::to_chunk()</a>.</p>
<div id="dynsection-25" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-25-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-25-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-25-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a9fc8a00464422b06cd5ea0dbda4c7d2f_cgraph.svg" width="100%" height="495"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a437d04e21933a02a08861b50a585135e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a437d04e21933a02a08861b50a585135e">&#9670;&nbsp;</a></span>get_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_tile_content.xhtml">TileContent</a> * openage::Terrain::get_data </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return tile data for the given position.</p>
<p>the only reason the chunks exist, is because of this data. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                                                        {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    TerrainChunk *c = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a>(position.to_chunk());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">if</span> (c == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">return</span> c-&gt;<a class="code" href="classopenage_1_1_terrain_chunk.xhtml#af163db3fba4ae99206de76666f8424df">get_data</a>(position.get_pos_on_chunk());</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_chunk_xhtml_af163db3fba4ae99206de76666f8424df"><div class="ttname"><a href="classopenage_1_1_terrain_chunk.xhtml#af163db3fba4ae99206de76666f8424df">openage::TerrainChunk::get_data</a></div><div class="ttdeci">TileContent * get_data(coord::tile abspos)</div><div class="ttdef"><b>Definition:</b> <a href="terrain__chunk_8cpp_source.xhtml#l00046">terrain_chunk.cpp:46</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a6e0db07445c5dcc346c5e9d28458c516"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">openage::Terrain::get_chunk</a></div><div class="ttdeci">TerrainChunk * get_chunk(const coord::chunk &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00109">terrain.cpp:109</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00109">get_chunk()</a>, <a class="el" href="terrain__chunk_8cpp_source.xhtml#l00046">openage::TerrainChunk::get_data()</a>, <a class="el" href="tile_8cpp_source.xhtml#l00068">openage::coord::tile::get_pos_on_chunk()</a>, and <a class="el" href="tile_8cpp_source.xhtml#l00060">openage::coord::tile::to_chunk()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00467">get_neighbors()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00146">obj_at_point()</a>, and <a class="el" href="selection_8cpp_source.xhtml#l00246">openage::UnitSelection::select_space()</a>.</p>
<div id="dynsection-26" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-26-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-26-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-26-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a437d04e21933a02a08861b50a585135e_cgraph.svg" width="100%" height="476"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-27" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-27-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-27-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-27-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a437d04e21933a02a08861b50a585135e_icgraph.svg" width="100%" height="435"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="adf4e2cfb2010657a5384efc6c37a9748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf4e2cfb2010657a5384efc6c37a9748">&#9670;&nbsp;</a></span>get_neighbors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::get_neighbors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>basepos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *&#160;</td>
          <td class="paramname"><em>neigh_tiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *&#160;</td>
          <td class="paramname"><em>influences_by_terrain_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>gather neighbors of a given base tile.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">basepos</td><td>the base position, around which the neighbors will be fetched </td></tr>
    <tr><td class="paramname">neigh_tiles</td><td>the destination buffer where the neighbors will be stored </td></tr>
    <tr><td class="paramname">influences_by_terrain_id</td><td>influence buffer that is reset in the same step </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00467">467</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                                                                 {</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="comment">// walk over all given neighbor tiles and store them to the influence list,</span></div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="comment">// group them by terrain id.</span></div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> neigh_id = 0; neigh_id &lt; 8; neigh_id++) {</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;        <span class="comment">// the current neighbor</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;        <span class="keyword">auto</span> neighbor = &amp;neigh_data[neigh_id];</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;</div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;        <span class="comment">// calculate the pos of the neighbor tile</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;        coord::tile neigh_pos = basepos + <a class="code" href="namespaceopenage.xhtml#a46e91d5e7a9e134b40bddec3742b1c1e">neigh_offsets</a>[neigh_id];</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;        <span class="comment">// get the neighbor data</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;        TileContent *neigh_content = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a>(neigh_pos);</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;        <span class="comment">// chunk for neighbor or single tile is not existant</span></div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;        <span class="keywordflow">if</span> (neigh_content == <span class="keyword">nullptr</span> || neigh_content-&gt;terrain_id &lt; 0) {</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;            neighbor-&gt;state = <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">tile_state::missing</a>;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;        }</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;            neighbor-&gt;terrain_id = neigh_content-&gt;terrain_id;</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;            neighbor-&gt;state      = <a class="code" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">tile_state::existing</a>;</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;            neighbor-&gt;priority   = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">priority</a>(neighbor-&gt;terrain_id);</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;            <span class="comment">// reset influence directions for this tile</span></div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;            influences_by_terrain_id[neighbor-&gt;terrain_id].direction = 0;</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;        }</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    }</div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;}</div><div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::tile_state::existing</a></div><div class="ttdoc">tile is already existing</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a0de0b286ad2d9129d42b4f64e3ed9ffd"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">openage::Terrain::priority</a></div><div class="ttdeci">int priority(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00182">terrain.cpp:182</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a46e91d5e7a9e134b40bddec3742b1c1e"><div class="ttname"><a href="namespaceopenage.xhtml#a46e91d5e7a9e134b40bddec3742b1c1e">openage::neigh_offsets</a></div><div class="ttdeci">constexpr coord::tile_delta const neigh_offsets[]</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00066">terrain.h:66</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9"><div class="ttname"><a href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">openage::tile_state::missing</a></div><div class="ttdoc">tile is not created yet</div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a437d04e21933a02a08861b50a585135e"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">openage::Terrain::get_data</a></div><div class="ttdeci">TileContent * get_data(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00137">terrain.cpp:137</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00093">openage::influence::direction</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaf4e0ac58eb46d88efc451c164db3b837">openage::existing</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00137">get_data()</a>, <a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4aaea21841da70e6405af19fabc4ff8bdd9">openage::missing</a>, <a class="el" href="terrain_8h_source.xhtml#l00066">openage::neigh_offsets</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00182">priority()</a>, and <a class="el" href="terrain_8h_source.xhtml#l00058">openage::TileContent::terrain_id</a>.</p>
<div id="dynsection-28" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-28-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-28-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-28-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_adf4e2cfb2010657a5384efc6c37a9748_cgraph.svg" width="100%" height="525"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a88ec2ee796cfe5d6c97570ad73db43cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88ec2ee796cfe5d6c97570ad73db43cc">&#9670;&nbsp;</a></span>get_subtexture_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned openage::Terrain::get_subtexture_id </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>atlas_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the subtexture offset id for a given tile position. the maximum offset is determined by the atlas size.</p>
<p>this function returns always the right value, so that neighbor tiles of the same terrain (like grass-grass) are matching (without blendomatic). -&gt; e.g. grass only map. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;                                                                             {</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordtype">unsigned</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = 0;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> += util::mod&lt;coord::tile_t&gt;(pos.se, atlas_size);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> *= atlas_size;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> += util::mod&lt;coord::tile_t&gt;(pos.ne, atlas_size);</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00595">calculate_masks()</a>.</p>
<div id="dynsection-29" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-29-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-29-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-29-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a88ec2ee796cfe5d6c97570ad73db43cc_cgraph.svg" width="571" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-30" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-30-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-30-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-30-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a88ec2ee796cfe5d6c97570ad73db43cc_icgraph.svg" width="382" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aa4d53dc392a6fd6da85ba49625d70478"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4d53dc392a6fd6da85ba49625d70478">&#9670;&nbsp;</a></span>obj_at_point()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> * openage::Terrain::obj_at_point </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;&#160;</td>
          <td class="paramname"><em>point</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>an object which contains the given point, null otherwise </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00146">146</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                                                            {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    coord::tile t = point.to_tile();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    TileContent *tc = this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a>(t);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (!tc) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="comment">// prioritise selecting the smallest object</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    TerrainObject *smallest = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> obj_ptr : tc-&gt;obj) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">if</span> (obj_ptr-&gt;contains(point) &amp;&amp;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            (!smallest || obj_ptr-&gt;min_axis() &lt; smallest-&gt;min_axis())) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            smallest = obj_ptr;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">return</span> smallest;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_a437d04e21933a02a08861b50a585135e"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">openage::Terrain::get_data</a></div><div class="ttdeci">TileContent * get_data(const coord::tile &amp;position)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00137">terrain.cpp:137</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8cpp_source.xhtml#l00137">get_data()</a>, <a class="el" href="classopenage_1_1_terrain_object.xhtml#a6b82e5577be0620a320954e13d0f5f08">openage::TerrainObject::min_axis()</a>, <a class="el" href="terrain_8h_source.xhtml#l00059">openage::TileContent::obj</a>, and <a class="el" href="phys_8cpp_source.xhtml#l00106">openage::coord::phys3::to_tile()</a>.</p>

<p class="reference">Referenced by <a class="el" href="selection_8cpp_source.xhtml#l00228">openage::UnitSelection::select_point()</a>.</p>
<div id="dynsection-31" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-31-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-31-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-31-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_aa4d53dc392a6fd6da85ba49625d70478_cgraph.svg" width="100%" height="574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-32" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-32-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-32-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-32-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_aa4d53dc392a6fd6da85ba49625d70478_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a0de0b286ad2d9129d42b4f64e3ed9ffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0de0b286ad2d9129d42b4f64e3ed9ffd">&#9670;&nbsp;</a></span>priority()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::priority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending priority for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                                          {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a>(terrain_id);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#a42422b3e85c83467828991b119ca216c">terrain_id_priority_map</a>[terrain_id];</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
<div class="ttc" id="structopenage_1_1terrain__meta_xhtml_a42422b3e85c83467828991b119ca216c"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#a42422b3e85c83467828991b119ca216c">openage::terrain_meta::terrain_id_priority_map</a></div><div class="ttdeci">std::unique_ptr&lt; int[]&gt; terrain_id_priority_map</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00163">terrain.h:163</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a76cd02c887a27a6c91331573ecb84907"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">openage::Terrain::validate_terrain</a></div><div class="ttdeci">bool validate_terrain(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00164">terrain.cpp:164</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, <a class="el" href="terrain_8h_source.xhtml#l00163">openage::terrain_meta::terrain_id_priority_map</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00164">validate_terrain()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00467">get_neighbors()</a>.</p>
<div id="dynsection-33" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-33-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-33-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-33-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a0de0b286ad2d9129d42b4f64e3ed9ffd_cgraph.svg" width="552" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-34" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-34-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-34-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-34-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a0de0b286ad2d9129d42b4f64e3ed9ffd_icgraph.svg" width="368" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6e394fadeb8534aef0c7098939f25b23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e394fadeb8534aef0c7098939f25b23">&#9670;&nbsp;</a></span>texture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> * openage::Terrain::texture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the terrain texture for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                                              {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a>(terrain_id);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#a4b4c97d4834037b1ff79270d5c4876f7">textures</a>[terrain_id];</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_a76cd02c887a27a6c91331573ecb84907"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">openage::Terrain::validate_terrain</a></div><div class="ttdeci">bool validate_terrain(terrain_t terrain_id)</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8cpp_source.xhtml#l00164">terrain.cpp:164</a></div></div>
<div class="ttc" id="structopenage_1_1terrain__meta_xhtml_a4b4c97d4834037b1ff79270d5c4876f7"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#a4b4c97d4834037b1ff79270d5c4876f7">openage::terrain_meta::textures</a></div><div class="ttdeci">std::vector&lt; Texture * &gt; textures</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00160">terrain.h:160</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, <a class="el" href="terrain_8h_source.xhtml#l00160">openage::terrain_meta::textures</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00164">validate_terrain()</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00595">calculate_masks()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00278">draw()</a>.</p>
<div id="dynsection-35" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-35-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-35-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-35-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a6e394fadeb8534aef0c7098939f25b23_cgraph.svg" width="554" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-36" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-36-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-36-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-36-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a6e394fadeb8534aef0c7098939f25b23_icgraph.svg" width="404" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a143090daace4caa26b8f0e9af5b4b69c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a143090daace4caa26b8f0e9af5b4b69c">&#9670;&nbsp;</a></span>used_chunks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &gt; openage::Terrain::used_chunks </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns a list of all referenced chunks </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                                                 {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::vector&lt;coord::chunk&gt; <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;c : <a class="code" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a>) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>.push_back(c.first);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="ttc" id="classopenage_1_1_terrain_xhtml_addad1085e0e15e34f8abf6ec270d5137"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">openage::Terrain::chunks</a></div><div class="ttdeci">std::unordered_map&lt; coord::chunk, TerrainChunk *, coord_chunk_hash &gt; chunks</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00403">terrain.h:403</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00403">chunks</a>, and <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>.</p>
<div id="dynsection-37" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-37-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-37-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-37-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a143090daace4caa26b8f0e9af5b4b69c_cgraph.svg" width="582" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="adfa825aeaadbb2ce0a8dd13c335ffee1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfa825aeaadbb2ce0a8dd13c335ffee1">&#9670;&nbsp;</a></span>validate_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::validate_mask </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>mask_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>validate whether the given mask id is available. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                                           {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">if</span> (mask_id &gt;= (ssize_t)this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#ac0a032b35502a554d168d791213ad74c">blendmode_count</a>) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Requested mask_id is out of range: &quot;</span> &lt;&lt; mask_id);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="structopenage_1_1terrain__meta_xhtml_ac0a032b35502a554d168d791213ad74c"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#ac0a032b35502a554d168d791213ad74c">openage::terrain_meta::blendmode_count</a></div><div class="ttdeci">size_t blendmode_count</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00158">terrain.h:158</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="terrain_8h_source.xhtml#l00158">openage::terrain_meta::blendmode_count</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, and <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00197">blending_mask()</a>.</p>
<div id="dynsection-38" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-38-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-38-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-38-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_adfa825aeaadbb2ce0a8dd13c335ffee1_cgraph.svg" width="378" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-39" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-39-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-39-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-39-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_adfa825aeaadbb2ce0a8dd13c335ffee1_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a76cd02c887a27a6c91331573ecb84907"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76cd02c887a27a6c91331573ecb84907">&#9670;&nbsp;</a></span>validate_terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::validate_terrain </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>validate whether the given terrain id is available. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                                                   {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">if</span> (terrain_id &gt;= (ssize_t)this-&gt;<a class="code" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>-&gt;<a class="code" href="structopenage_1_1terrain__meta.xhtml#adac0256f3bb43b543864aba0079d84a8">terrain_id_count</a>) {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Requested terrain_id is out of range: &quot;</span> &lt;&lt; terrain_id);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="structopenage_1_1terrain__meta_xhtml_adac0256f3bb43b543864aba0079d84a8"><div class="ttname"><a href="structopenage_1_1terrain__meta.xhtml#adac0256f3bb43b543864aba0079d84a8">openage::terrain_meta::terrain_id_count</a></div><div class="ttdeci">size_t terrain_id_count</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00157">terrain.h:157</a></div></div>
<div class="ttc" id="classopenage_1_1_terrain_xhtml_aa0970b751b0d154bfa6be8c4f6dc850d"><div class="ttname"><a href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">openage::Terrain::meta</a></div><div class="ttdeci">terrain_meta * meta</div><div class="ttdef"><b>Definition:</b> <a href="terrain_8h_source.xhtml#l00398">terrain.h:398</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="terrain_8h_source.xhtml#l00398">meta</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, and <a class="el" href="terrain_8h_source.xhtml#l00157">openage::terrain_meta::terrain_id_count</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00187">blendmode()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00182">priority()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00192">texture()</a>.</p>
<div id="dynsection-40" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-40-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-40-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-40-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a76cd02c887a27a6c91331573ecb84907_cgraph.svg" width="339" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-41" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-41-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-41-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-41-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain_a76cd02c887a27a6c91331573ecb84907_icgraph.svg" width="100%" height="465"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="addad1085e0e15e34f8abf6ec270d5137"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addad1085e0e15e34f8abf6ec270d5137">&#9670;&nbsp;</a></span>chunks</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;<a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a>, <a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *, <a class="el" href="structopenage_1_1coord__chunk__hash.xhtml">coord_chunk_hash</a>&gt; openage::Terrain::chunks</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>maps chunk coordinates to chunks. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00403">403</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00082">attach_chunk()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00109">get_chunk()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00056">used_chunks()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00045">~Terrain()</a>.</p>

</div>
</div>
<a id="a59ab681b936ea55851dcbffb4e90b7a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59ab681b936ea55851dcbffb4e90b7a0">&#9670;&nbsp;</a></span>infinite</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::infinite</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>chunks are automagically created as soon as they are referenced </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00180">180</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00269">check_tile_position()</a>.</p>

</div>
</div>
<a id="aa0970b751b0d154bfa6be8c4f6dc850d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0970b751b0d154bfa6be8c4f6dc850d">&#9670;&nbsp;</a></span>meta</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a>* openage::Terrain::meta</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>terrain meta data </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00398">398</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="terrain_8cpp_source.xhtml#l00197">blending_mask()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00187">blendmode()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00182">priority()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00192">texture()</a>, <a class="el" href="terrain_8cpp_source.xhtml#l00173">validate_mask()</a>, and <a class="el" href="terrain_8cpp_source.xhtml#l00164">validate_terrain()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/terrain/<a class="el" href="terrain_8h_source.xhtml">terrain.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/terrain/<a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="classopenage_1_1_terrain.xhtml">Terrain</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
