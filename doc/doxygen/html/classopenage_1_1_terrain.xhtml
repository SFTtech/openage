<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::Terrain Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1_terrain.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1_terrain-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::Terrain Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="terrain_8h_source.xhtml">terrain.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for openage::Terrain:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1_terrain__coll__graph.svg" width="200" height="478"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2cd98e5c07d94c82f4ccccf507885895"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a2cd98e5c07d94c82f4ccccf507885895">Terrain</a> (<a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *<a class="el" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a>, bool is_infinite)</td></tr>
<tr class="separator:a2cd98e5c07d94c82f4ccccf507885895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4855244807ea15873a7ecd3f25dcfc34"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a4855244807ea15873a7ecd3f25dcfc34">~Terrain</a> ()</td></tr>
<tr class="separator:a4855244807ea15873a7ecd3f25dcfc34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143090daace4caa26b8f0e9af5b4b69c"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a143090daace4caa26b8f0e9af5b4b69c">used_chunks</a> () const</td></tr>
<tr class="separator:a143090daace4caa26b8f0e9af5b4b69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5f73cac07115849392bb22598ae8fba"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ac5f73cac07115849392bb22598ae8fba">fill</a> (const int *data, const <a class="el" href="structopenage_1_1coord_1_1tile__delta.xhtml">coord::tile_delta</a> &amp;size)</td></tr>
<tr class="separator:ac5f73cac07115849392bb22598ae8fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40a0b5e61397331f4efc9543f7fdd44"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#af40a0b5e61397331f4efc9543f7fdd44">attach_chunk</a> (<a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *new_chunk, const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position, bool manual=true)</td></tr>
<tr class="separator:af40a0b5e61397331f4efc9543f7fdd44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e0db07445c5dcc346c5e9d28458c516"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a6e0db07445c5dcc346c5e9d28458c516">get_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a6e0db07445c5dcc346c5e9d28458c516"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c3153682d7a70b539ff15f492e0f06b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a3c3153682d7a70b539ff15f492e0f06b">get_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a3c3153682d7a70b539ff15f492e0f06b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7837ff925b6c466824b2388e55c198f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a7837ff925b6c466824b2388e55c198f4">get_create_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a7837ff925b6c466824b2388e55c198f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fc8a00464422b06cd5ea0dbda4c7d2f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a9fc8a00464422b06cd5ea0dbda4c7d2f">get_create_chunk</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a9fc8a00464422b06cd5ea0dbda4c7d2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a437d04e21933a02a08861b50a585135e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_tile_content.xhtml">TileContent</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a437d04e21933a02a08861b50a585135e">get_data</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:a437d04e21933a02a08861b50a585135e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4d53dc392a6fd6da85ba49625d70478"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa4d53dc392a6fd6da85ba49625d70478">obj_at_point</a> (const <a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;point)</td></tr>
<tr class="separator:aa4d53dc392a6fd6da85ba49625d70478"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ce94c372f7e86310506844b352fb20c"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1chunk__neighbors.xhtml">chunk_neighbors</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a9ce94c372f7e86310506844b352fb20c">get_chunk_neighbors</a> (const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;position)</td></tr>
<tr class="separator:a9ce94c372f7e86310506844b352fb20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ec2ee796cfe5d6c97570ad73db43cc"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a88ec2ee796cfe5d6c97570ad73db43cc">get_subtexture_id</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;pos, unsigned atlas_size)</td></tr>
<tr class="separator:a88ec2ee796cfe5d6c97570ad73db43cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9457472de4a25ef737684e27d1d5810"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4a">tile_state</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ab9457472de4a25ef737684e27d1d5810">check_tile</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:ab9457472de4a25ef737684e27d1d5810"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e35745e96c0b263a74dcf2ec2abffb"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa0e35745e96c0b263a74dcf2ec2abffb">check_tile_position</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;position)</td></tr>
<tr class="separator:aa0e35745e96c0b263a74dcf2ec2abffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76cd02c887a27a6c91331573ecb84907"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a76cd02c887a27a6c91331573ecb84907">validate_terrain</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a76cd02c887a27a6c91331573ecb84907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfa825aeaadbb2ce0a8dd13c335ffee1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#adfa825aeaadbb2ce0a8dd13c335ffee1">validate_mask</a> (ssize_t mask_id)</td></tr>
<tr class="separator:adfa825aeaadbb2ce0a8dd13c335ffee1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0de0b286ad2d9129d42b4f64e3ed9ffd"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a0de0b286ad2d9129d42b4f64e3ed9ffd">priority</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a0de0b286ad2d9129d42b4f64e3ed9ffd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5704a3d8f41acd79c3c3dca6f284ce7"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ae5704a3d8f41acd79c3c3dca6f284ce7">blendmode</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:ae5704a3d8f41acd79c3c3dca6f284ce7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e394fadeb8534aef0c7098939f25b23"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a6e394fadeb8534aef0c7098939f25b23">texture</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> terrain_id)</td></tr>
<tr class="separator:a6e394fadeb8534aef0c7098939f25b23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30da324d9ca8573bb3ac45bb12166298"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a30da324d9ca8573bb3ac45bb12166298">blending_mask</a> (ssize_t mask_id)</td></tr>
<tr class="separator:a30da324d9ca8573bb3ac45bb12166298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac2534a0373a7bbd8efdcf659977a881"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aac2534a0373a7bbd8efdcf659977a881">get_blending_mode</a> (<a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> base_id, <a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a> neighbor_id)</td></tr>
<tr class="separator:aac2534a0373a7bbd8efdcf659977a881"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8e6bd38cdaa86dcff31251de1c6deec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ae8e6bd38cdaa86dcff31251de1c6deec">draw</a> (<a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> *engine, <a class="el" href="classopenage_1_1_render_options.xhtml">RenderOptions</a> *settings)</td></tr>
<tr class="separator:ae8e6bd38cdaa86dcff31251de1c6deec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0736d57ce5014c9caea96125ad87b0d"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1terrain__render__data.xhtml">terrain_render_data</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#ab0736d57ce5014c9caea96125ad87b0d">create_draw_advice</a> (const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;ab, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;cd, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;ef, const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;gh, bool blending_enabled)</td></tr>
<tr class="separator:ab0736d57ce5014c9caea96125ad87b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16e91ba2a775715dc81088e47e508786"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a16e91ba2a775715dc81088e47e508786">create_tile_advice</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> position, bool blending_enabled)</td></tr>
<tr class="separator:a16e91ba2a775715dc81088e47e508786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf4e2cfb2010657a5384efc6c37a9748"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#adf4e2cfb2010657a5384efc6c37a9748">get_neighbors</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> basepos, struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *<a class="el" href="namespaceopenage.xhtml#ae153a7bdcb1d70441174ccfc861eee78">neigh_tiles</a>, struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *influences_by_terrain_id)</td></tr>
<tr class="separator:adf4e2cfb2010657a5384efc6c37a9748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a202cab41ccd1d5af5e0e7a5e658f3f30"><td class="memItemLeft" align="right" valign="top">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">calculate_influences</a> (struct <a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a> *base_tile, struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *<a class="el" href="namespaceopenage.xhtml#ae153a7bdcb1d70441174ccfc861eee78">neigh_tiles</a>, struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *influences_by_terrain_id)</td></tr>
<tr class="separator:a202cab41ccd1d5af5e0e7a5e658f3f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72f81eb7623d4ade8272f8163bfcb4d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a72f81eb7623d4ade8272f8163bfcb4d9">calculate_masks</a> (<a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> position, struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> *<a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a>, struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> *influences)</td></tr>
<tr class="separator:a72f81eb7623d4ade8272f8163bfcb4d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a59ab681b936ea55851dcbffb4e90b7a0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#a59ab681b936ea55851dcbffb4e90b7a0">infinite</a></td></tr>
<tr class="memdesc:a59ab681b936ea55851dcbffb4e90b7a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">chunks are automagically created as soon as they are referenced  <a href="#a59ab681b936ea55851dcbffb4e90b7a0">More...</a><br /></td></tr>
<tr class="separator:a59ab681b936ea55851dcbffb4e90b7a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aa0970b751b0d154bfa6be8c4f6dc850d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#aa0970b751b0d154bfa6be8c4f6dc850d">meta</a></td></tr>
<tr class="separator:aa0970b751b0d154bfa6be8c4f6dc850d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addad1085e0e15e34f8abf6ec270d5137"><td class="memItemLeft" align="right" valign="top">std::unordered_map&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a>, <a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *, <a class="el" href="structopenage_1_1coord__chunk__hash.xhtml">coord_chunk_hash</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1_terrain.xhtml#addad1085e0e15e34f8abf6ec270d5137">chunks</a></td></tr>
<tr class="separator:addad1085e0e15e34f8abf6ec270d5137"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>the terrain class is the main top-management interface for dealing with cost-benefit analysis to maximize company profits.</p>
<p>actually this is just the entrypoint and container for the terrain chunks. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00175">175</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a2cd98e5c07d94c82f4ccccf507885895"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cd98e5c07d94c82f4ccccf507885895">&#9670;&nbsp;</a></span>Terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Terrain::Terrain </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a> *&#160;</td>
          <td class="paramname"><em>meta</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>is_infinite</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00031">31</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a4855244807ea15873a7ecd3f25dcfc34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4855244807ea15873a7ecd3f25dcfc34">&#9670;&nbsp;</a></span>~Terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::Terrain::~Terrain </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00045">45</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af40a0b5e61397331f4efc9543f7fdd44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af40a0b5e61397331f4efc9543f7fdd44">&#9670;&nbsp;</a></span>attach_chunk()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::attach_chunk </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *&#160;</td>
          <td class="paramname"><em>new_chunk</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>manual</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Attach a chunk to the terrain, to a given position.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">new_chunk</td><td>The chunk to be attached </td></tr>
    <tr><td class="paramname">position</td><td>The chunk position where the chunk will be placed </td></tr>
    <tr><td class="paramname">manually_created</td><td>Was this chunk created manually? If true, it will not be free'd automatically </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a30da324d9ca8573bb3ac45bb12166298"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30da324d9ca8573bb3ac45bb12166298">&#9670;&nbsp;</a></span>blending_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> * openage::Terrain::blending_mask </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>mask_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the blendomatic mask with the given mask id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00197">197</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="ae5704a3d8f41acd79c3c3dca6f284ce7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae5704a3d8f41acd79c3c3dca6f284ce7">&#9670;&nbsp;</a></span>blendmode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::blendmode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending mode/blendomatic mask set for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00187">187</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a202cab41ccd1d5af5e0e7a5e658f3f30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a202cab41ccd1d5af5e0e7a5e658f3f30">&#9670;&nbsp;</a></span>calculate_influences()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> openage::Terrain::calculate_influences </td>
          <td>(</td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a> *&#160;</td>
          <td class="paramname"><em>base_tile</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *&#160;</td>
          <td class="paramname"><em>neigh_tiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *&#160;</td>
          <td class="paramname"><em>influences_by_terrain_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>look at neighbor tiles around the base_tile, and store the influence bits.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">base_tile</td><td>the base tile for which influences are calculated </td></tr>
    <tr><td class="paramname">neigh_tiles</td><td>the neigbors of base_tile </td></tr>
    <tr><td class="paramname">influences_by_terrain_id</td><td>influences will be stored to this buffer, as bitmasks </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>an influence group that describes the maximum 8 possible influences on the base_tile </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00500">500</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a72f81eb7623d4ade8272f8163bfcb4d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72f81eb7623d4ade8272f8163bfcb4d9">&#9670;&nbsp;</a></span>calculate_masks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::calculate_masks </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> *&#160;</td>
          <td class="paramname"><em>tile_data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence__group.xhtml">influence_group</a> *&#160;</td>
          <td class="paramname"><em>influences</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>calculate blending masks for a given tile position.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>the base tile position, for which the masks are calculated </td></tr>
    <tr><td class="paramname"><a class="el" href="structopenage_1_1tile__data.xhtml">tile_data</a></td><td>the buffer where the created drawing layers will be stored in </td></tr>
    <tr><td class="paramname">influences</td><td>the buffer where calculated influences were stored to</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="classopenage_1_1_terrain.xhtml#a202cab41ccd1d5af5e0e7a5e658f3f30">calculate_influences</a> </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00595">595</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="ab9457472de4a25ef737684e27d1d5810"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9457472de4a25ef737684e27d1d5810">&#9670;&nbsp;</a></span>check_tile()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage.xhtml#a452923c63b865b21223a44ea86714b4a">tile_state</a> openage::Terrain::check_tile </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks the creation state and premissions of a given tile position. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00254">254</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="aa0e35745e96c0b263a74dcf2ec2abffb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0e35745e96c0b263a74dcf2ec2abffb">&#9670;&nbsp;</a></span>check_tile_position()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::check_tile_position </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>checks whether the given tile position is allowed to exist on this terrain. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00269">269</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="ab0736d57ce5014c9caea96125ad87b0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0736d57ce5014c9caea96125ad87b0d">&#9670;&nbsp;</a></span>create_draw_advice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1terrain__render__data.xhtml">terrain_render_data</a> openage::Terrain::create_draw_advice </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>ab</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>cd</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>ef</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>gh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blending_enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>create the drawing instruction data.</p>
<p>created draw data according to the given tile boundaries.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ab</td><td>upper left tile </td></tr>
    <tr><td class="paramname">cd</td><td>upper right tile </td></tr>
    <tr><td class="paramname">ef</td><td>lower right tile </td></tr>
    <tr><td class="paramname">gh</td><td>lower left tile</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>a drawing instruction struct that contains all information for rendering </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00329">329</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a16e91ba2a775715dc81088e47e508786"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16e91ba2a775715dc81088e47e508786">&#9670;&nbsp;</a></span>create_tile_advice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1tile__draw__data.xhtml">tile_draw_data</a> openage::Terrain::create_tile_advice </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>blending_enabled</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>create rendering and blending information for a single tile on the terrain. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00402">402</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="ae8e6bd38cdaa86dcff31251de1c6deec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8e6bd38cdaa86dcff31251de1c6deec">&#9670;&nbsp;</a></span>draw()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_engine.xhtml">Engine</a> *&#160;</td>
          <td class="paramname"><em>engine</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classopenage_1_1_render_options.xhtml">RenderOptions</a> *&#160;</td>
          <td class="paramname"><em>settings</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>draw the currently visible terrain area on screen. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">engine</td><td>the engine where the terrain should be drawn to. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00278">278</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="ac5f73cac07115849392bb22598ae8fba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac5f73cac07115849392bb22598ae8fba">&#9670;&nbsp;</a></span>fill()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::fill </td>
          <td>(</td>
          <td class="paramtype">const int *&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile__delta.xhtml">coord::tile_delta</a> &amp;&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>fill the terrain with given terrain_id values. </p><dl class="section return"><dt>Returns</dt><dd>whether the data filled on the terrain was cut because of the terrains size limit. </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00064">64</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="aac2534a0373a7bbd8efdcf659977a881"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aac2534a0373a7bbd8efdcf659977a881">&#9670;&nbsp;</a></span>get_blending_mode()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::get_blending_mode </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>base_id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>neighbor_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending mode id for two given neighbor ids. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00226">226</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a6e0db07445c5dcc346c5e9d28458c516"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e0db07445c5dcc346c5e9d28458c516">&#9670;&nbsp;</a></span>get_chunk() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get a terrain chunk by a given chunk position.</p>
<dl class="section return"><dt>Returns</dt><dd>the chunk if exists, nullptr else </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00109">109</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a3c3153682d7a70b539ff15f492e0f06b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c3153682d7a70b539ff15f492e0f06b">&#9670;&nbsp;</a></span>get_chunk() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get a terrain chunk by a given tile position.</p>
<dl class="section return"><dt>Returns</dt><dd>the chunk it exists, nullptr else </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00120">120</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a9ce94c372f7e86310506844b352fb20c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ce94c372f7e86310506844b352fb20c">&#9670;&nbsp;</a></span>get_chunk_neighbors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="structopenage_1_1chunk__neighbors.xhtml">chunk_neighbors</a> openage::Terrain::get_chunk_neighbors </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the neighbor chunks of a given chunk.</p>
<p>chunk neighbor ids: 0 / &lt;- ne 7 1 6 @ 2 5 3 4 \ &lt;- se</p>
<p>ne se 0: 1 -1 1: 1 0 2: 1 1 3: 0 1 4: -1 1 5: -1 0 6: -1 -1 7: 0 -1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>the position of the center chunk. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00212">212</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a7837ff925b6c466824b2388e55c198f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7837ff925b6c466824b2388e55c198f4">&#9670;&nbsp;</a></span>get_create_chunk() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_create_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get or create a terrain chunk for a given chunk position.</p>
<dl class="section return"><dt>Returns</dt><dd>the (maybe newly created) chunk </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00124">124</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a9fc8a00464422b06cd5ea0dbda4c7d2f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fc8a00464422b06cd5ea0dbda4c7d2f">&#9670;&nbsp;</a></span>get_create_chunk() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> * openage::Terrain::get_create_chunk </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get or create a terrain chunk for a given tile position.</p>
<dl class="section return"><dt>Returns</dt><dd>the (maybe newly created) chunk </dd></dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00133">133</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a437d04e21933a02a08861b50a585135e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a437d04e21933a02a08861b50a585135e">&#9670;&nbsp;</a></span>get_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_tile_content.xhtml">TileContent</a> * openage::Terrain::get_data </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return tile data for the given position.</p>
<p>the only reason the chunks exist, is because of this data. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00137">137</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="adf4e2cfb2010657a5384efc6c37a9748"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf4e2cfb2010657a5384efc6c37a9748">&#9670;&nbsp;</a></span>get_neighbors()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::Terrain::get_neighbors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a>&#160;</td>
          <td class="paramname"><em>basepos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1neighbor__tile.xhtml">neighbor_tile</a> *&#160;</td>
          <td class="paramname"><em>neigh_tiles</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="structopenage_1_1influence.xhtml">influence</a> *&#160;</td>
          <td class="paramname"><em>influences_by_terrain_id</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>gather neighbors of a given base tile.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">basepos</td><td>the base position, around which the neighbors will be fetched </td></tr>
    <tr><td class="paramname">neigh_tiles</td><td>the destination buffer where the neighbors will be stored </td></tr>
    <tr><td class="paramname">influences_by_terrain_id</td><td>influence buffer that is reset in the same step </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00467">467</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a88ec2ee796cfe5d6c97570ad73db43cc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88ec2ee796cfe5d6c97570ad73db43cc">&#9670;&nbsp;</a></span>get_subtexture_id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned openage::Terrain::get_subtexture_id </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1tile.xhtml">coord::tile</a> &amp;&#160;</td>
          <td class="paramname"><em>pos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>atlas_size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the subtexture offset id for a given tile position. the maximum offset is determined by the atlas size.</p>
<p>this function returns always the right value, so that neighbor tiles of the same terrain (like grass-grass) are matching (without blendomatic). -&gt; e.g. grass only map. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00202">202</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="aa4d53dc392a6fd6da85ba49625d70478"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4d53dc392a6fd6da85ba49625d70478">&#9670;&nbsp;</a></span>obj_at_point()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_terrain_object.xhtml">TerrainObject</a> * openage::Terrain::obj_at_point </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1coord_1_1phys3.xhtml">coord::phys3</a> &amp;&#160;</td>
          <td class="paramname"><em>point</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>an object which contains the given point, null otherwise </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00146">146</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a0de0b286ad2d9129d42b4f64e3ed9ffd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0de0b286ad2d9129d42b4f64e3ed9ffd">&#9670;&nbsp;</a></span>priority()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::Terrain::priority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>return the blending priority for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00182">182</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a6e394fadeb8534aef0c7098939f25b23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6e394fadeb8534aef0c7098939f25b23">&#9670;&nbsp;</a></span>texture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1_texture.xhtml">Texture</a> * openage::Terrain::texture </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>get the terrain texture for a given terrain id. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00192">192</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a143090daace4caa26b8f0e9af5b4b69c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a143090daace4caa26b8f0e9af5b4b69c">&#9670;&nbsp;</a></span>used_chunks()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt; <a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a> &gt; openage::Terrain::used_chunks </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>returns a list of all referenced chunks </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00056">56</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="adfa825aeaadbb2ce0a8dd13c335ffee1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adfa825aeaadbb2ce0a8dd13c335ffee1">&#9670;&nbsp;</a></span>validate_mask()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::validate_mask </td>
          <td>(</td>
          <td class="paramtype">ssize_t&#160;</td>
          <td class="paramname"><em>mask_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>validate whether the given mask id is available. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00173">173</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<a id="a76cd02c887a27a6c91331573ecb84907"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76cd02c887a27a6c91331573ecb84907">&#9670;&nbsp;</a></span>validate_terrain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::validate_terrain </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage.xhtml#a0078c87a2baae2c33889beb8379a8270">terrain_t</a>&#160;</td>
          <td class="paramname"><em>terrain_id</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>validate whether the given terrain id is available. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8cpp_source.xhtml#l00164">164</a> of file <a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="addad1085e0e15e34f8abf6ec270d5137"></a>
<h2 class="memtitle"><span class="permalink"><a href="#addad1085e0e15e34f8abf6ec270d5137">&#9670;&nbsp;</a></span>chunks</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::unordered_map&lt;<a class="el" href="structopenage_1_1coord_1_1chunk.xhtml">coord::chunk</a>, <a class="el" href="classopenage_1_1_terrain_chunk.xhtml">TerrainChunk</a> *, <a class="el" href="structopenage_1_1coord__chunk__hash.xhtml">coord_chunk_hash</a>&gt; openage::Terrain::chunks</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>maps chunk coordinates to chunks. </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00403">403</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

</div>
</div>
<a id="a59ab681b936ea55851dcbffb4e90b7a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59ab681b936ea55851dcbffb4e90b7a0">&#9670;&nbsp;</a></span>infinite</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::Terrain::infinite</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>chunks are automagically created as soon as they are referenced </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00180">180</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

</div>
</div>
<a id="aa0970b751b0d154bfa6be8c4f6dc850d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0970b751b0d154bfa6be8c4f6dc850d">&#9670;&nbsp;</a></span>meta</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1terrain__meta.xhtml">terrain_meta</a>* openage::Terrain::meta</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>terrain meta data </p>

<p class="definition">Definition at line <a class="el" href="terrain_8h_source.xhtml#l00398">398</a> of file <a class="el" href="terrain_8h_source.xhtml">terrain.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>libopenage/terrain/<a class="el" href="terrain_8h_source.xhtml">terrain.h</a></li>
<li>libopenage/terrain/<a class="el" href="terrain_8cpp_source.xhtml">terrain.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="classopenage_1_1_terrain.xhtml">Terrain</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
