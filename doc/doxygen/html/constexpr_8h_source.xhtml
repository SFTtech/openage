<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/constexpr.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('constexpr_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">constexpr.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="constexpr_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2014-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;cstdlib&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml">   12</a></span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml">openage::util::constexpr_</a> {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a7bc24bcb83bbac7bbf75686a8331cd21">   17</a></span>&#160;constexpr <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a7bc24bcb83bbac7bbf75686a8331cd21">streq</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *a, <span class="keyword">const</span> <span class="keywordtype">char</span> *b) {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">for</span> (;*a == *b; ++a, ++b) {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keywordflow">if</span> (*a == <span class="charliteral">&#39;\0&#39;</span>) {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        }</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    }</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">   30</a></span>&#160;constexpr <span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> len = 0;; ++len) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>[len] == <span class="charliteral">&#39;\0&#39;</span>) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">return</span> len;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        }</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">   48</a></span>&#160;<span class="keyword">struct </span><a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a> {</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#ac55b8849ba71aa1dd2eb6b6b0b97bf0c">   49</a></span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#ac55b8849ba71aa1dd2eb6b6b0b97bf0c">literal</a>;</div><div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#a8377276ec3801cd8a5bc89f72ac5c590">   50</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#a8377276ec3801cd8a5bc89f72ac5c590">length</a>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;};</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a61c4b546903316ecf379bfe7bd9553f1">   59</a></span>&#160;constexpr <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a61c4b546903316ecf379bfe7bd9553f1">get_prefix</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *suffix) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) &lt; <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(suffix)) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// suffix is longer than str</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keywordflow">throw</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a7bc24bcb83bbac7bbf75686a8331cd21">streq</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a> + (<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) - <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(suffix)), suffix)) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// str ends with suffix</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a>{<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) - <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(suffix)};</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">throw</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a671299bb61bb30cecb3fa42de25333b0">   75</a></span>&#160;constexpr <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a671299bb61bb30cecb3fa42de25333b0">create_truncated_string_literal</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a>{<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>)};</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#aa4f041b85b8ae3df628165f73397d1fa">   82</a></span>&#160;constexpr <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#aa4f041b85b8ae3df628165f73397d1fa">has_prefix</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <span class="keyword">const</span> <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a> prefix) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> pos = 0; pos &lt; prefix.<a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#a8377276ec3801cd8a5bc89f72ac5c590">length</a>; ++pos) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>[pos] != prefix.<a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#ac55b8849ba71aa1dd2eb6b6b0b97bf0c">literal</a>[pos]) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#ae2139acfbb2a838e378d0652e23943b8">   97</a></span>&#160;constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#ae2139acfbb2a838e378d0652e23943b8">strip_prefix</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <span class="keyword">const</span> <a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">truncated_string_literal</a> prefix) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#aa4f041b85b8ae3df628165f73397d1fa">has_prefix</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, prefix)) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a> + prefix.<a class="code" href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#a8377276ec3801cd8a5bc89f72ac5c590">length</a>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a6a9d0df52733d9d7ae0bcc1bc561e38f">  111</a></span>&#160;constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#ae2139acfbb2a838e378d0652e23943b8">strip_prefix</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <span class="keyword">const</span> <span class="keywordtype">char</span> *prefix) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#ae2139acfbb2a838e378d0652e23943b8">strip_prefix</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>, <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a671299bb61bb30cecb3fa42de25333b0">create_truncated_string_literal</a>(prefix));</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;} <span class="comment">// namespace openage::util::constexpr_</span></div><div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml">openage::util::constexpr_</a></div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00012">constexpr.h:12</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_ae2139acfbb2a838e378d0652e23943b8"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#ae2139acfbb2a838e378d0652e23943b8">openage::util::constexpr_::strip_prefix</a></div><div class="ttdeci">constexpr const char * strip_prefix(const char *str, const truncated_string_literal prefix)</div><div class="ttdoc">Strips a prefix from a given string literal.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00097">constexpr.h:97</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a61c4b546903316ecf379bfe7bd9553f1"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a61c4b546903316ecf379bfe7bd9553f1">openage::util::constexpr_::get_prefix</a></div><div class="ttdeci">constexpr truncated_string_literal get_prefix(const char *str, const char *suffix)</div><div class="ttdoc">Truncates a suffix from a string literal.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00059">constexpr.h:59</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a72a87a05e383ec62bf0b60359f314df7"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">openage::util::constexpr_::strlen</a></div><div class="ttdeci">constexpr size_t strlen(const char *str)</div><div class="ttdoc">Returns the length of the string literal, excluding the terminating NULL byte.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00030">constexpr.h:30</a></div></div>
<div class="ttc" id="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal_xhtml"><div class="ttname"><a href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml">openage::util::constexpr_::truncated_string_literal</a></div><div class="ttdoc">Stores a string literal plus a &quot;length specifier&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00048">constexpr.h:48</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a671299bb61bb30cecb3fa42de25333b0"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a671299bb61bb30cecb3fa42de25333b0">openage::util::constexpr_::create_truncated_string_literal</a></div><div class="ttdeci">constexpr truncated_string_literal create_truncated_string_literal(const char *str)</div><div class="ttdoc">Creates a truncated_string_literal from a regular string literal.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00075">constexpr.h:75</a></div></div>
<div class="ttc" id="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal_xhtml_ac55b8849ba71aa1dd2eb6b6b0b97bf0c"><div class="ttname"><a href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#ac55b8849ba71aa1dd2eb6b6b0b97bf0c">openage::util::constexpr_::truncated_string_literal::literal</a></div><div class="ttdeci">const char * literal</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00049">constexpr.h:49</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_aa4f041b85b8ae3df628165f73397d1fa"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#aa4f041b85b8ae3df628165f73397d1fa">openage::util::constexpr_::has_prefix</a></div><div class="ttdeci">constexpr bool has_prefix(const char *str, const truncated_string_literal prefix)</div><div class="ttdoc">Tests whether a string literal starts with the given prefix.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00082">constexpr.h:82</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdoc">str(value);</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a7bc24bcb83bbac7bbf75686a8331cd21"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a7bc24bcb83bbac7bbf75686a8331cd21">openage::util::constexpr_::streq</a></div><div class="ttdeci">constexpr bool streq(const char *a, const char *b)</div><div class="ttdoc">Returns true IFF the string literals have equal content.</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00017">constexpr.h:17</a></div></div>
<div class="ttc" id="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal_xhtml_a8377276ec3801cd8a5bc89f72ac5c590"><div class="ttname"><a href="structopenage_1_1util_1_1constexpr___1_1truncated__string__literal.xhtml#a8377276ec3801cd8a5bc89f72ac5c590">openage::util::constexpr_::truncated_string_literal::length</a></div><div class="ttdeci">size_t length</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00050">constexpr.h:50</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="constexpr_8h.xhtml">constexpr.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
