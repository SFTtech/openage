<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/terrain/terrain_outline.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('terrain__outline_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">terrain_outline.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="terrain__outline_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2014-2015 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="math_8h.xhtml">math.h</a>&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;../texture.h&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="terrain__outline_8h.xhtml">terrain_outline.h</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="namespaceopenage.xhtml#a8f7c4c46ae7b03cd0cc8ceae47ae7139">   12</a></span>&#160;std::shared_ptr&lt;Texture&gt; <a class="code" href="namespaceopenage.xhtml#a8f7c4c46ae7b03cd0cc8ceae47ae7139">square_outline</a>(<a class="code" href="structopenage_1_1coord_1_1tile__delta.xhtml">coord::tile_delta</a> foundation_size) {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="keywordtype">int</span> width = (foundation_size.ne + foundation_size.se) * 48;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordtype">int</span> height = (foundation_size.ne + foundation_size.se) * 24;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keyword">auto</span> image_data = std::make_unique&lt;uint32_t[]&gt;(width * height);</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; width; ++i) {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; height; ++j) {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            <span class="keywordtype">float</span> w_percent = (float) <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">abs</a>(i - (width / 2)) / (<span class="keywordtype">float</span>) (width / 2);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            <span class="keywordtype">float</span> h_percent = (float) <a class="code" href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">abs</a>(j - (height / 2)) / (<span class="keywordtype">float</span>) (height / 2);</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            <span class="comment">// draw line where (w_percent + h_percent) == 1</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            <span class="comment">// line variable is in range 0.0 to 1.0</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;            <span class="keywordtype">float</span> <a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a> = 1.0f - fabs(1.0f - fabs(h_percent + w_percent));</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> inten = 255 * pow(<a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a>, 16 * width/96);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            image_data[i + j * width] = (inten &lt;&lt; 24) | (inten &lt;&lt; 16) | (inten &lt;&lt; 8) | inten;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">return</span> std::make_shared&lt;Texture&gt;(width, height, <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(image_data));</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="namespaceopenage.xhtml#ae2e68c0049a3b6c5671c8006c6a74f84">   33</a></span>&#160;std::shared_ptr&lt;Texture&gt; <a class="code" href="namespaceopenage.xhtml#ae2e68c0049a3b6c5671c8006c6a74f84">radial_outline</a>(<span class="keywordtype">float</span> radius) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// additional pixels around the edge</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">int</span> border = 4;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// image size</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordtype">int</span> width = border + radius * 96 * 2;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordtype">int</span> height = border + radius * 48 * 2;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordtype">int</span> half_width = width / 2;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordtype">int</span> half_height = height / 2;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">auto</span> image_data = std::make_unique&lt;uint32_t[]&gt;(width * height);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; width; ++i) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> j = 0; j &lt; height; ++j) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordtype">float</span> w_percent = (float) (border+i-half_width) / (float) (half_width-border);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;            <span class="keywordtype">float</span> h_percent = (float) (border/2+j-half_height) / (float) (half_height-border/2);</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <span class="comment">// line drawn where distance to image center == 1</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="comment">// line variable is in range 0.0 to 1.0</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <span class="keywordtype">float</span> <a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a> = 1.0f - fabs(1.0f - <a class="code" href="namespacestd.xhtml#a8058d6b15a78f7a977945ee4d62de903">std::hypot</a>(w_percent, h_percent));</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> inten = 255 * pow(<a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a>, 32 * width/96);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            image_data[i + j * width] = (inten &lt;&lt; 24) | (inten &lt;&lt; 16) | (inten &lt;&lt; 8) | inten;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordflow">return</span> std::make_shared&lt;Texture&gt;(width, height, <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(image_data));</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;} <span class="comment">// namespace openage</span></div><div class="ttc" id="math_8h_xhtml"><div class="ttname"><a href="math_8h.xhtml">math.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="terrain__outline_8h_xhtml"><div class="ttname"><a href="terrain__outline_8h.xhtml">terrain_outline.h</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a6af851cc1249a970adde4dc422ff824a"><div class="ttname"><a href="namespacestd.xhtml#a6af851cc1249a970adde4dc422ff824a">std::abs</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; abs(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00491">fixed_point.h:491</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_ae2e68c0049a3b6c5671c8006c6a74f84"><div class="ttname"><a href="namespaceopenage.xhtml#ae2e68c0049a3b6c5671c8006c6a74f84">openage::radial_outline</a></div><div class="ttdeci">std::shared_ptr&lt; Texture &gt; radial_outline(float radius)</div><div class="ttdef"><b>Definition:</b> <a href="terrain__outline_8cpp_source.xhtml#l00033">terrain_outline.cpp:33</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a8f7c4c46ae7b03cd0cc8ceae47ae7139"><div class="ttname"><a href="namespaceopenage.xhtml#a8f7c4c46ae7b03cd0cc8ceae47ae7139">openage::square_outline</a></div><div class="ttdeci">std::shared_ptr&lt; Texture &gt; square_outline(coord::tile_delta foundation_size)</div><div class="ttdef"><b>Definition:</b> <a href="terrain__outline_8cpp_source.xhtml#l00012">terrain_outline.cpp:12</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a8058d6b15a78f7a977945ee4d62de903"><div class="ttname"><a href="namespacestd.xhtml#a8058d6b15a78f7a977945ee4d62de903">std::hypot</a></div><div class="ttdeci">constexpr double hypot(openage::util::FixedPoint&lt; I, F &gt; x, openage::util::FixedPoint&lt; I, F &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00498">fixed_point.h:498</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474"><div class="ttname"><a href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">openage::attack_formation::line</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="structopenage_1_1coord_1_1tile__delta_xhtml"><div class="ttname"><a href="structopenage_1_1coord_1_1tile__delta.xhtml">openage::coord::tile_delta</a></div><div class="ttdef"><b>Definition:</b> <a href="tile_8h_source.xhtml#l00025">tile.h:25</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_5ffefd0c1f0e77d7f24c1701d3d706c9.xhtml">terrain</a></li><li class="navelem"><a class="el" href="terrain__outline_8cpp.xhtml">terrain_outline.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
