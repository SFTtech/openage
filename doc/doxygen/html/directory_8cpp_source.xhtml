<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/util/fslike/directory.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('directory_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">directory.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="directory_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2017-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="directory_8h.xhtml">directory.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// HACK: windows.h defines max and min as macros. This results in compile errors.</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// defining `NOMINMAX` disables the definition of those macros.</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#define NOMINMAX</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;cstdio&gt;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;dirent.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;iostream&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;sys/stat.h&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;sys/types.h&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#ifdef __APPLE__</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;sys/time.h&gt;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#ifdef _WIN32</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;direct.h&gt;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;io.h&gt;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;sys/utime.h&gt;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">// HACK: What the heck? I want the std::filesystem library!</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define O_NOCTTY 0</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#define O_NONBLOCK 0</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#define W_OK 2</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#else // ! _MSC_VER</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="filelike_2native_8h.xhtml">./native.h</a>&quot;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#include &quot;../file.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#include &quot;../filelike/native.h&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#include &quot;../misc.h&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &quot;../path.h&quot;</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1fslike.xhtml">   42</a></span>&#160;<span class="keyword">namespace </span>fslike {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2bef103b4ee6cf8dda2c55ada35ae060">   45</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2bef103b4ee6cf8dda2c55ada35ae060">Directory::Directory</a>(<span class="keyword">const</span> std::string &amp;basepath, <span class="keywordtype">bool</span> create_if_missing)</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    :</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    basepath{<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5f0417c9e573584edfedfe386f05c2f">basepath</a>} {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">if</span> (create_if_missing) {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        this-&gt;mkdirs({});</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">// We don&#39;t need a resolve_r and resolve_w here!</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="comment">// If the underlying fslike system is a Directory (i.e. this.)</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">// then we don&#39;t have any overlay possibility!</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="comment">// -&gt; Always resolve just the real system filename.</span></div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">   59</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">Directory::resolve</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts)<span class="keyword"> const </span>{</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    std::string ret = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5f0417c9e573584edfedfe386f05c2f">basepath</a>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;part : parts) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        ret += <a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">PATHSEP</a> + part;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="comment">// TODO: use std::optional when available</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">   69</a></span>&#160;std::tuple&lt;struct stat, int&gt; <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">Directory::do_stat</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts)<span class="keyword"> const </span>{</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">const</span> std::string path = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">struct </span>stat buf;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = stat(path.c_str(), &amp;buf);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> std::make_tuple(buf, <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a36e4b63f3b31b1de2370ebe081484159">   78</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a36e4b63f3b31b1de2370ebe081484159">Directory::is_file</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">auto</span> stat_result = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">do_stat</a>(parts);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// test for regular file</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">if</span> (std::get&lt;1&gt;(stat_result) == 0 and</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        S_ISREG(std::get&lt;0&gt;(stat_result).st_mode)) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5dced8dddac80ad98b3804a64a36af0">   91</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5dced8dddac80ad98b3804a64a36af0">Directory::is_dir</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> stat_result = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">do_stat</a>(parts);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="comment">// test for regular file</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">if</span> (std::get&lt;1&gt;(stat_result) == 0 and</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        S_ISDIR(std::get&lt;0&gt;(stat_result).st_mode)) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa05f20e2d1e377421774d2360d54d237">  104</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa05f20e2d1e377421774d2360d54d237">Directory::writable</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> parts_test = parts;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// try to find the first existing path-part</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">while</span> (not (this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5dced8dddac80ad98b3804a64a36af0">is_dir</a>(parts_test) or</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a36e4b63f3b31b1de2370ebe081484159">is_file</a>(parts_test))) {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">if</span> (parts_test.size() == 0) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;file not found&quot;</span>};</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        parts_test.pop_back();</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keyword">const</span> std::string path = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts_test);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> access(path.c_str(), W_OK);</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a34049b9a977a33a7173bb90ab96df65f">  123</a></span>&#160;std::vector&lt;Path::part_t&gt; <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a34049b9a977a33a7173bb90ab96df65f">Directory::list</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">const</span> std::string path = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts);</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    std::vector&lt;Path::part_t&gt; ret;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    DIR *dir;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">struct </span>dirent *ent;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    dir = opendir(path.c_str());</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (dir == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;could not list contents of &#39;&quot;</span> &lt;&lt; path &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span>);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// walk over dir contents</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">while</span> ((ent = readdir(dir)) != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        ret.push_back(ent-&gt;d_name);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    closedir(dir);</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a441128dffdf9ebc274a4c1c5461ed05a">  148</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a441128dffdf9ebc274a4c1c5461ed05a">Directory::mkdirs</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> all_parts = <a class="code" href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">util::split</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5f0417c9e573584edfedfe386f05c2f">basepath</a>, <a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">PATHSEP</a>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <a class="code" href="namespaceopenage_1_1util.xhtml#af88424f642ef1ba4e6b2eb1c05ad8e3c">vector_extend</a>(all_parts, parts);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    std::string dirpath;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;part : all_parts) {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        dirpath += <a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">PATHSEP</a> + part;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keyword">struct </span>stat buf;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="comment">// it it exists already, try creating the next one</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keywordflow">if</span> (stat(dirpath.c_str(), &amp;buf) == 0 and</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            S_ISDIR(buf.st_mode)) {</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="comment">// create the folder, umask will turn it to 755.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordtype">bool</span> dir_created = _mkdir(dirpath.c_str()) == 0;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="preprocessor">#elif __MINGW32__</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordtype">bool</span> dir_created = mkdir(dirpath.c_str()) == 0;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordtype">bool</span> dir_created = mkdir(dirpath.c_str(), 0777) == 0;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">if</span> (not dir_created) {</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        }</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;</div><div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a85129377f5f8b133c45ea585b42b6e4e">  185</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a85129377f5f8b133c45ea585b42b6e4e">Directory::open_r</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a>{</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        std::make_shared&lt;filelike::Native&gt;(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts),</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                                           <a class="code" href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1ae1e1d3d40573127e9ee0480caf1283d6">filelike::Native::mode_t::R</a>)</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    };</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a30009d2a2d94139e2688d07b5df1de8a">  193</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a30009d2a2d94139e2688d07b5df1de8a">Directory::open_w</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a>{</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        std::make_shared&lt;filelike::Native&gt;(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts),</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                                           <a class="code" href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a61e9c06ea9a85a5088a499df6458d276">filelike::Native::mode_t::W</a>)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    };</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5decb9af0d2373df3a4c6acade814e3">  201</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5decb9af0d2373df3a4c6acade814e3">Directory::open_rw</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a>{</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        std::make_shared&lt;filelike::Native&gt;(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts),</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;                                           <a class="code" href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a5c6dc3d436504b7a65191cafe28212ee">filelike::Native::mode_t::RW</a>)</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    };</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac4207abf1b91ac361bba198c58709555">  209</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac4207abf1b91ac361bba198c58709555">Directory::open_a</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a>{</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        std::make_shared&lt;filelike::Native&gt;(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts),</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;                                           <a class="code" href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a7fc56270e7a70fa81a5935b72eacbe29">filelike::Native::mode_t::A</a>)</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    };</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;}</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#af22803a261b1e56ddf1b3046f34c4914">  217</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#af22803a261b1e56ddf1b3046f34c4914">Directory::open_ar</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a>{</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        std::make_shared&lt;filelike::Native&gt;(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts),</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;                                           <a class="code" href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a5b61a1b298a0d06efa6933a97e68d763">filelike::Native::mode_t::AR</a>)</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    };</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa1f011f4012ff1e02ecfdd5df30b7e84">  225</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa1f011f4012ff1e02ecfdd5df30b7e84">Directory::get_native_path</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad63db9e7e3a5f49a93f47d7904f2de33">  230</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad63db9e7e3a5f49a93f47d7904f2de33">Directory::rename</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts,</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;                       <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;target_parts) {</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keywordflow">return</span> std::rename(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts).c_str(),</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;                       this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(target_parts).c_str()) == 0;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad25337a6884cc2a497b1f142e4f01225">  238</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad25337a6884cc2a497b1f142e4f01225">Directory::rmdir</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;    return ::rmdir(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts).c_str()) == 0;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;}</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5d2482157fe89058a2a763141c4d9e9">  243</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5d2482157fe89058a2a763141c4d9e9">Directory::touch</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keyword">const</span> std::string path = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts);</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="comment">// create the file if missing</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordtype">int</span> fd = open(</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        path.c_str(),</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        O_WRONLY|O_CREAT|O_NOCTTY|O_NONBLOCK,</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        0666</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    );</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span> (fd &lt; 0) {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    close(fd);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment">// update the timestamp</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">#ifdef __APPLE__</span></div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = utimes(path.c_str(), <span class="keyword">nullptr</span>) == 0;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor">#elif defined _WIN32</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = _utime(path.c_str(), <span class="keyword">nullptr</span>) == 0;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = utimensat(AT_FDCWD, path.c_str(), <span class="keyword">nullptr</span>, 0) == 0;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aea004e3d87864f6f13e2c5d79fc67d2e">  272</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aea004e3d87864f6f13e2c5d79fc67d2e">Directory::unlink</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">return</span> std::remove(this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">resolve</a>(parts).c_str()) == 0;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a4edc467134f448398dbe7cf5ad4dcc11">  277</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a4edc467134f448398dbe7cf5ad4dcc11">Directory::get_mtime</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="keyword">auto</span> stat_result = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">do_stat</a>(parts);</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    <span class="comment">// return the mtime</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">if</span> (std::get&lt;1&gt;(stat_result) == 0) {</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor">#ifdef __APPLE__</span></div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(stat_result).st_mtimespec.tv_sec;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#elif defined _WIN32</span></div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(stat_result).st_mtime;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(stat_result).st_mtim.tv_sec;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;can&#39;t get mtime&quot;</span>};</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a071636c64e89976aaa350083c66b6a4a">  295</a></span>&#160;uint64_t <a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a071636c64e89976aaa350083c66b6a4a">Directory::get_filesize</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;parts) {</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">auto</span> stat_result = this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">do_stat</a>(parts);</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// return the mtime</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    <span class="keywordflow">if</span> (std::get&lt;1&gt;(stat_result) == 0) {</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <span class="keywordflow">return</span> std::get&lt;0&gt;(stat_result).st_size;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    }</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;can&#39;t get filesize&quot;</span>};</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aae57b59ff2e61cbb96d44ffe58f1f72b">  307</a></span>&#160;std::ostream &amp;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aae57b59ff2e61cbb96d44ffe58f1f72b">Directory::repr</a>(std::ostream &amp;stream) {</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    stream &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5f0417c9e573584edfedfe386f05c2f">basepath</a>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}}} <span class="comment">// openage::util::fslike</span></div><div class="ttc" id="classopenage_1_1util_1_1filelike_1_1_file_like_xhtml_ab68557b264011908164b43b32a9f00b1a5c6dc3d436504b7a65191cafe28212ee"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a5c6dc3d436504b7a65191cafe28212ee">openage::util::filelike::FileLike::mode_t::RW</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a7dab02972c0d0fa8ef5b3fd387966855"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a7dab02972c0d0fa8ef5b3fd387966855">openage::util::fslike::Directory::resolve</a></div><div class="ttdeci">std::string resolve(const Path::parts_t &amp;parts) const</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00059">directory.cpp:59</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a30009d2a2d94139e2688d07b5df1de8a"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a30009d2a2d94139e2688d07b5df1de8a">openage::util::fslike::Directory::open_w</a></div><div class="ttdeci">File open_w(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00193">directory.cpp:193</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a2bef103b4ee6cf8dda2c55ada35ae060"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2bef103b4ee6cf8dda2c55ada35ae060">openage::util::fslike::Directory::Directory</a></div><div class="ttdeci">Directory(const std::string &amp;basepath, bool create_if_missing=false)</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00045">directory.cpp:45</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_af74fec80080f6c627e5539bb20493ba0"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ab5d2482157fe89058a2a763141c4d9e9"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5d2482157fe89058a2a763141c4d9e9">openage::util::fslike::Directory::touch</a></div><div class="ttdeci">bool touch(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00243">directory.cpp:243</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1_file_like_xhtml_ab68557b264011908164b43b32a9f00b1ae1e1d3d40573127e9ee0480caf1283d6"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1ae1e1d3d40573127e9ee0480caf1283d6">openage::util::filelike::FileLike::mode_t::R</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ad25337a6884cc2a497b1f142e4f01225"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad25337a6884cc2a497b1f142e4f01225">openage::util::fslike::Directory::rmdir</a></div><div class="ttdeci">bool rmdir(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00238">directory.cpp:238</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ac5f0417c9e573584edfedfe386f05c2f"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5f0417c9e573584edfedfe386f05c2f">openage::util::fslike::Directory::basepath</a></div><div class="ttdeci">std::string basepath</div><div class="ttdef"><b>Definition:</b> <a href="directory_8h_source.xhtml#l00060">directory.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_file_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_file.xhtml">openage::util::File</a></div><div class="ttdef"><b>Definition:</b> <a href="file_8h_source.xhtml#l00039">file.h:39</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a85129377f5f8b133c45ea585b42b6e4e"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a85129377f5f8b133c45ea585b42b6e4e">openage::util::fslike::Directory::open_r</a></div><div class="ttdeci">File open_r(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00185">directory.cpp:185</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a4edc467134f448398dbe7cf5ad4dcc11"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a4edc467134f448398dbe7cf5ad4dcc11">openage::util::fslike::Directory::get_mtime</a></div><div class="ttdeci">int get_mtime(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00277">directory.cpp:277</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ad63db9e7e3a5f49a93f47d7904f2de33"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ad63db9e7e3a5f49a93f47d7904f2de33">openage::util::fslike::Directory::rename</a></div><div class="ttdeci">bool rename(const Path::parts_t &amp;parts, const Path::parts_t &amp;target_parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00230">directory.cpp:230</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1_file_like_xhtml_ab68557b264011908164b43b32a9f00b1a7fc56270e7a70fa81a5935b72eacbe29"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a7fc56270e7a70fa81a5935b72eacbe29">openage::util::filelike::FileLike::mode_t::A</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="directory_8h_xhtml"><div class="ttname"><a href="directory_8h.xhtml">directory.h</a></div></div>
<div class="ttc" id="filelike_2native_8h_xhtml"><div class="ttname"><a href="filelike_2native_8h.xhtml">native.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a071636c64e89976aaa350083c66b6a4a"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a071636c64e89976aaa350083c66b6a4a">openage::util::fslike::Directory::get_filesize</a></div><div class="ttdeci">uint64_t get_filesize(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00295">directory.cpp:295</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_aa05f20e2d1e377421774d2360d54d237"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa05f20e2d1e377421774d2360d54d237">openage::util::fslike::Directory::writable</a></div><div class="ttdeci">bool writable(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00104">directory.cpp:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_af22803a261b1e56ddf1b3046f34c4914"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#af22803a261b1e56ddf1b3046f34c4914">openage::util::fslike::Directory::open_ar</a></div><div class="ttdeci">File open_ar(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00217">directory.cpp:217</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_af88424f642ef1ba4e6b2eb1c05ad8e3c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af88424f642ef1ba4e6b2eb1c05ad8e3c">openage::util::vector_extend</a></div><div class="ttdeci">void vector_extend(std::vector&lt; T &gt; &amp;vec, const std::vector&lt; T &gt; &amp;ext)</div><div class="ttdef"><b>Definition:</b> <a href="misc_8h_source.xhtml#l00239">misc.h:239</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_aa1f011f4012ff1e02ecfdd5df30b7e84"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aa1f011f4012ff1e02ecfdd5df30b7e84">openage::util::fslike::Directory::get_native_path</a></div><div class="ttdeci">std::string get_native_path(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00225">directory.cpp:225</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a45bb33ddb21332a423a5788fc9ee8462"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">openage::util::Path::parts_t</a></div><div class="ttdeci">std::vector&lt; part_t &gt; parts_t</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00059">path.h:59</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a34049b9a977a33a7173bb90ab96df65f"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a34049b9a977a33a7173bb90ab96df65f">openage::util::fslike::Directory::list</a></div><div class="ttdeci">std::vector&lt; Path::part_t &gt; list(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00123">directory.cpp:123</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ac4207abf1b91ac361bba198c58709555"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac4207abf1b91ac361bba198c58709555">openage::util::fslike::Directory::open_a</a></div><div class="ttdeci">File open_a(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00209">directory.cpp:209</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ac5dced8dddac80ad98b3804a64a36af0"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ac5dced8dddac80ad98b3804a64a36af0">openage::util::fslike::Directory::is_dir</a></div><div class="ttdeci">bool is_dir(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00091">directory.cpp:91</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_aae57b59ff2e61cbb96d44ffe58f1f72b"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aae57b59ff2e61cbb96d44ffe58f1f72b">openage::util::fslike::Directory::repr</a></div><div class="ttdeci">std::ostream &amp; repr(std::ostream &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00307">directory.cpp:307</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_ab5decb9af0d2373df3a4c6acade814e3"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#ab5decb9af0d2373df3a4c6acade814e3">openage::util::fslike::Directory::open_rw</a></div><div class="ttdeci">File open_rw(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00201">directory.cpp:201</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a2c5d51674da6c9c62ae8753f3a8a6cd0"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a2c5d51674da6c9c62ae8753f3a8a6cd0">openage::util::fslike::Directory::do_stat</a></div><div class="ttdeci">std::tuple&lt; struct stat, int &gt; do_stat(const Path::parts_t &amp;parts) const</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00069">directory.cpp:69</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a36e4b63f3b31b1de2370ebe081484159"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a36e4b63f3b31b1de2370ebe081484159">openage::util::fslike::Directory::is_file</a></div><div class="ttdeci">bool is_file(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00078">directory.cpp:78</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_aea004e3d87864f6f13e2c5d79fc67d2e"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#aea004e3d87864f6f13e2c5d79fc67d2e">openage::util::fslike::Directory::unlink</a></div><div class="ttdeci">bool unlink(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00272">directory.cpp:272</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1_file_like_xhtml_ab68557b264011908164b43b32a9f00b1a5b61a1b298a0d06efa6933a97e68d763"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a5b61a1b298a0d06efa6933a97e68d763">openage::util::filelike::FileLike::mode_t::AR</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_directory_xhtml_a441128dffdf9ebc274a4c1c5461ed05a"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_directory.xhtml#a441128dffdf9ebc274a4c1c5461ed05a">openage::util::fslike::Directory::mkdirs</a></div><div class="ttdeci">bool mkdirs(const Path::parts_t &amp;parts) override</div><div class="ttdef"><b>Definition:</b> <a href="directory_8cpp_source.xhtml#l00148">directory.cpp:148</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_xhtml_a670007c84e8b0cf3c4f0dfd74e0f6399"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">openage::util::fslike::PATHSEP</a></div><div class="ttdeci">constexpr char PATHSEP</div><div class="ttdef"><b>Definition:</b> <a href="fslike_2native_8h_source.xhtml#l00013">native.h:13</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1_file_like_xhtml_ab68557b264011908164b43b32a9f00b1a61e9c06ea9a85a5088a499df6458d276"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1_file_like.xhtml#ab68557b264011908164b43b32a9f00b1a61e9c06ea9a85a5088a499df6458d276">openage::util::filelike::FileLike::mode_t::W</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="dir_41e3defe94721b47a761b9a8863212b0.xhtml">fslike</a></li><li class="navelem"><a class="el" href="directory_8cpp.xhtml">directory.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
