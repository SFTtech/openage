<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/testing/testing.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('testing_8h.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">testing.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="error_2error_8h_source.xhtml">../error/error.h</a>&quot;</code><br />
</div><div class="textblock"><div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Include dependency graph for testing.h:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="testing_8h__incl.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</div><div class="textblock"><div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> This graph shows which files directly or indirectly include this file:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="testing_8h__dep__incl.svg" width="100%" height="428"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
</div>
<p><a href="testing_8h_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1testing_1_1_test_error.xhtml">openage::testing::TestError</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">To be used by all tests to indicate an error condition.  <a href="classopenage_1_1testing_1_1_test_error.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespaceopenage"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage.xhtml">openage</a></td></tr>
<tr class="memdesc:namespaceopenage"><td class="mdescLeft">&#160;</td><td class="mdescRight">This file contains forward declarations for all the coordinate types, as well as their scalar types. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:namespaceopenage_1_1testing"><td class="memItemLeft" align="right" valign="top"> &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1testing.xhtml">openage::testing</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:a32253726c81e858197f39fbf0b56d17c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>&#160;&#160;&#160;::<a class="el" href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">openage::testing::fail</a>(<a class="el" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(err))</td></tr>
<tr class="memdesc:a32253726c81e858197f39fbf0b56d17c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience macro, for usage in test functions:  <a href="#a32253726c81e858197f39fbf0b56d17c">More...</a><br /></td></tr>
<tr class="separator:a32253726c81e858197f39fbf0b56d17c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8845e8951e253b5e94ada5be1e308503"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#a8845e8951e253b5e94ada5be1e308503">TESTFAILMSG</a>(...)&#160;&#160;&#160;::<a class="el" href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">openage::testing::fail</a>(<a class="el" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(err) &lt;&lt; __VA_ARGS__)</td></tr>
<tr class="memdesc:a8845e8951e253b5e94ada5be1e308503"><td class="mdescLeft">&#160;</td><td class="mdescRight">As above, but allows printing a message:  <a href="#a8845e8951e253b5e94ada5be1e308503">More...</a><br /></td></tr>
<tr class="separator:a8845e8951e253b5e94ada5be1e308503"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57b089ad5d574fad716e3b140c80d0e5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(left,  right)</td></tr>
<tr class="memdesc:a57b089ad5d574fad716e3b140c80d0e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that the left expression equals the right expression, and that no exception is thrown.  <a href="#a57b089ad5d574fad716e3b140c80d0e5">More...</a><br /></td></tr>
<tr class="separator:a57b089ad5d574fad716e3b140c80d0e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae531a534fa7f4028ddf113ae72caa6aa"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(left,  right,  epsilon)</td></tr>
<tr class="memdesc:ae531a534fa7f4028ddf113ae72caa6aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that the left expression equals the right expression, within a margin of error epsilon, and that no exception is thrown.  <a href="#ae531a534fa7f4028ddf113ae72caa6aa">More...</a><br /></td></tr>
<tr class="separator:ae531a534fa7f4028ddf113ae72caa6aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3ad66a2f3c40aa0744570ab803b903f"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(expression)</td></tr>
<tr class="memdesc:ad3ad66a2f3c40aa0744570ab803b903f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Asserts that the expression throws an exception.  <a href="#ad3ad66a2f3c40aa0744570ab803b903f">More...</a><br /></td></tr>
<tr class="separator:ad3ad66a2f3c40aa0744570ab803b903f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83874b641b589d0a696a6a1a6f8e9fd5"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(expression)</td></tr>
<tr class="memdesc:a83874b641b589d0a696a6a1a6f8e9fd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assets that the expression throws no exception (mostly for void expressions).  <a href="#a83874b641b589d0a696a6a1a6f8e9fd5">More...</a><br /></td></tr>
<tr class="separator:a83874b641b589d0a696a6a1a6f8e9fd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ab47bedd0a44345aab4aadb8378800e45"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">openage::testing::fail</a> (const log::message &amp;msg)</td></tr>
<tr class="memdesc:ab47bedd0a44345aab4aadb8378800e45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Raises <a class="el" href="classopenage_1_1testing_1_1_test_error.xhtml" title="To be used by all tests to indicate an error condition.">TestError</a> with the message msg.  <a href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">More...</a><br /></td></tr>
<tr class="separator:ab47bedd0a44345aab4aadb8378800e45"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a id="a57b089ad5d574fad716e3b140c80d0e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57b089ad5d574fad716e3b140c80d0e5">&#9670;&nbsp;</a></span>TESTEQUALS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTEQUALS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">left, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">right&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> { \</div><div class="line">        try { \</div><div class="line">            auto &amp;&amp;test_result_left = (left); \</div><div class="line">            if (test_result_left != (right)) { \</div><div class="line">                TESTFAILMSG(<span class="stringliteral">&quot;unexpected value: &quot;</span> &lt;&lt; (test_result_left)); \</div><div class="line">            } \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1testing_1_1_test_error.xhtml">openage::testing::TestError</a> &amp;e) { \</div><div class="line">            throw; \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a> &amp;e) { \</div><div class="line">            TESTFAILMSG(<span class="stringliteral">&quot;unexpected exception: &quot;</span> &lt;&lt; e); \</div><div class="line">        } \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1testing_1_1_test_error_xhtml"><div class="ttname"><a href="classopenage_1_1testing_1_1_test_error.xhtml">openage::testing::TestError</a></div><div class="ttdoc">To be used by all tests to indicate an error condition.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00017">testing.h:17</a></div></div>
</div><!-- fragment -->
<p>Asserts that the left expression equals the right expression, and that no exception is thrown. </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00049">49</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
<a id="ae531a534fa7f4028ddf113ae72caa6aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae531a534fa7f4028ddf113ae72caa6aa">&#9670;&nbsp;</a></span>TESTEQUALS_FLOAT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTEQUALS_FLOAT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">left, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">right, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">epsilon&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> { \</div><div class="line">        try { \</div><div class="line">            auto &amp;&amp;test_result_left = (left); \</div><div class="line">            if ((test_result_left &lt; (right - epsilon)) or \</div><div class="line">                (test_result_left &gt; (right + epsilon))) { \</div><div class="line">                TESTFAILMSG(<span class="stringliteral">&quot;unexpected value: &quot;</span> &lt;&lt; (test_result_left)); \</div><div class="line">            } \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1testing_1_1_test_error.xhtml">openage::testing::TestError</a> &amp;e) { \</div><div class="line">            throw; \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a> &amp;e) { \</div><div class="line">            TESTFAILMSG(<span class="stringliteral">&quot;unexpected exception: &quot;</span> &lt;&lt; e); \</div><div class="line">        } \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1testing_1_1_test_error_xhtml"><div class="ttname"><a href="classopenage_1_1testing_1_1_test_error.xhtml">openage::testing::TestError</a></div><div class="ttdoc">To be used by all tests to indicate an error condition.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00017">testing.h:17</a></div></div>
</div><!-- fragment -->
<p>Asserts that the left expression equals the right expression, within a margin of error epsilon, and that no exception is thrown. </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00068">68</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
<a id="a32253726c81e858197f39fbf0b56d17c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32253726c81e858197f39fbf0b56d17c">&#9670;&nbsp;</a></span>TESTFAIL</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTFAIL&#160;&#160;&#160;::<a class="el" href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">openage::testing::fail</a>(<a class="el" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(err))</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Convenience macro, for usage in test functions: </p>
<p>test_stuff() or TESTFAIL; </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00034">34</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
<a id="a8845e8951e253b5e94ada5be1e308503"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8845e8951e253b5e94ada5be1e308503">&#9670;&nbsp;</a></span>TESTFAILMSG</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTFAILMSG</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td>&#160;&#160;&#160;::<a class="el" href="namespaceopenage_1_1testing.xhtml#ab47bedd0a44345aab4aadb8378800e45">openage::testing::fail</a>(<a class="el" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(err) &lt;&lt; __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>As above, but allows printing a message: </p>
<p>test_stuff() or TESTFAIL("lolnope"); </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00042">42</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
<a id="a83874b641b589d0a696a6a1a6f8e9fd5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83874b641b589d0a696a6a1a6f8e9fd5">&#9670;&nbsp;</a></span>TESTNOEXCEPT</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTNOEXCEPT</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">expression</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> { \</div><div class="line">        try { \</div><div class="line">            expression; \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a> &amp;e) { \</div><div class="line">            TESTFAILMSG(<span class="stringliteral">&quot;unexpected exception&quot;</span>); \</div><div class="line">        } \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
</div><!-- fragment -->
<p>Assets that the expression throws no exception (mostly for void expressions). </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00104">104</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
<a id="ad3ad66a2f3c40aa0744570ab803b903f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3ad66a2f3c40aa0744570ab803b903f">&#9670;&nbsp;</a></span>TESTTHROWS</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TESTTHROWS</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">expression</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Value:</b><div class="fragment"><div class="line"><span class="keywordflow">do</span> { \</div><div class="line">        bool expr_has_thrown = <span class="keyword">false</span>; \</div><div class="line">        try { \</div><div class="line">            expression; \</div><div class="line">        } <span class="keywordflow">catch</span> (::<a class="code" href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a> &amp;e) { \</div><div class="line">            expr_has_thrown = <span class="keyword">true</span>; \</div><div class="line">        } \</div><div class="line">        if (not expr_has_thrown) { \</div><div class="line">            TESTFAILMSG(<span class="stringliteral">&quot;no exception&quot;</span>); \</div><div class="line">        } \</div><div class="line">    } <span class="keywordflow">while</span> (0)</div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
</div><!-- fragment -->
<p>Asserts that the expression throws an exception. </p>

<p class="definition">Definition at line <a class="el" href="testing_8h_source.xhtml#l00087">87</a> of file <a class="el" href="testing_8h_source.xhtml">testing.h</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_453470d189f22e6c466bdeb48be1c767.xhtml">testing</a></li><li class="navelem"><a class="el" href="testing_8h.xhtml">testing.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
