<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::job::tests Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1job_1_1tests.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">openage::job::tests Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:abca5d5e032e3cdbbe7176fde710f7abd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1job_1_1tests.xhtml#abca5d5e032e3cdbbe7176fde710f7abd">test_simple_job</a> ()</td></tr>
<tr class="separator:abca5d5e032e3cdbbe7176fde710f7abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e15fa28b3f67065f69fb17a569e4ecc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1job_1_1tests.xhtml#a9e15fa28b3f67065f69fb17a569e4ecc">test_simple_job_with_exception</a> ()</td></tr>
<tr class="separator:a9e15fa28b3f67065f69fb17a569e4ecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af342bd56aa228b49c1a6867982aca505"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1job_1_1tests.xhtml#af342bd56aa228b49c1a6867982aca505">test_job_manager</a> ()</td></tr>
<tr class="separator:af342bd56aa228b49c1a6867982aca505"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="af342bd56aa228b49c1a6867982aca505"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af342bd56aa228b49c1a6867982aca505">&#9670;&nbsp;</a></span>test_job_manager()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::tests::test_job_manager </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="job_2tests_8cpp_source.xhtml#l00093">93</a> of file <a class="el" href="job_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;                        {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="namespaceopenage_1_1job_1_1tests.xhtml#abca5d5e032e3cdbbe7176fde710f7abd">test_simple_job</a>();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="namespaceopenage_1_1job_1_1tests.xhtml#a9e15fa28b3f67065f69fb17a569e4ecc">test_simple_job_with_exception</a>();</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div><div class="ttc" id="namespaceopenage_1_1job_1_1tests_xhtml_abca5d5e032e3cdbbe7176fde710f7abd"><div class="ttname"><a href="namespaceopenage_1_1job_1_1tests.xhtml#abca5d5e032e3cdbbe7176fde710f7abd">openage::job::tests::test_simple_job</a></div><div class="ttdeci">void test_simple_job()</div><div class="ttdef"><b>Definition:</b> <a href="job_2tests_8cpp_source.xhtml#l00015">tests.cpp:15</a></div></div>
<div class="ttc" id="namespaceopenage_1_1job_1_1tests_xhtml_a9e15fa28b3f67065f69fb17a569e4ecc"><div class="ttname"><a href="namespaceopenage_1_1job_1_1tests.xhtml#a9e15fa28b3f67065f69fb17a569e4ecc">openage::job::tests::test_simple_job_with_exception</a></div><div class="ttdeci">void test_simple_job_with_exception()</div><div class="ttdef"><b>Definition:</b> <a href="job_2tests_8cpp_source.xhtml#l00049">tests.cpp:49</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job_2tests_8cpp_source.xhtml#l00015">test_simple_job()</a>, and <a class="el" href="job_2tests_8cpp_source.xhtml#l00049">test_simple_job_with_exception()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1job_1_1tests_af342bd56aa228b49c1a6867982aca505_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="abca5d5e032e3cdbbe7176fde710f7abd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abca5d5e032e3cdbbe7176fde710f7abd">&#9670;&nbsp;</a></span>test_simple_job()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::tests::test_simple_job </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="job_2tests_8cpp_source.xhtml#l00015">15</a> of file <a class="el" href="job_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;                       {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    JobManager manager{4};</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    manager.start();</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    std::atomic&lt;int&gt; finish_count(0);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordtype">int</span> job_count = 1337;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">auto</span> job_function = []() -&gt; <span class="keywordtype">int</span> {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">return</span> 42;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    };</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">auto</span> job_callback = [&amp;](result_function_t&lt;int&gt; get_result) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordtype">int</span> job_result = get_result();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">if</span> (job_result == 42) {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        finish_count++;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    };</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; job_count; i++) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        manager.enqueue&lt;<span class="keywordtype">int</span>&gt;(job_function, job_callback);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">while</span> (finish_count.load() &lt; job_count) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        manager.execute_callbacks();</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    manager.stop();</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>, <a class="el" href="job__manager_8cpp_source.xhtml#l00031">openage::job::JobManager::start()</a>, and <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>.</p>

<p class="reference">Referenced by <a class="el" href="job_2tests_8cpp_source.xhtml#l00093">test_job_manager()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1job_1_1tests_abca5d5e032e3cdbbe7176fde710f7abd_cgraph.svg" width="100%" height="438"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1job_1_1tests_abca5d5e032e3cdbbe7176fde710f7abd_icgraph.svg" width="326" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9e15fa28b3f67065f69fb17a569e4ecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e15fa28b3f67065f69fb17a569e4ecc">&#9670;&nbsp;</a></span>test_simple_job_with_exception()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::job::tests::test_simple_job_with_exception </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="job_2tests_8cpp_source.xhtml#l00049">49</a> of file <a class="el" href="job_2tests_8cpp_source.xhtml">tests.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                                      {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    JobManager manager{4};</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    manager.start();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordtype">int</span> good_jobs = 5;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordtype">int</span> bad_jobs = 5;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    std::atomic&lt;int&gt; finished(0);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    std::atomic&lt;int&gt; errors(0);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keyword">auto</span> exception_job_function = []() -&gt; <span class="keywordtype">int</span> {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keywordflow">throw</span> <span class="stringliteral">&quot;error string&quot;</span>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    };</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">auto</span> job_function = []() -&gt; <span class="keywordtype">int</span> {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">return</span> 42;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    };</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keyword">auto</span> job_callback = [&amp;](result_function_t&lt;int&gt; get_result) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            get_result();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        } <span class="keywordflow">catch</span> (<span class="keyword">const</span> <span class="keywordtype">char</span> *e) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            errors++;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        finished++;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    };</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; good_jobs; i++) {</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        manager.enqueue&lt;<span class="keywordtype">int</span>&gt;(job_function, job_callback);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; bad_jobs; i++) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        manager.enqueue&lt;<span class="keywordtype">int</span>&gt;(exception_job_function, job_callback);</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">while</span> (finished.load() &lt; good_jobs + bad_jobs) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        manager.execute_callbacks();</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    manager.stop();</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    errors.load() == bad_jobs or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="job__manager_8cpp_source.xhtml#l00031">openage::job::JobManager::start()</a>, and <a class="el" href="testing_8h_source.xhtml#l00034">TESTFAIL</a>.</p>

<p class="reference">Referenced by <a class="el" href="job_2tests_8cpp_source.xhtml#l00093">test_job_manager()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1job_1_1tests_a9e15fa28b3f67065f69fb17a569e4ecc_cgraph.svg" width="100%" height="427"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1job_1_1tests_a9e15fa28b3f67065f69fb17a569e4ecc_icgraph.svg" width="343" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1job.xhtml">job</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1job_1_1tests.xhtml">tests</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
