<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::pyinterface::Func&lt; ReturnType, ArgTypes &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1pyinterface_1_1_func.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1pyinterface_1_1_func-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::pyinterface::Func&lt; ReturnType, ArgTypes &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="functional_8h_source.xhtml">functional.h</a>&gt;</code></p>
<div class="dynheader">
Collaboration diagram for openage::pyinterface::Func&lt; ReturnType, ArgTypes &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1pyinterface_1_1_func__coll__graph.svg" width="223" height="279"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9aafa14c1e14d75e4c65258650e2281b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a9aafa14c1e14d75e4c65258650e2281b">Func</a> ()</td></tr>
<tr class="separator:a9aafa14c1e14d75e4c65258650e2281b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a411404c88e1c3a1e94d5491aadcf444b"><td class="memTemplParams" colspan="2">template&lt;typename F &gt; </td></tr>
<tr class="memitem:a411404c88e1c3a1e94d5491aadcf444b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a411404c88e1c3a1e94d5491aadcf444b">Func</a> (F &amp;&amp;f)</td></tr>
<tr class="separator:a411404c88e1c3a1e94d5491aadcf444b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7c97b27e57c92dd099c84d52d19697d"><td class="memTemplParams" colspan="2">template&lt;typename F &gt; </td></tr>
<tr class="memitem:aa7c97b27e57c92dd099c84d52d19697d"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa7c97b27e57c92dd099c84d52d19697d">Func</a> (std::reference_wrapper&lt; F &gt; f)</td></tr>
<tr class="separator:aa7c97b27e57c92dd099c84d52d19697d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81cf56998f2138465da539c140b15443"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a81cf56998f2138465da539c140b15443">Func</a> (const std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;f)</td></tr>
<tr class="separator:a81cf56998f2138465da539c140b15443"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa841aafdf6e5a35761599c6e57188541"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa841aafdf6e5a35761599c6e57188541">Func</a> (std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&amp;f)</td></tr>
<tr class="separator:aa841aafdf6e5a35761599c6e57188541"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29df3bfe5f42965d194fd061e8c38d92"><td class="memTemplParams" colspan="2">template&lt;typename F &gt; </td></tr>
<tr class="memitem:a29df3bfe5f42965d194fd061e8c38d92"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt; ReturnType, ArgTypes ... &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a29df3bfe5f42965d194fd061e8c38d92">operator=</a> (F &amp;&amp;f)</td></tr>
<tr class="separator:a29df3bfe5f42965d194fd061e8c38d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79f4926a369a8e3cf54214abe80257a6"><td class="memTemplParams" colspan="2">template&lt;typename F &gt; </td></tr>
<tr class="memitem:a79f4926a369a8e3cf54214abe80257a6"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt; ReturnType, ArgTypes ... &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a79f4926a369a8e3cf54214abe80257a6">operator=</a> (std::reference_wrapper&lt; F &gt; f)</td></tr>
<tr class="separator:a79f4926a369a8e3cf54214abe80257a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4c47359a02ab210750ba35bf012ff37"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt; ReturnType, ArgTypes ... &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa4c47359a02ab210750ba35bf012ff37">operator=</a> (const std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;f)</td></tr>
<tr class="separator:aa4c47359a02ab210750ba35bf012ff37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0193d5a98fe674619cd1d9b8d00d6b55"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt; ReturnType, ArgTypes ... &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a0193d5a98fe674619cd1d9b8d00d6b55">operator=</a> (std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&amp;f)</td></tr>
<tr class="separator:a0193d5a98fe674619cd1d9b8d00d6b55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83b9691db46167c2637c86f5a71cb40f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a83b9691db46167c2637c86f5a71cb40f">check_fptr</a> () const</td></tr>
<tr class="separator:a83b9691db46167c2637c86f5a71cb40f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f751ca999eabb5bd65e5bc73acc50b1"><td class="memItemLeft" align="right" valign="top">ReturnType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a6f751ca999eabb5bd65e5bc73acc50b1">call</a> (ArgTypes ...args) const</td></tr>
<tr class="separator:a6f751ca999eabb5bd65e5bc73acc50b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaed99bb0f4d5ec8a33f23db333df3fce"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aaed99bb0f4d5ec8a33f23db333df3fce">operator const std::function&lt; ReturnType</a> (ArgTypes ...)&gt; &amp;() const</td></tr>
<tr class="separator:aaed99bb0f4d5ec8a33f23db333df3fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a523f9e78c668fd6192a81cab5e6c72cb"><td class="memItemLeft" align="right" valign="top">const std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a523f9e78c668fd6192a81cab5e6c72cb">get</a> () const</td></tr>
<tr class="separator:a523f9e78c668fd6192a81cab5e6c72cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa519971fccd473cdb5de2f8c39a377a1"><td class="memTemplParams" colspan="2">template&lt;typename ... BoundArgTypes&gt; </td></tr>
<tr class="memitem:aa519971fccd473cdb5de2f8c39a377a1"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa519971fccd473cdb5de2f8c39a377a1">bind</a> (<a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt; f, BoundArgTypes ...bound_args)</td></tr>
<tr class="separator:aa519971fccd473cdb5de2f8c39a377a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a543c66d2cfec84be7ea1cc38b413e74b"><td class="memTemplParams" colspan="2">template&lt;typename ... BoundArgTypes&gt; </td></tr>
<tr class="memitem:a543c66d2cfec84be7ea1cc38b413e74b"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a543c66d2cfec84be7ea1cc38b413e74b">bind_noexcept</a> (<a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt; f, BoundArgTypes ...bound_args)</td></tr>
<tr class="separator:a543c66d2cfec84be7ea1cc38b413e74b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e41d36722ffdb915f78dd3db9019489"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a5e41d36722ffdb915f78dd3db9019489">bind0</a> (ReturnType(*f)(ArgTypes ...))</td></tr>
<tr class="separator:a5e41d36722ffdb915f78dd3db9019489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9131b2925896e28440f173fd5e7e3c1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#ad9131b2925896e28440f173fd5e7e3c1">bind_noexcept0</a> (ReturnType(*f)(ArgTypes ...))</td></tr>
<tr class="separator:ad9131b2925896e28440f173fd5e7e3c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1eef53a086eafc1ced966d45e549e58"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 &gt; </td></tr>
<tr class="memitem:ad1eef53a086eafc1ced966d45e549e58"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#ad1eef53a086eafc1ced966d45e549e58">bind1</a> (ReturnType(*f)(BoundArgType0, ArgTypes ...), BoundArgType0 bound_arg0)</td></tr>
<tr class="separator:ad1eef53a086eafc1ced966d45e549e58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b05c1be5593865d85e1c2a50dcbe14e"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 &gt; </td></tr>
<tr class="memitem:a2b05c1be5593865d85e1c2a50dcbe14e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a2b05c1be5593865d85e1c2a50dcbe14e">bind_noexcept1</a> (ReturnType(*f)(BoundArgType0, ArgTypes ...), BoundArgType0 bound_arg0)</td></tr>
<tr class="separator:a2b05c1be5593865d85e1c2a50dcbe14e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1830958fb682c3036ea8a6d6add24f3"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 , typename BoundArgType1 &gt; </td></tr>
<tr class="memitem:ac1830958fb682c3036ea8a6d6add24f3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#ac1830958fb682c3036ea8a6d6add24f3">bind2</a> (ReturnType(*f)(BoundArgType0, BoundArgType1, ArgTypes ...), BoundArgType0 bound_arg0, BoundArgType1 bound_arg1)</td></tr>
<tr class="separator:ac1830958fb682c3036ea8a6d6add24f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76b8e4db1b1c8b9077f251f9c2cb1c40"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 , typename BoundArgType1 &gt; </td></tr>
<tr class="memitem:a76b8e4db1b1c8b9077f251f9c2cb1c40"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a76b8e4db1b1c8b9077f251f9c2cb1c40">bind_noexcept2</a> (ReturnType(*f)(BoundArgType0, BoundArgType1, ArgTypes ...), BoundArgType0 bound_arg0, BoundArgType1 bound_arg1)</td></tr>
<tr class="separator:a76b8e4db1b1c8b9077f251f9c2cb1c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace88962df6215e31b2961581e5fae4c3"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 , typename BoundArgType1 , typename BoundArgType2 &gt; </td></tr>
<tr class="memitem:ace88962df6215e31b2961581e5fae4c3"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#ace88962df6215e31b2961581e5fae4c3">bind3</a> (ReturnType(*f)(BoundArgType0, BoundArgType1, BoundArgType2, ArgTypes ...), BoundArgType0 bound_arg0, BoundArgType1 bound_arg1, BoundArgType2 bound_arg2)</td></tr>
<tr class="separator:ace88962df6215e31b2961581e5fae4c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a995b506379e9550f1ca6c39fb7bb4f5e"><td class="memTemplParams" colspan="2">template&lt;typename BoundArgType0 , typename BoundArgType1 , typename BoundArgType2 &gt; </td></tr>
<tr class="memitem:a995b506379e9550f1ca6c39fb7bb4f5e"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a995b506379e9550f1ca6c39fb7bb4f5e">bind_noexcept3</a> (ReturnType(*f)(BoundArgType0, BoundArgType1, BoundArgType2, ArgTypes ...), BoundArgType0 bound_arg0, BoundArgType1 bound_arg1, BoundArgType2 bound_arg2)</td></tr>
<tr class="separator:a995b506379e9550f1ca6c39fb7bb4f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:acea6cb67bc0e8ea78d513f6db4e2e477"><td class="memTemplParams" colspan="2">template&lt;bool return_type_is_void, typename ... BoundArgTypes&gt; </td></tr>
<tr class="memitem:acea6cb67bc0e8ea78d513f6db4e2e477"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; return_type_is_void &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#acea6cb67bc0e8ea78d513f6db4e2e477">bind_catchexcept_impl</a> (<a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt; f, BoundArgTypes ...bound_args)</td></tr>
<tr class="separator:acea6cb67bc0e8ea78d513f6db4e2e477"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46b2a8ba15d152e0d0ef9110dbf7b3f2"><td class="memTemplParams" colspan="2">template&lt;bool return_type_is_void, typename ... BoundArgTypes&gt; </td></tr>
<tr class="memitem:a46b2a8ba15d152e0d0ef9110dbf7b3f2"><td class="memTemplItemLeft" align="right" valign="top">std::enable_if&lt; not return_type_is_void &gt;::type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a46b2a8ba15d152e0d0ef9110dbf7b3f2">bind_catchexcept_impl</a> (<a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt; f, BoundArgTypes ...bound_args)</td></tr>
<tr class="separator:a46b2a8ba15d152e0d0ef9110dbf7b3f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a4d8d1e21e00ba9a5da7606354abb136a"><td class="memItemLeft" align="right" valign="top">std::function&lt; ReturnType(ArgTypes ...)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a4d8d1e21e00ba9a5da7606354abb136a">fptr</a></td></tr>
<tr class="separator:a4d8d1e21e00ba9a5da7606354abb136a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename ReturnType, typename ... ArgTypes&gt;<br />
class openage::pyinterface::Func&lt; ReturnType, ArgTypes &gt;</h3>

<p>Holds a function pointer, with bound arguments.</p>
<p>Can be filled via its implicit copy constructor, operator = or <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa519971fccd473cdb5de2f8c39a377a1">bind()</a>.</p>
<p>operator = is designed for usage from C++, and accepts set() sets it to an existing std::function object one of its <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa519971fccd473cdb5de2f8c39a377a1">bind()</a> members.</p>
<p>It's auto-converted to std::function, and can be called via <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#a6f751ca999eabb5bd65e5bc73acc50b1">call()</a>.</p>
<p>Designed to allow Cython to call C++ functions that accept std::function callbacks, and to provide a callback function type for Cython to offer to C++.</p>
<p>As of right now, Cython doesn't support variadic templates [<a href="https://mail.python.org/pipermail/cython-devel/2015-June/004429.html">https://mail.python.org/pipermail/cython-devel/2015-June/004429.html</a>].</p>
<p>Thus, <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> has aliases to allow usage like regular templated types, one for each number of arguments:</p>
<p>from libopenage.pyinterface.functional import Func2 void myfunc(float a0, int a1, int a2): pass Func2[void, int, int] fobj <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#ad1eef53a086eafc1ced966d45e549e58">Func2.bind1</a><a href="myfunc, 5.0">float</a></p>
<p>There are definitions up to Func5 and bind3; if you encounter a situation where you'd need more, maybe you should re-think some of your life choices.</p>
<p>Note that you shouldn't use this type purely internally in Cython, since if you bind a Cython function and call it from Cython, every Exception would be needlessly converted from Py to C++ to Py...</p>
<p>For global function pointers that should be initialized at pyinterface initialization time, use <a class="el" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc</a> instead of <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>; that class has some additional code to verify successful initialization. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00058">58</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a9aafa14c1e14d75e4c65258650e2281b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9aafa14c1e14d75e4c65258650e2281b">&#9670;&nbsp;</a></span>Func() <span class="overload">[1/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::<a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00060">60</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a411404c88e1c3a1e94d5491aadcf444b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a411404c88e1c3a1e94d5491aadcf444b">&#9670;&nbsp;</a></span>Func() <span class="overload">[2/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename F &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::<a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> </td>
          <td>(</td>
          <td class="paramtype">F &amp;&amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00066">66</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="aa7c97b27e57c92dd099c84d52d19697d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7c97b27e57c92dd099c84d52d19697d">&#9670;&nbsp;</a></span>Func() <span class="overload">[3/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename F &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::<a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> </td>
          <td>(</td>
          <td class="paramtype">std::reference_wrapper&lt; F &gt;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00071">71</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a81cf56998f2138465da539c140b15443"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81cf56998f2138465da539c140b15443">&#9670;&nbsp;</a></span>Func() <span class="overload">[4/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::<a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> </td>
          <td>(</td>
          <td class="paramtype">const std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00076">76</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="aa841aafdf6e5a35761599c6e57188541"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa841aafdf6e5a35761599c6e57188541">&#9670;&nbsp;</a></span>Func() <span class="overload">[5/5]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::<a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a> </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00080">80</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa519971fccd473cdb5de2f8c39a377a1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa519971fccd473cdb5de2f8c39a377a1">&#9670;&nbsp;</a></span>bind()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename ... BoundArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgTypes ...&#160;</td>
          <td class="paramname"><em>bound_args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>For manual binding of function pointers and arguments (from Cython; in C++, assign lambdas).</p>
<p>Adds additional code that catches and converts Python exceptions to C++ exceptions.</p>
<p>The '<a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>' argument is due to <a href="http://stackoverflow.com/questions/31040075">http://stackoverflow.com/questions/31040075</a>. Note that with clang, it's possible to directly pass function pointers, while with gcc they need to be explicitly converted. Meh. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00158">158</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a5e41d36722ffdb915f78dd3db9019489"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e41d36722ffdb915f78dd3db9019489">&#9670;&nbsp;</a></span>bind0()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind0 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00201">201</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="ad1eef53a086eafc1ced966d45e549e58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1eef53a086eafc1ced966d45e549e58">&#9670;&nbsp;</a></span>bind1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind1 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00212">212</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="ac1830958fb682c3036ea8a6d6add24f3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1830958fb682c3036ea8a6d6add24f3">&#9670;&nbsp;</a></span>bind2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 , typename BoundArgType1 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind2 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, BoundArgType1, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType1&#160;</td>
          <td class="paramname"><em>bound_arg1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00224">224</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="ace88962df6215e31b2961581e5fae4c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace88962df6215e31b2961581e5fae4c3">&#9670;&nbsp;</a></span>bind3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 , typename BoundArgType1 , typename BoundArgType2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind3 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, BoundArgType1, BoundArgType2, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType1&#160;</td>
          <td class="paramname"><em>bound_arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType2&#160;</td>
          <td class="paramname"><em>bound_arg2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00236">236</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="acea6cb67bc0e8ea78d513f6db4e2e477"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acea6cb67bc0e8ea78d513f6db4e2e477">&#9670;&nbsp;</a></span>bind_catchexcept_impl() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;bool return_type_is_void, typename ... BoundArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;return_type_is_void&gt;::type <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_catchexcept_impl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgTypes ...&#160;</td>
          <td class="paramname"><em>bound_args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Specialization for <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa519971fccd473cdb5de2f8c39a377a1">bind()</a> with void return types. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00168">168</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a46b2a8ba15d152e0d0ef9110dbf7b3f2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46b2a8ba15d152e0d0ef9110dbf7b3f2">&#9670;&nbsp;</a></span>bind_catchexcept_impl() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;bool return_type_is_void, typename ... BoundArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::enable_if&lt;not return_type_is_void&gt;::type <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_catchexcept_impl </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgTypes ...&#160;</td>
          <td class="paramname"><em>bound_args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Specialization for <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml#aa519971fccd473cdb5de2f8c39a377a1">bind()</a> with non-void return types. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00180">180</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a543c66d2cfec84be7ea1cc38b413e74b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a543c66d2cfec84be7ea1cc38b413e74b">&#9670;&nbsp;</a></span>bind_noexcept()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename ... BoundArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_noexcept </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_function_ptr.xhtml">util::FunctionPtr</a>&lt; ReturnType, BoundArgTypes ..., ArgTypes ... &gt;&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgTypes ...&#160;</td>
          <td class="paramname"><em>bound_args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Like bind, but does <em>not</em> add an exception checker. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00194">194</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="ad9131b2925896e28440f173fd5e7e3c1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9131b2925896e28440f173fd5e7e3c1">&#9670;&nbsp;</a></span>bind_noexcept0()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_noexcept0 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00206">206</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a2b05c1be5593865d85e1c2a50dcbe14e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b05c1be5593865d85e1c2a50dcbe14e">&#9670;&nbsp;</a></span>bind_noexcept1()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_noexcept1 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00218">218</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a76b8e4db1b1c8b9077f251f9c2cb1c40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a76b8e4db1b1c8b9077f251f9c2cb1c40">&#9670;&nbsp;</a></span>bind_noexcept2()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 , typename BoundArgType1 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_noexcept2 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, BoundArgType1, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType1&#160;</td>
          <td class="paramname"><em>bound_arg1</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00230">230</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a995b506379e9550f1ca6c39fb7bb4f5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a995b506379e9550f1ca6c39fb7bb4f5e">&#9670;&nbsp;</a></span>bind_noexcept3()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename BoundArgType0 , typename BoundArgType1 , typename BoundArgType2 &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::bind_noexcept3 </td>
          <td>(</td>
          <td class="paramtype">ReturnType(*)(BoundArgType0, BoundArgType1, BoundArgType2, ArgTypes ...)&#160;</td>
          <td class="paramname"><em>f</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType0&#160;</td>
          <td class="paramname"><em>bound_arg0</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType1&#160;</td>
          <td class="paramname"><em>bound_arg1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">BoundArgType2&#160;</td>
          <td class="paramname"><em>bound_arg2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00242">242</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a6f751ca999eabb5bd65e5bc73acc50b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f751ca999eabb5bd65e5bc73acc50b1">&#9670;&nbsp;</a></span>call()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ReturnType <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::call </td>
          <td>(</td>
          <td class="paramtype">ArgTypes ...&#160;</td>
          <td class="paramname"><em>args</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for direct usage (mostly from Cython) </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00126">126</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a83b9691db46167c2637c86f5a71cb40f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a83b9691db46167c2637c86f5a71cb40f">&#9670;&nbsp;</a></span>check_fptr()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::check_fptr </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>raises an Error if this-&gt;fptr is still uninitialized. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00111">111</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a523f9e78c668fd6192a81cab5e6c72cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a523f9e78c668fd6192a81cab5e6c72cb">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const std::function&lt;ReturnType (ArgTypes ...)&gt;&amp; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for explicit conversion to std::function. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00143">143</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="aaed99bb0f4d5ec8a33f23db333df3fce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaed99bb0f4d5ec8a33f23db333df3fce">&#9670;&nbsp;</a></span>operator const std::function&lt; ReturnType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::operator const std::function&lt; ReturnType </td>
          <td>(</td>
          <td class="paramtype">ArgTypes ...&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const &amp;</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for implicit conversion to std::function, for usage in a context where std::function would be expected. </p>

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00135">135</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a29df3bfe5f42965d194fd061e8c38d92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29df3bfe5f42965d194fd061e8c38d92">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename F &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt;ReturnType, ArgTypes ...&gt;&amp; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">F &amp;&amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00086">86</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a79f4926a369a8e3cf54214abe80257a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a79f4926a369a8e3cf54214abe80257a6">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<div class="memtemplate">
template&lt;typename F &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt;ReturnType, ArgTypes ...&gt;&amp; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">std::reference_wrapper&lt; F &gt;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00092">92</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="aa4c47359a02ab210750ba35bf012ff37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4c47359a02ab210750ba35bf012ff37">&#9670;&nbsp;</a></span>operator=() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt;ReturnType, ArgTypes ...&gt;&amp; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00098">98</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<a id="a0193d5a98fe674619cd1d9b8d00d6b55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0193d5a98fe674619cd1d9b8d00d6b55">&#9670;&nbsp;</a></span>operator=() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a>&lt;ReturnType, ArgTypes ...&gt;&amp; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">std::function&lt; ReturnType(ArgTypes ...)&gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>f</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00103">103</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a4d8d1e21e00ba9a5da7606354abb136a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4d8d1e21e00ba9a5da7606354abb136a">&#9670;&nbsp;</a></span>fptr</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename ReturnType, typename ... ArgTypes&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::function&lt;ReturnType (ArgTypes ...)&gt; <a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a>&lt; ReturnType, ArgTypes &gt;::fptr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="functional_8h_source.xhtml#l00248">248</a> of file <a class="el" href="functional_8h_source.xhtml">functional.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>libopenage/pyinterface/<a class="el" href="functional_8h_source.xhtml">functional.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1pyinterface.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
