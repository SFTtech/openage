<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/pyobject.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pyobject_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pyobject.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pyobject_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyobject_8h.xhtml">pyobject.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;functional&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">   13</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>() noexcept</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    :</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>{<span class="keyword">nullptr</span>} {}</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0c2f2bd7dfd4f04b439793b220e02db9">   18</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>)</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    :</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>{<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>} {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>.call(this-&gt;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2a19b9d28f9745e7225678d18d905733">   26</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other)</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    :</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>{other.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>} {</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>.call(this-&gt;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a5f19d6f1fda831508e171d79373c2903">   34</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;&amp;other) noexcept</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    :</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>{other.ref} {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// don&#39;t incref, because we simultaneously clear other.ref.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    other.ref = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a1c1b91b6056f0e370402678645129d8a">   43</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a1c1b91b6056f0e370402678645129d8a">PyObjectRef::operator =</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> = other.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab39e1ac132d7e685d0f818039db849c0">   55</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a1c1b91b6056f0e370402678645129d8a">PyObjectRef::operator =</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;&amp;other) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> = other.ref;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="comment">// don&#39;t incref, because we simultaneously clear other.ref.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    other.ref = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aa9fbbec1a69f4d747749d1c664aec737">   73</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<span class="keywordtype">int</span> number)</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    :</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(py::<a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">integer</a>(number)) {}</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a4bb8cbf285476e6ef7cd7a4bf5961a65">   82</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *data)</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    :</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(py::<a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>(data)) {}</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">template</span> &lt;&gt;</div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a1dc37921549165a63be1eecf48c31859">   91</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">PyObjectRef::PyObjectRef</a>(<span class="keyword">const</span> std::string &amp;txt)</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    :</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(py::<a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>(txt)) {}</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad9e8f1a9f289eb345ec3565f888ae23a">   96</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad9e8f1a9f289eb345ec3565f888ae23a">PyObjectRef::~PyObjectRef</a>() {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0e0024ba18b74f15b0aa56986a911d95">  103</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0e0024ba18b74f15b0aa56986a911d95">PyObjectRef::set_ref</a>(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;ref != <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>.call(this-&gt;ref);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    this-&gt;ref = <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>.call(this-&gt;ref);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a626ecb36c29963065f287ac3529641dc">  113</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a626ecb36c29963065f287ac3529641dc">PyObjectRef::set_ref_without_incrementing</a>(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>) {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;ref != <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>.call(this-&gt;ref);</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    this-&gt;ref = <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">  122</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">PyObjectRef::str</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">py_str</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">  127</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">PyObjectRef::repr</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">py_repr</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">  132</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">PyObjectRef::bytes</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">py_bytes</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a09ea43fdc78d2458748887fa72ae1a9d">  137</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a09ea43fdc78d2458748887fa72ae1a9d">PyObjectRef::len</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">py_len</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2790fe7f033dc93a820a13535421aa98">  142</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2790fe7f033dc93a820a13535421aa98">PyObjectRef::callable</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">py_callable</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aaacc1330b0393004944477d15e9d82b0">  147</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aaacc1330b0393004944477d15e9d82b0">PyObjectRef::call_impl</a>(std::vector&lt;PyObjectRef&gt; &amp;args)<span class="keyword"> const </span>{</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">if</span> (args.empty()) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">py_call0</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        std::vector&lt;PyObject *&gt; py_args{args.size()};</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        std::transform(args.begin(), args.end(), py_args.begin(),</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                       std::mem_fn(&amp;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">PyObjectRef::get_ref</a>));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">py_calln</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, py_args);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">  161</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">PyObjectRef::hasattr</a>(<span class="keyword">const</span> std::string &amp;name)<span class="keyword"> const </span>{</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">py_hasattr</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, name);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">  166</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">PyObjectRef::getattr</a>(<span class="keyword">const</span> std::string &amp;name)<span class="keyword"> const </span>{</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">py_getattr</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, name);</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9c0069c03b9c5ab553f49b6cc790f8e0">  173</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9c0069c03b9c5ab553f49b6cc790f8e0">PyObjectRef::setattr</a>(<span class="keyword">const</span> std::string &amp;name, <span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;attr)<span class="keyword"> const </span>{</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">py_setattr</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, name, attr.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">  178</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">PyObjectRef::to_bool</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">py_to_bool</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab33e45c3e5b581e5c1dbc74282f6f168">  183</a></span>&#160;int64_t <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab33e45c3e5b581e5c1dbc74282f6f168">PyObjectRef::to_int</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">py_to_int</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">  188</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">PyObjectRef::isinstance</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;type)<span class="keyword"> const </span>{</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">py_isinstance</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, type.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9a0172d320ad1f5f696dfe04d35570d5">  193</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9a0172d320ad1f5f696dfe04d35570d5">PyObjectRef::dir</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func&lt;void, std::string&gt;</a> &amp;callback)<span class="keyword"> const </span>{</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">py_dir</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, callback);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">  198</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">PyObjectRef::is</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a> == other.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>();</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">  203</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">PyObjectRef::equals</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">py_equals</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, other.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">  208</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">PyObjectRef::eval</a>(<span class="keyword">const</span> std::string &amp;expression)<span class="keyword"> const </span>{</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">py_eval</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, &amp;result, expression);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">  215</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">PyObjectRef::exec</a>(<span class="keyword">const</span> std::string &amp;statement)<span class="keyword"> const </span>{</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">py_exec</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, statement);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;</div><div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">  220</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">PyObjectRef::get</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">py_get</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, &amp;result, key.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aaff2674b9d1b7ffcf0a67f8ecba9f1b6">  227</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">PyObjectRef::get</a>(<span class="keyword">const</span> std::string &amp;key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> keyobj = <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">py::str</a>(key);</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(keyobj);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a6ff52951c29472ef3fd427f8c627f33c">  233</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">PyObjectRef::get</a>(<span class="keywordtype">int</span> key)<span class="keyword"> const </span>{</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> keyobj = <a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">py::integer</a>(key);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(keyobj);</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aae0a4f1161486c40b41b7f47e5b9fb96">  239</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aae0a4f1161486c40b41b7f47e5b9fb96">PyObjectRef::in</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>)<span class="keyword"> const </span>{</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">py_in</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, container.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;}</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aad12aea6d10bda9d75570193f562645e">  244</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aad12aea6d10bda9d75570193f562645e">PyObjectRef::type</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">py_type</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>, &amp;result);</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">  251</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">PyObjectRef::modulename</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">py_modulename</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;</div><div class="line"><a name="l00256"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">  256</a></span>&#160;std::string <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">PyObjectRef::classname</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">py_classname</a>.call(this-&gt;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a75f2b534b1258ff5d4578f171c3f1caa">  261</a></span>&#160;std::ostream &amp;<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a75f2b534b1258ff5d4578f171c3f1caa">operator &lt;&lt;</a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>) {</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>.get_ref() == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;PyObjectRef[null]&quot;</span>;</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;PyObjectRef[&quot;</span> &lt;&lt; <a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>.repr() &lt;&lt; <span class="stringliteral">&quot;]&quot;</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">  272</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>;</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">  273</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">  275</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">py_str</a>;</div><div class="line"><a name="l00276"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">  276</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">py_repr</a>;</div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">  277</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">py_bytes</a>;</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">  278</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;int, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">py_len</a>;</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">  279</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">py_callable</a>;</div><div class="line"><a name="l00280"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">  280</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">py_call0</a>;</div><div class="line"><a name="l00281"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">  281</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::vector&lt;PyObject *&gt;</a>&amp;&gt; <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">py_calln</a>;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">  282</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">py_hasattr</a>;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">  283</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">py_getattr</a>;</div><div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">  284</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">py_setattr</a>;</div><div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">  285</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">py_isinstance</a>;</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">  286</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">py_to_bool</a>;</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">  287</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;int64_t, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">py_to_int</a>;</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">  288</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, Func&lt;void, std::string&gt;</a>&gt; <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">py_dir</a>;</div><div class="line"><a name="l00289"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">  289</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">py_equals</a>;</div><div class="line"><a name="l00290"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">  290</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">py_exec</a>;</div><div class="line"><a name="l00291"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">  291</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">py_eval</a>;</div><div class="line"><a name="l00292"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">  292</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">py_get</a>;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">  293</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">py_in</a>;</div><div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">  294</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">py_type</a>;</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">  295</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">py_modulename</a>;</div><div class="line"><a name="l00296"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">  296</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">py_classname</a>;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">  298</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">py_builtin</a>;</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">  299</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">py_import</a>;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">  300</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">py_createstr</a>;</div><div class="line"><a name="l00301"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">  301</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">py_createbytes</a>;</div><div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">  302</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, int&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">py_createint</a>;</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">  303</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">py_createdict</a>;</div><div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">  304</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">py_createlist</a>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">  306</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">None</a>;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">  307</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">True</a>;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">  308</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">False</a>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;} <span class="comment">// pyinterface</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml">  313</a></span>&#160;<span class="keyword">namespace </span>py {</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">using namespace </span>pyinterface;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">  317</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">builtin</a>(<span class="keyword">const</span> std::string &amp;name) {</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">py_builtin</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, name);</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a74056a2f34d9bc9aed2a687a85794e7a">  324</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <span class="keyword">import</span>(<span class="keyword">const</span> std::string &amp;name) {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">py_import</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, name);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;}</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">  331</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(<span class="keyword">const</span> std::string &amp;value) {</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">py_createstr</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, value);</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;}</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">  338</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>(<span class="keyword">const</span> std::string &amp;value) {</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">py_createbytes</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, value);</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">  345</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">integer</a>(<span class="keywordtype">int</span> value) {</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">py_createint</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>, value);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;}</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">  352</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>() {</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">py_createdict</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>);</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;}</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;</div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">  359</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>() {</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">py_createlist</a>.call(&amp;<a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>);</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;}</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;} <span class="comment">// py</span></div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;} <span class="comment">// openage</span></div><div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a912e76dc7854f9c1816533f6f8571767"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">openage::pyinterface::PyObjectRef::classname</a></div><div class="ttdeci">std::string classname() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00256">pyobject.cpp:256</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afb0f22eaba43f4419e7edf3eaa1f957a"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">openage::pyinterface::PyObjectRef::getattr</a></div><div class="ttdeci">PyObjectRef getattr(const std::string &amp;name) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00166">pyobject.cpp:166</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ac75d8f60c25c4a7570dcdf83b601d639"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">openage::pyinterface::PyObjectRef::get_ref</a></div><div class="ttdeci">PyObject * get_ref() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00246">pyobject.h:246</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a63919a2347c856579a992996c9c26d8a"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">openage::pyinterface::py_eval</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef *, std::string &gt; py_eval</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00291">pyobject.cpp:291</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3316eef7fb6fbfced2f80c600bad8908"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">openage::pyinterface::py_setattr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, std::string, PyObject * &gt; py_setattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00284">pyobject.cpp:284</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afd53890300da035a2fa6cf0366f3f755"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">openage::pyinterface::py_createdict</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef * &gt; py_createdict</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00303">pyobject.cpp:303</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a71a44ad87b997a932215fa57c7643a19"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">openage::pyinterface::None</a></div><div class="ttdeci">PyObjectRef None</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00306">pyobject.cpp:306</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a5e10f968ee5f44d64489eff5791a2b93"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">openage::pyinterface::py_builtin</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_builtin</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00298">pyobject.cpp:298</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a02b9a4b5f4123474f3d2c7be438eed21"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">openage::pyinterface::PyObjectRef::to_bool</a></div><div class="ttdeci">bool to_bool() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00178">pyobject.cpp:178</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a4912d8bb9e44d51c84e6363694941f42"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">openage::pyinterface::py_classname</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_classname</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00296">pyobject.cpp:296</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a2790fe7f033dc93a820a13535421aa98"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2790fe7f033dc93a820a13535421aa98">openage::pyinterface::PyObjectRef::callable</a></div><div class="ttdeci">bool callable() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00142">pyobject.cpp:142</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a0e0024ba18b74f15b0aa56986a911d95"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0e0024ba18b74f15b0aa56986a911d95">openage::pyinterface::PyObjectRef::set_ref</a></div><div class="ttdeci">void set_ref(PyObject *ref)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00103">pyobject.cpp:103</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a9c0069c03b9c5ab553f49b6cc790f8e0"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9c0069c03b9c5ab553f49b6cc790f8e0">openage::pyinterface::PyObjectRef::setattr</a></div><div class="ttdeci">void setattr(const std::string &amp;name, const PyObjectRef &amp;attr) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00173">pyobject.cpp:173</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_acd17e87d491659af8fb3ac621f9f4732"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">openage::pyinterface::PyObjectRef::str</a></div><div class="ttdeci">std::string str() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00122">pyobject.cpp:122</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afdb5d7025dc1ed4583dfdf6d14ecbb2c"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">openage::pyinterface::py_createint</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, int &gt; py_createint</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00302">pyobject.cpp:302</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a963c22d15551b5aa2e567e9603ef79e1"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">openage::pyinterface::py_in</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_in</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00293">pyobject.cpp:293</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a09953e7373020e0af78c70ea155754ee"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">openage::pyinterface::True</a></div><div class="ttdeci">PyObjectRef True</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00307">pyobject.cpp:307</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a71d239927cc521d7d6cd2ff3f0e724ba"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">openage::pyinterface::PyObjectRef::ref</a></div><div class="ttdeci">PyObject * ref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00239">pyobject.h:239</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a></div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00058">functional.h:58</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aec589471ebd2cf0deea9cb901fa5b120"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">openage::pyinterface::py_modulename</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_modulename</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00295">pyobject.cpp:295</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a9a0172d320ad1f5f696dfe04d35570d5"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9a0172d320ad1f5f696dfe04d35570d5">openage::pyinterface::PyObjectRef::dir</a></div><div class="ttdeci">void dir(const Func&lt; void, std::string &gt; &amp;callback) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00193">pyobject.cpp:193</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afc75f5918216b0b5c64c7a3f83626ea6"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">openage::pyinterface::PyObjectRef::repr</a></div><div class="ttdeci">std::string repr() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00127">pyobject.cpp:127</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a22d3d2911cba5872786856d0cd41bf53"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">openage::pyinterface::py_exec</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, std::string &gt; py_exec</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00290">pyobject.cpp:290</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a17d24db4d17d8aba1a9b71c79fe3aa40"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">openage::pyinterface::PyObjectRef::eval</a></div><div class="ttdeci">PyObjectRef eval(const std::string &amp;expression) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00208">pyobject.cpp:208</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5108334e805e942718d59b97160775d1"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">openage::py::bytes</a></div><div class="ttdeci">Obj bytes(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00338">pyobject.cpp:338</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a019072ec9dc9b26854864b8d639545f6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">openage::pyinterface::py_import</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_import</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00299">pyobject.cpp:299</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afc5196e488904c84cd675b55494f3695"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">openage::pyinterface::py_repr</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_repr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00276">pyobject.cpp:276</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afd545e1817cad9ab9f5c84934d83e428"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">openage::pyinterface::PyObjectRef::modulename</a></div><div class="ttdeci">std::string modulename() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00251">pyobject.cpp:251</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a780793e26a1e574fda456f688e8d2f11"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a780793e26a1e574fda456f688e8d2f11">openage::pyinterface::PyObjectRef::PyObjectRef</a></div><div class="ttdeci">PyObjectRef() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00013">pyobject.cpp:13</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a63957aa9bf0c9835493a16ff6b543418"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">openage::pyinterface::py_call0</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject * &gt; py_call0</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00280">pyobject.cpp:280</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a626ecb36c29963065f287ac3529641dc"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a626ecb36c29963065f287ac3529641dc">openage::pyinterface::PyObjectRef::set_ref_without_incrementing</a></div><div class="ttdeci">void set_ref_without_incrementing(PyObject *ref)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00113">pyobject.cpp:113</a></div></div>
<div class="ttc" id="pyobject_8h_xhtml"><div class="ttname"><a href="pyobject_8h.xhtml">pyobject.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a72f6244131021857b5da82ec1a2b60b4"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">openage::pyinterface::py_hasattr</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, std::string &gt; py_hasattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00282">pyobject.cpp:282</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a7866f2cf6f90156274ac6b83776e73d9"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">openage::pyinterface::py_xincref</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject * &gt; py_xincref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00272">pyobject.cpp:272</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a1da67fe4551652e4267a218123e27309"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">openage::pyinterface::py_bytes</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_bytes</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00277">pyobject.cpp:277</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a26ef6836021b3dc7fe2215b7fab97e9d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">openage::pyinterface::py_get</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef *, PyObject * &gt; py_get</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00292">pyobject.cpp:292</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a4c514ea8f04bb945cd0d0086c89e8aa3"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">openage::pyinterface::py_to_int</a></div><div class="ttdeci">PyIfFunc&lt; int64_t, PyObject * &gt; py_to_int</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00287">pyobject.cpp:287</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ad14d4168fbabc89c1b48186ba1df98b2"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">openage::pyinterface::PyObjectRef::equals</a></div><div class="ttdeci">bool equals(const PyObjectRef &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00203">pyobject.cpp:203</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a2ff686c130c1870c58243e9f9530685a"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">openage::pyinterface::py_callable</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject * &gt; py_callable</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00279">pyobject.cpp:279</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_aaacc1330b0393004944477d15e9d82b0"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aaacc1330b0393004944477d15e9d82b0">openage::pyinterface::PyObjectRef::call_impl</a></div><div class="ttdeci">PyObjectRef call_impl(std::vector&lt; PyObjectRef &gt; &amp;args) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00147">pyobject.cpp:147</a></div></div>
<div class="ttc" id="defs_8h_xhtml_afcb7b4d4ac414eefbeef02c60e6acb52"><div class="ttname"><a href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a></div><div class="ttdeci">struct _object PyObject</div><div class="ttdef"><b>Definition:</b> <a href="defs_8h_source.xhtml#l00010">defs.h:10</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a853f15a5d55d1143418e208fac044119"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">openage::pyinterface::PyObjectRef::get</a></div><div class="ttdeci">PyObjectRef get(const PyObjectRef &amp;key) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00220">pyobject.cpp:220</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aee648d1c95091e0207f3bf9d4f69dd01"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">openage::pyinterface::py_str</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_str</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00275">pyobject.cpp:275</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3cf5d417d7e8b932bd437163d1aa86d5"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">openage::pyinterface::py_getattr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject *, std::string &gt; py_getattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00283">pyobject.cpp:283</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad0be0c0750d33fff88a405db89a1dbe7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">openage::pyinterface::py_len</a></div><div class="ttdeci">PyIfFunc&lt; int, PyObject * &gt; py_len</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00278">pyobject.cpp:278</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_1_1tests_xhtml_afc4e799a037edab37e1e35a74da593b7"><div class="ttname"><a href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">openage::curve::tests::container</a></div><div class="ttdeci">void container()</div><div class="ttdef"><b>Definition:</b> <a href="container_8cpp_source.xhtml#l00205">container.cpp:205</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a7dd7680eb550d5db3c7f902316a748c1"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">openage::pyinterface::py_dir</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, Func&lt; void, std::string &gt; &gt; py_dir</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00288">pyobject.cpp:288</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a078ffdebeb6488c9b045d8d49f0f47de"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">openage::pyinterface::PyObjectRef::is</a></div><div class="ttdeci">bool is(const PyObjectRef &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00198">pyobject.cpp:198</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_ac68b5313b47c4615286f64c7d996a903"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">openage::py::builtin</a></div><div class="ttdeci">Obj builtin(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00317">pyobject.cpp:317</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ab5131b0e0209f78e76c5556cd7371dd7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">openage::pyinterface::py_xdecref</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject * &gt; py_xdecref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00273">pyobject.cpp:273</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_acf94e2be78e15a835eef9c8346c16f14"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">openage::pyinterface::py_createstr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_createstr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00300">pyobject.cpp:300</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad6ddd0e21b23d1b521586e0694a80a04"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">openage::pyinterface::py_to_bool</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject * &gt; py_to_bool</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00286">pyobject.cpp:286</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afea8e32a161fe2e4644bda2196185215"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">openage::pyinterface::py_isinstance</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_isinstance</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00285">pyobject.cpp:285</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3b908fa94eb8b9a2209772fb111795a9"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">openage::pyinterface::py_createlist</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef * &gt; py_createlist</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00304">pyobject.cpp:304</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_aad12aea6d10bda9d75570193f562645e"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aad12aea6d10bda9d75570193f562645e">openage::pyinterface::PyObjectRef::type</a></div><div class="ttdeci">PyObjectRef type() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00244">pyobject.cpp:244</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_acf53a5711df9e4c084c8db8a0da7c742"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">openage::pyinterface::py_equals</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_equals</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00289">pyobject.cpp:289</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a8aa560a3c62f746b36bb98e84bf1934c"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">openage::pyinterface::py_calln</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject *, std::vector&lt; PyObject * &gt; &amp; &gt; py_calln</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00281">pyobject.cpp:281</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_if_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">openage::pyinterface::PyIfFunc</a></div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00407">functional.h:407</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad71d6296abe650b46217af0efb0725a2"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">openage::pyinterface::False</a></div><div class="ttdeci">PyObjectRef False</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00308">pyobject.cpp:308</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a2b5e4fb00fdfa866cf3cf0abf78e07e1"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">openage::pyinterface::PyObjectRef::isinstance</a></div><div class="ttdeci">bool isinstance(const PyObjectRef &amp;type) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00188">pyobject.cpp:188</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad33eb5ce8235933127b3d7ed2f519ce7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">openage::pyinterface::py_type</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef * &gt; py_type</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00294">pyobject.cpp:294</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_aae0a4f1161486c40b41b7f47e5b9fb96"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aae0a4f1161486c40b41b7f47e5b9fb96">openage::pyinterface::PyObjectRef::in</a></div><div class="ttdeci">bool in(const PyObjectRef &amp;container) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00239">pyobject.cpp:239</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">openage::pyinterface::PyObjectRef</a></div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00049">pyobject.h:49</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aad68795cb6d982f4dda0a4b91a8c1577"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a></div><div class="ttdeci">int * ref</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00047">constinit_vector.cpp:47</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a09ea43fdc78d2458748887fa72ae1a9d"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a09ea43fdc78d2458748887fa72ae1a9d">openage::pyinterface::PyObjectRef::len</a></div><div class="ttdeci">int len() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00137">pyobject.cpp:137</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a0d7ef968ad02a1d4a52251ccd16eb85f"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">openage::pyinterface::PyObjectRef::exec</a></div><div class="ttdeci">void exec(const std::string &amp;statement) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00215">pyobject.cpp:215</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a1f03713cea0d4ee15fc445111404e7d7"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">openage::py::integer</a></div><div class="ttdeci">Obj integer(int value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00345">pyobject.cpp:345</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a76e2c7f1e3147d1d726d5c277daff1f8"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">openage::pyinterface::PyObjectRef::bytes</a></div><div class="ttdeci">std::string bytes() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00132">pyobject.cpp:132</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a0298b14066d342bc4b85a679ad777f28"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">openage::pyinterface::PyObjectRef::hasattr</a></div><div class="ttdeci">bool hasattr(const std::string &amp;name) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00161">pyobject.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ab33e45c3e5b581e5c1dbc74282f6f168"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab33e45c3e5b581e5c1dbc74282f6f168">openage::pyinterface::PyObjectRef::to_int</a></div><div class="ttdeci">int64_t to_int() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00183">pyobject.cpp:183</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ad9e8f1a9f289eb345ec3565f888ae23a"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad9e8f1a9f289eb345ec3565f888ae23a">openage::pyinterface::PyObjectRef::~PyObjectRef</a></div><div class="ttdeci">~PyObjectRef()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00096">pyobject.cpp:96</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a75f2b534b1258ff5d4578f171c3f1caa"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a75f2b534b1258ff5d4578f171c3f1caa">openage::pyinterface::operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const PyObjectRef &amp;ref)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00261">pyobject.cpp:261</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_abc65c10c883e9b61d86316e6e0d71318"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">openage::pyinterface::py_createbytes</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_createbytes</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00301">pyobject.cpp:301</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a1c1b91b6056f0e370402678645129d8a"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a1c1b91b6056f0e370402678645129d8a">openage::pyinterface::PyObjectRef::operator=</a></div><div class="ttdeci">PyObjectRef &amp; operator=(const PyObjectRef &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00043">pyobject.cpp:43</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="pyobject_8cpp.xhtml">pyobject.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
