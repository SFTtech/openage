<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::renderer::Renderable Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('structopenage_1_1renderer_1_1_renderable.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structopenage_1_1renderer_1_1_renderable-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::renderer::Renderable Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A renderable is a set of shader uniform inputs and a possible draw call.  
 <a href="structopenage_1_1renderer_1_1_renderable.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="renderer_8h_source.xhtml">renderer.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::renderer::Renderable:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="structopenage_1_1renderer_1_1_renderable__coll__graph.svg" width="323" height="331"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a775e71a74952beb4e208fe5fb4b46668"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> const  *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_renderable.xhtml#a775e71a74952beb4e208fe5fb4b46668">unif_in</a></td></tr>
<tr class="memdesc:a775e71a74952beb4e208fe5fb4b46668"><td class="mdescLeft">&#160;</td><td class="mdescRight">Uniform values to be set in the appropriate shader.  <a href="#a775e71a74952beb4e208fe5fb4b46668">More...</a><br /></td></tr>
<tr class="separator:a775e71a74952beb4e208fe5fb4b46668"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf2064282bcd7c446d32832d4b4bee7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1renderer_1_1_geometry.xhtml">Geometry</a> const  *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_renderable.xhtml#a3bf2064282bcd7c446d32832d4b4bee7">geometry</a></td></tr>
<tr class="memdesc:a3bf2064282bcd7c446d32832d4b4bee7"><td class="mdescLeft">&#160;</td><td class="mdescRight">The geometry.  <a href="#a3bf2064282bcd7c446d32832d4b4bee7">More...</a><br /></td></tr>
<tr class="separator:a3bf2064282bcd7c446d32832d4b4bee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f7cb774035e9d9445e5ec3aff4791e4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_renderable.xhtml#a2f7cb774035e9d9445e5ec3aff4791e4">alpha_blending</a></td></tr>
<tr class="memdesc:a2f7cb774035e9d9445e5ec3aff4791e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether to perform alpha-based color blending with whatever was in the render target before.  <a href="#a2f7cb774035e9d9445e5ec3aff4791e4">More...</a><br /></td></tr>
<tr class="separator:a2f7cb774035e9d9445e5ec3aff4791e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2876a554a04f54f329230e7239e4f0a8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_renderable.xhtml#a2876a554a04f54f329230e7239e4f0a8">depth_test</a></td></tr>
<tr class="memdesc:a2876a554a04f54f329230e7239e4f0a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether to perform depth testing and discard occluded fragments.  <a href="#a2876a554a04f54f329230e7239e4f0a8">More...</a><br /></td></tr>
<tr class="separator:a2876a554a04f54f329230e7239e4f0a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A renderable is a set of shader uniform inputs and a possible draw call. </p>
<p>When a renderable is parsed, the uniform inputs are first passed to the shader they were created with. Then, if the geometry is not nullptr, the shader is executed with the geometry and the specified settings and the results are written into the render target. If the geometry is nullptr, the uniform values are uploaded to the shader but no draw call is performed. This can be used to, for example, first set the values of uniforms that many objects have in common, and then only upload the uniforms that vary between them in each draw call. This works because uniform values in any given shader are preserved across a render pass. </p>

<p class="definition">Definition at line <a class="el" href="renderer_8h_source.xhtml#l00049">49</a> of file <a class="el" href="renderer_8h_source.xhtml">renderer.h</a>.</p>
</div><h2 class="groupheader">Member Data Documentation</h2>
<a id="a2f7cb774035e9d9445e5ec3aff4791e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f7cb774035e9d9445e5ec3aff4791e4">&#9670;&nbsp;</a></span>alpha_blending</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::renderer::Renderable::alpha_blending</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether to perform alpha-based color blending with whatever was in the render target before. </p>

<p class="definition">Definition at line <a class="el" href="renderer_8h_source.xhtml#l00057">57</a> of file <a class="el" href="renderer_8h_source.xhtml">renderer.h</a>.</p>

</div>
</div>
<a id="a2876a554a04f54f329230e7239e4f0a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2876a554a04f54f329230e7239e4f0a8">&#9670;&nbsp;</a></span>depth_test</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::renderer::Renderable::depth_test</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether to perform depth testing and discard occluded fragments. </p>

<p class="definition">Definition at line <a class="el" href="renderer_8h_source.xhtml#l00059">59</a> of file <a class="el" href="renderer_8h_source.xhtml">renderer.h</a>.</p>

</div>
</div>
<a id="a3bf2064282bcd7c446d32832d4b4bee7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3bf2064282bcd7c446d32832d4b4bee7">&#9670;&nbsp;</a></span>geometry</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1renderer_1_1_geometry.xhtml">Geometry</a> const* openage::renderer::Renderable::geometry</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The geometry. </p>
<p>It can be a simple primitive or a complex mesh. Can be nullptr to only set uniforms but do not perform draw call. </p>

<p class="definition">Definition at line <a class="el" href="renderer_8h_source.xhtml#l00055">55</a> of file <a class="el" href="renderer_8h_source.xhtml">renderer.h</a>.</p>

</div>
</div>
<a id="a775e71a74952beb4e208fe5fb4b46668"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a775e71a74952beb4e208fe5fb4b46668">&#9670;&nbsp;</a></span>unif_in</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1renderer_1_1_uniform_input.xhtml">UniformInput</a> const* openage::renderer::Renderable::unif_in</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Uniform values to be set in the appropriate shader. </p>
<p>Contains a reference to the correct shader, and this is the shader that will be used for drawing if geometry is present. </p>

<p class="definition">Definition at line <a class="el" href="renderer_8h_source.xhtml#l00052">52</a> of file <a class="el" href="renderer_8h_source.xhtml">renderer.h</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/<a class="el" href="renderer_8h_source.xhtml">renderer.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer.xhtml">renderer</a></li><li class="navelem"><a class="el" href="structopenage_1_1renderer_1_1_renderable.xhtml">Renderable</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
