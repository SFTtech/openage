<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::job::TypedJobStateBase&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1job_1_1_typed_job_state_base.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classopenage_1_1job_1_1_typed_job_state_base-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::job::TypedJobStateBase&lt; T &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>A templated job state base class, that implements basic functionality of job states.  
 <a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::job::TypedJobStateBase&lt; T &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_typed_job_state_base__inherit__graph.svg" width="400" height="574"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::job::TypedJobStateBase&lt; T &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_typed_job_state_base__coll__graph.svg" width="202" height="404"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8e29b857a4d99759518b542746a02936"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a8e29b857a4d99759518b542746a02936">TypedJobStateBase</a> (<a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt; <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a>)</td></tr>
<tr class="memdesc:a8e29b857a4d99759518b542746a02936"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new typed job with the given callback.  <a href="#a8e29b857a4d99759518b542746a02936">More...</a><br /></td></tr>
<tr class="separator:a8e29b857a4d99759518b542746a02936"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab73f6b3ae1b61fd57f63f8fe8466582a"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ab73f6b3ae1b61fd57f63f8fe8466582a">~TypedJobStateBase</a> ()=default</td></tr>
<tr class="memdesc:ab73f6b3ae1b61fd57f63f8fe8466582a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default destructor.  <a href="#ab73f6b3ae1b61fd57f63f8fe8466582a">More...</a><br /></td></tr>
<tr class="separator:ab73f6b3ae1b61fd57f63f8fe8466582a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a417161d234770ebadb0f98ecf1fece50"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a417161d234770ebadb0f98ecf1fece50">execute</a> (<a class="el" href="namespaceopenage_1_1job.xhtml#aa67062d8c4a001038067eb490177604b">should_abort_t</a> should_abort) override</td></tr>
<tr class="memdesc:a417161d234770ebadb0f98ecf1fece50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the internal function object and stores its result.  <a href="#a417161d234770ebadb0f98ecf1fece50">More...</a><br /></td></tr>
<tr class="separator:a417161d234770ebadb0f98ecf1fece50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c8a6b1c64e615799feafc50842dd93c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a4c8a6b1c64e615799feafc50842dd93c">execute_callback</a> () override</td></tr>
<tr class="memdesc:a4c8a6b1c64e615799feafc50842dd93c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the job was finished.  <a href="#a4c8a6b1c64e615799feafc50842dd93c">More...</a><br /></td></tr>
<tr class="separator:a4c8a6b1c64e615799feafc50842dd93c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae19bb907d061aa9707b6ba619fe631"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#abae19bb907d061aa9707b6ba619fe631">get_thread_id</a> () override</td></tr>
<tr class="memdesc:abae19bb907d061aa9707b6ba619fe631"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the id of the thread that has created this job.  <a href="#abae19bb907d061aa9707b6ba619fe631">More...</a><br /></td></tr>
<tr class="separator:abae19bb907d061aa9707b6ba619fe631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1job_1_1_job_state_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1job_1_1_job_state_base')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml">openage::job::JobStateBase</a></td></tr>
<tr class="memitem:a95e1cb836c2404c1166803684c5997de inherit pub_methods_classopenage_1_1job_1_1_job_state_base"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml#a95e1cb836c2404c1166803684c5997de">~JobStateBase</a> ()=default</td></tr>
<tr class="memdesc:a95e1cb836c2404c1166803684c5997de inherit pub_methods_classopenage_1_1job_1_1_job_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="classopenage_1_1job_1_1_job_state_base.xhtml#a95e1cb836c2404c1166803684c5997de">More...</a><br /></td></tr>
<tr class="separator:a95e1cb836c2404c1166803684c5997de inherit pub_methods_classopenage_1_1job_1_1_job_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad75c622c0f6282b5d58208099a0d70fa"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ad75c622c0f6282b5d58208099a0d70fa">thread_id</a></td></tr>
<tr class="memdesc:ad75c622c0f6282b5d58208099a0d70fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Id of the thread, that created this job state.  <a href="#ad75c622c0f6282b5d58208099a0d70fa">More...</a><br /></td></tr>
<tr class="separator:ad75c622c0f6282b5d58208099a0d70fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a830096838fa28692b52e346b3b3e7294"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a></td></tr>
<tr class="memdesc:a830096838fa28692b52e346b3b3e7294"><td class="mdescLeft">&#160;</td><td class="mdescRight">A callback function that is called when the job has finished.  <a href="#a830096838fa28692b52e346b3b3e7294">More...</a><br /></td></tr>
<tr class="separator:a830096838fa28692b52e346b3b3e7294"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d8c9d88ba8f01ae168995baf750af8e"><td class="memItemLeft" align="right" valign="top">std::atomic_bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">finished</a></td></tr>
<tr class="memdesc:a7d8c9d88ba8f01ae168995baf750af8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a>'s execution has already been finished.  <a href="#a7d8c9d88ba8f01ae168995baf750af8e">More...</a><br /></td></tr>
<tr class="separator:a7d8c9d88ba8f01ae168995baf750af8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12857f0200ece6f5d1205ea7f2c36a76"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a12857f0200ece6f5d1205ea7f2c36a76">result</a></td></tr>
<tr class="memdesc:a12857f0200ece6f5d1205ea7f2c36a76"><td class="mdescLeft">&#160;</td><td class="mdescRight">The result of the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a>'s executed function.  <a href="#a12857f0200ece6f5d1205ea7f2c36a76">More...</a><br /></td></tr>
<tr class="separator:a12857f0200ece6f5d1205ea7f2c36a76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f32f7f56cacd11e8efbd695997f1bdc"><td class="memItemLeft" align="right" valign="top">std::exception_ptr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">exception</a></td></tr>
<tr class="memdesc:a6f32f7f56cacd11e8efbd695997f1bdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">If executing the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a> throws an exception, it is stored here.  <a href="#a6f32f7f56cacd11e8efbd695997f1bdc">More...</a><br /></td></tr>
<tr class="separator:a6f32f7f56cacd11e8efbd695997f1bdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a6db4bc3757e40d5c04618c472ac75257"><td class="memItemLeft" align="right" valign="top">virtual T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6db4bc3757e40d5c04618c472ac75257">execute_and_get</a> (<a class="el" href="namespaceopenage_1_1job.xhtml#aa67062d8c4a001038067eb490177604b">should_abort_t</a> should_abort)=0</td></tr>
<tr class="memdesc:a6db4bc3757e40d5c04618c472ac75257"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the job and returns the result.  <a href="#a6db4bc3757e40d5c04618c472ac75257">More...</a><br /></td></tr>
<tr class="separator:a6db4bc3757e40d5c04618c472ac75257"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
class openage::job::TypedJobStateBase&lt; T &gt;</h3>

<p>A templated job state base class, that implements basic functionality of job states. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">T</td><td>the result type of this job state. This type must have a default constructor and support move semantics. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00026">26</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a8e29b857a4d99759518b542746a02936"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e29b857a4d99759518b542746a02936">&#9670;&nbsp;</a></span>TypedJobStateBase()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::<a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt; T &gt;&#160;</td>
          <td class="paramname"><em>callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new typed job with the given callback. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00051">51</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        :</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ad75c622c0f6282b5d58208099a0d70fa">thread_id</a>{<a class="code" href="namespaceopenage_1_1util.xhtml#ac99f61e1d0c06d9b83650a71cff2f02f">openage::util::get_current_thread_id</a>()},</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a>{<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a>},</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">finished</a>{<span class="keyword">false</span>} {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a830096838fa28692b52e346b3b3e7294"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">openage::job::TypedJobStateBase::callback</a></div><div class="ttdeci">callback_function_t&lt; T &gt; callback</div><div class="ttdoc">A callback function that is called when the job has finished.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00035">typed_job_state_base.h:35</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_ac99f61e1d0c06d9b83650a71cff2f02f"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#ac99f61e1d0c06d9b83650a71cff2f02f">openage::util::get_current_thread_id</a></div><div class="ttdeci">size_t get_current_thread_id()</div><div class="ttdoc">Returns the unique identifier of the current thread.</div><div class="ttdef"><b>Definition:</b> <a href="thread__id_8cpp_source.xhtml#l00044">thread_id.cpp:44</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_ad75c622c0f6282b5d58208099a0d70fa"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ad75c622c0f6282b5d58208099a0d70fa">openage::job::TypedJobStateBase::thread_id</a></div><div class="ttdeci">size_t thread_id</div><div class="ttdoc">Id of the thread, that created this job state.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00029">typed_job_state_base.h:29</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a7d8c9d88ba8f01ae168995baf750af8e"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">openage::job::TypedJobStateBase::finished</a></div><div class="ttdeci">std::atomic_bool finished</div><div class="ttdoc">Whether the Job's execution has already been finished.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00042">typed_job_state_base.h:42</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="thread__id_8cpp_source.xhtml#l00044">openage::util::get_current_thread_id()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_typed_job_state_base_a8e29b857a4d99759518b542746a02936_cgraph.svg" width="379" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab73f6b3ae1b61fd57f63f8fe8466582a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab73f6b3ae1b61fd57f63f8fe8466582a">&#9670;&nbsp;</a></span>~TypedJobStateBase()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::~<a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a417161d234770ebadb0f98ecf1fece50"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a417161d234770ebadb0f98ecf1fece50">&#9670;&nbsp;</a></span>execute()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::execute </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#aa67062d8c4a001038067eb490177604b">should_abort_t</a>&#160;</td>
          <td class="paramname"><em>should_abort</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Executes the internal function object and stores its result. </p>
<p>Occuring exceptions are stored, as well. Returns whether this job has been aborted. </p>

<p>Implements <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml#a031e479cce5b10af52a28ccb5301b588">openage::job::JobStateBase</a>.</p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00066">66</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                                                       {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a12857f0200ece6f5d1205ea7f2c36a76">result</a> = this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6db4bc3757e40d5c04618c472ac75257">execute_and_get</a>(should_abort);</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        } <span class="keywordflow">catch</span> (JobAbortedException &amp;e) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">exception</a> = std::current_exception();</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        }</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">finished</a>.store(<span class="keyword">true</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a6f32f7f56cacd11e8efbd695997f1bdc"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">openage::job::TypedJobStateBase::exception</a></div><div class="ttdeci">std::exception_ptr exception</div><div class="ttdoc">If executing the Job throws an exception, it is stored here.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00048">typed_job_state_base.h:48</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a12857f0200ece6f5d1205ea7f2c36a76"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a12857f0200ece6f5d1205ea7f2c36a76">openage::job::TypedJobStateBase::result</a></div><div class="ttdeci">T result</div><div class="ttdoc">The result of the Job's executed function.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00045">typed_job_state_base.h:45</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a7d8c9d88ba8f01ae168995baf750af8e"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">openage::job::TypedJobStateBase::finished</a></div><div class="ttdeci">std::atomic_bool finished</div><div class="ttdoc">Whether the Job's execution has already been finished.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00042">typed_job_state_base.h:42</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a6db4bc3757e40d5c04618c472ac75257"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6db4bc3757e40d5c04618c472ac75257">openage::job::TypedJobStateBase::execute_and_get</a></div><div class="ttdeci">virtual T execute_and_get(should_abort_t should_abort)=0</div><div class="ttdoc">Executes the job and returns the result.</div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6db4bc3757e40d5c04618c472ac75257">openage::job::TypedJobStateBase&lt; T &gt;::execute_and_get()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_typed_job_state_base_a417161d234770ebadb0f98ecf1fece50_cgraph.svg" width="440" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a6db4bc3757e40d5c04618c472ac75257"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6db4bc3757e40d5c04618c472ac75257">&#9670;&nbsp;</a></span>execute_and_get()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual T <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::execute_and_get </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1job.xhtml#aa67062d8c4a001038067eb490177604b">should_abort_t</a>&#160;</td>
          <td class="paramname"><em>should_abort</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Executes the job and returns the result. </p>
<p>If an exception is thrown it must be passed to the calling function. </p>

<p>Implemented in <a class="el" href="classopenage_1_1job_1_1_abortable_job_state.xhtml#abbf6faad72065feb6dcf3691cbbe52b5">openage::job::AbortableJobState&lt; T &gt;</a>, and <a class="el" href="classopenage_1_1job_1_1_job_state.xhtml#a79a232a28e4517f7dcb2c7dcd66eea41">openage::job::JobState&lt; T &gt;</a>.</p>

<p class="reference">Referenced by <a class="el" href="typed__job__state__base_8h_source.xhtml#l00066">openage::job::TypedJobStateBase&lt; T &gt;::execute()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1job_1_1_typed_job_state_base_a6db4bc3757e40d5c04618c472ac75257_icgraph.svg" width="440" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a4c8a6b1c64e615799feafc50842dd93c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c8a6b1c64e615799feafc50842dd93c">&#9670;&nbsp;</a></span>execute_callback()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::execute_callback </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the job was finished. </p>
<p>This is the result notification for the place where the job was constructed. </p>

<p>Implements <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml#ae5c8164b998e8a1ba780c3114e4492b4">openage::job::JobStateBase</a>.</p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00082">82</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                                     {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">finished</a>.load(), <span class="stringliteral">&quot;trying to report a result of an unfinished job&quot;</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a>) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keyword">auto</span> get_result = [<span class="keyword">this</span>]() {</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">exception</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    std::rethrow_exception(this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">exception</a>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a12857f0200ece6f5d1205ea7f2c36a76">result</a>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            };</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">callback</a>(get_result);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        }</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a830096838fa28692b52e346b3b3e7294"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a830096838fa28692b52e346b3b3e7294">openage::job::TypedJobStateBase::callback</a></div><div class="ttdeci">callback_function_t&lt; T &gt; callback</div><div class="ttdoc">A callback function that is called when the job has finished.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00035">typed_job_state_base.h:35</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a6f32f7f56cacd11e8efbd695997f1bdc"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a6f32f7f56cacd11e8efbd695997f1bdc">openage::job::TypedJobStateBase::exception</a></div><div class="ttdeci">std::exception_ptr exception</div><div class="ttdoc">If executing the Job throws an exception, it is stored here.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00048">typed_job_state_base.h:48</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a12857f0200ece6f5d1205ea7f2c36a76"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a12857f0200ece6f5d1205ea7f2c36a76">openage::job::TypedJobStateBase::result</a></div><div class="ttdeci">T result</div><div class="ttdoc">The result of the Job's executed function.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00045">typed_job_state_base.h:45</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_a7d8c9d88ba8f01ae168995baf750af8e"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#a7d8c9d88ba8f01ae168995baf750af8e">openage::job::TypedJobStateBase::finished</a></div><div class="ttdeci">std::atomic_bool finished</div><div class="ttdoc">Whether the Job's execution has already been finished.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00042">typed_job_state_base.h:42</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="typed__job__state__base_8h_source.xhtml#l00035">openage::job::TypedJobStateBase&lt; T &gt;::callback</a>, <a class="el" href="error_2error_8h_source.xhtml#l00155">ENSURE</a>, and <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>.</p>

</div>
</div>
<a id="abae19bb907d061aa9707b6ba619fe631"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abae19bb907d061aa9707b6ba619fe631">&#9670;&nbsp;</a></span>get_thread_id()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::get_thread_id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the id of the thread that has created this job. </p>

<p>Implements <a class="el" href="classopenage_1_1job_1_1_job_state_base.xhtml#aee0926a562a65f87308e1eda7d14040c">openage::job::JobStateBase</a>.</p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00096">96</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                    {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ad75c622c0f6282b5d58208099a0d70fa">thread_id</a>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="ttc" id="classopenage_1_1job_1_1_typed_job_state_base_xhtml_ad75c622c0f6282b5d58208099a0d70fa"><div class="ttname"><a href="classopenage_1_1job_1_1_typed_job_state_base.xhtml#ad75c622c0f6282b5d58208099a0d70fa">openage::job::TypedJobStateBase::thread_id</a></div><div class="ttdeci">size_t thread_id</div><div class="ttdoc">Id of the thread, that created this job state.</div><div class="ttdef"><b>Definition:</b> <a href="typed__job__state__base_8h_source.xhtml#l00029">typed_job_state_base.h:29</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="typed__job__state__base_8h_source.xhtml#l00029">openage::job::TypedJobStateBase&lt; T &gt;::thread_id</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a830096838fa28692b52e346b3b3e7294"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a830096838fa28692b52e346b3b3e7294">&#9670;&nbsp;</a></span>callback</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1job.xhtml#a9e457e59ab065783dbb679ab82cfdfa4">callback_function_t</a>&lt;T&gt; <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::callback</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback function that is called when the job has finished. </p>
<p>Can be empty. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00035">35</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="abortable__job__state_8h_source.xhtml#l00027">openage::job::AbortableJobState&lt; T &gt;::AbortableJobState()</a>, <a class="el" href="typed__job__state__base_8h_source.xhtml#l00082">openage::job::TypedJobStateBase&lt; T &gt;::execute_callback()</a>, and <a class="el" href="job__state_8h_source.xhtml#l00024">openage::job::JobState&lt; T &gt;::JobState()</a>.</p>

</div>
</div>
<a id="a6f32f7f56cacd11e8efbd695997f1bdc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f32f7f56cacd11e8efbd695997f1bdc">&#9670;&nbsp;</a></span>exception</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::exception_ptr <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::exception</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If executing the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a> throws an exception, it is stored here. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00048">48</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>

</div>
</div>
<a id="a7d8c9d88ba8f01ae168995baf750af8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7d8c9d88ba8f01ae168995baf750af8e">&#9670;&nbsp;</a></span>finished</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">std::atomic_bool <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::finished</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Whether the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a>'s execution has already been finished. </p>
<p>An atomic_bool is used, as this field can be used by multiple threads. Thus explicit synchronization is avoided. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00042">42</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>

</div>
</div>
<a id="a12857f0200ece6f5d1205ea7f2c36a76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12857f0200ece6f5d1205ea7f2c36a76">&#9670;&nbsp;</a></span>result</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::result</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The result of the <a class="el" href="classopenage_1_1job_1_1_job.xhtml" title="A job is a wrapper around a shared job state object and is returned by the job manager.">Job</a>'s executed function. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00045">45</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>

</div>
</div>
<a id="ad75c622c0f6282b5d58208099a0d70fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad75c622c0f6282b5d58208099a0d70fa">&#9670;&nbsp;</a></span>thread_id</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">openage::job::TypedJobStateBase</a>&lt; T &gt;::thread_id</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Id of the thread, that created this job state. </p>

<p class="definition">Definition at line <a class="el" href="typed__job__state__base_8h_source.xhtml#l00029">29</a> of file <a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="typed__job__state__base_8h_source.xhtml#l00096">openage::job::TypedJobStateBase&lt; T &gt;::get_thread_id()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/<a class="el" href="typed__job__state__base_8h_source.xhtml">typed_job_state_base.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1job.xhtml">job</a></li><li class="navelem"><a class="el" href="classopenage_1_1job_1_1_typed_job_state_base.xhtml">TypedJobStateBase</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
