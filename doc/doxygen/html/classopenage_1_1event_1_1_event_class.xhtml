<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::event::EventClass Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1event_1_1_event_class.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1event_1_1_event_class-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::EventClass Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for openage::event::EventClass:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1_event_class__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div class="dynheader">
Collaboration diagram for openage::event::EventClass:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1event_1_1_event_class__coll__graph.svg" width="194" height="176"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">param_map</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a911de25538d1280c375a90ed694bb717"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> { <br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">trigger_type::DEPENDENCY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">trigger_type::DEPENDENCY_IMMEDIATELY</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">trigger_type::TRIGGER</a>, 
<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">trigger_type::REPEAT</a>, 
<br />
&#160;&#160;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">trigger_type::ONCE</a>
<br />
 }</td></tr>
<tr class="separator:a911de25538d1280c375a90ed694bb717"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab0c2bcad30599b017efabe0078d8f1f8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ab0c2bcad30599b017efabe0078d8f1f8">EventClass</a> (const std::string &amp;name, const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;<a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a>)</td></tr>
<tr class="separator:ab0c2bcad30599b017efabe0078d8f1f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a852a361912677c956069048d2fa2d025"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a852a361912677c956069048d2fa2d025">~EventClass</a> ()=default</td></tr>
<tr class="separator:a852a361912677c956069048d2fa2d025"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af88d224fea9820027ac3ebfb314537d0"><td class="memItemLeft" align="right" valign="top">const std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#af88d224fea9820027ac3ebfb314537d0">id</a> ()</td></tr>
<tr class="separator:af88d224fea9820027ac3ebfb314537d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">setup_event</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;event, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;state)=0</td></tr>
<tr class="separator:ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb3503ac98625390fa0c1a122f14394c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#abb3503ac98625390fa0c1a122f14394c">invoke</a> (<a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;loop, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;target, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;state, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;time, const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">param_map</a> &amp;params)=0</td></tr>
<tr class="separator:abb3503ac98625390fa0c1a122f14394c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e0d15e8a433ef4a08a5b8a4fccae41b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a0e0d15e8a433ef4a08a5b8a4fccae41b">predict_invoke_time</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;target, const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;state, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;at)=0</td></tr>
<tr class="separator:a0e0d15e8a433ef4a08a5b8a4fccae41b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a8a540e9ae9989e2fdeaa9139e00370fa"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a8a540e9ae9989e2fdeaa9139e00370fa">type</a></td></tr>
<tr class="separator:a8a540e9ae9989e2fdeaa9139e00370fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a449b3d84bef5678e9311af50be21514e"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a449b3d84bef5678e9311af50be21514e">_id</a></td></tr>
<tr class="separator:a449b3d84bef5678e9311af50be21514e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A eventclass has to be implemented for every type of event that exists. It determines what the event means and how it is handled. </p>

<p class="definition">Definition at line <a class="el" href="eventclass_8h_source.xhtml#l00026">26</a> of file <a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a911de25538d1280c375a90ed694bb717"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a911de25538d1280c375a90ed694bb717">&#9670;&nbsp;</a></span>trigger_type</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">openage::event::EventClass::trigger_type</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Available types for the event class: These decide when an event of this event class will be executed. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188"></a>DEPENDENCY&#160;</td><td class="fielddoc"><p>Such events are emitted when a modification is done on a target. The execution time is calculated from the modification time and custom code. </p>
</td></tr>
<tr><td class="fieldname"><a id="a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09"></a>DEPENDENCY_IMMEDIATELY&#160;</td><td class="fielddoc"><p>Like DEPENDENCY, but does not use a recalculated time, instead uses the change-time only. Behaves exactly like DEPENDENCY, if the DEPENDENCY-event is in the same execution frame. </p>
</td></tr>
<tr><td class="fieldname"><a id="a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620"></a>TRIGGER&#160;</td><td class="fielddoc"><p>Will be executed when the target trigger() function is called. </p>
</td></tr>
<tr><td class="fieldname"><a id="a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555"></a>REPEAT&#160;</td><td class="fielddoc"><p>Will be triggered unconditionally at the set time, "at" is the time that was set as return of predict_invoke_time. This event will be issued again until predict_invoke_time returns <a class="el" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min()</a>. To execute Something only once (i.E. triggered somewhere from the logic and not based on time, use ONCE </p>
</td></tr>
<tr><td class="fieldname"><a id="a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24"></a>ONCE&#160;</td><td class="fielddoc"><p>Will be triggered only once, but until it is triggered the time, when this should happen can be recalculated again and again using the predict_invoke_time method. </p>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="eventclass_8h_source.xhtml#l00032">32</a> of file <a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ab0c2bcad30599b017efabe0078d8f1f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab0c2bcad30599b017efabe0078d8f1f8">&#9670;&nbsp;</a></span>EventClass()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::event::EventClass::EventClass </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> &amp;&#160;</td>
          <td class="paramname"><em>type</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Constructor to be constructed with the unique identifier </p>

<p class="definition">Definition at line <a class="el" href="eventclass_8cpp_source.xhtml#l00013">13</a> of file <a class="el" href="eventclass_8cpp_source.xhtml">eventclass.cpp</a>.</p>

</div>
</div>
<a id="a852a361912677c956069048d2fa2d025"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a852a361912677c956069048d2fa2d025">&#9670;&nbsp;</a></span>~EventClass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual openage::event::EventClass::~EventClass </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="af88d224fea9820027ac3ebfb314537d0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af88d224fea9820027ac3ebfb314537d0">&#9670;&nbsp;</a></span>id()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const std::string &amp; openage::event::EventClass::id </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Return a unique identifier. </p>

<p class="definition">Definition at line <a class="el" href="eventclass_8cpp_source.xhtml#l00018">18</a> of file <a class="el" href="eventclass_8cpp_source.xhtml">eventclass.cpp</a>.</p>

</div>
</div>
<a id="abb3503ac98625390fa0c1a122f14394c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb3503ac98625390fa0c1a122f14394c">&#9670;&nbsp;</a></span>invoke()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void openage::event::EventClass::invoke </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;&#160;</td>
          <td class="paramname"><em>loop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>time</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">param_map</a> &amp;&#160;</td>
          <td class="paramname"><em>params</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This method implements the effects of the event. It will be called at the time that was determined by <code>predict_invoke_time</code>.</p>
<p>Called from the <a class="el" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a>. </p>

<p>Implemented in <a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a0fa6b84fb64f30f1edd75d465876a2b3">openage::event::demo::ResetGame</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_event_type_test_class.xhtml#ac71424a13be1323a33f6f538a4d8a3e7">openage::event::tests::EventTypeTestClass</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#af47dbc011710ba5e6986493b63dead0e">openage::event::tests::TestEventClassTwo</a>, <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#aa56d9723c3d16a001d71bca91fd08c70">openage::event::demo::BallReflectPanel</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class.xhtml#a6d3145302d7a6910d0e8e30d42380cc5">openage::event::tests::TestEventClass</a>, and <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a215ab77e1d0c301cf5ee7c79da4ffd4a">openage::event::demo::BallReflectWall</a>.</p>

</div>
</div>
<a id="a0e0d15e8a433ef4a08a5b8a4fccae41b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e0d15e8a433ef4a08a5b8a4fccae41b">&#9670;&nbsp;</a></span>predict_invoke_time()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> openage::event::EventClass::predict_invoke_time </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event_target.xhtml">EventTarget</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>target</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>at</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Is called to calculate the execution time for an event of this eventclass. This is called whenever one of the set up dependencies was changed, or when a REPEAT event was executed.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">target</td><td>the target the event was created for </td></tr>
    <tr><td class="paramname">state</td><td>the state this shall work on </td></tr>
    <tr><td class="paramname">at</td><td>the time when the change happened, from there on it shall be calculated onwards</td></tr>
  </table>
  </dd>
</dl>
<p>If the event is obsolete, return &lt;time_t&gt;<a class="el" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min()</a>.</p>
<p>If the time is lower than the previous time, then dependencies may not be resolved perfectly anymore (if other events have already been calculated before that). </p>

<p>Implemented in <a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a33a2a9a5f92a673b2cef91dac21eab78">openage::event::demo::ResetGame</a>, <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a81a50b0cb9bf2c5148a355f02829c992">openage::event::demo::BallReflectPanel</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_event_type_test_class.xhtml#a5321e145f5eea940554f18a71aa1b639">openage::event::tests::EventTypeTestClass</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#aaaeabcec80a4ee92ce170b3ff509afea">openage::event::tests::TestEventClassTwo</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class.xhtml#aa7b77dcf1f1c8665b824c670aab81f88">openage::event::tests::TestEventClass</a>, and <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a3e60c155c12ea17e0c149b3eca114f70">openage::event::demo::BallReflectWall</a>.</p>

</div>
</div>
<a id="ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9808ee0d7a2f5cdbd1c8eb85e2e5d6e">&#9670;&nbsp;</a></span>setup_event()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void openage::event::EventClass::setup_event </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_event.xhtml">Event</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>event</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1event_1_1_state.xhtml">State</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>state</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Called for each event that is created for this <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a>. The job of the setup function is to add all dependencies with other event targets found in state. </p>

<p>Implemented in <a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a3f85b39bd4cd0b45ec66c681f5a3553e">openage::event::demo::ResetGame</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_event_type_test_class.xhtml#acadce4dd71ef75305e148c0a98b42163">openage::event::tests::EventTypeTestClass</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class_two.xhtml#a1d8b2054cc30b622db08b26bc12e9b46">openage::event::tests::TestEventClassTwo</a>, <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a031ec32c576b33298fdb75dee692de8b">openage::event::demo::BallReflectPanel</a>, <a class="el" href="classopenage_1_1event_1_1tests_1_1_test_event_class.xhtml#a40a7e1ee67df51d9bc9ffb297b13d9dd">openage::event::tests::TestEventClass</a>, and <a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a096aec2cf4cef743c6abc12e4a99240f">openage::event::demo::BallReflectWall</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a449b3d84bef5678e9311af50be21514e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a449b3d84bef5678e9311af50be21514e">&#9670;&nbsp;</a></span>_id</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string openage::event::EventClass::_id</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>String identifier for this event class. </p>

<p class="definition">Definition at line <a class="el" href="eventclass_8h_source.xhtml#l00186">186</a> of file <a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a>.</p>

</div>
</div>
<a id="a8a540e9ae9989e2fdeaa9139e00370fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a540e9ae9989e2fdeaa9139e00370fa">&#9670;&nbsp;</a></span>type</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classopenage_1_1event_1_1_event_class.xhtml#a911de25538d1280c375a90ed694bb717">trigger_type</a> openage::event::EventClass::type</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The event type this event class represents. </p>

<p class="definition">Definition at line <a class="el" href="eventclass_8h_source.xhtml#l00135">135</a> of file <a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>libopenage/event/<a class="el" href="eventclass_8h_source.xhtml">eventclass.h</a></li>
<li>libopenage/event/<a class="el" href="eventclass_8cpp_source.xhtml">eventclass.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="classopenage_1_1event_1_1_event_class.xhtml">EventClass</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
