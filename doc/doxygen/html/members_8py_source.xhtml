<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/members.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('members_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">members.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="members_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1dataformat_1_1members.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"># TODO pylint: disable=C,R,abstract-method</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">import</span> types</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">from</span> enum <span class="keyword">import</span> Enum</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> .content_snippet <span class="keyword">import</span> ContentSnippet, SectionType</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> .entry_parser <span class="keyword">import</span> EntryParser</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">from</span> .generated_file <span class="keyword">import</span> GeneratedFile</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> .struct_snippet <span class="keyword">import</span> StructSnippet</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> .util <span class="keyword">import</span> determine_headers, determine_header</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">DataMember</a>:</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    member variable of data files and generated structs.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">    equals:</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">    * one column in a csv file.</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral">    * member in the C struct</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">    * data field in the .dat file</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keyword">def </span>__init__(self):</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">   25</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a> = 1</div><div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#af93da463756c79f7fb06eb46898fd6c5">   26</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a> = <span class="keywordtype">None</span></div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">   27</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ade5ee2745546cc6f70341b34958900cf">do_raw_read</a> = <span class="keyword">True</span></div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">   28</a></span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ade5ee2745546cc6f70341b34958900cf">   29</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a713d93efed62b806731cfe52ddf39fc4">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;implement the parser generation for the member type %s&quot;</span> % type(self))</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a713d93efed62b806731cfe52ddf39fc4">   31</a></span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a0c802d0e74f4506b9fbc83f45382e42b">get_headers</a>(self, output_target):</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;return needed headers for %s for a given output target&quot;</span> % type(self))</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a0c802d0e74f4506b9fbc83f45382e42b">   34</a></span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aa4968dab9239c251b3415aefcfa53ae1">get_typerefs</a>(self):</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">        this member entry references these types.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">        this is most likely the type name of the corresponding struct entry.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aa4968dab9239c251b3415aefcfa53ae1">   41</a></span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a1d8cd7ab645eb4e99a36a3627021111f">entry_hook</a>(self, data):</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">        allows the data member class to modify the input data</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        is used e.g. for the number =&gt; enum lookup</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a1d8cd7ab645eb4e99a36a3627021111f">   49</a></span>&#160;        <span class="keywordflow">return</span> data</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">get_effective_type</a>(self):</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;return the effective (struct) type of member %s&quot;</span> % type(self))</div><div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">   53</a></span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aac3076daf9912b2241f0651797a8a506">get_empty_value</a>(self):</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        when this data field is not filled, use the returned value instead.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">return</span> 0</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aac3076daf9912b2241f0651797a8a506">   59</a></span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a5020d135379031c1726d24343ab23310">get_length</a>(self, obj=None):</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        del obj  <span class="comment"># unused</span></div><div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a5020d135379031c1726d24343ab23310">   62</a></span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8cc54e765c92a42b17dbe2786cfdef08">verify_read_data</a>(self, obj, data):</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="stringliteral">        gets called for each entry. used to check for storage validity (e.g. 0 expected)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        del obj, data  <span class="comment"># unused</span></div><div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8cc54e765c92a42b17dbe2786cfdef08">   69</a></span>&#160;        <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#acfafb0d6702186d2e0b986a40727509f">get_struct_entries</a>(self, member_name):</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="stringliteral">        return the lines to put inside the C struct.</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#acfafb0d6702186d2e0b986a40727509f">   76</a></span>&#160;        <span class="keywordflow">return</span> [<span class="stringliteral">&quot;%s %s;&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">get_effective_type</a>(), member_name)]</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8a084c4ed03611be299ccd6c67cb5e76">format_hash</a>(self, hasher):</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">        hash these member&#39;s settings.</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">        used to determine data format changes.</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;return the hasher updated with member settings&quot;</span>)</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8a084c4ed03611be299ccd6c67cb5e76">   85</a></span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#add7272a1e3cc7a7b510a23541d0c48bb">__repr__</a>(self):</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">raise</span> NotImplementedError(<span class="stringliteral">&quot;return short description of the member type %s&quot;</span> % (type(self)))</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#add7272a1e3cc7a7b510a23541d0c48bb">   88</a></span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml">GroupMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">DataMember</a>):</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">    member that references to another class, pretty much like the SubdataMember,</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral">    but with a fixed length of 1.</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">    this is just a reference to a single struct instance.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml">   98</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a4e0b12ddd496162ab1ef541d7cc23a22">__init__</a>(self, cls):</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a4e0b12ddd496162ab1ef541d7cc23a22">__init__</a>()</div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a4e0b12ddd496162ab1ef541d7cc23a22">  100</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a> = cls</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">  102</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a111b442520faa27b7d3b0ebe1b2b84b5">get_headers</a>(self, output_target):</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a>.name_struct_file}</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a111b442520faa27b7d3b0ebe1b2b84b5">  104</a></span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ac0404b086e8c2e7e8ab74c72ad542ba6">get_typerefs</a>(self):</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">return</span> {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">get_effective_type</a>()}</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ac0404b086e8c2e7e8ab74c72ad542ba6">  107</a></span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a9b4645349ec2ef37f3a9d028909c4dbd">get_effective_type</a>(self):</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a>.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a9b4645349ec2ef37f3a9d028909c4dbd">get_effective_type</a>()</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a9b4645349ec2ef37f3a9d028909c4dbd">  110</a></span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ad87deb877b828144c6a16df71b0ed1e1">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="comment"># TODO: new type of csv file, probably go for yaml...</span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ad87deb877b828144c6a16df71b0ed1e1">  113</a></span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.fill(buf[%d]);&quot;</span> % (member, idx)],</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                headers     = set(),</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            )</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        ]</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#adb2abe13fffd3036ae2d55d30cfe6261">format_hash</a>(self, hasher):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a>.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#adb2abe13fffd3036ae2d55d30cfe6261">format_hash</a>(hasher)</div><div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#adb2abe13fffd3036ae2d55d30cfe6261">  124</a></span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a49a5bbd442b7928e4818318bce236b63">__repr__</a>(self):</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;GroupMember&lt;%s&gt;&quot;</span> % <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a>)</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a49a5bbd442b7928e4818318bce236b63">  127</a></span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml">IncludeMembers</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml">GroupMember</a>):</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="stringliteral">    a member that requires evaluating the given class</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="stringliteral">    as a include first.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="stringliteral">    example:</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="stringliteral">    the unit class &quot;building&quot; and &quot;movable&quot; will both have</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">    common members that have to be read first.</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ad87deb877b828144c6a16df71b0ed1e1">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;this should never be called!&quot;</span>)</div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml">  141</a></span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml#a76445c68e5173f4c164a4799134a80e6">__repr__</a>(self):</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml#ad56e658097660153550825cd0f8c79c0">  143</a></span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;IncludeMember&lt;%s&gt;&quot;</span> % <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">cls</a>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml#a76445c68e5173f4c164a4799134a80e6">  146</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">DynLengthMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">DataMember</a>):</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="stringliteral">    a member that can have a dynamic length.</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    any_length = <span class="stringliteral">&quot;any_length&quot;</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">  153</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">__init__</a>(self, length):</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">__init__</a>()</div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">  155</a></span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        type_ok = <span class="keyword">False</span></div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">  157</a></span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> isinstance(length, int) <span class="keywordflow">or</span> isinstance(length, str) <span class="keywordflow">or</span> (length <span class="keywordflow">is</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">any_length</a>):</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            type_ok = <span class="keyword">True</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">if</span> callable(length):</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            type_ok = <span class="keyword">True</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> type_ok:</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;invalid length type passed to %s: %s&lt;%s&gt;&quot;</span> % (type(self), length, type(length)))</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a> = length</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a14ed52f719d6d07a9f4308b6824ae6ec">get_length</a>(self, obj=None):</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>():</div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#ac7543594bde360a9522c095b116066d0">  171</a></span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a> <span class="keywordflow">is</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">any_length</a>:</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">any_length</a></div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a14ed52f719d6d07a9f4308b6824ae6ec">  173</a></span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> obj:</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;dynamic length query requires source object&quot;</span>)</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            <span class="keywordflow">if</span> callable(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>):</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="comment"># length is a lambda that determines the length by some fancy manner</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                <span class="comment"># pass the target object as lambda parameter.</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                length_def = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>(obj)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="comment"># if the lambda returns a non-dynamic length (aka a number)</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="comment"># return it directly. otherwise, the returned variable name</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                <span class="comment"># has to be looked up again.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>(target=length_def):</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                    <span class="keywordflow">return</span> length_def</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                <span class="comment"># self.length specifies the attribute name where the length is stored</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;                length_def = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            <span class="comment"># look up the given member name and return the value.</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(length_def, str):</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;length lookup definition is not str: %s&lt;%s&gt;&quot;</span> % (length_def, type(length_def)))</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;            <span class="keywordflow">return</span> getattr(obj, length_def)</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="comment"># non-dynamic length (aka plain number) gets returned directly</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>(self, target=None):</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="keywordflow">if</span> target <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;            target = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">  206</a></span>&#160;        <span class="keywordflow">if</span> target <span class="keywordflow">is</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">any_length</a>:</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">elif</span> isinstance(target, str):</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">elif</span> isinstance(target, int):</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">False</span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">elif</span> callable(target):</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;unknown length definition supplied: %s&quot;</span> % target)</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a9d61825e531ff63ac842efeb88376e8c">format_hash</a>(self, hasher):</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> isinstance(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>, types.LambdaType):</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            <span class="comment"># update hash with the lambda code</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            <span class="comment"># pylint: disable=no-member</span></div><div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a9d61825e531ff63ac842efeb88376e8c">  221</a></span>&#160;            hasher.update(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>.__code__.co_code)</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            hasher.update(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>).encode())</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">RefMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">DataMember</a>):</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="stringliteral">    a struct member that can be referenced/references another struct.</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">__init__</a>(self, type_name, file_name):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        DataMember.__init__(self)</div><div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">  235</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a> = type_name</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a> = file_name</div><div class="line"><a name="l00237"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#ad33cc8d2074cba7148a9e10a35ec1c49">  237</a></span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="comment"># xrefs not supported yet.</span></div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">  239</a></span>&#160;        <span class="comment"># would allow reusing a struct definition that lies in another file</span></div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">  240</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">resolved</a>  = <span class="keyword">False</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#ab1259c0fbb6ecce62302f086c5167396">format_hash</a>(self, hasher):</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="comment"># the file_name is irrelevant for the format hash</span></div><div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">  244</a></span>&#160;        <span class="comment"># engine-internal relevance only.</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#ab1259c0fbb6ecce62302f086c5167396">  246</a></span>&#160;        <span class="comment"># type name is none for subdata members, hash is determined</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="comment"># by recursing into the subdata member itself.</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>:</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;            hasher.update(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>.encode())</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml">NumberMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">DataMember</a>):</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="stringliteral">    this struct member/data column contains simple numbers</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="comment"># primitive types, directly parsable by sscanf</span></div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    type_scan_lookup = {</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml">  261</a></span>&#160;        <span class="stringliteral">&quot;char&quot;</span>:          <span class="stringliteral">&quot;hhd&quot;</span>,</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;        <span class="stringliteral">&quot;int8_t&quot;</span>:        <span class="stringliteral">&quot;hhd&quot;</span>,</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;        <span class="stringliteral">&quot;uint8_t&quot;</span>:       <span class="stringliteral">&quot;hhu&quot;</span>,</div><div class="line"><a name="l00264"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a8a80cc8cc673dbfc246312409daa426f">  264</a></span>&#160;        <span class="stringliteral">&quot;int16_t&quot;</span>:       <span class="stringliteral">&quot;hd&quot;</span>,</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="stringliteral">&quot;uint16_t&quot;</span>:      <span class="stringliteral">&quot;hu&quot;</span>,</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;        <span class="stringliteral">&quot;int&quot;</span>:           <span class="stringliteral">&quot;d&quot;</span>,</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="stringliteral">&quot;int32_t&quot;</span>:       <span class="stringliteral">&quot;d&quot;</span>,</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;        <span class="stringliteral">&quot;uint&quot;</span>:          <span class="stringliteral">&quot;u&quot;</span>,</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        <span class="stringliteral">&quot;uint32_t&quot;</span>:      <span class="stringliteral">&quot;u&quot;</span>,</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="stringliteral">&quot;float&quot;</span>:         <span class="stringliteral">&quot;f&quot;</span>,</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    }</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>(self, number_def):</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>()</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">if</span> number_def <span class="keywordflow">not</span> <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a8a80cc8cc673dbfc246312409daa426f">type_scan_lookup</a>:</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;created number column from unknown type %s&quot;</span> % number_def)</div><div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">  277</a></span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="comment"># type used for the output struct</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a> = number_def</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a>    = number_def</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#af99a4c7a2f6bae6c07dfa914831eb8c2">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">  283</a></span>&#160;        scan_symbol = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a8a80cc8cc673dbfc246312409daa426f">type_scan_lookup</a>[self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a>]</div><div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#affbdd39c2c544f82875f65ed1837840b">  284</a></span>&#160;</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00286"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#af99a4c7a2f6bae6c07dfa914831eb8c2">  286</a></span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                [<span class="stringliteral">&quot;if (sscanf(buf[%d].c_str(), \&quot;%%%s\&quot;, &amp;this-&gt;%s) != 1) &quot;</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                 <span class="stringliteral">&quot;{ return %d; }&quot;</span> % (idx, scan_symbol, member, idx)],</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;                headers     = <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;sscanf&quot;</span>),</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;            )</div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        ]</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#ae1554def5866507bb2a22a7e8eb1812e">get_headers</a>(self, output_target):</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;struct&quot;</span> == output_target:</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a>)</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#ae1554def5866507bb2a22a7e8eb1812e">  299</a></span>&#160;            <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a27b0a04796782524796716eed105a9a4">get_effective_type</a>(self):</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a21171b4018d202687aff259ac8bdedb4">format_hash</a>(self, hasher):</div><div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a27b0a04796782524796716eed105a9a4">  305</a></span>&#160;        hasher.update(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a>.encode())</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a21171b4018d202687aff259ac8bdedb4">  308</a></span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#acebacec44c129380eab30beb999434eb">__repr__</a>(self):</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">number_type</a></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;</div><div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#acebacec44c129380eab30beb999434eb">  313</a></span>&#160;<span class="comment"># TODO: convert to KnownValueMember</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml">ZeroMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml">NumberMember</a>):</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="stringliteral">    data field that is known to always needs to be zero.</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="stringliteral">    neat for finding offset errors.</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>(self, raw_type, length=1):</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>(raw_type)</div><div class="line"><a name="l00322"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml">  322</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a> = length</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml#a4bb50a3a2aea91c7a98d9671a3386fbc">  324</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml#aa2d18ece0f269df3d8823dfe4ab880bf">verify_read_data</a>(self, obj, data):</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;        <span class="comment"># fail if a single value of data != 0</span></div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml#ad379a03fd796e58c4b51d0ccd1944d8e">  326</a></span>&#160;        <span class="keywordflow">if</span> any(<span class="keyword">False</span> <span class="keywordflow">if</span> v == 0 <span class="keywordflow">else</span> <span class="keyword">True</span> <span class="keywordflow">for</span> v <span class="keywordflow">in</span> data):</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">False</span></div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml#aa2d18ece0f269df3d8823dfe4ab880bf">  328</a></span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;            <span class="keywordflow">return</span> <span class="keyword">True</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml">ContinueReadMemberResult</a>(Enum):</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    ABORT    = <span class="stringliteral">&quot;data_absent&quot;</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    CONTINUE = <span class="stringliteral">&quot;data_exists&quot;</span></div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml">  336</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml#a09bac03629c7499554002bc814a9cbc7">__str__</a>(self):</div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml#acf024e50374e16529efba2a16f2ac83a">  337</a></span>&#160;        <span class="keywordflow">return</span> self.value</div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml#aa55bc013597a377b15959d52f050bd48">  338</a></span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;</div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml#a09bac03629c7499554002bc814a9cbc7">  340</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml">ContinueReadMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml">NumberMember</a>):</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="stringliteral">    data field that aborts reading further members of the class</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="stringliteral">    when its value == 0.</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    Result = ContinueReadMemberResult</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml">  348</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#aaa0982c5a278043f631a41329ed39aab">entry_hook</a>(self, data):</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        <span class="keywordflow">if</span> data == 0:</div><div class="line"><a name="l00350"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">  350</a></span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">Result</a>.ABORT</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#aaa0982c5a278043f631a41329ed39aab">  352</a></span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">Result</a>.CONTINUE</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a2ed4737fd7575a73126f92488ea97753">get_empty_value</a>(self):</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        <span class="keywordflow">return</span> 0</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#af495eeb0589a107c03a789b9b59a37c8">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a2ed4737fd7575a73126f92488ea97753">  358</a></span>&#160;        entry_parser_txt = (</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;            <span class="stringliteral">&quot;// remember if the following members are undefined&quot;</span>,</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;            <span class="stringliteral">&#39;if (buf[%d] == &quot;%s&quot;) {&#39;</span> % (idx, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">Result</a>.ABORT.value),</div><div class="line"><a name="l00361"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#af495eeb0589a107c03a789b9b59a37c8">  361</a></span>&#160;            <span class="stringliteral">&quot;    this-&gt;%s = 0;&quot;</span> % (member),</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;            <span class="stringliteral">&#39;} else if (buf[%d] == &quot;%s&quot;) {&#39;</span> % (idx, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">Result</a>.CONTINUE.value),</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;            <span class="stringliteral">&quot;    this-&gt;%s = 1;&quot;</span> % (member),</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;            <span class="stringliteral">&quot;} else {&quot;</span>,</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;            (<span class="stringliteral">&#39;    throw openage::error::Error(ERR &lt;&lt; &quot;unexpected value \&#39;&quot;&#39;</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;             <span class="stringliteral">&#39;&lt;&lt; buf[%d] &lt;&lt; &quot;\&#39; for %s&quot;);&#39;</span> % (idx, self.__class__.__name__)),</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;            <span class="stringliteral">&quot;}&quot;</span>,</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;        )</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;                entry_parser_txt,</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;                headers     = <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a>((<span class="stringliteral">&quot;engine_error&quot;</span>,)),</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;            )</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        ]</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml">EnumMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">RefMember</a>):</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;<span class="stringliteral">    this struct member/data column is a enum.</span></div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>(self, type_name, values, file_name=None):</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">__init__</a>(type_name, file_name)</div><div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml">  387</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a>    = values</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">resolved</a>  = <span class="keyword">True</span>    <span class="comment"># TODO, xrefs not supported yet.</span></div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a34b3fdd1960ae5d860dbba463d5fe55e">  389</a></span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a815464eef9720becdee8f954d2134989">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00391"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">  391</a></span>&#160;        enum_parse_else = <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00392"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a2a395ed6e913992a82b54b4724780b00">  392</a></span>&#160;        enum_parser = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;        enum_parser.append(<span class="stringliteral">&quot;// parse enum %s&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>))</div><div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a815464eef9720becdee8f954d2134989">  394</a></span>&#160;        <span class="keywordflow">for</span> enum_value <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a>:</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;            enum_parser.extend([</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;                <span class="stringliteral">&#39;%sif (buf[%d] == &quot;%s&quot;) {&#39;</span> % (enum_parse_else, idx, enum_value),</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;                <span class="stringliteral">&quot;    this-&gt;%s = %s::%s;&quot;</span> % (member, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>, enum_value),</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;                <span class="stringliteral">&quot;}&quot;</span>,</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;            ])</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            enum_parse_else = <span class="stringliteral">&quot;else &quot;</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;        enum_parser.append(</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="stringliteral">&quot;else {{\n&quot;</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="stringliteral">&quot;    throw openage::error::Error(\n&quot;</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="stringliteral">&quot;        MSG(err)\n&quot;</span></div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="stringliteral">&#39;        &lt;&lt; &quot;unknown enum value \&#39;&quot; &lt;&lt; buf[{idx}]\n&#39;</span></div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="stringliteral">&#39;        &lt;&lt; &quot;\&#39; encountered. valid are: &quot;\n&#39;</span></div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="stringliteral">&#39;           &quot;{valids}\\n---\\n&quot;\n&#39;</span></div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            <span class="stringliteral">&#39;           &quot;If this is an inconsistency due to updates in the &quot;\n&#39;</span></div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;            <span class="stringliteral">&#39;           &quot;media converter, try re-converting the assets\\n---\&quot;\n&#39;</span></div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="stringliteral">&#39;    );&#39;</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="stringliteral">&quot;}}&quot;</span>.format(idx=idx, valids=<span class="stringliteral">&quot;,&quot;</span>.join(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a>)),</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        )</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                enum_parser,</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                headers     = <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a>((<span class="stringliteral">&quot;engine_error&quot;</span>)),</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;            )</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;        ]</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a12f56e75f97144d787c390bfb236e6f6">get_headers</a>(self, output_target):</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;        <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a389a1dcae4781387c6e38f14e907f21f">get_typerefs</a>(self):</div><div class="line"><a name="l00428"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a12f56e75f97144d787c390bfb236e6f6">  428</a></span>&#160;        <span class="keywordflow">return</span> {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">get_effective_type</a>()}</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0252612eeda42f3c7553ea1b1e1212f9">get_effective_type</a>(self):</div><div class="line"><a name="l00431"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a389a1dcae4781387c6e38f14e907f21f">  431</a></span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a2bc739bc4cd27300bb2f88e78887a22f">validate_value</a>(self, value):</div><div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0252612eeda42f3c7553ea1b1e1212f9">  434</a></span>&#160;        <span class="keywordflow">return</span> value <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a></div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a274e331b508216591106df9b98644854">get_snippets</a>(self, file_name, format_):</div><div class="line"><a name="l00437"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a2bc739bc4cd27300bb2f88e78887a22f">  437</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;<span class="stringliteral">        generate enum snippets from given data</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;<span class="stringliteral">        input: EnumMember</span></div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="stringliteral">        output: ContentSnippet</span></div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;        <span class="keywordflow">if</span> format_ == <span class="stringliteral">&quot;struct&quot;</span>:</div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;            snippet_file_name = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a> <span class="keywordflow">or</span> file_name</div><div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a274e331b508216591106df9b98644854">  446</a></span>&#160;</div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;            txt = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;            <span class="comment"># create enum definition</span></div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;            txt.extend([</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;                <span class="stringliteral">&quot;enum class %s {\n    &quot;</span> % self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="stringliteral">&quot;,\n    &quot;</span>.join(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a>),</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                <span class="stringliteral">&quot;\n};\n\n&quot;</span>,</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;            ])</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;            snippet = <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet.xhtml">ContentSnippet</a>(</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <span class="stringliteral">&quot;&quot;</span>.join(txt),</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                snippet_file_name,</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                SectionType.section_body,</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                orderby=self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;                reprtxt=<span class="stringliteral">&quot;enum class %s&quot;</span> % self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;            )</div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;            snippet.typedefs |= {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>}</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;            <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0fcf1a7012f76c251b31eb760ef911ee">format_hash</a>(self, hasher):</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;        hasher = super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0fcf1a7012f76c251b31eb760ef911ee">format_hash</a>(hasher)</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;        <span class="keywordflow">for</span> v <span class="keywordflow">in</span> sorted(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">values</a>):</div><div class="line"><a name="l00473"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0fcf1a7012f76c251b31eb760ef911ee">  473</a></span>&#160;            hasher.update(v.encode())</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;</div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a15f292c4683ba4337a33bd52c0581f70">__repr__</a>(self):</div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;enum %s&quot;</span> % self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a15f292c4683ba4337a33bd52c0581f70">  481</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml">EnumLookupMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml">EnumMember</a>):</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="stringliteral">    enum definition, does lookup of raw datfile data =&gt; enum value</span></div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a34b3fdd1960ae5d860dbba463d5fe55e">__init__</a>(self, type_name, lookup_dict, raw_type, file_name=None):</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a34b3fdd1960ae5d860dbba463d5fe55e">__init__</a>(</div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml">  488</a></span>&#160;            type_name,</div><div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;            [v <span class="keywordflow">for</span> k, v <span class="keywordflow">in</span> sorted(lookup_dict.items())],</div><div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a2a58328459ee86b657f988c8db22c231">  490</a></span>&#160;            file_name</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;        )</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a15377de5817b4f41c01deef15e6d02cf">lookup_dict</a> = lookup_dict</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a> = raw_type</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a4d654b6ba05da6a0aba27b9008fa38cb">entry_hook</a>(self, data):</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a15377de5817b4f41c01deef15e6d02cf">  496</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a7271f732ee395abd13eeccf563aee064">  497</a></span>&#160;<span class="stringliteral">        perform lookup of raw data -&gt; enum member name</span></div><div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;</div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;            <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a15377de5817b4f41c01deef15e6d02cf">lookup_dict</a>[data]</div><div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a4d654b6ba05da6a0aba27b9008fa38cb">  502</a></span>&#160;        <span class="keywordflow">except</span> KeyError:</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;            <span class="keywordflow">try</span>:</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;                h = <span class="stringliteral">&quot; = %s&quot;</span> % hex(data)</div><div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;            <span class="keywordflow">except</span> TypeError:</div><div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;                h = <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;failed to find %s%s in lookup dict %s!&quot;</span> % (<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(data), h, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>)) <span class="keyword">from</span> <span class="keywordtype">None</span></div><div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;</div><div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;</div><div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml">CharArrayMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">DynLengthMember</a>):</div><div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;<span class="stringliteral">    struct member/column type that allows to store equal-length char[n].</span></div><div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;</div><div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a2a58328459ee86b657f988c8db22c231">__init__</a>(self, length):</div><div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a2a58328459ee86b657f988c8db22c231">__init__</a>(length)</div><div class="line"><a name="l00517"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml">  517</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a> = <span class="stringliteral">&quot;char[]&quot;</span></div><div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;</div><div class="line"><a name="l00519"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#af28239ac1c0c7b157c9dcab18a09e2a7">  519</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad63fed30ee3cf877fa333088b1cab269">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;        headers = set()</div><div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a1813480ccc319a48b1c78495530ddbca">  521</a></span>&#160;</div><div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>():</div><div class="line"><a name="l00523"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad63fed30ee3cf877fa333088b1cab269">  523</a></span>&#160;            <span class="comment"># copy to std::string</span></div><div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;            lines = [<span class="stringliteral">&quot;this-&gt;%s = buf[%d];&quot;</span> % (member, idx)]</div><div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;</div><div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;            <span class="comment"># copy to char[n]</span></div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;            data_length = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a5020d135379031c1726d24343ab23310">get_length</a>()</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;            lines = [</div><div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;                <span class="stringliteral">&quot;strncpy(this-&gt;%s, buf[%d].c_str(), %d);&quot;</span> % (member, idx, data_length),</div><div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;                <span class="stringliteral">&quot;this-&gt;%s[%d] = &#39;\\0&#39;;&quot;</span> % (member, data_length - 1),</div><div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;            ]</div><div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;            headers |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;strncpy&quot;</span>)</div><div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div><div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;                lines,</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;                headers     = headers,</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;            )</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;        ]</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#aeaf778094650f419072b942ff8d0dc8e">get_headers</a>(self, output_target):</div><div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;        ret = set()</div><div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;struct&quot;</span> == output_target:</div><div class="line"><a name="l00548"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#aeaf778094650f419072b942ff8d0dc8e">  548</a></span>&#160;            <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>():</div><div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                ret |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;std::string&quot;</span>)</div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;        <span class="keywordflow">return</span> ret</div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a8074ffeba13087d4b26a51ac9ef1fe7e">get_effective_type</a>(self):</div><div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a>():</div><div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;std::string&quot;</span></div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00557"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a8074ffeba13087d4b26a51ac9ef1fe7e">  557</a></span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;char&quot;</span></div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div><div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad4d5a588c6546557cebceb9b860857f1">get_empty_value</a>(self):</div><div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div><div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a07b4dd518b5b9151d4510d893f8c07e5">__repr__</a>(self):</div><div class="line"><a name="l00563"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad4d5a588c6546557cebceb9b860857f1">  563</a></span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;%s[%s]&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">get_effective_type</a>(), self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>)</div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a07b4dd518b5b9151d4510d893f8c07e5">  566</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml">StringMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml">CharArrayMember</a>):</div><div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;<span class="stringliteral">    member with unspecified string length, aka std::string</span></div><div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;</div><div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#af28239ac1c0c7b157c9dcab18a09e2a7">__init__</a>(self):</div><div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#af28239ac1c0c7b157c9dcab18a09e2a7">__init__</a>(DynLengthMember.any_length)</div><div class="line"><a name="l00573"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml">  573</a></span>&#160;</div><div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;</div><div class="line"><a name="l00575"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml#ab0472a26b67510f4a7bd4b79b48dbc31">  575</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml">MultisubtypeMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">RefMember</a>, <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">DynLengthMember</a>):</div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;<span class="stringliteral">    struct member/data column that groups multiple references to</span></div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="stringliteral">    multiple other data sets.</span></div><div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;</div><div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml#ab0472a26b67510f4a7bd4b79b48dbc31">__init__</a>(self, type_name, subtype_definition, class_lookup, length,</div><div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;                 passed_args=None, ref_to=None,</div><div class="line"><a name="l00583"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml">  583</a></span>&#160;                 offset_to=None, file_name=None,</div><div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                 ref_type_params=None):</div><div class="line"><a name="l00585"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abb999586d6c8c77e3eb1c520deda4819">  585</a></span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        RefMember.__init__(self, type_name, file_name)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        DynLengthMember.__init__(self, length)</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="comment"># to determine the subtype for each entry,</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="comment"># read this value to do the class_lookup</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ad76bf42f766fba6d160c0a0f2408b7f6">subtype_definition</a> = subtype_definition</div><div class="line"><a name="l00592"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ad76bf42f766fba6d160c0a0f2408b7f6">  592</a></span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="comment"># dict to look up type_name =&gt; exportable class</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>       = class_lookup</div><div class="line"><a name="l00595"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">  595</a></span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="comment"># list of member names whose values will be passed to the new class</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#af278ba52cb2291334852e0de4ae1c7e5">passed_args</a>        = passed_args</div><div class="line"><a name="l00598"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#af278ba52cb2291334852e0de4ae1c7e5">  598</a></span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="comment"># add this member name&#39;s value to the filename</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a69612f9b63e76655dc34996cd7d42484">ref_to</a>             = ref_to</div><div class="line"><a name="l00601"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a69612f9b63e76655dc34996cd7d42484">  601</a></span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="comment"># link to member name which is a list of binary file offsets</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a5fe7e102cb5c65e32d043d7a4662e2b8">offset_to</a>          = offset_to</div><div class="line"><a name="l00604"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a5fe7e102cb5c65e32d043d7a4662e2b8">  604</a></span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="comment"># dict to specify type_name =&gt; constructor arguments</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3c02376fcce16d3bc085246f2de847e">ref_type_params</a>    = ref_type_params</div><div class="line"><a name="l00607"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3c02376fcce16d3bc085246f2de847e">  607</a></span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <span class="comment"># no xrefs supported yet.. just set to true as if they were resolved.</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">resolved</a>           = <span class="keyword">True</span></div><div class="line"><a name="l00610"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3bb69b6f958afa092583d2925465598">  610</a></span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abff2c6510cd43895368ddb3b8e75fa3a">get_headers</a>(self, output_target):</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;struct&quot;</span> == output_target:</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;std::vector&quot;</span>)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="line"><a name="l00615"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abff2c6510cd43895368ddb3b8e75fa3a">  615</a></span>&#160;        <span class="keywordflow">elif</span> <span class="stringliteral">&quot;structimpl&quot;</span> == output_target:</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;read_csv_file&quot;</span>)</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a27571ee3aea8f88f36ae23140c9e77c0">get_effective_type</a>(self):</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a></div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a2b0c3e9b8181b04312a30d3471796acc">get_empty_value</a>(self):</div><div class="line"><a name="l00625"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a27571ee3aea8f88f36ae23140c9e77c0">  625</a></span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">get_contained_types</a>(self):</div><div class="line"><a name="l00628"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a2b0c3e9b8181b04312a30d3471796acc">  628</a></span>&#160;        <span class="keywordflow">return</span> {</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            contained_type.get_effective_type()</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            <span class="keywordflow">for</span> contained_type <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>.values()</div><div class="line"><a name="l00631"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">  631</a></span>&#160;        }</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#add52bbeac462df02499e1942ddca2dc5">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            <span class="comment"># first, the parser to just read the index file name</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00637"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#add52bbeac462df02499e1942ddca2dc5">  637</a></span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.subdata_meta.filename = buf[%d];&quot;</span> % (member, idx)],</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                headers     = set(),</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            ),</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="comment"># then the parser that uses the index file to recurse over</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            <span class="comment"># the &quot;real&quot; data entries.</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            <span class="comment"># the above parsed filename is searched in this basedir.</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.recurse(storage, basedir);&quot;</span> % (member)],</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                headers     = set(),</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                destination = <span class="stringliteral">&quot;recurse&quot;</span>,</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            )</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        ]</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a567e8cd4638f6d804bb7a4da292b076f">get_typerefs</a>(self):</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">return</span> {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>}</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a81e16d3f5273041083c8497f102803ae">get_snippets</a>(self, file_name, format_):</div><div class="line"><a name="l00657"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a567e8cd4638f6d804bb7a4da292b076f">  657</a></span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="stringliteral">        return struct definitions for this type</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;</div><div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;        <span class="keyword">from</span> .multisubtype_base <span class="keyword">import</span> MultisubtypeBaseFile</div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;</div><div class="line"><a name="l00663"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a81e16d3f5273041083c8497f102803ae">  663</a></span>&#160;        snippet_file_name = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a> <span class="keywordflow">or</span> file_name</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <span class="keywordflow">if</span> format_ == <span class="stringliteral">&quot;struct&quot;</span>:</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            <span class="comment"># all the struct info is packed in one text snippet.</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            snippet = <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1struct__snippet_1_1_struct_snippet.xhtml">StructSnippet</a>(snippet_file_name, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <span class="comment"># for each subdata type, add a container struct,</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            <span class="comment"># which basically stores the list of entries of that subdata.</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordflow">for</span> (entry_name, entry_type) <span class="keywordflow">in</span> sorted(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>.items()):</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                entry_type = entry_type.get_effective_type()</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                snippet.add_member(</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                    <span class="stringliteral">&quot;struct openage::util::csv_subdata&lt;%s&gt; %s;&quot;</span> % (</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                        GeneratedFile.namespacify(entry_type), entry_name</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                    )</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                )</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                snippet.typerefs |= {entry_type}</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            snippet.includes |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;csv_subdata&quot;</span>)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            snippet.typerefs |= {MultisubtypeBaseFile.name_struct}</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;            <span class="comment"># metainformation about locations and types of subdata to recurse</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="comment"># basically maps subdata type to a filename where this subdata is stored</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            snippet.add_member(<span class="stringliteral">&quot;struct openage::util::csv_subdata&lt;%s&gt; subdata_meta;\n&quot;</span> % (</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                MultisubtypeBaseFile.name_struct))</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            <span class="comment"># add member methods to the struct</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            <span class="keyword">from</span> .data_formatter <span class="keyword">import</span> DataFormatter</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            snippet.add_members((</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                <span class="stringliteral">&quot;%s;&quot;</span> % member.get_signature()</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                <span class="keywordflow">for</span> _, member <span class="keywordflow">in</span> sorted(DataFormatter.member_methods.items())</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;            ))</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <span class="keywordflow">elif</span> format_ == <span class="stringliteral">&quot;structimpl&quot;</span>:</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="comment"># TODO: generalize this member function generation...</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            txt = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="comment"># function to fill up the struct contents, does nothing here.</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            txt.append(</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                <span class="stringliteral">&quot;int {type_name}::fill(const std::string &amp; /*line*/) {{\n&quot;</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                <span class="stringliteral">&quot;    return -1;\n&quot;</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                <span class="stringliteral">&quot;}}\n&quot;</span>.format(type_name = self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>)</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            )</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="comment"># function to recursively read the referenced files</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            <span class="comment"># this reads the metainformation for the subtypes to be read.</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            <span class="comment">#</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="comment"># this is invoked in util/csv.h:</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            <span class="comment"># CSVCollection::read</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            txt.append(</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="stringliteral">&quot;bool {type_name}::recurse(const openage::util::CSVCollection &amp;storage,\n&quot;</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                <span class="stringliteral">&quot;{type_leng}               const std::string &amp;basedir) {{\n&quot;</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                <span class="stringliteral">&quot;    // the .filename was set by the previous entry parser already\n&quot;</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                <span class="stringliteral">&quot;    // so now read the index-file entries\n&quot;</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                <span class="stringliteral">&quot;    this-&gt;subdata_meta.read(storage, basedir);\n&quot;</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                <span class="stringliteral">&quot;    int subtype_count = this-&gt;subdata_meta.data.size();\n&quot;</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <span class="stringliteral">&quot;    if (subtype_count != {subtype_count}) {{\n&quot;</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                <span class="stringliteral">&quot;        throw openage::error::Error(\n&quot;</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                <span class="stringliteral">&#39;            ERR &lt;&lt; &quot;multisubtype index file entry count mismatched!&quot;\n&#39;</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                <span class="stringliteral">&#39;            &lt;&lt; subtype_count &lt;&lt; &quot; != {subtype_count}&quot;\n&#39;</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                <span class="stringliteral">&quot;        );\n&quot;</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                <span class="stringliteral">&quot;    // the recursed data files are relative to the subdata_meta filename\n&quot;</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                <span class="stringliteral">&quot;    std::string metadata_dir = basedir + openage::util::fslike::PATHSEP + openage::util::dirname(this-&gt;subdata_meta.filename);\n&quot;</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                <span class="stringliteral">&quot;    int idx;\n&quot;</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                <span class="stringliteral">&quot;    int idxtry;\n&quot;</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span>.format(type_name=self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                            type_leng=<span class="stringliteral">&quot; &quot;</span> * len(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>),</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                            subtype_count=len(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>))</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            )</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">for</span> (entry_name, entry_type) <span class="keywordflow">in</span> sorted(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>.items()):</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="comment"># for each type in a multisubtype member:</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                <span class="comment"># * try to find the type name index in the metadatafile</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                <span class="comment"># * fetch the filename for that type from the metadata (by the index)</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                <span class="comment"># * fill that subdata type with information</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                txt.append(</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                    <span class="stringliteral">&quot;    // read subtype &#39;{entry_name}&#39;\n&quot;</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                    <span class="stringliteral">&quot;    idx = -1;\n&quot;</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                    <span class="stringliteral">&quot;    idxtry = 0;\n&quot;</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                    <span class="stringliteral">&quot;    // find the index of the subdata in the metadata\n&quot;</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                    <span class="stringliteral">&quot;    for (auto &amp;file_reference : this-&gt;subdata_meta.data) {{\n&quot;</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                    <span class="stringliteral">&#39;        if (file_reference.subtype == &quot;{entry_name}&quot;) {{\n&#39;</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                    <span class="stringliteral">&quot;            idx = idxtry;\n&quot;</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                    <span class="stringliteral">&quot;            break;\n&quot;</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                    <span class="stringliteral">&quot;        }}\n&quot;</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                    <span class="stringliteral">&quot;        idxtry += 1;\n&quot;</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                    <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                    <span class="stringliteral">&quot;    if (idx == -1) {{\n&quot;</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                    <span class="stringliteral">&quot;        throw openage::error::Error(\n&quot;</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                    <span class="stringliteral">&#39;            ERR &lt;&lt; &quot;multisubtype index file contains no entry for {entry_name}!&quot;\n&#39;</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                    <span class="stringliteral">&quot;        );\n&quot;</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                    <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                    <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                    <span class="stringliteral">&quot;    // the filename is relative to the metadata file!\n&quot;</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                    <span class="stringliteral">&quot;    this-&gt;{entry_name}.filename = this-&gt;subdata_meta.data[idx].filename;\n&quot;</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                    <span class="stringliteral">&quot;    this-&gt;{entry_name}.read(storage, metadata_dir);\n&quot;</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                    <span class="stringliteral">&quot;\n&quot;</span>.format(entry_name=entry_name)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                )</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            txt.append(</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                <span class="stringliteral">&quot;    return true;\n&quot;</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                <span class="stringliteral">&quot;}\n&quot;</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            )</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            snippet = <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet.xhtml">ContentSnippet</a>(</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                <span class="stringliteral">&quot;&quot;</span>.join(txt),</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                snippet_file_name,</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                SectionType.section_body,</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                orderby=self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                reprtxt=<span class="stringliteral">&quot;multisubtype %s container fill function&quot;</span> % self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>,</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            )</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            snippet.typerefs |= (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">get_contained_types</a>() |</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                                 {self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>, MultisubtypeBaseFile.name_struct})</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            snippet.includes |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a>(</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                (<span class="stringliteral">&quot;util::Path&quot;</span>, <span class="stringliteral">&quot;engine_error&quot;</span>, <span class="stringliteral">&quot;csv_collection&quot;</span>, <span class="stringliteral">&quot;std::string&quot;</span>)</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            )</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abca0aea22855fc04f42a9c3583f9c7d5">format_hash</a>(self, hasher):</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        hasher = RefMember.format_hash(self, hasher)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        hasher = DynLengthMember.format_hash(self, hasher)</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="line"><a name="l00796"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abca0aea22855fc04f42a9c3583f9c7d5">  796</a></span>&#160;        <span class="keywordflow">for</span> _, subtype_class <span class="keywordflow">in</span> sorted(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>.items()):</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            hasher = subtype_class.format_hash(hasher)</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae0a3a0241b823f90f1bcb74e1619df1f">__repr__</a>(self):</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;MultisubtypeMember&lt;%s:len=%s&gt;&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div><div class="line"><a name="l00805"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae0a3a0241b823f90f1bcb74e1619df1f">  805</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml">SubdataMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml">MultisubtypeMember</a>):</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="stringliteral">    Struct member/data column that references to just one another data set.</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="stringliteral">    It&#39;s a special case of the multisubtypemember with one subtype.</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abb999586d6c8c77e3eb1c520deda4819">__init__</a>(self, ref_type, length, offset_to=None,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                 ref_to=None, ref_type_params=None, passed_args=None):</div><div class="line"><a name="l00813"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml">  813</a></span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a7cb1448327b125c2c14f448c084cf578">__init__</a>(</div><div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;            type_name          = <span class="keywordtype">None</span>,</div><div class="line"><a name="l00815"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a7cb1448327b125c2c14f448c084cf578">  815</a></span>&#160;            subtype_definition = <span class="keywordtype">None</span>,</div><div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;            class_lookup       = {<span class="keywordtype">None</span>: ref_type},</div><div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;            length             = length,</div><div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;            offset_to          = offset_to,</div><div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;            ref_to             = ref_to,</div><div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;            ref_type_params    = {<span class="keywordtype">None</span>: ref_type_params},</div><div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;            passed_args        = passed_args,</div><div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;        )</div><div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div><div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#affdef24b47a64dae69159b0e27b46b65">get_headers</a>(self, output_target):</div><div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;struct&quot;</span> == output_target:</div><div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;csv_subdata&quot;</span>)</div><div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00828"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#affdef24b47a64dae69159b0e27b46b65">  828</a></span>&#160;            <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;</div><div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a008f8bc74d5b8781e661ab9edd07e57c">get_subtype</a>(self):</div><div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;        <span class="keywordflow">return</span> GeneratedFile.namespacify(tuple(self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">get_contained_types</a>())[0])</div><div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;</div><div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#acef3ec7e71f233ef9820acfb7fa797c6">get_effective_type</a>(self):</div><div class="line"><a name="l00834"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a008f8bc74d5b8781e661ab9edd07e57c">  834</a></span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;openage::util::csv_subdata&lt;%s&gt;&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a008f8bc74d5b8781e661ab9edd07e57c">get_subtype</a>())</div><div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div><div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a3a82d094d79fb43f8ac33b083a8d53cb">get_parsers</a>(self, idx, member):</div><div class="line"><a name="l00837"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#acef3ec7e71f233ef9820acfb7fa797c6">  837</a></span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;            <span class="comment"># to read subdata, first fetch the filename to read</span></div><div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00840"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a3a82d094d79fb43f8ac33b083a8d53cb">  840</a></span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.filename = buf[%d];&quot;</span> % (member, idx)],</div><div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;                headers     = set(),</div><div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;            ),</div><div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;            <span class="comment"># then read the subdata content from the storage,</span></div><div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;            <span class="comment"># searching for the filename relative to basedir.</span></div><div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;            <a class="code" href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">EntryParser</a>(</div><div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.read(storage, basedir);&quot;</span> % (member)],</div><div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;                headers     = set(),</div><div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;                destination = <span class="stringliteral">&quot;recurse&quot;</span>,</div><div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;            ),</div><div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;        ]</div><div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;</div><div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#aa1b9333b1bb2ac9110c8adaf1dd13113">get_snippets</a>(self, file_name, format_):</div><div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;        del file_name, format_  <span class="comment"># unused</span></div><div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;</div><div class="line"><a name="l00859"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#aa1b9333b1bb2ac9110c8adaf1dd13113">  859</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#addde0bcc5fa0ebb0b0a26d4c32a6a68c">get_typerefs</a>(self):</div><div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">get_contained_types</a>()</div><div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;</div><div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a4407b1d4a8039bc8a369a59c52bcbdcc">get_subdata_type_name</a>(self):</div><div class="line"><a name="l00863"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#addde0bcc5fa0ebb0b0a26d4c32a6a68c">  863</a></span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>[<span class="keywordtype">None</span>].__name__</div><div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;</div><div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a160732dffbb5935f0b02b26938d2e658">__repr__</a>(self):</div><div class="line"><a name="l00866"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a4407b1d4a8039bc8a369a59c52bcbdcc">  866</a></span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;SubdataMember&lt;%s:len=%s&gt;&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a4407b1d4a8039bc8a369a59c52bcbdcc">get_subdata_type_name</a>(), self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>)</div><div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;</div><div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;</div><div class="line"><a name="l00869"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a160732dffbb5935f0b02b26938d2e658">  869</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml">ArrayMember</a>(<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">DynLengthMember</a>):</div><div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;<span class="stringliteral">    subdata member for C-type arrays like float[8].</span></div><div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;</div><div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a7cb1448327b125c2c14f448c084cf578">__init__</a>(self, raw_type, length):</div><div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;        super().<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a7cb1448327b125c2c14f448c084cf578">__init__</a>(length)</div><div class="line"><a name="l00876"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml">  876</a></span>&#160;        self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a> = raw_type</div><div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;</div><div class="line"><a name="l00878"></a><span class="lineno"><a class="line" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml#a9254fec48acd4efd10523b2db965a1ec">  878</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml#a5dc1be9f5fadd1b992d6f76befb07a27">__repr__</a>(self):</div><div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;ArrayMember&lt;%s:len=%s&gt;&quot;</span> % (self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a>, self.<a class="code" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a>)</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a15f292c4683ba4337a33bd52c0581f70"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a15f292c4683ba4337a33bd52c0581f70">openage.convert.dataformat.members.EnumMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00481">members.py:481</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml">openage.convert.dataformat.members.ContinueReadMemberResult</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00336">members.py:336</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_a07b4dd518b5b9151d4510d893f8c07e5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a07b4dd518b5b9151d4510d893f8c07e5">openage.convert.dataformat.members.CharArrayMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00566">members.py:566</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member_xhtml_a4d654b6ba05da6a0aba27b9008fa38cb"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a4d654b6ba05da6a0aba27b9008fa38cb">openage.convert.dataformat.members.EnumLookupMember.entry_hook</a></div><div class="ttdeci">def entry_hook(self, data)</div><div class="ttdoc">perform lookup of raw data -&gt; enum member name</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00502">members.py:502</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_add7272a1e3cc7a7b510a23541d0c48bb"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#add7272a1e3cc7a7b510a23541d0c48bb">openage.convert.dataformat.members.DataMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00088">members.py:88</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member_xhtml_ab0472a26b67510f4a7bd4b79b48dbc31"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml#ab0472a26b67510f4a7bd4b79b48dbc31">openage.convert.dataformat.members.StringMember.__init__</a></div><div class="ttdeci">def __init__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00575">members.py:575</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_xhtml_aaa0982c5a278043f631a41329ed39aab"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#aaa0982c5a278043f631a41329ed39aab">openage.convert.dataformat.members.ContinueReadMember.entry_hook</a></div><div class="ttdeci">def entry_hook(self, data)</div><div class="ttdoc">allows the data member class to modify the input data</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00352">members.py:352</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml">openage.convert.dataformat.members.ArrayMember</a></div><div class="ttdoc">subdata member for C-type arrays like float[8].</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00876">members.py:876</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_aac3076daf9912b2241f0651797a8a506"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aac3076daf9912b2241f0651797a8a506">openage.convert.dataformat.members.DataMember.get_empty_value</a></div><div class="ttdeci">def get_empty_value(self)</div><div class="ttdoc">when this data field is not filled, use the returned value instead.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00059">members.py:59</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a5fe7e102cb5c65e32d043d7a4662e2b8"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a5fe7e102cb5c65e32d043d7a4662e2b8">openage.convert.dataformat.members.MultisubtypeMember.offset_to</a></div><div class="ttdeci">offset_to</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00604">members.py:604</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a34b3fdd1960ae5d860dbba463d5fe55e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a34b3fdd1960ae5d860dbba463d5fe55e">openage.convert.dataformat.members.EnumMember.__init__</a></div><div class="ttdeci">def __init__(self, type_name, values, file_name=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00389">members.py:389</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a50a2a9e4d4dac90934ab7566bc887b05"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">openage.convert.dataformat.members.MultisubtypeMember.class_lookup</a></div><div class="ttdeci">class_lookup</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00595">members.py:595</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a815464eef9720becdee8f954d2134989"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a815464eef9720becdee8f954d2134989">openage.convert.dataformat.members.EnumMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00394">members.py:394</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a274e331b508216591106df9b98644854"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a274e331b508216591106df9b98644854">openage.convert.dataformat.members.EnumMember.get_snippets</a></div><div class="ttdeci">def get_snippets(self, file_name, format_)</div><div class="ttdoc">generate enum snippets from given data</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00446">members.py:446</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_a3a82d094d79fb43f8ac33b083a8d53cb"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a3a82d094d79fb43f8ac33b083a8d53cb">openage.convert.dataformat.members.SubdataMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00840">members.py:840</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_xhtml_a054611a40251cc8115d922bfc6bdbf2d"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a054611a40251cc8115d922bfc6bdbf2d">openage.convert.dataformat.members.ContinueReadMember.Result</a></div><div class="ttdeci">Result</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00350">members.py:350</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a0252612eeda42f3c7553ea1b1e1212f9"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0252612eeda42f3c7553ea1b1e1212f9">openage.convert.dataformat.members.EnumMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00434">members.py:434</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_af278ba52cb2291334852e0de4ae1c7e5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#af278ba52cb2291334852e0de4ae1c7e5">openage.convert.dataformat.members.MultisubtypeMember.passed_args</a></div><div class="ttdeci">passed_args</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00598">members.py:598</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml_a9d61825e531ff63ac842efeb88376e8c"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a9d61825e531ff63ac842efeb88376e8c">openage.convert.dataformat.members.DynLengthMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00221">members.py:221</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_a160732dffbb5935f0b02b26938d2e658"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a160732dffbb5935f0b02b26938d2e658">openage.convert.dataformat.members.SubdataMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00869">members.py:869</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_xhtml_a2ed4737fd7575a73126f92488ea97753"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#a2ed4737fd7575a73126f92488ea97753">openage.convert.dataformat.members.ContinueReadMember.get_empty_value</a></div><div class="ttdeci">def get_empty_value(self)</div><div class="ttdoc">when this data field is not filled, use the returned value instead.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00358">members.py:358</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_ac0404b086e8c2e7e8ab74c72ad542ba6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ac0404b086e8c2e7e8ab74c72ad542ba6">openage.convert.dataformat.members.GroupMember.get_typerefs</a></div><div class="ttdeci">def get_typerefs(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00107">members.py:107</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml_a14ed52f719d6d07a9f4308b6824ae6ec"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a14ed52f719d6d07a9f4308b6824ae6ec">openage.convert.dataformat.members.DynLengthMember.get_length</a></div><div class="ttdeci">def get_length(self, obj=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00173">members.py:173</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_a5e3a7c5e8aeddbd762f9a158f9bc5aab"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">openage.convert.dataformat.util.determine_headers</a></div><div class="ttdeci">def determine_headers(for_types)</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00128">util.py:128</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a5020d135379031c1726d24343ab23310"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a5020d135379031c1726d24343ab23310">openage.convert.dataformat.members.DataMember.get_length</a></div><div class="ttdeci">def get_length(self, obj=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00062">members.py:62</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a69612f9b63e76655dc34996cd7d42484"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a69612f9b63e76655dc34996cd7d42484">openage.convert.dataformat.members.MultisubtypeMember.ref_to</a></div><div class="ttdeci">ref_to</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00601">members.py:601</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_a7cb1448327b125c2c14f448c084cf578"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a7cb1448327b125c2c14f448c084cf578">openage.convert.dataformat.members.SubdataMember.__init__</a></div><div class="ttdeci">def __init__(self, ref_type, length, offset_to=None, ref_to=None, ref_type_params=None, passed_args=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00815">members.py:815</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_affdef24b47a64dae69159b0e27b46b65"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#affdef24b47a64dae69159b0e27b46b65">openage.convert.dataformat.members.SubdataMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00828">members.py:828</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">openage.convert.dataformat.members.DynLengthMember</a></div><div class="ttdoc">a member that can have a dynamic length.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00153">members.py:153</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member_xhtml_a1d97cff933d248254401032a6ef6c9c2"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">openage.convert.dataformat.members.RefMember.file_name</a></div><div class="ttdeci">file_name</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00240">members.py:240</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_af99a4c7a2f6bae6c07dfa914831eb8c2"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#af99a4c7a2f6bae6c07dfa914831eb8c2">openage.convert.dataformat.members.NumberMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00286">members.py:286</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_ade5ee2745546cc6f70341b34958900cf"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ade5ee2745546cc6f70341b34958900cf">openage.convert.dataformat.members.DataMember.do_raw_read</a></div><div class="ttdeci">do_raw_read</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00029">members.py:29</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml_a6f1a0121b0f92ecc23125c32d92e6dd6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">openage.convert.dataformat.members.DynLengthMember.any_length</a></div><div class="ttdeci">string any_length</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00155">members.py:155</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a389a1dcae4781387c6e38f14e907f21f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a389a1dcae4781387c6e38f14e907f21f">openage.convert.dataformat.members.EnumMember.get_typerefs</a></div><div class="ttdeci">def get_typerefs(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00431">members.py:431</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_ae1554def5866507bb2a22a7e8eb1812e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#ae1554def5866507bb2a22a7e8eb1812e">openage.convert.dataformat.members.NumberMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00299">members.py:299</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a2b0c3e9b8181b04312a30d3471796acc"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a2b0c3e9b8181b04312a30d3471796acc">openage.convert.dataformat.members.MultisubtypeMember.get_empty_value</a></div><div class="ttdeci">def get_empty_value(self)</div><div class="ttdoc">when this data field is not filled, use the returned value instead.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00628">members.py:628</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a713d93efed62b806731cfe52ddf39fc4"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a713d93efed62b806731cfe52ddf39fc4">openage.convert.dataformat.members.DataMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00031">members.py:31</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a12f56e75f97144d787c390bfb236e6f6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a12f56e75f97144d787c390bfb236e6f6">openage.convert.dataformat.members.EnumMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00428">members.py:428</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml">openage.convert.dataformat.members.CharArrayMember</a></div><div class="ttdoc">struct member/column type that allows to store equal-length char[n].</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00517">members.py:517</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a8a084c4ed03611be299ccd6c67cb5e76"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8a084c4ed03611be299ccd6c67cb5e76">openage.convert.dataformat.members.DataMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00085">members.py:85</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_add52bbeac462df02499e1942ddca2dc5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#add52bbeac462df02499e1942ddca2dc5">openage.convert.dataformat.members.MultisubtypeMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00637">members.py:637</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member_xhtml_a5dc1be9f5fadd1b992d6f76befb07a27"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_array_member.xhtml#a5dc1be9f5fadd1b992d6f76befb07a27">openage.convert.dataformat.members.ArrayMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00882">members.py:882</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml">openage.convert.dataformat.members.SubdataMember</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00813">members.py:813</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml">openage.convert.dataformat.members.MultisubtypeMember</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00583">members.py:583</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml">openage.convert.dataformat.members.GroupMember</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00098">members.py:98</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_a49a5bbd442b7928e4818318bce236b63"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a49a5bbd442b7928e4818318bce236b63">openage.convert.dataformat.members.GroupMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00127">members.py:127</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_ad76bf42f766fba6d160c0a0f2408b7f6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ad76bf42f766fba6d160c0a0f2408b7f6">openage.convert.dataformat.members.MultisubtypeMember.subtype_definition</a></div><div class="ttdeci">subtype_definition</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00592">members.py:592</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_a8074ffeba13087d4b26a51ac9ef1fe7e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#a8074ffeba13087d4b26a51ac9ef1fe7e">openage.convert.dataformat.members.CharArrayMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00557">members.py:557</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1entry__parser_1_1_entry_parser.xhtml">openage.convert.dataformat.entry_parser.EntryParser</a></div><div class="ttdoc">An entry parser for reading a single column value from a data file.</div><div class="ttdef"><b>Definition:</b> <a href="entry__parser_8py_source.xhtml#l00019">entry_parser.py:19</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1struct__snippet_1_1_struct_snippet_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1struct__snippet_1_1_struct_snippet.xhtml">openage.convert.dataformat.struct_snippet.StructSnippet</a></div><div class="ttdoc">text snippet for generating C++ structs.</div><div class="ttdef"><b>Definition:</b> <a href="struct__snippet_8py_source.xhtml#l00021">struct_snippet.py:21</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_aa1b9333b1bb2ac9110c8adaf1dd13113"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#aa1b9333b1bb2ac9110c8adaf1dd13113">openage.convert.dataformat.members.SubdataMember.get_snippets</a></div><div class="ttdeci">def get_snippets(self, file_name, format_)</div><div class="ttdoc">return struct definitions for this type</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00859">members.py:859</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_abb999586d6c8c77e3eb1c520deda4819"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abb999586d6c8c77e3eb1c520deda4819">openage.convert.dataformat.members.MultisubtypeMember.__init__</a></div><div class="ttdeci">def __init__(self, type_name, subtype_definition, class_lookup, length, passed_args=None, ref_to=None, offset_to=None, file_name=None, ref_type_params=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00585">members.py:585</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_abca0aea22855fc04f42a9c3583f9c7d5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abca0aea22855fc04f42a9c3583f9c7d5">openage.convert.dataformat.members.MultisubtypeMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00796">members.py:796</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_a4407b1d4a8039bc8a369a59c52bcbdcc"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a4407b1d4a8039bc8a369a59c52bcbdcc">openage.convert.dataformat.members.SubdataMember.get_subdata_type_name</a></div><div class="ttdeci">def get_subdata_type_name(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00866">members.py:866</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member_xhtml_a15377de5817b4f41c01deef15e6d02cf"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a15377de5817b4f41c01deef15e6d02cf">openage.convert.dataformat.members.EnumLookupMember.lookup_dict</a></div><div class="ttdeci">lookup_dict</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00496">members.py:496</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_ad87deb877b828144c6a16df71b0ed1e1"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#ad87deb877b828144c6a16df71b0ed1e1">openage.convert.dataformat.members.GroupMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00113">members.py:113</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml">openage.convert.dataformat.members.IncludeMembers</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00141">members.py:141</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_acfafb0d6702186d2e0b986a40727509f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#acfafb0d6702186d2e0b986a40727509f">openage.convert.dataformat.members.DataMember.get_struct_entries</a></div><div class="ttdeci">def get_struct_entries(self, member_name)</div><div class="ttdoc">return the lines to put inside the C struct.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00076">members.py:76</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1content__snippet_1_1_content_snippet.xhtml">openage.convert.dataformat.content_snippet.ContentSnippet</a></div><div class="ttdoc">one part of text for generated files to be saved in &quot;file_name&quot;</div><div class="ttdef"><b>Definition:</b> <a href="content__snippet_8py_source.xhtml#l00026">content_snippet.py:26</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a0c802d0e74f4506b9fbc83f45382e42b"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a0c802d0e74f4506b9fbc83f45382e42b">openage.convert.dataformat.members.DataMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00034">members.py:34</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_ae3c02376fcce16d3bc085246f2de847e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3c02376fcce16d3bc085246f2de847e">openage.convert.dataformat.members.MultisubtypeMember.ref_type_params</a></div><div class="ttdeci">ref_type_params</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00607">members.py:607</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member_xhtml_a2a58328459ee86b657f988c8db22c231"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml#a2a58328459ee86b657f988c8db22c231">openage.convert.dataformat.members.EnumLookupMember.__init__</a></div><div class="ttdeci">def __init__(self, type_name, lookup_dict, raw_type, file_name=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00490">members.py:490</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_a9b4645349ec2ef37f3a9d028909c4dbd"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a9b4645349ec2ef37f3a9d028909c4dbd">openage.convert.dataformat.members.GroupMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00110">members.py:110</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_ae88ae33e707c5877b61b8598c78a7926"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">openage.convert.dataformat.members.DataMember.raw_type</a></div><div class="ttdeci">raw_type</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00028">members.py:28</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_addde0bcc5fa0ebb0b0a26d4c32a6a68c"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#addde0bcc5fa0ebb0b0a26d4c32a6a68c">openage.convert.dataformat.members.SubdataMember.get_typerefs</a></div><div class="ttdeci">def get_typerefs(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00863">members.py:863</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_lookup_member.xhtml">openage.convert.dataformat.members.EnumLookupMember</a></div><div class="ttdoc">enum definition, does lookup of raw datfile data =&gt; enum value</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00488">members.py:488</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_a4e0b12ddd496162ab1ef541d7cc23a22"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a4e0b12ddd496162ab1ef541d7cc23a22">openage.convert.dataformat.members.GroupMember.__init__</a></div><div class="ttdeci">def __init__(self, cls)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00100">members.py:100</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_ad63fed30ee3cf877fa333088b1cab269"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad63fed30ee3cf877fa333088b1cab269">openage.convert.dataformat.members.CharArrayMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00523">members.py:523</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a1d8cd7ab645eb4e99a36a3627021111f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a1d8cd7ab645eb4e99a36a3627021111f">openage.convert.dataformat.members.DataMember.entry_hook</a></div><div class="ttdeci">def entry_hook(self, data)</div><div class="ttdoc">allows the data member class to modify the input data</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00049">members.py:49</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">openage.convert.dataformat.members.DataMember</a></div><div class="ttdoc">member variable of data files and generated structs.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00025">members.py:25</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">openage.convert.dataformat.members.RefMember</a></div><div class="ttdoc">a struct member that can be referenced/references another struct.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00235">members.py:235</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a6a80ec8145d2bf776c98f7cdc4c0da8e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">openage.convert.dataformat.members.MultisubtypeMember.get_contained_types</a></div><div class="ttdeci">def get_contained_types(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00631">members.py:631</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml">openage.convert.dataformat.members.ZeroMember</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00322">members.py:322</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_a460fd49b84ff2ba62e3c67418486f8ca"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a460fd49b84ff2ba62e3c67418486f8ca">openage.convert.dataformat.members.NumberMember.__init__</a></div><div class="ttdeci">def __init__(self, number_def)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00277">members.py:277</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member_xhtml_ab1259c0fbb6ecce62302f086c5167396"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#ab1259c0fbb6ecce62302f086c5167396">openage.convert.dataformat.members.RefMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00246">members.py:246</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member_xhtml_aa2d18ece0f269df3d8823dfe4ab880bf"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_zero_member.xhtml#aa2d18ece0f269df3d8823dfe4ab880bf">openage.convert.dataformat.members.ZeroMember.verify_read_data</a></div><div class="ttdeci">def verify_read_data(self, obj, data)</div><div class="ttdoc">gets called for each entry.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00328">members.py:328</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a8cc54e765c92a42b17dbe2786cfdef08"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8cc54e765c92a42b17dbe2786cfdef08">openage.convert.dataformat.members.DataMember.verify_read_data</a></div><div class="ttdeci">def verify_read_data(self, obj, data)</div><div class="ttdoc">gets called for each entry.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00069">members.py:69</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_ae0a3a0241b823f90f1bcb74e1619df1f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae0a3a0241b823f90f1bcb74e1619df1f">openage.convert.dataformat.members.MultisubtypeMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00805">members.py:805</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member_xhtml_a8a34bbd9cc41ea7f0abefc895641d28a"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">openage.convert.dataformat.members.RefMember.type_name</a></div><div class="ttdeci">type_name</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00239">members.py:239</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_a21171b4018d202687aff259ac8bdedb4"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a21171b4018d202687aff259ac8bdedb4">openage.convert.dataformat.members.NumberMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00308">members.py:308</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_aca753aded701699bfd78a4c16e01ca67"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">openage.convert.dataformat.members.DataMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00053">members.py:53</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a27571ee3aea8f88f36ae23140c9e77c0"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a27571ee3aea8f88f36ae23140c9e77c0">openage.convert.dataformat.members.MultisubtypeMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00625">members.py:625</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a567e8cd4638f6d804bb7a4da292b076f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a567e8cd4638f6d804bb7a4da292b076f">openage.convert.dataformat.members.MultisubtypeMember.get_typerefs</a></div><div class="ttdeci">def get_typerefs(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00657">members.py:657</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_acef3ec7e71f233ef9820acfb7fa797c6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#acef3ec7e71f233ef9820acfb7fa797c6">openage.convert.dataformat.members.SubdataMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00837">members.py:837</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a2bc739bc4cd27300bb2f88e78887a22f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a2bc739bc4cd27300bb2f88e78887a22f">openage.convert.dataformat.members.EnumMember.validate_value</a></div><div class="ttdeci">def validate_value(self, value)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00437">members.py:437</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml_a76522d7acad4b1da32e90104d216fc6f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">openage.convert.dataformat.members.DynLengthMember.__init__</a></div><div class="ttdeci">def __init__(self, length)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00157">members.py:157</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_a81e16d3f5273041083c8497f102803ae"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a81e16d3f5273041083c8497f102803ae">openage.convert.dataformat.members.MultisubtypeMember.get_snippets</a></div><div class="ttdeci">def get_snippets(self, file_name, format_)</div><div class="ttdoc">return struct definitions for this type</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00663">members.py:663</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_aeaf778094650f419072b942ff8d0dc8e"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#aeaf778094650f419072b942ff8d0dc8e">openage.convert.dataformat.members.CharArrayMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00548">members.py:548</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_aa4968dab9239c251b3415aefcfa53ae1"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aa4968dab9239c251b3415aefcfa53ae1">openage.convert.dataformat.members.DataMember.get_typerefs</a></div><div class="ttdeci">def get_typerefs(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00041">members.py:41</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a0fcf1a7012f76c251b31eb760ef911ee"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a0fcf1a7012f76c251b31eb760ef911ee">openage.convert.dataformat.members.EnumMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00473">members.py:473</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_a111b442520faa27b7d3b0ebe1b2b84b5"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a111b442520faa27b7d3b0ebe1b2b84b5">openage.convert.dataformat.members.GroupMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00104">members.py:104</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_a27b0a04796782524796716eed105a9a4"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a27b0a04796782524796716eed105a9a4">openage.convert.dataformat.members.NumberMember.get_effective_type</a></div><div class="ttdeci">def get_effective_type(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00305">members.py:305</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml">openage.convert.dataformat.members.ContinueReadMember</a></div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00348">members.py:348</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result_xhtml_a09bac03629c7499554002bc814a9cbc7"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_result.xhtml#a09bac03629c7499554002bc814a9cbc7">openage.convert.dataformat.members.ContinueReadMemberResult.__str__</a></div><div class="ttdeci">def __str__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00340">members.py:340</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member_xhtml_a304aadf38378a06b99c4398303928dbd"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">openage.convert.dataformat.members.DataMember.length</a></div><div class="ttdeci">length</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00027">members.py:27</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_a8a80cc8cc673dbfc246312409daa426f"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a8a80cc8cc673dbfc246312409daa426f">openage.convert.dataformat.members.NumberMember.type_scan_lookup</a></div><div class="ttdeci">dictionary type_scan_lookup</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00264">members.py:264</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_xhtml_abff2c6510cd43895368ddb3b8e75fa3a"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abff2c6510cd43895368ddb3b8e75fa3a">openage.convert.dataformat.members.MultisubtypeMember.get_headers</a></div><div class="ttdeci">def get_headers(self, output_target)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00615">members.py:615</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_acebacec44c129380eab30beb999434eb"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#acebacec44c129380eab30beb999434eb">openage.convert.dataformat.members.NumberMember.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00313">members.py:313</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member_xhtml_af495eeb0589a107c03a789b9b59a37c8"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_continue_read_member.xhtml#af495eeb0589a107c03a789b9b59a37c8">openage.convert.dataformat.members.ContinueReadMember.get_parsers</a></div><div class="ttdeci">def get_parsers(self, idx, member)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00361">members.py:361</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_ad4d5a588c6546557cebceb9b860857f1"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#ad4d5a588c6546557cebceb9b860857f1">openage.convert.dataformat.members.CharArrayMember.get_empty_value</a></div><div class="ttdeci">def get_empty_value(self)</div><div class="ttdoc">when this data field is not filled, use the returned value instead.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00563">members.py:563</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member_xhtml_a008f8bc74d5b8781e661ab9edd07e57c"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a008f8bc74d5b8781e661ab9edd07e57c">openage.convert.dataformat.members.SubdataMember.get_subtype</a></div><div class="ttdeci">def get_subtype(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00834">members.py:834</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member_xhtml_aba59a6dffcb81ae23958539b478153f2"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">openage.convert.dataformat.members.RefMember.resolved</a></div><div class="ttdeci">resolved</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00244">members.py:244</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_a0e48c951675a9d1e6f5c9150845aa7dd"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#a0e48c951675a9d1e6f5c9150845aa7dd">openage.convert.dataformat.members.GroupMember.cls</a></div><div class="ttdeci">cls</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00102">members.py:102</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml">openage.convert.dataformat.members.EnumMember</a></div><div class="ttdoc">this struct member/data column is a enum.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00387">members.py:387</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member_xhtml_af28239ac1c0c7b157c9dcab18a09e2a7"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_char_array_member.xhtml#af28239ac1c0c7b157c9dcab18a09e2a7">openage.convert.dataformat.members.CharArrayMember.__init__</a></div><div class="ttdeci">def __init__(self, length)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00519">members.py:519</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml_a560151f3ad460070c406eaeddb3d46ec"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml#a560151f3ad460070c406eaeddb3d46ec">openage.convert.dataformat.members.NumberMember.number_type</a></div><div class="ttdeci">number_type</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00283">members.py:283</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member_xhtml_adb2abe13fffd3036ae2d55d30cfe6261"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_group_member.xhtml#adb2abe13fffd3036ae2d55d30cfe6261">openage.convert.dataformat.members.GroupMember.format_hash</a></div><div class="ttdeci">def format_hash(self, hasher)</div><div class="ttdoc">hash these member's settings.</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00124">members.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_string_member.xhtml">openage.convert.dataformat.members.StringMember</a></div><div class="ttdoc">member with unspecified string length, aka std::string</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00573">members.py:573</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members_xhtml_a76445c68e5173f4c164a4799134a80e6"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_include_members.xhtml#a76445c68e5173f4c164a4799134a80e6">openage.convert.dataformat.members.IncludeMembers.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00146">members.py:146</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_number_member.xhtml">openage.convert.dataformat.members.NumberMember</a></div><div class="ttdoc">this struct member/data column contains simple numbers</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00261">members.py:261</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member_xhtml_a45cc26b2b43c5cda5c617f01632f26c2"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_enum_member.xhtml#a45cc26b2b43c5cda5c617f01632f26c2">openage.convert.dataformat.members.EnumMember.values</a></div><div class="ttdeci">values</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00391">members.py:391</a></div></div>
<div class="ttc" id="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member_xhtml_a65df1261e8a5c28c98ad325de5c4fdbe"><div class="ttname"><a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">openage.convert.dataformat.members.DynLengthMember.is_dynamic_length</a></div><div class="ttdeci">def is_dynamic_length(self, target=None)</div><div class="ttdef"><b>Definition:</b> <a href="members_8py_source.xhtml#l00206">members.py:206</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_f8c2790f072062ca31393539e9a4c2e7.xhtml">convert</a></li><li class="navelem"><a class="el" href="dir_2220708b3a09db22ca7ba5a5fcfaa7ea.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="members_8py.xhtml">members.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
