<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage/convert/hdlanguagefile.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('hdlanguagefile_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">hdlanguagefile.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="hdlanguagefile_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Module for reading AoeII HD Edition text-based language files.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">from</span> .hardcoded.langcodes_hd <span class="keyword">import</span> LANGCODE_MAP_HD</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> .pefile <span class="keyword">import</span> PEFile</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> ..log <span class="keyword">import</span> dbg</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a352b2dbd5b398f49f4f46dcca838cebd">read_age2_hd_fe_stringresources</a>(stringres, path):</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="stringliteral">    Fill the string resources from text specifications found</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="stringliteral">    in the given path.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    In age2hd forgotten those are stored in plain text files.</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">    The data is stored in the `stringres` storage.</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a352b2dbd5b398f49f4f46dcca838cebd">   22</a></span>&#160;    count = 0</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment"># multiple string files in the program source dir</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> lang <span class="keywordflow">in</span> path.list():</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">if</span> lang == b<span class="stringliteral">&#39;_common&#39;</span>:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">if</span> lang == b<span class="stringliteral">&#39;_packages&#39;</span>:</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;            <span class="keywordflow">if</span> lang.lower() == b<span class="stringliteral">&#39;.ds_store&#39;</span>.lower():</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                <span class="keywordflow">continue</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            langfilename = [lang.decode(),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                            <span class="stringliteral">&quot;strings&quot;</span>, <span class="stringliteral">&quot;key-value&quot;</span>,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                            <span class="stringliteral">&quot;key-value-strings-utf8.txt&quot;</span>]</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            <span class="keyword">with</span> path[langfilename].open(<span class="stringliteral">&#39;rb&#39;</span>) <span class="keyword">as</span> langfile:</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;                stringres.fill_from(<a class="code" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#acc46a3a14127905594fced841fdfb09b">read_hd_language_file</a>(langfile, lang))</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            count += 1</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">except</span> FileNotFoundError:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="comment"># that&#39;s fine, there are no language files for every language.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="keywordflow">pass</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> count</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a189674ed7c17e3398bf7e39919e3b641">read_age2_hd_3x_stringresources</a>(stringres, srcdir):</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="stringliteral">    HD Edition 3.x and below store language .txt files</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="stringliteral">    in the Bin/ folder.</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="stringliteral">    Specific language strings are in Bin/$LANG/*.txt.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">    The data is stored in the `stringres` storage.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a189674ed7c17e3398bf7e39919e3b641">   59</a></span>&#160;    count = 0</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">for</span> lang <span class="keywordflow">in</span> srcdir[<span class="stringliteral">&quot;bin&quot;</span>].<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>():</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        lang_path = srcdir[<span class="stringliteral">&quot;bin&quot;</span>, lang.decode()]</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment"># There are some .txt files immediately in bin/, but they don&#39;t</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <span class="comment"># seem to contain anything useful. (Everything is overridden by</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="comment"># files in Bin/$LANG/.)</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> lang_path.is_dir():</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <span class="comment"># Sometimes we can have language DLLs in Bin/$LANG/</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment"># e.g. HD Edition 2.0</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="comment"># We do _not_ want to treat these as text files</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment"># so first check explicitly</span></div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keywordflow">if</span> lang_path[<span class="stringliteral">&quot;language.dll&quot;</span>].is_file():</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            <span class="keywordflow">for</span> name <span class="keywordflow">in</span> [<span class="stringliteral">&quot;language.dll&quot;</span>,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                         <span class="stringliteral">&quot;language_x1.dll&quot;</span>,</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                         <span class="stringliteral">&quot;language_x1_p1.dll&quot;</span>]:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                pefile = <a class="code" href="classopenage_1_1convert_1_1pefile_1_1_p_e_file.xhtml">PEFile</a>(lang_path[name].open(<span class="stringliteral">&#39;rb&#39;</span>))</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                stringres.fill_from(pefile.resources().strings)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                count += 1</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            <span class="keywordflow">for</span> basename <span class="keywordflow">in</span> lang_path.list():</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                <span class="keyword">with</span> lang_path[basename].open(<span class="stringliteral">&#39;rb&#39;</span>) <span class="keyword">as</span> langfile:</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                    <span class="comment"># No utf-8 :(</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;                    stringres.fill_from(</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                        <a class="code" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#acc46a3a14127905594fced841fdfb09b">read_hd_language_file</a>(</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                            langfile, lang, enc=<span class="stringliteral">&#39;iso-8859-1&#39;</span>))</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                count += 1</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> count</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#acc46a3a14127905594fced841fdfb09b">read_hd_language_file</a>(fileobj, langcode, enc=&#39;utf-8&#39;):</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="stringliteral">    Takes a file object, and the file&#39;s language code.</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#acc46a3a14127905594fced841fdfb09b">  101</a></span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(<span class="stringliteral">&quot;parse HD Language file %s&quot;</span>, langcode)</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    strings = {}</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> fileobj.read().decode(enc).<a class="code" href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">split</a>(<span class="stringliteral">&#39;\n&#39;</span>):</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        line = line.strip()</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="comment"># skip comments &amp; empty lines</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> line <span class="keywordflow">or</span> line.startswith(<span class="stringliteral">&#39;//&#39;</span>):</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        num, string = line.split(<span class="keywordtype">None</span>, 1)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="comment"># strings that were added in the HD edition release have</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment"># UPPERCASE_STRINGS as names, instead of the numeric ID stuff</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="comment"># of AoK:TC. We only need the AoK:TC strings, and skip the rest.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">if</span> num.isdigit():</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            strings[num] = string</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    fileobj.close()</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    lang = LANGCODE_MAP_HD.get(langcode, langcode)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> {lang: strings}</div><div class="ttc" id="classopenage_1_1convert_1_1pefile_1_1_p_e_file_xhtml"><div class="ttname"><a href="classopenage_1_1convert_1_1pefile_1_1_p_e_file.xhtml">openage.convert.pefile.PEFile</a></div><div class="ttdoc">Reads Microsoft PE files.</div><div class="ttdef"><b>Definition:</b> <a href="pefile_8py_source.xhtml#l00156">pefile.py:156</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_af74fec80080f6c627e5539bb20493ba0"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1hdlanguagefile_xhtml_a352b2dbd5b398f49f4f46dcca838cebd"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a352b2dbd5b398f49f4f46dcca838cebd">openage.convert.hdlanguagefile.read_age2_hd_fe_stringresources</a></div><div class="ttdeci">def read_age2_hd_fe_stringresources(stringres, path)</div><div class="ttdef"><b>Definition:</b> <a href="hdlanguagefile_8py_source.xhtml#l00022">hdlanguagefile.py:22</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1hdlanguagefile_xhtml_acc46a3a14127905594fced841fdfb09b"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#acc46a3a14127905594fced841fdfb09b">openage.convert.hdlanguagefile.read_hd_language_file</a></div><div class="ttdeci">def read_hd_language_file(fileobj, langcode, enc='utf-8')</div><div class="ttdoc">Takes a file object, and the file's language code.</div><div class="ttdef"><b>Definition:</b> <a href="hdlanguagefile_8py_source.xhtml#l00101">hdlanguagefile.py:101</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1hdlanguagefile_xhtml_a189674ed7c17e3398bf7e39919e3b641"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1hdlanguagefile.xhtml#a189674ed7c17e3398bf7e39919e3b641">openage.convert.hdlanguagefile.read_age2_hd_3x_stringresources</a></div><div class="ttdeci">def read_age2_hd_3x_stringresources(stringres, srcdir)</div><div class="ttdef"><b>Definition:</b> <a href="hdlanguagefile_8py_source.xhtml#l00059">hdlanguagefile.py:59</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_f8c2790f072062ca31393539e9a4c2e7.xhtml">convert</a></li><li class="navelem"><a class="el" href="hdlanguagefile_8py.xhtml">hdlanguagefile.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
