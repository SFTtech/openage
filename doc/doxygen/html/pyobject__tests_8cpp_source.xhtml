<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/pyobject_tests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pyobject__tests_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pyobject_tests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pyobject__tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2017-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyobject__tests_8h.xhtml">pyobject_tests.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;unordered_set&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyobject_8h.xhtml">pyobject.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyexception_8h.xhtml">pyexception.h</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../testing/testing.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad69d94519ba25682897d8da53beb86df">   16</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad69d94519ba25682897d8da53beb86df">pyobject</a>() {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">py::str</a>(<span class="stringliteral">&quot;foo&quot;</span>).<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;&#39;foo&#39;&quot;</span>);</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">py::bytes</a>(<span class="stringliteral">&quot;foo&quot;</span>).<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;b&#39;foo&#39;&quot;</span>);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">py::integer</a>(1337).<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;1337&quot;</span>);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(py::None.<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;None&quot;</span>);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;None&quot;</span>).equals(py::None), <span class="keyword">true</span>);</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;None&quot;</span>).is(py::None), <span class="keyword">true</span>);</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">py::True</a>.<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;True&quot;</span>);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;True&quot;</span>).equals(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">py::True</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;True&quot;</span>).is(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">py::True</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">py::True</a>.to_bool(), <span class="keyword">true</span>);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">py::False</a>.<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(), <span class="stringliteral">&quot;False&quot;</span>);</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;False&quot;</span>).equals(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">py::False</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;False&quot;</span>).is(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">py::False</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">py::False</a>.to_bool(), <span class="keyword">false</span>);</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a> = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">py::dict</a>());</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">repr</a>(), <span class="stringliteral">&quot;{}&quot;</span>);</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;dict&quot;</span>).<a class="code" href="namespaceopenage_1_1subprocess.xhtml#a9433d1215dbd3b40cd1c0981b84a8541">call</a>().equals(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;dict&quot;</span>).<a class="code" href="namespaceopenage_1_1subprocess.xhtml#a9433d1215dbd3b40cd1c0981b84a8541">call</a>().is(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>), <span class="keyword">false</span>);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> deque;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(deque = <a class="code" href="namespaceopenage_1_1py.xhtml#a74056a2f34d9bc9aed2a687a85794e7a">py::import</a>(<span class="stringliteral">&quot;collections&quot;</span>).getattr(<span class="stringliteral">&quot;deque&quot;</span>).<a class="code" href="namespaceopenage_1_1subprocess.xhtml#a9433d1215dbd3b40cd1c0981b84a8541">call</a>());</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(deque.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">repr</a>(), <span class="stringliteral">&quot;deque([])&quot;</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <a class="code" href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">exec</a>(<span class="stringliteral">&quot;raise Exception()&quot;</span>));</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">exec</a>(<span class="stringliteral">&quot;x = []&quot;</span>));</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(<span class="stringliteral">&quot;x&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">repr</a>(), <span class="stringliteral">&quot;[]&quot;</span>);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">py::str</a>(<span class="stringliteral">&quot;x&quot;</span>).in(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>), <span class="keyword">true</span>);</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">py::bytes</a>(<span class="stringliteral">&quot;x&quot;</span>).in(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>), <span class="keyword">false</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">exec</a>(</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="stringliteral">&quot;class A:\n&quot;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;    def __del__(self):\n&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="stringliteral">&quot;        x.append(1)\n&quot;</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="stringliteral">&quot;    def __str__(self):\n&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="stringliteral">&quot;        return &#39;A&#39;\n&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="stringliteral">&quot;    def __repr__(self):\n&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="stringliteral">&quot;        return &#39;A()&#39;\n&quot;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="stringliteral">&quot;    def __bytes__(self):\n&quot;</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="stringliteral">&quot;        return b&#39;bytes-A()&#39;\n&quot;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    ));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="comment">// test what happens when a goes out of scope</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> a;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(a = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">eval</a>(<span class="stringliteral">&quot;A()&quot;</span>));</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">repr</a>(), <span class="stringliteral">&quot;A()&quot;</span>);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">str</a>(), <span class="stringliteral">&quot;A&quot;</span>);</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">bytes</a>(), <span class="stringliteral">&quot;bytes-A()&quot;</span>);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9c0069c03b9c5ab553f49b6cc790f8e0">setattr</a>(<span class="stringliteral">&quot;foo&quot;</span>, deque));</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">getattr</a>(<span class="stringliteral">&quot;foo&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">is</a>(deque), <span class="keyword">true</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">hasattr</a>(<span class="stringliteral">&quot;foo&quot;</span>), <span class="keyword">true</span>);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(a.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">hasattr</a>(<span class="stringliteral">&quot;bar&quot;</span>), <span class="keyword">false</span>);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="comment">// the __del__ added a &#39;1&#39;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> x;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(x = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(<span class="stringliteral">&quot;x&quot;</span>));</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">repr</a>(), <span class="stringliteral">&quot;[1]&quot;</span>);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a09ea43fdc78d2458748887fa72ae1a9d">len</a>(), 1);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">py::integer</a>(1).in(x), <span class="keyword">true</span>);</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(0).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">equals</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">py::integer</a>(1)), <span class="keyword">true</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(0).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">equals</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">py::integer</a>(2)), <span class="keyword">false</span>);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">isinstance</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;dict&quot;</span>)), <span class="keyword">true</span>);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">isinstance</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;list&quot;</span>)), <span class="keyword">false</span>);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> pop;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(pop = x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">getattr</a>(<span class="stringliteral">&quot;pop&quot;</span>));</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2790fe7f033dc93a820a13535421aa98">callable</a>(), <span class="keyword">false</span>);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(pop.callable(), <span class="keyword">true</span>);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(pop.call().repr(), <span class="stringliteral">&quot;1&quot;</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">to_bool</a>(), <span class="keyword">false</span>);</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">to_bool</a>(), <span class="keyword">true</span>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    std::unordered_set&lt;std::string&gt; dir;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(pop.dir([&amp;](std::string s) {dir.insert(s);}));</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    dir.find(<span class="stringliteral">&quot;__self__&quot;</span>) == dir.end() and <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    dir.clear();</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(pop.getattr(<span class="stringliteral">&quot;__self__&quot;</span>).is(x), <span class="keyword">true</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">equals</a>(deque), <span class="keyword">false</span>);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(x.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">equals</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;list&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>()), <span class="keyword">true</span>);</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aad12aea6d10bda9d75570193f562645e">type</a>().<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">is</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">py::builtin</a>(<span class="stringliteral">&quot;dict&quot;</span>)), <span class="keyword">true</span>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">modulename</a>(), <span class="stringliteral">&quot;builtins&quot;</span>);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">classname</a>(), <span class="stringliteral">&quot;dict&quot;</span>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// btw, if I invoke a nonexisting member function on a (a.foob(b))</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="comment">// the python heap will corrupt in printing the &quot;has no member&quot; backtrace</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <a class="code" href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">exec</a>(</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="stringliteral">&quot;def mul(x, y):\n&quot;</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="stringliteral">&quot;    return x * y\n&quot;</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="stringliteral">&quot;def strformat(a, b):\n&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="stringliteral">&quot;    return a.format(b)\n&quot;</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    ));</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(<span class="stringliteral">&quot;mul&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>(13, 37).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab33e45c3e5b581e5c1dbc74282f6f168">to_int</a>(),</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        13 * 37</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    );</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <a class="code" href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a>(</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">get</a>(<span class="stringliteral">&quot;strformat&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">py::str</a>(<span class="stringliteral">&quot;stuff: {}&quot;</span>), 1337).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">str</a>(),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">py::str</a>(<span class="stringliteral">&quot;stuff: {}&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">getattr</a>(<span class="stringliteral">&quot;format&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>(1337).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">str</a>()</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    );</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a0f930d1710b53aa90f3e05e85aa5d544">  133</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a0f930d1710b53aa90f3e05e85aa5d544">pyobject_demo</a>() {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> globals = <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">py::dict</a>();</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> inputfunc = globals.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">eval</a>(<span class="stringliteral">&quot;lambda: input(&#39;&gt;&gt;&gt; &#39;)&quot;</span>);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> input;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            input = inputfunc.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> &amp;exc) {</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (exc.<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">type_name</a>() == <span class="stringliteral">&quot;builtins.EOFError&quot;</span>) {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                std::cout &lt;&lt; <span class="stringliteral">&quot;goodbye.&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            std::cout &lt;&lt; exc &lt;&lt; std::endl;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            globals.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">exec</a>(input.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">str</a>());</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> &amp;exc) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            std::cout &lt;&lt; exc &lt;&lt; std::endl;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}}} <span class="comment">// openage::pyinterface::tests</span></div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdoc">Convenience macro, for usage in test functions:</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a912e76dc7854f9c1816533f6f8571767"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a912e76dc7854f9c1816533f6f8571767">openage::pyinterface::PyObjectRef::classname</a></div><div class="ttdeci">std::string classname() const</div><div class="ttdoc">type(obj).__name__</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00256">pyobject.cpp:256</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afb0f22eaba43f4419e7edf3eaa1f957a"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">openage::pyinterface::PyObjectRef::getattr</a></div><div class="ttdeci">PyObjectRef getattr(const std::string &amp;name) const</div><div class="ttdoc">getattr(obj, name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00166">pyobject.cpp:166</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a02b9a4b5f4123474f3d2c7be438eed21"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a02b9a4b5f4123474f3d2c7be438eed21">openage::pyinterface::PyObjectRef::to_bool</a></div><div class="ttdeci">bool to_bool() const</div><div class="ttdoc">bool(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00178">pyobject.cpp:178</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_ad69d94519ba25682897d8da53beb86df"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad69d94519ba25682897d8da53beb86df">openage::pyinterface::tests::pyobject</a></div><div class="ttdeci">void pyobject()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject__tests_8cpp_source.xhtml#l00016">pyobject_tests.cpp:16</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a2790fe7f033dc93a820a13535421aa98"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2790fe7f033dc93a820a13535421aa98">openage::pyinterface::PyObjectRef::callable</a></div><div class="ttdeci">bool callable() const</div><div class="ttdoc">callable(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00142">pyobject.cpp:142</a></div></div>
<div class="ttc" id="testing_8h_xhtml_a57b089ad5d574fad716e3b140c80d0e5"><div class="ttname"><a href="testing_8h.xhtml#a57b089ad5d574fad716e3b140c80d0e5">TESTEQUALS</a></div><div class="ttdeci">#define TESTEQUALS(left, right)</div><div class="ttdoc">Asserts that the left expression equals the right expression, and that no exception is thrown.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00049">testing.h:49</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a9c0069c03b9c5ab553f49b6cc790f8e0"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a9c0069c03b9c5ab553f49b6cc790f8e0">openage::pyinterface::PyObjectRef::setattr</a></div><div class="ttdeci">void setattr(const std::string &amp;name, const PyObjectRef &amp;attr) const</div><div class="ttdoc">setattr(obj, name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00173">pyobject.cpp:173</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_acd17e87d491659af8fb3ac621f9f4732"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#acd17e87d491659af8fb3ac621f9f4732">openage::pyinterface::PyObjectRef::str</a></div><div class="ttdeci">std::string str() const</div><div class="ttdoc">str(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00122">pyobject.cpp:122</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a09953e7373020e0af78c70ea155754ee"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">openage::pyinterface::True</a></div><div class="ttdeci">PyObjectRef True</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00307">pyobject.cpp:307</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml_a1352d1476e7824c11aca00df918879e1"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">openage::pyinterface::PyException::type_name</a></div><div class="ttdeci">std::string type_name() const override</div><div class="ttdoc">Returns the type name of py_obj.</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00035">pyexception.cpp:35</a></div></div>
<div class="ttc" id="pyexception_8h_xhtml"><div class="ttname"><a href="pyexception_8h.xhtml">pyexception.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1subprocess_xhtml_a9433d1215dbd3b40cd1c0981b84a8541"><div class="ttname"><a href="namespaceopenage_1_1subprocess.xhtml#a9433d1215dbd3b40cd1c0981b84a8541">openage::subprocess::call</a></div><div class="ttdeci">int call(const std::vector&lt; const char * &gt; &amp;argv, bool wait, const char *redirect_stdout_to)</div><div class="ttdoc">starts the process at argv[0] passes argv as argv</div><div class="ttdef"><b>Definition:</b> <a href="subprocess_8cpp_source.xhtml#l00072">subprocess.cpp:72</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afc75f5918216b0b5c64c7a3f83626ea6"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afc75f5918216b0b5c64c7a3f83626ea6">openage::pyinterface::PyObjectRef::repr</a></div><div class="ttdeci">std::string repr() const</div><div class="ttdoc">repr(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00127">pyobject.cpp:127</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a17d24db4d17d8aba1a9b71c79fe3aa40"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a17d24db4d17d8aba1a9b71c79fe3aa40">openage::pyinterface::PyObjectRef::eval</a></div><div class="ttdeci">PyObjectRef eval(const std::string &amp;expression) const</div><div class="ttdoc">eval(expression, obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00208">pyobject.cpp:208</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ad3ad66a2f3c40aa0744570ab803b903f"><div class="ttname"><a href="testing_8h.xhtml#ad3ad66a2f3c40aa0744570ab803b903f">TESTTHROWS</a></div><div class="ttdeci">#define TESTTHROWS(expression)</div><div class="ttdoc">Asserts that the expression throws an exception.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00087">testing.h:87</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5108334e805e942718d59b97160775d1"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">openage::py::bytes</a></div><div class="ttdeci">Obj bytes(const std::string &amp;value)</div><div class="ttdoc">bytes(value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00338">pyobject.cpp:338</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_a0f930d1710b53aa90f3e05e85aa5d544"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a0f930d1710b53aa90f3e05e85aa5d544">openage::pyinterface::tests::pyobject_demo</a></div><div class="ttdeci">void pyobject_demo()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject__tests_8cpp_source.xhtml#l00133">pyobject_tests.cpp:133</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afd545e1817cad9ab9f5c84934d83e428"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afd545e1817cad9ab9f5c84934d83e428">openage::pyinterface::PyObjectRef::modulename</a></div><div class="ttdeci">std::string modulename() const</div><div class="ttdoc">type(obj).__module__</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00251">pyobject.cpp:251</a></div></div>
<div class="ttc" id="pyobject_8h_xhtml"><div class="ttname"><a href="pyobject_8h.xhtml">pyobject.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdoc">dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a74056a2f34d9bc9aed2a687a85794e7a"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a74056a2f34d9bc9aed2a687a85794e7a">openage::py::import</a></div><div class="ttdeci">Obj import(const std::string &amp;name)</div><div class="ttdoc">importlib.import_module(name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00324">pyobject.cpp:324</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ad14d4168fbabc89c1b48186ba1df98b2"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ad14d4168fbabc89c1b48186ba1df98b2">openage::pyinterface::PyObjectRef::equals</a></div><div class="ttdeci">bool equals(const PyObjectRef &amp;other) const</div><div class="ttdoc">obj == other</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00203">pyobject.cpp:203</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a853f15a5d55d1143418e208fac044119"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a853f15a5d55d1143418e208fac044119">openage::pyinterface::PyObjectRef::get</a></div><div class="ttdeci">PyObjectRef get(const PyObjectRef &amp;key) const</div><div class="ttdoc">obj[key]</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00220">pyobject.cpp:220</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a078ffdebeb6488c9b045d8d49f0f47de"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a078ffdebeb6488c9b045d8d49f0f47de">openage::pyinterface::PyObjectRef::is</a></div><div class="ttdeci">bool is(const PyObjectRef &amp;other) const</div><div class="ttdoc">obj is other</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00198">pyobject.cpp:198</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_ac68b5313b47c4615286f64c7d996a903"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">openage::py::builtin</a></div><div class="ttdeci">Obj builtin(const std::string &amp;name)</div><div class="ttdoc">getattr(importlib.import_module(&quot;builtins&quot;), name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00317">pyobject.cpp:317</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">openage::pyinterface::PyException</a></div><div class="ttdoc">Thrown by translate_exc_py_to_cpp() from exctranslate.h.</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8h_source.xhtml#l00060">pyexception.h:60</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdoc">method that behaves similar to python's &quot;repr&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a54af3d98bf36729efd5a013bc124a2e9"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">openage::pyinterface::PyObjectRef::call</a></div><div class="ttdeci">PyObjectRef call(Args... args) const</div><div class="ttdoc">obj(args...)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00120">pyobject.h:120</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_aad12aea6d10bda9d75570193f562645e"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#aad12aea6d10bda9d75570193f562645e">openage::pyinterface::PyObjectRef::type</a></div><div class="ttdeci">PyObjectRef type() const</div><div class="ttdoc">type(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00244">pyobject.cpp:244</a></div></div>
<div class="ttc" id="pyobject__tests_8h_xhtml"><div class="ttname"><a href="pyobject__tests_8h.xhtml">pyobject_tests.h</a></div></div>
<div class="ttc" id="testing_8h_xhtml_a83874b641b589d0a696a6a1a6f8e9fd5"><div class="ttname"><a href="testing_8h.xhtml#a83874b641b589d0a696a6a1a6f8e9fd5">TESTNOEXCEPT</a></div><div class="ttdeci">#define TESTNOEXCEPT(expression)</div><div class="ttdoc">Assets that the expression throws no exception (mostly for void expressions).</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00104">testing.h:104</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad71d6296abe650b46217af0efb0725a2"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">openage::pyinterface::False</a></div><div class="ttdeci">PyObjectRef False</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00308">pyobject.cpp:308</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a2b5e4fb00fdfa866cf3cf0abf78e07e1"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a2b5e4fb00fdfa866cf3cf0abf78e07e1">openage::pyinterface::PyObjectRef::isinstance</a></div><div class="ttdeci">bool isinstance(const PyObjectRef &amp;type) const</div><div class="ttdoc">isinstance(obj, type)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00188">pyobject.cpp:188</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">openage::pyinterface::PyObjectRef</a></div><div class="ttdoc">Holds a Python object, as a PyObject * pointer.</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00049">pyobject.h:49</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a09ea43fdc78d2458748887fa72ae1a9d"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a09ea43fdc78d2458748887fa72ae1a9d">openage::pyinterface::PyObjectRef::len</a></div><div class="ttdeci">int len() const</div><div class="ttdoc">len(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00137">pyobject.cpp:137</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdoc">str(value);</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a0d7ef968ad02a1d4a52251ccd16eb85f"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0d7ef968ad02a1d4a52251ccd16eb85f">openage::pyinterface::PyObjectRef::exec</a></div><div class="ttdeci">void exec(const std::string &amp;statement) const</div><div class="ttdoc">exec(statement, obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00215">pyobject.cpp:215</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a1f03713cea0d4ee15fc445111404e7d7"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">openage::py::integer</a></div><div class="ttdeci">Obj integer(int value)</div><div class="ttdoc">int(value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00345">pyobject.cpp:345</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a76e2c7f1e3147d1d726d5c277daff1f8"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">openage::pyinterface::PyObjectRef::bytes</a></div><div class="ttdeci">std::string bytes() const</div><div class="ttdoc">bytes(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00132">pyobject.cpp:132</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a0298b14066d342bc4b85a679ad777f28"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a0298b14066d342bc4b85a679ad777f28">openage::pyinterface::PyObjectRef::hasattr</a></div><div class="ttdeci">bool hasattr(const std::string &amp;name) const</div><div class="ttdoc">hasattr(obj, name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00161">pyobject.cpp:161</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ab33e45c3e5b581e5c1dbc74282f6f168"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab33e45c3e5b581e5c1dbc74282f6f168">openage::pyinterface::PyObjectRef::to_int</a></div><div class="ttdeci">int64_t to_int() const</div><div class="ttdoc">int(obj)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00183">pyobject.cpp:183</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="pyobject__tests_8cpp.xhtml">pyobject_tests.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
