<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::curve::CurveIterator&lt; val_t, container_t, iterator_t &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1curve_1_1_curve_iterator.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classopenage_1_1curve_1_1_curve_iterator-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::curve::CurveIterator&lt; val_t, container_t, iterator_t &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="iterator_8h_source.xhtml">iterator.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::curve::CurveIterator&lt; val_t, container_t, iterator_t &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1curve_1_1_curve_iterator__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::curve::CurveIterator&lt; val_t, container_t, iterator_t &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1curve_1_1_curve_iterator__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab7d2b047846bd36fa2dee3d216bac420"><td class="memItemLeft" align="right" valign="top">virtual const val_t &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab7d2b047846bd36fa2dee3d216bac420">value</a> () const =0</td></tr>
<tr class="separator:ab7d2b047846bd36fa2dee3d216bac420"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8d8cedf66ff2cbb551f2faf63d3026"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a0b8d8cedf66ff2cbb551f2faf63d3026">valid</a> () const =0</td></tr>
<tr class="separator:a0b8d8cedf66ff2cbb551f2faf63d3026"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4bd1ef9f473fbdfa1d1df4288a50f2e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ad4bd1ef9f473fbdfa1d1df4288a50f2e">CurveIterator</a> (const container_t *c)</td></tr>
<tr class="separator:ad4bd1ef9f473fbdfa1d1df4288a50f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40ebee2d0fa0286de5626196595fdeae"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a40ebee2d0fa0286de5626196595fdeae">CurveIterator</a> (const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a> &amp;)=default</td></tr>
<tr class="separator:a40ebee2d0fa0286de5626196595fdeae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46f039556f6f516d51e05a608319aba2"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a46f039556f6f516d51e05a608319aba2">~CurveIterator</a> ()=default</td></tr>
<tr class="separator:a46f039556f6f516d51e05a608319aba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a984fc87d7f98bcf2ad157b46b8859719"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t, iterator_t &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a984fc87d7f98bcf2ad157b46b8859719">operator=</a> (const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t, iterator_t &gt; &amp;)=default</td></tr>
<tr class="separator:a984fc87d7f98bcf2ad157b46b8859719"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b701b5027187bea44a9f02dbf254912"><td class="memItemLeft" align="right" valign="top">virtual const val_t &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9b701b5027187bea44a9f02dbf254912">operator *</a> () const</td></tr>
<tr class="separator:a9b701b5027187bea44a9f02dbf254912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33bad08eacbb20caa76fab3deca68ce8"><td class="memItemLeft" align="right" valign="top">virtual const val_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a33bad08eacbb20caa76fab3deca68ce8">operator -&gt;</a> () const</td></tr>
<tr class="separator:a33bad08eacbb20caa76fab3deca68ce8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75ae942a23bf9d03bca21d1085dbfbab"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a75ae942a23bf9d03bca21d1085dbfbab">operator==</a> (const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t &gt; &amp;rhs) const</td></tr>
<tr class="separator:a75ae942a23bf9d03bca21d1085dbfbab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e4ecb78a518cdb0f3606f23e851d802"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a0e4ecb78a518cdb0f3606f23e851d802">operator !=</a> (const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t &gt; &amp;rhs) const</td></tr>
<tr class="separator:a0e4ecb78a518cdb0f3606f23e851d802"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab14912b85502c78be50c1f1153910a04"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab14912b85502c78be50c1f1153910a04">operator++</a> ()</td></tr>
<tr class="separator:ab14912b85502c78be50c1f1153910a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9fdd5bc51aff18de3955205eb89a4cb"><td class="memItemLeft" align="right" valign="top">const iterator_t &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#aa9fdd5bc51aff18de3955205eb89a4cb">get_base</a> () const</td></tr>
<tr class="separator:aa9fdd5bc51aff18de3955205eb89a4cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb43903e1f5f74e50013d1234edc0160"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#aeb43903e1f5f74e50013d1234edc0160">get_from</a> () const</td></tr>
<tr class="separator:aeb43903e1f5f74e50013d1234edc0160"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea98f4841a8ae5600d1a772ad3d1965"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#acea98f4841a8ae5600d1a772ad3d1965">get_to</a> () const</td></tr>
<tr class="separator:acea98f4841a8ae5600d1a772ad3d1965"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a45e14ddb2e3759afe9b36d4b01d55cd0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a45e14ddb2e3759afe9b36d4b01d55cd0">CurveIterator</a> (const iterator_t &amp;<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>, const container_t *<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a>, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a>, const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a>)</td></tr>
<tr class="separator:a45e14ddb2e3759afe9b36d4b01d55cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a11394d2684ffc192aaae3184df428003"><td class="memItemLeft" align="right" valign="top">iterator_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a></td></tr>
<tr class="memdesc:a11394d2684ffc192aaae3184df428003"><td class="mdescLeft">&#160;</td><td class="mdescRight">The iterator this is currently referring to.  <a href="#a11394d2684ffc192aaae3184df428003">More...</a><br /></td></tr>
<tr class="separator:a11394d2684ffc192aaae3184df428003"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a96fab06cebd047fb68c95bef5b18f1"><td class="memItemLeft" align="right" valign="top">const container_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a></td></tr>
<tr class="memdesc:a9a96fab06cebd047fb68c95bef5b18f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">The base container.  <a href="#a9a96fab06cebd047fb68c95bef5b18f1">More...</a><br /></td></tr>
<tr class="separator:a9a96fab06cebd047fb68c95bef5b18f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe1766ff4c5b6519e07785ed567a305"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a></td></tr>
<tr class="memdesc:a2fe1766ff4c5b6519e07785ed567a305"><td class="mdescLeft">&#160;</td><td class="mdescRight">The time, from where this iterator started to iterate.  <a href="#a2fe1766ff4c5b6519e07785ed567a305">More...</a><br /></td></tr>
<tr class="separator:a2fe1766ff4c5b6519e07785ed567a305"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91dc13f1422535e3f5a02b6c3893252f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a></td></tr>
<tr class="memdesc:a91dc13f1422535e3f5a02b6c3893252f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The time, to where this iterator will iterate.  <a href="#a91dc13f1422535e3f5a02b6c3893252f">More...</a><br /></td></tr>
<tr class="separator:a91dc13f1422535e3f5a02b6c3893252f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt;<br />
class openage::curve::CurveIterator&lt; val_t, container_t, iterator_t &gt;</h3>

<p>Default interface for curve containers </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00015">15</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="ad4bd1ef9f473fbdfa1d1df4288a50f2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4bd1ef9f473fbdfa1d1df4288a50f2e">&#9670;&nbsp;</a></span>CurveIterator() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a> </td>
          <td>(</td>
          <td class="paramtype">const container_t *&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The iterator needs a reference to the container </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00031">31</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        :</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>{},</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a>{c},</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a>{-<a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;time_t&gt;::max</a>()},</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a>{+<a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;time_t&gt;::max</a>()} {}</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a91dc13f1422535e3f5a02b6c3893252f"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">openage::curve::CurveIterator::to</a></div><div class="ttdeci">time_t to</div><div class="ttdoc">The time, to where this iterator will iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00131">iterator.h:131</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a9a96fab06cebd047fb68c95bef5b18f1"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">openage::curve::CurveIterator::container</a></div><div class="ttdeci">const container_t * container</div><div class="ttdoc">The base container.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00125">iterator.h:125</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a2fe1766ff4c5b6519e07785ed567a305"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">openage::curve::CurveIterator::from</a></div><div class="ttdeci">time_t from</div><div class="ttdoc">The time, from where this iterator started to iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00128">iterator.h:128</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a45e14ddb2e3759afe9b36d4b01d55cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45e14ddb2e3759afe9b36d4b01d55cd0">&#9670;&nbsp;</a></span>CurveIterator() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a> </td>
          <td>(</td>
          <td class="paramtype">const iterator_t &amp;&#160;</td>
          <td class="paramname"><em>base</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const container_t *&#160;</td>
          <td class="paramname"><em>container</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>from</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> &amp;&#160;</td>
          <td class="paramname"><em>to</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Can only be constructed from the referenced container </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00042">42</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        :</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>{<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>},</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a>{<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a>},</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a>{<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a>},</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a>{<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a>} {}</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a91dc13f1422535e3f5a02b6c3893252f"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">openage::curve::CurveIterator::to</a></div><div class="ttdeci">time_t to</div><div class="ttdoc">The time, to where this iterator will iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00131">iterator.h:131</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a9a96fab06cebd047fb68c95bef5b18f1"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">openage::curve::CurveIterator::container</a></div><div class="ttdeci">const container_t * container</div><div class="ttdoc">The base container.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00125">iterator.h:125</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a2fe1766ff4c5b6519e07785ed567a305"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">openage::curve::CurveIterator::from</a></div><div class="ttdeci">time_t from</div><div class="ttdoc">The time, from where this iterator started to iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00128">iterator.h:128</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a40ebee2d0fa0286de5626196595fdeae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40ebee2d0fa0286de5626196595fdeae">&#9670;&nbsp;</a></span>CurveIterator() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t, iterator_t &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default copy c'tor </p>

</div>
</div>
<a id="a46f039556f6f516d51e05a608319aba2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46f039556f6f516d51e05a608319aba2">&#9670;&nbsp;</a></span>~CurveIterator()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::~<a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa9fdd5bc51aff18de3955205eb89a4cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9fdd5bc51aff18de3955205eb89a4cb">&#9670;&nbsp;</a></span>get_base()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const iterator_t&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::get_base </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Access the underlying </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00102">102</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                                       {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aeb43903e1f5f74e50013d1234edc0160"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeb43903e1f5f74e50013d1234edc0160">&#9670;&nbsp;</a></span>get_from()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a>&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::get_from </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Access the lower end value of the defined time frame </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00109">109</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                   {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">from</a>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a2fe1766ff4c5b6519e07785ed567a305"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a2fe1766ff4c5b6519e07785ed567a305">openage::curve::CurveIterator::from</a></div><div class="ttdeci">time_t from</div><div class="ttdoc">The time, from where this iterator started to iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00128">iterator.h:128</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="acea98f4841a8ae5600d1a772ad3d1965"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acea98f4841a8ae5600d1a772ad3d1965">&#9670;&nbsp;</a></span>get_to()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a>&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::get_to </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Access the higher end value of the defined time frame </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00116">116</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                 {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">to</a>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a91dc13f1422535e3f5a02b6c3893252f"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a91dc13f1422535e3f5a02b6c3893252f">openage::curve::CurveIterator::to</a></div><div class="ttdeci">time_t to</div><div class="ttdoc">The time, to where this iterator will iterate.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00131">iterator.h:131</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0e4ecb78a518cdb0f3606f23e851d802"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e4ecb78a518cdb0f3606f23e851d802">&#9670;&nbsp;</a></span>operator !=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator != </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>For unequalness only the base iterator will be testet - not the timespans this is defined in. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00084">84</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                                                                 {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a> != rhs.<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a9b701b5027187bea44a9f02dbf254912"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9b701b5027187bea44a9f02dbf254912">&#9670;&nbsp;</a></span>operator *()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const val_t&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator * </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Dereference will call the virtual function </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00063">63</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                                            {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab7d2b047846bd36fa2dee3d216bac420">value</a>();</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_ab7d2b047846bd36fa2dee3d216bac420"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab7d2b047846bd36fa2dee3d216bac420">openage::curve::CurveIterator::value</a></div><div class="ttdeci">virtual const val_t &amp; value() const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a33bad08eacbb20caa76fab3deca68ce8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a33bad08eacbb20caa76fab3deca68ce8">&#9670;&nbsp;</a></span>operator -&gt;()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const val_t* <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator -&gt; </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Dereference will call the virutal function </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00068">68</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                             {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">return</span> &amp;this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab7d2b047846bd36fa2dee3d216bac420">value</a>();</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_ab7d2b047846bd36fa2dee3d216bac420"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#ab7d2b047846bd36fa2dee3d216bac420">openage::curve::CurveIterator::value</a></div><div class="ttdeci">virtual const val_t &amp; value() const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="ab14912b85502c78be50c1f1153910a04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab14912b85502c78be50c1f1153910a04">&#9670;&nbsp;</a></span>operator++()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt;val_t, container_t&gt;&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator++ </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Advance to the next valid element. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00091">91</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                                                             {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">do</span> {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            ++this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        } <span class="keywordflow">while</span> (this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">container</a>-&gt;end().base != this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a> and not this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a0b8d8cedf66ff2cbb551f2faf63d3026">valid</a>());</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a9a96fab06cebd047fb68c95bef5b18f1"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a9a96fab06cebd047fb68c95bef5b18f1">openage::curve::CurveIterator::container</a></div><div class="ttdeci">const container_t * container</div><div class="ttdoc">The base container.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00125">iterator.h:125</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a0b8d8cedf66ff2cbb551f2faf63d3026"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a0b8d8cedf66ff2cbb551f2faf63d3026">openage::curve::CurveIterator::valid</a></div><div class="ttdeci">virtual bool valid() const =0</div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a984fc87d7f98bcf2ad157b46b8859719"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a984fc87d7f98bcf2ad157b46b8859719">&#9670;&nbsp;</a></span>operator=()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt;val_t, container_t, iterator_t&gt;&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t, iterator_t &gt; &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Default assignment operator </p>

</div>
</div>
<a id="a75ae942a23bf9d03bca21d1085dbfbab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75ae942a23bf9d03bca21d1085dbfbab">&#9670;&nbsp;</a></span>operator==()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a>&lt; val_t, container_t &gt; &amp;&#160;</td>
          <td class="paramname"><em>rhs</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>For equalness only the base iterator will be testet - not the timespans this is defined in. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00076">76</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                                                                                 {</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a> == rhs.<a class="code" href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">base</a>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="ttc" id="classopenage_1_1curve_1_1_curve_iterator_xhtml_a11394d2684ffc192aaae3184df428003"><div class="ttname"><a href="classopenage_1_1curve_1_1_curve_iterator.xhtml#a11394d2684ffc192aaae3184df428003">openage::curve::CurveIterator::base</a></div><div class="ttdeci">iterator_t base</div><div class="ttdoc">The iterator this is currently referring to.</div><div class="ttdef"><b>Definition:</b> <a href="iterator_8h_source.xhtml#l00122">iterator.h:122</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="a0b8d8cedf66ff2cbb551f2faf63d3026"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b8d8cedf66ff2cbb551f2faf63d3026">&#9670;&nbsp;</a></span>valid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::valid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Check if the iterator is still valid (this breaks from the stl - in the best way) </p>

<p>Implemented in <a class="el" href="classopenage_1_1curve_1_1_map_filter_iterator.xhtml#a9d13c293e4046e4bb4d36bae91d278a1">openage::curve::MapFilterIterator&lt; key_t, val_t, container_t &gt;</a>, and <a class="el" href="classopenage_1_1curve_1_1_queue_filter_iterator.xhtml#a3701a6bec3e58007aafd6c56248d99a3">openage::curve::QueueFilterIterator&lt; val_t, container_t &gt;</a>.</p>

<p class="reference">Referenced by <a class="el" href="iterator_8h_source.xhtml#l00091">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator++()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1curve_1_1_curve_iterator_a0b8d8cedf66ff2cbb551f2faf63d3026_icgraph.svg" width="463" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="ab7d2b047846bd36fa2dee3d216bac420"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7d2b047846bd36fa2dee3d216bac420">&#9670;&nbsp;</a></span>value()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const val_t&amp; <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::value </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>access the value of the iterator </p>

<p>Implemented in <a class="el" href="classopenage_1_1curve_1_1_map_filter_iterator.xhtml#adf7f78fc26c05413c06d4b6833b9c29e">openage::curve::MapFilterIterator&lt; key_t, val_t, container_t &gt;</a>, and <a class="el" href="classopenage_1_1curve_1_1_queue_filter_iterator.xhtml#a4aafd29d89c2084adf6bebe8967ffcf8">openage::curve::QueueFilterIterator&lt; val_t, container_t &gt;</a>.</p>

<p class="reference">Referenced by <a class="el" href="members_8py_source.xhtml#l00340">openage.convert.dataformat.members.ContinueReadMemberResult::__str__()</a>, <a class="el" href="iterator_8h_source.xhtml#l00063">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator *()</a>, and <a class="el" href="iterator_8h_source.xhtml#l00068">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator -&gt;()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1curve_1_1_curve_iterator_ab7d2b047846bd36fa2dee3d216bac420_icgraph.svg" width="491" height="183"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a11394d2684ffc192aaae3184df428003"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11394d2684ffc192aaae3184df428003">&#9670;&nbsp;</a></span>base</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">iterator_t <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::base</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The iterator this is currently referring to. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00122">122</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="iterator_8h_source.xhtml#l00042">openage::curve::CurveIterator&lt; val_t, container_t &gt;::CurveIterator()</a>, <a class="el" href="iterator_8h_source.xhtml#l00102">openage::curve::CurveIterator&lt; val_t, container_t &gt;::get_base()</a>, <a class="el" href="iterator_8h_source.xhtml#l00084">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator !=()</a>, <a class="el" href="iterator_8h_source.xhtml#l00091">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator++()</a>, and <a class="el" href="iterator_8h_source.xhtml#l00076">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator==()</a>.</p>

</div>
</div>
<a id="a9a96fab06cebd047fb68c95bef5b18f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a96fab06cebd047fb68c95bef5b18f1">&#9670;&nbsp;</a></span>container</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const container_t* <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::container</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The base container. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00125">125</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="iterator_8h_source.xhtml#l00091">openage::curve::CurveIterator&lt; val_t, container_t &gt;::operator++()</a>.</p>

</div>
</div>
<a id="a2fe1766ff4c5b6519e07785ed567a305"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2fe1766ff4c5b6519e07785ed567a305">&#9670;&nbsp;</a></span>from</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::from</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The time, from where this iterator started to iterate. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00128">128</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="iterator_8h_source.xhtml#l00109">openage::curve::CurveIterator&lt; val_t, container_t &gt;::get_from()</a>.</p>

</div>
</div>
<a id="a91dc13f1422535e3f5a02b6c3893252f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91dc13f1422535e3f5a02b6c3893252f">&#9670;&nbsp;</a></span>to</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename val_t, typename container_t, typename iterator_t = typename container_t::const_iterator&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">time_t</a> <a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">openage::curve::CurveIterator</a>&lt; val_t, container_t, iterator_t &gt;::to</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The time, to where this iterator will iterate. </p>

<p class="definition">Definition at line <a class="el" href="iterator_8h_source.xhtml#l00131">131</a> of file <a class="el" href="iterator_8h_source.xhtml">iterator.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="iterator_8h_source.xhtml#l00116">openage::curve::CurveIterator&lt; val_t, container_t &gt;::get_to()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/curve/<a class="el" href="iterator_8h_source.xhtml">iterator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1curve.xhtml">curve</a></li><li class="navelem"><a class="el" href="classopenage_1_1curve_1_1_curve_iterator.xhtml">CurveIterator</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
