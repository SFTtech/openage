<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/worker.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('worker_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">worker.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="worker_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2016 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="job__aborted__exception_8h.xhtml">job_aborted_exception.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="job__manager_8h.xhtml">job_manager.h</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="worker_8h.xhtml">worker.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span>job {</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#a42630ad642f1e2e86c5cebed33a8b8a1">   12</a></span>&#160;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a42630ad642f1e2e86c5cebed33a8b8a1">Worker::Worker</a>(<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml">JobManager</a> *manager)</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    :</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    manager{<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ac9734f149754c8bc51b19d6cc57902c0">manager</a>},</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    is_running{<span class="keyword">false</span>} {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#a3a0d1ce7031d428efce6c42b083ffd05">   19</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a3a0d1ce7031d428efce6c42b083ffd05">Worker::start</a>() {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ab639eed2b93e58c7393b40103fb3cc5a">is_running</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a7248896af6a7ddd2492c3027660c5877">executor</a>.reset(<span class="keyword">new</span> std::thread{&amp;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a72be0e0fe2e2fd9fd5d9c994b3d0bdf4">Worker::process</a>, <span class="keyword">this</span>});</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#ab80cb2f4e936dc069dadf979b90bcfc6">   25</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ab80cb2f4e936dc069dadf979b90bcfc6">Worker::stop</a>() {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a6c96492e8ac3a987e0532b0e81685b77">pending_jobs_mutex</a>};</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ab639eed2b93e58c7393b40103fb3cc5a">is_running</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>.unlock();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a3a1cffa81bce40320896181ac63205cb">notify</a>();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;}</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#ace257fda681faf0b5c87e9296da18b7c">   33</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ace257fda681faf0b5c87e9296da18b7c">Worker::enqueue</a>(std::shared_ptr&lt;JobStateBase&gt; job) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a6c96492e8ac3a987e0532b0e81685b77">pending_jobs_mutex</a>};</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">pending_jobs</a>.push(job);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>.unlock();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a3a1cffa81bce40320896181ac63205cb">notify</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#a3a1cffa81bce40320896181ac63205cb">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a3a1cffa81bce40320896181ac63205cb">Worker::notify</a>() {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a1f7ff0ab3111361665027316908c2435">jobs_available</a>.notify_all();</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#afc0a09d080ea20c9e5b9466f04acb9f5">   46</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#afc0a09d080ea20c9e5b9466f04acb9f5">Worker::join</a>() {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a7248896af6a7ddd2492c3027660c5877">executor</a>-&gt;join();</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#a2546565a41969f4bb1d62773239e20c4">   51</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a2546565a41969f4bb1d62773239e20c4">Worker::execute_job</a>(std::shared_ptr&lt;JobStateBase&gt; &amp;job) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keyword">auto</span> should_abort = [<span class="keyword">this</span>]() {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">return</span> not this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ab639eed2b93e58c7393b40103fb3cc5a">is_running</a>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    };</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    <span class="keywordtype">bool</span> aborted = job-&gt;execute(should_abort);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="comment">// if the job was not aborted, tell the job manager, that the job has</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="comment">// finished</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">if</span> (not aborted) {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ac9734f149754c8bc51b19d6cc57902c0">manager</a>-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#a9e5e1a95045cef58acd980ebdabc6285">finish_job</a>(job);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopenage_1_1job_1_1_worker.xhtml#a72be0e0fe2e2fd9fd5d9c994b3d0bdf4">   65</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a72be0e0fe2e2fd9fd5d9c994b3d0bdf4">Worker::process</a>() {</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="comment">// as long as this worker thread is running repeat all steps</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">while</span> (<span class="keyword">true</span>) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// lock the local thread queue</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        std::unique_lock&lt;std::mutex&gt; <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>{this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a6c96492e8ac3a987e0532b0e81685b77">pending_jobs_mutex</a>};</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// if this thread shall not run any longer, exit the loop</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keywordflow">if</span> (not this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ab639eed2b93e58c7393b40103fb3cc5a">is_running</a>) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">// as long as there are no jobs from the local queue or the job manager</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">while</span> (this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">pending_jobs</a>.empty() and not this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ac9734f149754c8bc51b19d6cc57902c0">manager</a>-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#afc81fa6e3be5780014ced15942a48fa2">has_job</a>()) {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            <span class="comment">// the thread should wait</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a1f7ff0ab3111361665027316908c2435">jobs_available</a>.wait(<a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>);</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            <span class="comment">// when the thread is notified, first check if the thread should be</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            <span class="comment">// stopped</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="keywordflow">if</span> (not this-&gt;is_running) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment">// check if there are jobs in the local queue</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">if</span> (not this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">pending_jobs</a>.empty()) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="comment">// fetch the job</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keyword">auto</span> job = this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">pending_jobs</a>.front();</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">pending_jobs</a>.pop();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="comment">// release the local queue lock</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>.unlock();</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="comment">// and execute the job</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a2546565a41969f4bb1d62773239e20c4">execute_job</a>(job);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            <span class="comment">// otherwise just unlock the local queue</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <a class="code" href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a>.unlock();</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        }</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment">// after possibly executing a job from the local queue, check again if</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// the thread should still continue running</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">if</span> (not this-&gt;is_running) {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        }</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <span class="comment">// now try to fetch a job from the job manager</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">auto</span> manager_job = this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#ac9734f149754c8bc51b19d6cc57902c0">manager</a>-&gt;<a class="code" href="classopenage_1_1job_1_1_job_manager.xhtml#adefba3f5fb9db0931cca54c27ab31041">fetch_job</a>();</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> (manager_job.get() != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="comment">// and execute it</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1job_1_1_worker.xhtml#a2546565a41969f4bb1d62773239e20c4">execute_job</a>(manager_job);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}} <span class="comment">// namespace openage::job</span></div><div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml">openage::job::JobManager</a></div><div class="ttdoc">A job manager can be used to execute functions within separate worker threads.</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8h_source.xhtml#l00029">job_manager.h:29</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_a9e5e1a95045cef58acd980ebdabc6285"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#a9e5e1a95045cef58acd980ebdabc6285">openage::job::JobManager::finish_job</a></div><div class="ttdeci">void finish_job(std::shared_ptr&lt; JobStateBase &gt; job)</div><div class="ttdoc">Adds a finished job to the internal finished job map.</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00117">job_manager.cpp:117</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a2546565a41969f4bb1d62773239e20c4"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a2546565a41969f4bb1d62773239e20c4">openage::job::Worker::execute_job</a></div><div class="ttdeci">void execute_job(std::shared_ptr&lt; JobStateBase &gt; &amp;job)</div><div class="ttdoc">Executes the given job and tells the parent job manager, when it has finished.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00051">worker.cpp:51</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_adefba3f5fb9db0931cca54c27ab31041"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#adefba3f5fb9db0931cca54c27ab31041">openage::job::JobManager::fetch_job</a></div><div class="ttdeci">std::shared_ptr&lt; JobStateBase &gt; fetch_job()</div><div class="ttdoc">Returns a job from the internal job queue.</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00099">job_manager.cpp:99</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_ab639eed2b93e58c7393b40103fb3cc5a"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#ab639eed2b93e58c7393b40103fb3cc5a">openage::job::Worker::is_running</a></div><div class="ttdeci">bool is_running</div><div class="ttdoc">Whether this worker thread is still running.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00028">worker.h:28</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a6c96492e8ac3a987e0532b0e81685b77"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a6c96492e8ac3a987e0532b0e81685b77">openage::job::Worker::pending_jobs_mutex</a></div><div class="ttdeci">std::mutex pending_jobs_mutex</div><div class="ttdoc">A mutex to synchronize the internal pending jobs queue.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00034">worker.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_job_manager_xhtml_afc81fa6e3be5780014ced15942a48fa2"><div class="ttname"><a href="classopenage_1_1job_1_1_job_manager.xhtml#afc81fa6e3be5780014ced15942a48fa2">openage::job::JobManager::has_job</a></div><div class="ttdeci">bool has_job()</div><div class="ttdoc">Returns whether there are jobs to be executed.</div><div class="ttdef"><b>Definition:</b> <a href="job__manager_8cpp_source.xhtml#l00111">job_manager.cpp:111</a></div></div>
<div class="ttc" id="worker_8h_xhtml"><div class="ttname"><a href="worker_8h.xhtml">worker.h</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_ac9734f149754c8bc51b19d6cc57902c0"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#ac9734f149754c8bc51b19d6cc57902c0">openage::job::Worker::manager</a></div><div class="ttdeci">JobManager * manager</div><div class="ttdoc">The parent job manager, this worker is fetching jobs from.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00025">worker.h:25</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_ab80cb2f4e936dc069dadf979b90bcfc6"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#ab80cb2f4e936dc069dadf979b90bcfc6">openage::job::Worker::stop</a></div><div class="ttdeci">void stop()</div><div class="ttdoc">Stops this worker.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00025">worker.cpp:25</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a81131cf6e31018ec29632a6b41a79131"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a81131cf6e31018ec29632a6b41a79131">openage::job::Worker::pending_jobs</a></div><div class="ttdeci">std::queue&lt; std::shared_ptr&lt; JobStateBase &gt; &gt; pending_jobs</div><div class="ttdoc">A queue of jobs that are to be executed.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00037">worker.h:37</a></div></div>
<div class="ttc" id="job__aborted__exception_8h_xhtml"><div class="ttname"><a href="job__aborted__exception_8h.xhtml">job_aborted_exception.h</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a3a0d1ce7031d428efce6c42b083ffd05"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a3a0d1ce7031d428efce6c42b083ffd05">openage::job::Worker::start</a></div><div class="ttdeci">void start()</div><div class="ttdoc">Starts this worker.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00019">worker.cpp:19</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a3a1cffa81bce40320896181ac63205cb"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a3a1cffa81bce40320896181ac63205cb">openage::job::Worker::notify</a></div><div class="ttdeci">void notify()</div><div class="ttdoc">Notifies this worker, that new jobs are available.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00041">worker.cpp:41</a></div></div>
<div class="ttc" id="job__manager_8h_xhtml"><div class="ttname"><a href="job__manager_8h.xhtml">job_manager.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="setup_8cpp_xhtml_a8ae9fdb10d60db487571238897882e2b"><div class="ttname"><a href="setup_8cpp.xhtml#a8ae9fdb10d60db487571238897882e2b">lock</a></div><div class="ttdeci">std::mutex lock</div><div class="ttdef"><b>Definition:</b> <a href="setup_8cpp_source.xhtml#l00022">setup.cpp:22</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a7248896af6a7ddd2492c3027660c5877"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a7248896af6a7ddd2492c3027660c5877">openage::job::Worker::executor</a></div><div class="ttdeci">std::unique_ptr&lt; std::thread &gt; executor</div><div class="ttdoc">The executing thread.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00031">worker.h:31</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a72be0e0fe2e2fd9fd5d9c994b3d0bdf4"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a72be0e0fe2e2fd9fd5d9c994b3d0bdf4">openage::job::Worker::process</a></div><div class="ttdeci">void process()</div><div class="ttdoc">Fetches pending jobs from the parent job manager and from the internal pending job queue and executes...</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00065">worker.cpp:65</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_afc0a09d080ea20c9e5b9466f04acb9f5"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#afc0a09d080ea20c9e5b9466f04acb9f5">openage::job::Worker::join</a></div><div class="ttdeci">void join()</div><div class="ttdoc">Joins the internal executing thread.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00046">worker.cpp:46</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a1f7ff0ab3111361665027316908c2435"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a1f7ff0ab3111361665027316908c2435">openage::job::Worker::jobs_available</a></div><div class="ttdeci">std::condition_variable jobs_available</div><div class="ttdoc">A condition variable to wait for new jobs.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8h_source.xhtml#l00040">worker.h:40</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_ace257fda681faf0b5c87e9296da18b7c"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#ace257fda681faf0b5c87e9296da18b7c">openage::job::Worker::enqueue</a></div><div class="ttdeci">void enqueue(std::shared_ptr&lt; JobStateBase &gt; job)</div><div class="ttdoc">Adds the given job to the internal pending job queue.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00033">worker.cpp:33</a></div></div>
<div class="ttc" id="classopenage_1_1job_1_1_worker_xhtml_a42630ad642f1e2e86c5cebed33a8b8a1"><div class="ttname"><a href="classopenage_1_1job_1_1_worker.xhtml#a42630ad642f1e2e86c5cebed33a8b8a1">openage::job::Worker::Worker</a></div><div class="ttdeci">Worker(JobManager *manager)</div><div class="ttdoc">Constructs a new worker with the parent job manager.</div><div class="ttdef"><b>Definition:</b> <a href="worker_8cpp_source.xhtml#l00012">worker.cpp:12</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_26d84fcac5b38ff9c2db6912af76a48c.xhtml">job</a></li><li class="navelem"><a class="el" href="worker_8cpp.xhtml">worker.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
