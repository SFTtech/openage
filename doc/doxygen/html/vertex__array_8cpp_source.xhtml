<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/opengl/vertex_array.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('vertex__array_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">vertex_array.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="vertex__array_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="vertex__array_8h.xhtml">vertex_array.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;../../error/error.h&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../../datastructure/constexpr_map.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="lookup_8h.xhtml">lookup.h</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>renderer {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>opengl {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<a class="code" href="namespaceopenage_1_1renderer.xhtml#a0ddd0825aae12563b5cc995a3333580f">GlVertexArray::GlVertexArray</a>(<a class="code" href="namespaceopenage_1_1util_1_1tests.xhtml#a7deb96e08e8e82e52d83fb34f6db25da">std::vector</a>&lt;std::pair&lt;GlBuffer const&amp;, resources::VertexInputInfo const&amp;&gt;&gt; buffers)</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    : GlSimpleObject([] (GLuint handle) { glDeleteVertexArrays(1, &amp;handle); } )</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    GLuint handle;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    glGenVertexArrays(1, &amp;handle);</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    this-&gt;handle = handle;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    this-&gt;<a class="code" href="namespaceopenage_1_1renderer.xhtml#a00b1f2873c9bbd71a19b3a26bd11d03e">bind</a>();</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> (buffers.size() == 1 and buffers[0].second.get_shader_input_map()) { <span class="comment">// Map inputs according to specified pairing</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keyword">auto</span> <span class="keyword">const</span>&amp; <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a> = buffers[0].second;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keyword">auto</span> <span class="keyword">const</span>&amp; in_map = *<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_shader_input_map();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keyword">auto</span> <span class="keyword">const</span>&amp; in = <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_inputs();</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keyword">auto</span>&amp; buf = buffers[0].first;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        buf.bind(GL_ARRAY_BUFFER);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        std::map&lt;size_t, size_t&gt; in_map_sorted(in_map.begin(), in_map.end());</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="keywordtype">size_t</span> offset = 0;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordtype">size_t</span> next_idx = 0;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_layout() == <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50ca4cc854cc056515cc2befbc91f30d07b0">resources::vertex_layout_t::AOS</a>) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> mapping : in_map_sorted) {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;                <span class="keywordflow">if</span> (mapping.first != next_idx) {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                    <span class="comment">// Some attributes were skipped, so add them to the offset without enabling in VAO</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = next_idx; i &lt; mapping.first; i++) {</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                        offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in[i]);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                    }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;                }</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                glVertexAttribPointer(</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                    mapping.second,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                    <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ae21e0e1ee561f05a999f3f4f680ea2af">resources::vertex_input_count</a>(in[mapping.first]),</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;                    <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a>.get(in[mapping.first]),</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                    GL_FALSE,</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                    <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.vert_size(),</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;                    reinterpret_cast&lt;void*&gt;(offset)</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;                );</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in[mapping.first]);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                next_idx = mapping.first + 1;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            }</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_layout() == <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50cabe5a791366c5f2810d7dd6132dc0f06c">resources::vertex_layout_t::SOA</a>) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="keywordtype">size_t</span> vert_count = buf.get_size() / <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.vert_size();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> mapping : in_map_sorted) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordflow">if</span> (mapping.first != next_idx) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    <span class="comment">// Some attributes were skipped, so add them to the offset without enabling in VAO</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = next_idx; i &lt; mapping.first; i++) {</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                        offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in[i]) * vert_count;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                    }</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                glVertexAttribPointer(</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                    mapping.second,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ae21e0e1ee561f05a999f3f4f680ea2af">resources::vertex_input_count</a>(in[mapping.first]),</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a>.get(in[mapping.first]),</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    GL_FALSE,</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    0,</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                    reinterpret_cast&lt;void*&gt;(offset)</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                );</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;                offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in[mapping.first]) * vert_count;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                next_idx = mapping.first + 1;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown vertex format.&quot;</span>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    } <span class="keywordflow">else</span> { <span class="comment">// Map inputs in ascending order</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        GLuint attrib = 0;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> buf_info : buffers) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            <span class="keyword">auto</span> <span class="keyword">const</span> &amp;buf = buf_info.first;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            <span class="keyword">auto</span> <span class="keyword">const</span> &amp;<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a> = buf_info.second;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_shader_input_map())) {</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;                <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Shader input mapping is unsupported when constructing a VAO from multiple buffers.&quot;</span>);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            }</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            buf.bind(GL_ARRAY_BUFFER);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_layout() == <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50ca4cc854cc056515cc2befbc91f30d07b0">resources::vertex_layout_t::AOS</a>) {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                <span class="keywordtype">size_t</span> offset = 0;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">auto</span> in : <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_inputs()) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                    glEnableVertexAttribArray(attrib);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                    glVertexAttribPointer(</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                        attrib,</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                        <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ae21e0e1ee561f05a999f3f4f680ea2af">resources::vertex_input_count</a>(in),</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                        <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a>.get(in),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        GL_FALSE,</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.vert_size(),</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        reinterpret_cast&lt;void*&gt;(offset)</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                    );</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                    offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                    attrib += 1;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                }</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_layout() == <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50cabe5a791366c5f2810d7dd6132dc0f06c">resources::vertex_layout_t::SOA</a>) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;                <span class="keywordtype">size_t</span> offset = 0;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;                <span class="keywordtype">size_t</span> vert_count = buf.get_size() / <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.vert_size();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">auto</span> in : <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>.get_inputs()) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    glEnableVertexAttribArray(attrib);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                    glVertexAttribPointer(</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                        attrib,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                        <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#ae21e0e1ee561f05a999f3f4f680ea2af">resources::vertex_input_count</a>(in),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                        <a class="code" href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">GL_VERT_IN_ELEM_TYPE</a>.get(in),</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                        GL_FALSE,</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                        0,</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                        reinterpret_cast&lt;void*&gt;(offset)</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    );</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    offset += <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">resources::vertex_input_size</a>(in) * vert_count;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    attrib += 1;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Unknown vertex layout.&quot;</span>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        }</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;}</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<a class="code" href="namespaceopenage_1_1renderer.xhtml#a0ddd0825aae12563b5cc995a3333580f">GlVertexArray::GlVertexArray</a>(GlBuffer <span class="keyword">const</span>&amp; buf, resources::VertexInputInfo <span class="keyword">const</span>&amp; <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>)</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    : <a class="code" href="namespaceopenage_1_1renderer.xhtml#a0ddd0825aae12563b5cc995a3333580f">GlVertexArray</a>( { { buf, <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a> } } ) {}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<a class="code" href="namespaceopenage_1_1renderer.xhtml#a0ddd0825aae12563b5cc995a3333580f">GlVertexArray::GlVertexArray</a>()</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    : GlSimpleObject([] (GLuint handle) { glDeleteVertexArrays(1, &amp;handle); } )</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    GLuint handle;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    glGenVertexArrays(1, &amp;handle);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    this-&gt;handle = handle;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1renderer.xhtml#a00b1f2873c9bbd71a19b3a26bd11d03e">GlVertexArray::bind</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    glBindVertexArray(*this-&gt;handle);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="comment">// Enabling the vertexAttribArrays here again is unnecessary,</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="comment">// because the VAO bind does it anyway.</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}}} <span class="comment">// openage::renderer::opengl</span></div><div class="ttc" id="lookup_8h_xhtml"><div class="ttname"><a href="lookup_8h.xhtml">lookup.h</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_ade052cbaea4982f40bd7b1e8305de50cabe5a791366c5f2810d7dd6132dc0f06c"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50cabe5a791366c5f2810d7dd6132dc0f06c">openage::renderer::resources::vertex_layout_t::SOA</a></div><div class="ttdoc">Struct of arrays. XYZXYZXYZ, UVUVUV.</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_xhtml_a00b1f2873c9bbd71a19b3a26bd11d03e"><div class="ttname"><a href="namespaceopenage_1_1renderer.xhtml#a00b1f2873c9bbd71a19b3a26bd11d03e">openage::renderer::bind</a></div><div class="ttdeci">void bind() const</div><div class="ttdoc">Make this vertex array object the current one.</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1opengl_xhtml_a96240e46c046c93700788844c906a684"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1opengl.xhtml#a96240e46c046c93700788844c906a684">openage::renderer::opengl::GL_VERT_IN_ELEM_TYPE</a></div><div class="ttdeci">static constexpr auto GL_VERT_IN_ELEM_TYPE</div><div class="ttdoc">The type of a single element in a per-vertex attribute.</div><div class="ttdef"><b>Definition:</b> <a href="lookup_8h_source.xhtml#l00132">lookup.h:132</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_xhtml_a0ddd0825aae12563b5cc995a3333580f"><div class="ttname"><a href="namespaceopenage_1_1renderer.xhtml#a0ddd0825aae12563b5cc995a3333580f">openage::renderer::GlVertexArray</a></div><div class="ttdeci">**A shader input mapping is only allowed when there is a single element in buffers In such a *the vertex inputs are paired with VAO attributes according to the mapping instead of in ascending order * GlVertexArray(std::vector&lt; std::pair&lt; GlBuffer const &amp;, resources::VertexInputInfo const &amp; &gt;&gt; buffers)</div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1tests_xhtml_a7deb96e08e8e82e52d83fb34f6db25da"><div class="ttname"><a href="namespaceopenage_1_1util_1_1tests.xhtml#a7deb96e08e8e82e52d83fb34f6db25da">openage::util::tests::vector</a></div><div class="ttdeci">void vector()</div><div class="ttdef"><b>Definition:</b> <a href="vector__test_8cpp_source.xhtml#l00011">vector_test.cpp:11</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_ae21e0e1ee561f05a999f3f4f680ea2af"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#ae21e0e1ee561f05a999f3f4f680ea2af">openage::renderer::resources::vertex_input_count</a></div><div class="ttdeci">size_t vertex_input_count(vertex_input_t in)</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8cpp_source.xhtml#l00035">mesh_data.cpp:35</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="vertex__array_8h_xhtml"><div class="ttname"><a href="vertex__array_8h.xhtml">vertex_array.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3f1815b698faf5786fc5e20bcac7704b"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">openage::log.info</a></div><div class="ttdeci">def info(msg, *args, **kwargs)</div><div class="ttdoc">info message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00114">__init__.py:114</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_ade052cbaea4982f40bd7b1e8305de50ca4cc854cc056515cc2befbc91f30d07b0"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#ade052cbaea4982f40bd7b1e8305de50ca4cc854cc056515cc2befbc91f30d07b0">openage::renderer::resources::vertex_layout_t::AOS</a></div><div class="ttdoc">Array of structs. XYZUV, XYZUV, XYZUV.</div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a11c3247d50ab63967293c59f92c47368"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a11c3247d50ab63967293c59f92c47368">openage::renderer::resources::vertex_input_size</a></div><div class="ttdeci">size_t vertex_input_size(vertex_input_t in)</div><div class="ttdoc">Returns the size in bytes of a per-vertex input.</div><div class="ttdef"><b>Definition:</b> <a href="mesh__data_8cpp_source.xhtml#l00031">mesh_data.cpp:31</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_4a01dee474130c13b802372087a79ed7.xhtml">renderer</a></li><li class="navelem"><a class="el" href="dir_50129a17799df7b67570c4983a7bc841.xhtml">opengl</a></li><li class="navelem"><a class="el" href="vertex__array_8cpp.xhtml">vertex_array.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
