<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.dataformat.members.MultisubtypeMember Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.dataformat.members.MultisubtypeMember Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage.convert.dataformat.members.MultisubtypeMember:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage.convert.dataformat.members.MultisubtypeMember:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abb999586d6c8c77e3eb1c520deda4819"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abb999586d6c8c77e3eb1c520deda4819">__init__</a> (self, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ad76bf42f766fba6d160c0a0f2408b7f6">subtype_definition</a>, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a>, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#ac7543594bde360a9522c095b116066d0">length</a>, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#af278ba52cb2291334852e0de4ae1c7e5">passed_args</a>=None, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a69612f9b63e76655dc34996cd7d42484">ref_to</a>=None, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a5fe7e102cb5c65e32d043d7a4662e2b8">offset_to</a>=None, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a>=None, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3c02376fcce16d3bc085246f2de847e">ref_type_params</a>=None)</td></tr>
<tr class="separator:abb999586d6c8c77e3eb1c520deda4819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abff2c6510cd43895368ddb3b8e75fa3a"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abff2c6510cd43895368ddb3b8e75fa3a">get_headers</a> (self, output_target)</td></tr>
<tr class="separator:abff2c6510cd43895368ddb3b8e75fa3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27571ee3aea8f88f36ae23140c9e77c0"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a27571ee3aea8f88f36ae23140c9e77c0">get_effective_type</a> (self)</td></tr>
<tr class="separator:a27571ee3aea8f88f36ae23140c9e77c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b0c3e9b8181b04312a30d3471796acc"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a2b0c3e9b8181b04312a30d3471796acc">get_empty_value</a> (self)</td></tr>
<tr class="memdesc:a2b0c3e9b8181b04312a30d3471796acc"><td class="mdescLeft">&#160;</td><td class="mdescRight">when this data field is not filled, use the returned value instead.  <a href="#a2b0c3e9b8181b04312a30d3471796acc">More...</a><br /></td></tr>
<tr class="separator:a2b0c3e9b8181b04312a30d3471796acc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a80ec8145d2bf776c98f7cdc4c0da8e"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a6a80ec8145d2bf776c98f7cdc4c0da8e">get_contained_types</a> (self)</td></tr>
<tr class="separator:a6a80ec8145d2bf776c98f7cdc4c0da8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add52bbeac462df02499e1942ddca2dc5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#add52bbeac462df02499e1942ddca2dc5">get_parsers</a> (self, idx, member)</td></tr>
<tr class="separator:add52bbeac462df02499e1942ddca2dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a567e8cd4638f6d804bb7a4da292b076f"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a567e8cd4638f6d804bb7a4da292b076f">get_typerefs</a> (self)</td></tr>
<tr class="separator:a567e8cd4638f6d804bb7a4da292b076f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81e16d3f5273041083c8497f102803ae"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a81e16d3f5273041083c8497f102803ae">get_snippets</a> (self, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a>, format_)</td></tr>
<tr class="memdesc:a81e16d3f5273041083c8497f102803ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">return struct definitions for this type  <a href="#a81e16d3f5273041083c8497f102803ae">More...</a><br /></td></tr>
<tr class="separator:a81e16d3f5273041083c8497f102803ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca0aea22855fc04f42a9c3583f9c7d5"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#abca0aea22855fc04f42a9c3583f9c7d5">format_hash</a> (self, hasher)</td></tr>
<tr class="memdesc:abca0aea22855fc04f42a9c3583f9c7d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">hash these member's settings.  <a href="#abca0aea22855fc04f42a9c3583f9c7d5">More...</a><br /></td></tr>
<tr class="separator:abca0aea22855fc04f42a9c3583f9c7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0a3a0241b823f90f1bcb74e1619df1f"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae0a3a0241b823f90f1bcb74e1619df1f">__repr__</a> (self)</td></tr>
<tr class="separator:ae0a3a0241b823f90f1bcb74e1619df1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">openage.convert.dataformat.members.RefMember</a></td></tr>
<tr class="memitem:ad33cc8d2074cba7148a9e10a35ec1c49 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#ad33cc8d2074cba7148a9e10a35ec1c49">__init__</a> (self, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a>, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a>)</td></tr>
<tr class="separator:ad33cc8d2074cba7148a9e10a35ec1c49 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">openage.convert.dataformat.members.DataMember</a></td></tr>
<tr class="memitem:af93da463756c79f7fb06eb46898fd6c5 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#af93da463756c79f7fb06eb46898fd6c5">__init__</a> (self)</td></tr>
<tr class="separator:af93da463756c79f7fb06eb46898fd6c5 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d8cd7ab645eb4e99a36a3627021111f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a1d8cd7ab645eb4e99a36a3627021111f">entry_hook</a> (self, data)</td></tr>
<tr class="memdesc:a1d8cd7ab645eb4e99a36a3627021111f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="mdescLeft">&#160;</td><td class="mdescRight">allows the data member class to modify the input data  <a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a1d8cd7ab645eb4e99a36a3627021111f">More...</a><br /></td></tr>
<tr class="separator:a1d8cd7ab645eb4e99a36a3627021111f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cc54e765c92a42b17dbe2786cfdef08 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8cc54e765c92a42b17dbe2786cfdef08">verify_read_data</a> (self, obj, data)</td></tr>
<tr class="memdesc:a8cc54e765c92a42b17dbe2786cfdef08 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="mdescLeft">&#160;</td><td class="mdescRight">gets called for each entry.  <a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a8cc54e765c92a42b17dbe2786cfdef08">More...</a><br /></td></tr>
<tr class="separator:a8cc54e765c92a42b17dbe2786cfdef08 inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfafb0d6702186d2e0b986a40727509f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#acfafb0d6702186d2e0b986a40727509f">get_struct_entries</a> (self, member_name)</td></tr>
<tr class="memdesc:acfafb0d6702186d2e0b986a40727509f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="mdescLeft">&#160;</td><td class="mdescRight">return the lines to put inside the C struct.  <a href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#acfafb0d6702186d2e0b986a40727509f">More...</a><br /></td></tr>
<tr class="separator:acfafb0d6702186d2e0b986a40727509f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member')"><img src="closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">openage.convert.dataformat.members.DynLengthMember</a></td></tr>
<tr class="memitem:a76522d7acad4b1da32e90104d216fc6f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a76522d7acad4b1da32e90104d216fc6f">__init__</a> (self, <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#ac7543594bde360a9522c095b116066d0">length</a>)</td></tr>
<tr class="separator:a76522d7acad4b1da32e90104d216fc6f inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14ed52f719d6d07a9f4308b6824ae6ec inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a14ed52f719d6d07a9f4308b6824ae6ec">get_length</a> (self, obj=None)</td></tr>
<tr class="separator:a14ed52f719d6d07a9f4308b6824ae6ec inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65df1261e8a5c28c98ad325de5c4fdbe inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a65df1261e8a5c28c98ad325de5c4fdbe">is_dynamic_length</a> (self, target=None)</td></tr>
<tr class="separator:a65df1261e8a5c28c98ad325de5c4fdbe inherit pub_methods_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad76bf42f766fba6d160c0a0f2408b7f6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ad76bf42f766fba6d160c0a0f2408b7f6">subtype_definition</a></td></tr>
<tr class="separator:ad76bf42f766fba6d160c0a0f2408b7f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50a2a9e4d4dac90934ab7566bc887b05"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a50a2a9e4d4dac90934ab7566bc887b05">class_lookup</a></td></tr>
<tr class="separator:a50a2a9e4d4dac90934ab7566bc887b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af278ba52cb2291334852e0de4ae1c7e5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#af278ba52cb2291334852e0de4ae1c7e5">passed_args</a></td></tr>
<tr class="separator:af278ba52cb2291334852e0de4ae1c7e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69612f9b63e76655dc34996cd7d42484"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a69612f9b63e76655dc34996cd7d42484">ref_to</a></td></tr>
<tr class="separator:a69612f9b63e76655dc34996cd7d42484"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fe7e102cb5c65e32d043d7a4662e2b8"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#a5fe7e102cb5c65e32d043d7a4662e2b8">offset_to</a></td></tr>
<tr class="separator:a5fe7e102cb5c65e32d043d7a4662e2b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c02376fcce16d3bc085246f2de847e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3c02376fcce16d3bc085246f2de847e">ref_type_params</a></td></tr>
<tr class="separator:ae3c02376fcce16d3bc085246f2de847e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3bb69b6f958afa092583d2925465598"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml#ae3bb69b6f958afa092583d2925465598">resolved</a></td></tr>
<tr class="separator:ae3bb69b6f958afa092583d2925465598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml">openage.convert.dataformat.members.RefMember</a></td></tr>
<tr class="memitem:a8a34bbd9cc41ea7f0abefc895641d28a inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a8a34bbd9cc41ea7f0abefc895641d28a">type_name</a></td></tr>
<tr class="separator:a8a34bbd9cc41ea7f0abefc895641d28a inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d97cff933d248254401032a6ef6c9c2 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#a1d97cff933d248254401032a6ef6c9c2">file_name</a></td></tr>
<tr class="separator:a1d97cff933d248254401032a6ef6c9c2 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba59a6dffcb81ae23958539b478153f2 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member.xhtml#aba59a6dffcb81ae23958539b478153f2">resolved</a></td></tr>
<tr class="separator:aba59a6dffcb81ae23958539b478153f2 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_ref_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml">openage.convert.dataformat.members.DataMember</a></td></tr>
<tr class="memitem:a304aadf38378a06b99c4398303928dbd inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a304aadf38378a06b99c4398303928dbd">length</a></td></tr>
<tr class="separator:a304aadf38378a06b99c4398303928dbd inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae88ae33e707c5877b61b8598c78a7926 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ae88ae33e707c5877b61b8598c78a7926">raw_type</a></td></tr>
<tr class="separator:ae88ae33e707c5877b61b8598c78a7926 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade5ee2745546cc6f70341b34958900cf inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#ade5ee2745546cc6f70341b34958900cf">do_raw_read</a></td></tr>
<tr class="separator:ade5ee2745546cc6f70341b34958900cf inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td colspan="2" onclick="javascript:toggleInherit('pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member')"><img src="closed.png" alt="-"/>&#160;Public Attributes inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">openage.convert.dataformat.members.DynLengthMember</a></td></tr>
<tr class="memitem:ac7543594bde360a9522c095b116066d0 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#ac7543594bde360a9522c095b116066d0">length</a></td></tr>
<tr class="separator:ac7543594bde360a9522c095b116066d0 inherit pub_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td colspan="2" onclick="javascript:toggleInherit('pub_static_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member')"><img src="closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml">openage.convert.dataformat.members.DynLengthMember</a></td></tr>
<tr class="memitem:a6f1a0121b0f92ecc23125c32d92e6dd6 inherit pub_static_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memItemLeft" align="right" valign="top">string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a6f1a0121b0f92ecc23125c32d92e6dd6">any_length</a> = &quot;any_length&quot;</td></tr>
<tr class="separator:a6f1a0121b0f92ecc23125c32d92e6dd6 inherit pub_static_attribs_classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00583">583</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abb999586d6c8c77e3eb1c520deda4819"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abb999586d6c8c77e3eb1c520deda4819">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>type_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>subtype_definition</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>class_lookup</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>length</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>passed_args</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ref_to</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>offset_to</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_name</em> = <code>None</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>ref_type_params</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00585">585</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div><div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;        RefMember.__init__(self, type_name, file_name)</div><div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;        DynLengthMember.__init__(self, length)</div><div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div><div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;        <span class="comment"># to determine the subtype for each entry,</span></div><div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;        <span class="comment"># read this value to do the class_lookup</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;        self.subtype_definition = subtype_definition</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;        <span class="comment"># dict to look up type_name =&gt; exportable class</span></div><div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;        self.class_lookup       = class_lookup</div><div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;</div><div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;        <span class="comment"># list of member names whose values will be passed to the new class</span></div><div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;        self.passed_args        = passed_args</div><div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;</div><div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;        <span class="comment"># add this member name&#39;s value to the filename</span></div><div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;        self.ref_to             = ref_to</div><div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div><div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;        <span class="comment"># link to member name which is a list of binary file offsets</span></div><div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;        self.offset_to          = offset_to</div><div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;</div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;        <span class="comment"># dict to specify type_name =&gt; constructor arguments</span></div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;        self.ref_type_params    = ref_type_params</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;</div><div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;        <span class="comment"># no xrefs supported yet.. just set to true as if they were resolved.</span></div><div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;        self.resolved           = <span class="keyword">True</span></div><div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div><div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;    <span class="keyword">def </span>get_headers(self, output_target):</div><div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;        <span class="keywordflow">if</span> <span class="stringliteral">&quot;struct&quot;</span> == output_target:</div><div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;std::vector&quot;</span>)</div><div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae0a3a0241b823f90f1bcb74e1619df1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0a3a0241b823f90f1bcb74e1619df1f">&#9670;&nbsp;</a></span>__repr__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.__repr__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#add7272a1e3cc7a7b510a23541d0c48bb">openage.convert.dataformat.members.DataMember</a>.</p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a160732dffbb5935f0b02b26938d2e658">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00805">805</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;<span class="keyword">class </span>SubdataMember(MultisubtypeMember):</div><div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="stringliteral">    Struct member/data column that references to just one another data set.</span></div><div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="stringliteral">    It&#39;s a special case of the multisubtypemember with one subtype.</span></div><div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;</div><div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;    <span class="keyword">def </span>__init__(self, ref_type, length, offset_to=None,</div><div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;                 ref_to=None, ref_type_params=None, passed_args=None):</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="audio_2types_8h_source.xhtml#l00022">openage::audio::audio_chunk_t.length</a>, <a class="el" href="opus__dynamic__loader_8h_source.xhtml#l00026">openage::audio::OpusDynamicLoader.length</a>, <a class="el" href="members_8py_source.xhtml#l00027">openage.convert.dataformat.members.DataMember.length</a>, <a class="el" href="constexpr_8h_source.xhtml#l00050">openage::util::constexpr_::truncated_string_literal.length</a>, <a class="el" href="unit__type_8h_source.xhtml#l00044">openage::UnitTypeMeta.type_name</a>, and <a class="el" href="members_8py_source.xhtml#l00239">openage.convert.dataformat.members.RefMember.type_name</a>.</p>

</div>
</div>
<a id="abca0aea22855fc04f42a9c3583f9c7d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abca0aea22855fc04f42a9c3583f9c7d5">&#9670;&nbsp;</a></span>format_hash()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.format_hash </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>hasher</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>hash these member's settings. </p>
<pre class="fragment">   used to determine data format changes.
</pre> 
<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_dyn_length_member.xhtml#a9d61825e531ff63ac842efeb88376e8c">openage.convert.dataformat.members.DynLengthMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00796">796</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;        <span class="keywordflow">for</span> _, subtype_class <span class="keywordflow">in</span> sorted(self.class_lookup.items()):</div><div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;            hasher = subtype_class.format_hash(hasher)</div><div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;</div><div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;        <span class="keywordflow">return</span> hasher</div><div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;</div><div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;    <span class="keyword">def </span>__repr__(self):</div><div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;MultisubtypeMember&lt;%s:len=%s&gt;&quot;</span> % (self.type_name, self.length)</div><div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;</div><div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="members_8py_source.xhtml#l00595">openage.convert.dataformat.members.MultisubtypeMember.class_lookup</a>.</p>

</div>
</div>
<a id="a6a80ec8145d2bf776c98f7cdc4c0da8e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a80ec8145d2bf776c98f7cdc4c0da8e">&#9670;&nbsp;</a></span>get_contained_types()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_contained_types </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00631">631</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;        }</div><div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;</div><div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;    <span class="keyword">def </span>get_parsers(self, idx, member):</div><div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;        <span class="keywordflow">return</span> [</div><div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;            <span class="comment"># first, the parser to just read the index file name</span></div><div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;            EntryParser(</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="members_8py_source.xhtml#l00595">openage.convert.dataformat.members.MultisubtypeMember.class_lookup</a>.</p>

<p class="reference">Referenced by <a class="el" href="members_8py_source.xhtml#l00663">openage.convert.dataformat.members.MultisubtypeMember.get_snippets()</a>, <a class="el" href="members_8py_source.xhtml#l00834">openage.convert.dataformat.members.SubdataMember.get_subtype()</a>, and <a class="el" href="members_8py_source.xhtml#l00863">openage.convert.dataformat.members.SubdataMember.get_typerefs()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_a6a80ec8145d2bf776c98f7cdc4c0da8e_icgraph.svg" width="100%" height="437"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<a id="a27571ee3aea8f88f36ae23140c9e77c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27571ee3aea8f88f36ae23140c9e77c0">&#9670;&nbsp;</a></span>get_effective_type()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_effective_type </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aca753aded701699bfd78a4c16e01ca67">openage.convert.dataformat.members.DataMember</a>.</p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#acef3ec7e71f233ef9820acfb7fa797c6">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00625">625</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;    <span class="keyword">def </span>get_contained_types(self):</div><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdoc">list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="unit__type_8h_source.xhtml#l00044">openage::UnitTypeMeta.type_name</a>, and <a class="el" href="members_8py_source.xhtml#l00239">openage.convert.dataformat.members.RefMember.type_name</a>.</p>

</div>
</div>
<a id="a2b0c3e9b8181b04312a30d3471796acc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b0c3e9b8181b04312a30d3471796acc">&#9670;&nbsp;</a></span>get_empty_value()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_empty_value </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>when this data field is not filled, use the returned value instead. </p>

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aac3076daf9912b2241f0651797a8a506">openage.convert.dataformat.members.DataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00628">628</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;        <span class="keywordflow">return</span> {</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;            contained_type.get_effective_type()</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;            <span class="keywordflow">for</span> contained_type <span class="keywordflow">in</span> self.class_lookup.values()</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_a2b0c3e9b8181b04312a30d3471796acc_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="abff2c6510cd43895368ddb3b8e75fa3a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abff2c6510cd43895368ddb3b8e75fa3a">&#9670;&nbsp;</a></span>get_headers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_headers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>output_target</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a0c802d0e74f4506b9fbc83f45382e42b">openage.convert.dataformat.members.DataMember</a>.</p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#affdef24b47a64dae69159b0e27b46b65">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00615">615</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;        <span class="keywordflow">elif</span> <span class="stringliteral">&quot;structimpl&quot;</span> == output_target:</div><div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;read_csv_file&quot;</span>)</div><div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div><div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;            <span class="keywordflow">return</span> set()</div><div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div><div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;    <span class="keyword">def </span>get_effective_type(self):</div><div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;        <span class="keywordflow">return</span> self.type_name</div><div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;</div><div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;    <span class="keyword">def </span>get_empty_value(self):</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="util_8py_source.xhtml#l00071">openage.convert.dataformat.util.determine_header()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_abff2c6510cd43895368ddb3b8e75fa3a_cgraph.svg" width="564" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="add52bbeac462df02499e1942ddca2dc5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add52bbeac462df02499e1942ddca2dc5">&#9670;&nbsp;</a></span>get_parsers()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_parsers </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>member</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#a713d93efed62b806731cfe52ddf39fc4">openage.convert.dataformat.members.DataMember</a>.</p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#a3a82d094d79fb43f8ac33b083a8d53cb">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00637">637</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.subdata_meta.filename = buf[%d];&quot;</span> % (member, idx)],</div><div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;                headers     = set(),</div><div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;                destination = <span class="stringliteral">&quot;fill&quot;</span>,</div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;            ),</div><div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;            <span class="comment"># then the parser that uses the index file to recurse over</span></div><div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;            <span class="comment"># the &quot;real&quot; data entries.</span></div><div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;            <span class="comment"># the above parsed filename is searched in this basedir.</span></div><div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;            EntryParser(</div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;                [<span class="stringliteral">&quot;this-&gt;%s.recurse(storage, basedir);&quot;</span> % (member)],</div><div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                headers     = set(),</div><div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                typerefs    = set(),</div><div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                destination = <span class="stringliteral">&quot;recurse&quot;</span>,</div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;            )</div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;        ]</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;    <span class="keyword">def </span>get_typerefs(self):</div><div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;        <span class="keywordflow">return</span> {self.type_name}</div><div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;</div><div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;    <span class="keyword">def </span>get_snippets(self, file_name, format_):</div></div><!-- fragment -->
</div>
</div>
<a id="a81e16d3f5273041083c8497f102803ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81e16d3f5273041083c8497f102803ae">&#9670;&nbsp;</a></span>get_snippets()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_snippets </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>file_name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>format_</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>return struct definitions for this type </p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#aa1b9333b1bb2ac9110c8adaf1dd13113">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00663">663</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;        snippet_file_name = self.file_name <span class="keywordflow">or</span> file_name</div><div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;        <span class="keywordflow">if</span> format_ == <span class="stringliteral">&quot;struct&quot;</span>:</div><div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;            <span class="comment"># all the struct info is packed in one text snippet.</span></div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;            snippet = StructSnippet(snippet_file_name, self.type_name)</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;            <span class="comment"># for each subdata type, add a container struct,</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;            <span class="comment"># which basically stores the list of entries of that subdata.</span></div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;            <span class="keywordflow">for</span> (entry_name, entry_type) <span class="keywordflow">in</span> sorted(self.class_lookup.items()):</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;                entry_type = entry_type.get_effective_type()</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;                snippet.add_member(</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;                    <span class="stringliteral">&quot;struct openage::util::csv_subdata&lt;%s&gt; %s;&quot;</span> % (</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;                        GeneratedFile.namespacify(entry_type), entry_name</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;                    )</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;                )</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;                snippet.typerefs |= {entry_type}</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;            snippet.includes |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">determine_header</a>(<span class="stringliteral">&quot;csv_subdata&quot;</span>)</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;            snippet.typerefs |= {MultisubtypeBaseFile.name_struct}</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;            <span class="comment"># metainformation about locations and types of subdata to recurse</span></div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;            <span class="comment"># basically maps subdata type to a filename where this subdata is stored</span></div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;            snippet.add_member(<span class="stringliteral">&quot;struct openage::util::csv_subdata&lt;%s&gt; subdata_meta;\n&quot;</span> % (</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;                MultisubtypeBaseFile.name_struct))</div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;            <span class="comment"># add member methods to the struct</span></div><div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;            <span class="keyword">from</span> .data_formatter <span class="keyword">import</span> DataFormatter</div><div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;            snippet.add_members((</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;                <span class="stringliteral">&quot;%s;&quot;</span> % member.get_signature()</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;                <span class="keywordflow">for</span> _, member <span class="keywordflow">in</span> sorted(DataFormatter.member_methods.items())</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;            ))</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;            <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div><div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;        <span class="keywordflow">elif</span> format_ == <span class="stringliteral">&quot;structimpl&quot;</span>:</div><div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;            <span class="comment"># TODO: generalize this member function generation...</span></div><div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div><div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;            txt = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div><div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;            <span class="comment"># function to fill up the struct contents, does nothing here.</span></div><div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;            txt.append(</div><div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;                <span class="stringliteral">&quot;int {type_name}::fill(const std::string &amp; /*line*/) {{\n&quot;</span></div><div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;                <span class="stringliteral">&quot;    return -1;\n&quot;</span></div><div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;                <span class="stringliteral">&quot;}}\n&quot;</span>.format(type_name = self.type_name)</div><div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;            )</div><div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;</div><div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;            <span class="comment"># function to recursively read the referenced files</span></div><div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;            <span class="comment"># this reads the metainformation for the subtypes to be read.</span></div><div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;            <span class="comment">#</span></div><div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;            <span class="comment"># this is invoked in util/csv.h:</span></div><div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;            <span class="comment"># CSVCollection::read</span></div><div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;            txt.append(</div><div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;                <span class="stringliteral">&quot;bool {type_name}::recurse(const openage::util::CSVCollection &amp;storage,\n&quot;</span></div><div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;                <span class="stringliteral">&quot;{type_leng}               const std::string &amp;basedir) {{\n&quot;</span></div><div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;                <span class="stringliteral">&quot;    // the .filename was set by the previous entry parser already\n&quot;</span></div><div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;                <span class="stringliteral">&quot;    // so now read the index-file entries\n&quot;</span></div><div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;                <span class="stringliteral">&quot;    this-&gt;subdata_meta.read(storage, basedir);\n&quot;</span></div><div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;                <span class="stringliteral">&quot;    int subtype_count = this-&gt;subdata_meta.data.size();\n&quot;</span></div><div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;                <span class="stringliteral">&quot;    if (subtype_count != {subtype_count}) {{\n&quot;</span></div><div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;                <span class="stringliteral">&quot;        throw openage::error::Error(\n&quot;</span></div><div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;                <span class="stringliteral">&#39;            ERR &lt;&lt; &quot;multisubtype index file entry count mismatched!&quot;\n&#39;</span></div><div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;                <span class="stringliteral">&#39;            &lt;&lt; subtype_count &lt;&lt; &quot; != {subtype_count}&quot;\n&#39;</span></div><div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                <span class="stringliteral">&quot;        );\n&quot;</span></div><div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;                <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;                <span class="stringliteral">&quot;    // the recursed data files are relative to the subdata_meta filename\n&quot;</span></div><div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;                <span class="stringliteral">&quot;    std::string metadata_dir = basedir + openage::util::fslike::PATHSEP + openage::util::dirname(this-&gt;subdata_meta.filename);\n&quot;</span></div><div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;                <span class="stringliteral">&quot;    int idx;\n&quot;</span></div><div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;                <span class="stringliteral">&quot;    int idxtry;\n&quot;</span></div><div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;                <span class="stringliteral">&quot;\n&quot;</span>.format(type_name=self.type_name,</div><div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;                            type_leng=<span class="stringliteral">&quot; &quot;</span> * len(self.type_name),</div><div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;                            subtype_count=len(self.class_lookup))</div><div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;            )</div><div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div><div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;            <span class="keywordflow">for</span> (entry_name, entry_type) <span class="keywordflow">in</span> sorted(self.class_lookup.items()):</div><div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;                <span class="comment"># for each type in a multisubtype member:</span></div><div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;                <span class="comment"># * try to find the type name index in the metadatafile</span></div><div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;                <span class="comment"># * fetch the filename for that type from the metadata (by the index)</span></div><div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;                <span class="comment"># * fill that subdata type with information</span></div><div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;                txt.append(</div><div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;                    <span class="stringliteral">&quot;    // read subtype &#39;{entry_name}&#39;\n&quot;</span></div><div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;                    <span class="stringliteral">&quot;    idx = -1;\n&quot;</span></div><div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;                    <span class="stringliteral">&quot;    idxtry = 0;\n&quot;</span></div><div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;                    <span class="stringliteral">&quot;    // find the index of the subdata in the metadata\n&quot;</span></div><div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;                    <span class="stringliteral">&quot;    for (auto &amp;file_reference : this-&gt;subdata_meta.data) {{\n&quot;</span></div><div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;                    <span class="stringliteral">&#39;        if (file_reference.subtype == &quot;{entry_name}&quot;) {{\n&#39;</span></div><div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;                    <span class="stringliteral">&quot;            idx = idxtry;\n&quot;</span></div><div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;                    <span class="stringliteral">&quot;            break;\n&quot;</span></div><div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;                    <span class="stringliteral">&quot;        }}\n&quot;</span></div><div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                    <span class="stringliteral">&quot;        idxtry += 1;\n&quot;</span></div><div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;                    <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;                    <span class="stringliteral">&quot;    if (idx == -1) {{\n&quot;</span></div><div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;                    <span class="stringliteral">&quot;        throw openage::error::Error(\n&quot;</span></div><div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;                    <span class="stringliteral">&#39;            ERR &lt;&lt; &quot;multisubtype index file contains no entry for {entry_name}!&quot;\n&#39;</span></div><div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                    <span class="stringliteral">&quot;        );\n&quot;</span></div><div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;                    <span class="stringliteral">&quot;    }}\n&quot;</span></div><div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;                    <span class="stringliteral">&quot;\n&quot;</span></div><div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;                    <span class="stringliteral">&quot;    // the filename is relative to the metadata file!\n&quot;</span></div><div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;                    <span class="stringliteral">&quot;    this-&gt;{entry_name}.filename = this-&gt;subdata_meta.data[idx].filename;\n&quot;</span></div><div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;                    <span class="stringliteral">&quot;    this-&gt;{entry_name}.read(storage, metadata_dir);\n&quot;</span></div><div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;                    <span class="stringliteral">&quot;\n&quot;</span>.format(entry_name=entry_name)</div><div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;                )</div><div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;</div><div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;            txt.append(</div><div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;                <span class="stringliteral">&quot;    return true;\n&quot;</span></div><div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;                <span class="stringliteral">&quot;}\n&quot;</span></div><div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;            )</div><div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;</div><div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;            snippet = ContentSnippet(</div><div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;                <span class="stringliteral">&quot;&quot;</span>.join(txt),</div><div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;                snippet_file_name,</div><div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;                SectionType.section_body,</div><div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;                orderby=self.type_name,</div><div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;                reprtxt=<span class="stringliteral">&quot;multisubtype %s container fill function&quot;</span> % self.type_name,</div><div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;            )</div><div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;            snippet.typerefs |= (self.get_contained_types() |</div><div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;                                 {self.type_name, MultisubtypeBaseFile.name_struct})</div><div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;            snippet.includes |= <a class="code" href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">determine_headers</a>(</div><div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;                (<span class="stringliteral">&quot;util::Path&quot;</span>, <span class="stringliteral">&quot;engine_error&quot;</span>, <span class="stringliteral">&quot;csv_collection&quot;</span>, <span class="stringliteral">&quot;std::string&quot;</span>)</div><div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;            )</div><div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div><div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;            <span class="keywordflow">return</span> [snippet]</div><div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div><div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;</div><div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;    <span class="keyword">def </span>format_hash(self, hasher):</div><div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;        hasher = RefMember.format_hash(self, hasher)</div><div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;        hasher = DynLengthMember.format_hash(self, hasher)</div><div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_abe9d9997e55017fa14737a7603afadba"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#abe9d9997e55017fa14737a7603afadba">openage.convert.dataformat.util.determine_header</a></div><div class="ttdeci">def determine_header(for_type)</div><div class="ttdoc">returns the includable headers for using the given C type.</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00071">util.py:71</a></div></div>
<div class="ttc" id="namespaceopenage_1_1convert_1_1dataformat_1_1util_xhtml_a5e3a7c5e8aeddbd762f9a158f9bc5aab"><div class="ttname"><a href="namespaceopenage_1_1convert_1_1dataformat_1_1util.xhtml#a5e3a7c5e8aeddbd762f9a158f9bc5aab">openage.convert.dataformat.util.determine_headers</a></div><div class="ttdeci">def determine_headers(for_types)</div><div class="ttdef"><b>Definition:</b> <a href="util_8py_source.xhtml#l00128">util.py:128</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdoc">list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="members_8py_source.xhtml#l00595">openage.convert.dataformat.members.MultisubtypeMember.class_lookup</a>, <a class="el" href="util_8py_source.xhtml#l00071">openage.convert.dataformat.util.determine_header()</a>, <a class="el" href="util_8py_source.xhtml#l00128">openage.convert.dataformat.util.determine_headers()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00030">openage.convert.dataformat.content_snippet.ContentSnippet.file_name</a>, <a class="el" href="generated__file_8py_source.xhtml#l00080">openage.convert.dataformat.generated_file.GeneratedFile.file_name</a>, <a class="el" href="members_8py_source.xhtml#l00240">openage.convert.dataformat.members.RefMember.file_name</a>, <a class="el" href="members_8py_source.xhtml#l00631">openage.convert.dataformat.members.MultisubtypeMember.get_contained_types()</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, <a class="el" href="unit__type_8h_source.xhtml#l00044">openage::UnitTypeMeta.type_name</a>, and <a class="el" href="members_8py_source.xhtml#l00239">openage.convert.dataformat.members.RefMember.type_name</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member_a81e16d3f5273041083c8497f102803ae_cgraph.svg" width="100%" height="449"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a567e8cd4638f6d804bb7a4da292b076f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a567e8cd4638f6d804bb7a4da292b076f">&#9670;&nbsp;</a></span>get_typerefs()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.dataformat.members.MultisubtypeMember.get_typerefs </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_data_member.xhtml#aa4968dab9239c251b3415aefcfa53ae1">openage.convert.dataformat.members.DataMember</a>.</p>

<p>Reimplemented in <a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_subdata_member.xhtml#addde0bcc5fa0ebb0b0a26d4c32a6a68c">openage.convert.dataformat.members.SubdataMember</a>.</p>

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00657">657</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;<span class="stringliteral">        return struct definitions for this type</span></div><div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div></div><!-- fragment -->
<p class="reference">References <a class="el" href="unit__type_8h_source.xhtml#l00044">openage::UnitTypeMeta.type_name</a>, and <a class="el" href="members_8py_source.xhtml#l00239">openage.convert.dataformat.members.RefMember.type_name</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a50a2a9e4d4dac90934ab7566bc887b05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50a2a9e4d4dac90934ab7566bc887b05">&#9670;&nbsp;</a></span>class_lookup</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.class_lookup</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00595">595</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="members_8py_source.xhtml#l00796">openage.convert.dataformat.members.MultisubtypeMember.format_hash()</a>, <a class="el" href="members_8py_source.xhtml#l00631">openage.convert.dataformat.members.MultisubtypeMember.get_contained_types()</a>, <a class="el" href="members_8py_source.xhtml#l00663">openage.convert.dataformat.members.MultisubtypeMember.get_snippets()</a>, and <a class="el" href="members_8py_source.xhtml#l00866">openage.convert.dataformat.members.SubdataMember.get_subdata_type_name()</a>.</p>

</div>
</div>
<a id="a5fe7e102cb5c65e32d043d7a4662e2b8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fe7e102cb5c65e32d043d7a4662e2b8">&#9670;&nbsp;</a></span>offset_to</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.offset_to</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00604">604</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<a id="af278ba52cb2291334852e0de4ae1c7e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af278ba52cb2291334852e0de4ae1c7e5">&#9670;&nbsp;</a></span>passed_args</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.passed_args</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00598">598</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<a id="a69612f9b63e76655dc34996cd7d42484"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69612f9b63e76655dc34996cd7d42484">&#9670;&nbsp;</a></span>ref_to</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.ref_to</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00601">601</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<a id="ae3c02376fcce16d3bc085246f2de847e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c02376fcce16d3bc085246f2de847e">&#9670;&nbsp;</a></span>ref_type_params</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.ref_type_params</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00607">607</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<a id="ae3bb69b6f958afa092583d2925465598"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3bb69b6f958afa092583d2925465598">&#9670;&nbsp;</a></span>resolved</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.resolved</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00610">610</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<a id="ad76bf42f766fba6d160c0a0f2408b7f6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad76bf42f766fba6d160c0a0f2408b7f6">&#9670;&nbsp;</a></span>subtype_definition</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.dataformat.members.MultisubtypeMember.subtype_definition</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="members_8py_source.xhtml#l00592">592</a> of file <a class="el" href="members_8py_source.xhtml">members.py</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/openage/convert/dataformat/<a class="el" href="members_8py_source.xhtml">members.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat.xhtml">dataformat</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1dataformat_1_1members.xhtml">members</a></li><li class="navelem"><a class="el" href="classopenage_1_1convert_1_1dataformat_1_1members_1_1_multisubtype_member.xhtml">MultisubtypeMember</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
