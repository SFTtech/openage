<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/util/stringformatter.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('stringformatter_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">stringformatter.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="stringformatter_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2016 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="stringformatter_8h.xhtml">stringformatter.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;array&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">   11</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream::CachableOSStream</a>() {}</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#acff1e0e6a81b08fac82788f921e677b7">   14</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream::CachableOSStream</a>(std::string &amp;output)</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    :</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a>{} {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    this-&gt;stream.use_with(output);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">   22</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">CachableOSStream::acquire</a>(std::string &amp;output) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">static</span> std::array&lt;CachableOSStream, 128&gt; cache;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="comment">// Find an available cache element.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> &amp;elem : cache) {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">if</span> (elem.flag.test_and_set() == <span class="keyword">false</span>) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            elem.<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a>.<a class="code" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml#aa35d807fa9bc56758974bbe602bf1a8e">use_with</a>(output);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">return</span> &amp;elem;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// All cached objects are currently in use... that probably means that</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// your code is broken.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// Anyways, have fun with your dynamically-allocated object.</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// TODO Print a warning debug message about this?</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// then again, printing a log message about the logging system being</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="comment">// overloaded might not be the most clever idea.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a>{output};</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">   44</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">CachableOSStream::release</a>(<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *cs) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> (cs == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// std::atomic_flag doesn&#39;t have a simple way of getting the truth</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// value, so we have to do a &quot;full&quot; test_and_set() instead,</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// even though thread-safety is not a concern here.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">if</span> (cs-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">flag</a>.test_and_set()) {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        cs-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a>.clear();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        cs-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">flag</a>.clear();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// test_and_set returned false -&gt; the flag was not set.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="comment">// This is because the element was not acquired from the cache,</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment">// but instead dynamically allocated. de-alloc it.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">delete</span> cs;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}} <span class="comment">// namespace openage::util</span></div><div class="ttc" id="classopenage_1_1util_1_1_external_o_string_stream_xhtml_aa35d807fa9bc56758974bbe602bf1a8e"><div class="ttname"><a href="classopenage_1_1util_1_1_external_o_string_stream.xhtml#aa35d807fa9bc56758974bbe602bf1a8e">openage::util::ExternalOStringStream::use_with</a></div><div class="ttdeci">void use_with(std::string &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="externalsstream_8h_source.xhtml#l00054">externalsstream.h:54</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a9d7710f8703f4dbba1b65d8b02e84036"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">openage::util::CachableOSStream::acquire</a></div><div class="ttdeci">static CachableOSStream * acquire(std::string &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00022">stringformatter.cpp:22</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_af5a5b6f793311c523e1aee1a354e73ff"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">openage::util::CachableOSStream::CachableOSStream</a></div><div class="ttdeci">CachableOSStream()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00011">stringformatter.cpp:11</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">openage::util::CachableOSStream</a></div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00032">stringformatter.h:32</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_ad770ce91fe372bb8069e06ea06293f85"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">openage::util::CachableOSStream::release</a></div><div class="ttdeci">static OAAPI void release(CachableOSStream *cs)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00044">stringformatter.cpp:44</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a5b3cdc213039012cd3064b613a59ab94"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">openage::util::CachableOSStream::flag</a></div><div class="ttdeci">std::atomic_flag flag</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00074">stringformatter.h:74</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a286e7e1b4c5d5340c8bc35f87660f621"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">openage::util::CachableOSStream::stream</a></div><div class="ttdeci">ExternalOStringStream stream</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00034">stringformatter.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="stringformatter_8h_xhtml"><div class="ttname"><a href="stringformatter_8h.xhtml">stringformatter.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="stringformatter_8cpp.xhtml">stringformatter.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
