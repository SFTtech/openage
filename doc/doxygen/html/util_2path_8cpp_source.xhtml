<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/util/path.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('util_2path_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">path.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="util_2path_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="util_2path_8h.xhtml">path.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="compiler_8h.xhtml">compiler.h</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="directory_8h.xhtml">fslike/directory.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fslike_2native_8h.xhtml">fslike/native.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="fslike_2python_8h.xhtml">fslike/python.h</a>&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="misc_8h.xhtml">misc.h</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="strings_8h.xhtml">strings.h</a>&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#aa9a3ed91bb7f5c0fa51acf99e8bcba64">   21</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1util.xhtml#aa9a3ed91bb7f5c0fa51acf99e8bcba64">path_normalizer</a>(<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;output, <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;input) {</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    output.reserve(input.size());</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// normalize the path parts</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;part : input) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <span class="keywordflow">if</span> (part == <span class="stringliteral">&quot;.&quot;</span> or part == <span class="stringliteral">&quot;&quot;</span>) {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (part == <span class="stringliteral">&quot;..&quot;</span>) {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(output.size() &gt; 0)) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;                output.pop_back();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            output.push_back(part);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        }</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#ade26ce7a38a05b1e46dca7f839240988">   41</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#ade26ce7a38a05b1e46dca7f839240988">Path::Path</a>() {}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#ade26ce7a38a05b1e46dca7f839240988">Path::Path</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">py::Obj</a> fsobj_in,</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;           <span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;parts) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespaceopenage_1_1util.xhtml#aa9a3ed91bb7f5c0fa51acf99e8bcba64">path_normalizer</a>(this-&gt;parts, <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// optimization: the fsobj from python may be convertible to</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">//               a native c++ implementation.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">//               then calls don&#39;t need to be relayed any more.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="comment">// test if fsobj is fslike.Directory</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#ad9a10d50910ce2850da6335c0b37ffd8">fslike::pyx_fs_is_fslike_directory</a>.<a class="code" href="namespaceopenage_1_1subprocess.xhtml#a0a0bbc382a5c765c627d6f79d8aeaf59">call</a>(fsobj_in.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>())) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a> = std::make_shared&lt;fslike::Directory&gt;(</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            fsobj_in.<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">getattr</a>(<span class="stringliteral">&quot;path&quot;</span>).<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">bytes</a>()</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        );</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    }</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="comment">// we can&#39;t create a c++-variant of the path,</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// so just wrap the python path.</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a> = std::make_shared&lt;fslike::Python&gt;(fsobj_in);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a94d1c79106d647738cc12de1dfedf4b5">   67</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#ade26ce7a38a05b1e46dca7f839240988">Path::Path</a>(<span class="keyword">const</span> std::shared_ptr&lt;fslike::FSLike&gt; &amp;fsobj,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;           <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> &amp;parts)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    :</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    fsobj{<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>} {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="namespaceopenage_1_1util.xhtml#aa9a3ed91bb7f5c0fa51acf99e8bcba64">path_normalizer</a>(this-&gt;parts, parts);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#ad250b77528d7feb294ead2006da92b4f">   76</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#ad250b77528d7feb294ead2006da92b4f">Path::exists</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#aacfbbb9dd2e0ec286b5581690f9a83aa">is_file</a>() or this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4ee310e473187eb5e37d402be315676f">is_dir</a>();</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aacfbbb9dd2e0ec286b5581690f9a83aa">   80</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aacfbbb9dd2e0ec286b5581690f9a83aa">Path::is_file</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;is_file(this-&gt;parts);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;}</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a4ee310e473187eb5e37d402be315676f">   84</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4ee310e473187eb5e37d402be315676f">Path::is_dir</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;is_dir(this-&gt;parts);</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a811160d3aa2dbbfc90ee8e540cb91024">   88</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a811160d3aa2dbbfc90ee8e540cb91024">Path::writable</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;writable(this-&gt;parts);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;}</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#afaf387508110553300e1d9578e71cb30">   92</a></span>&#160;std::vector&lt;Path::part_t&gt; <a class="code" href="classopenage_1_1util_1_1_path.xhtml#afaf387508110553300e1d9578e71cb30">Path::list</a>() {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;list(this-&gt;parts);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a4b86af755731199df56f8755a273d40b">   96</a></span>&#160;std::vector&lt;Path&gt; <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4b86af755731199df56f8755a273d40b">Path::iterdir</a>() {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    std::vector&lt;Path&gt; ret;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="comment">// return a new path object for each element in that directory</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;entry : this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;list(this-&gt;parts)) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        ret.push_back(this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(entry));</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a7abde99b6d12b1d6405083fe75c8cd7d">  107</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a7abde99b6d12b1d6405083fe75c8cd7d">Path::mkdirs</a>() {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;mkdirs(this-&gt;parts);</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a5b429e300ae4a048dbbd1a733bc1452a">  111</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a5b429e300ae4a048dbbd1a733bc1452a">Path::open</a>(<span class="keyword">const</span> std::string &amp;mode)<span class="keyword"> const </span>{</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;r&quot;</span>) {</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a5a01e1d52b588996b036fb52b81f3d8a">open_r</a>();</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;w&quot;</span>) {</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#aa490b4ca4f053611b439d4b3956b2451">open_w</a>();</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;rw&quot;</span> or mode == <span class="stringliteral">&quot;r+&quot;</span>) {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#aa490b4ca4f053611b439d4b3956b2451">open_w</a>();</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;a&quot;</span>) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#ab7d7932d536db76983f9770016f724f2">open_a</a>();</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;a+&quot;</span> or mode == <span class="stringliteral">&quot;ar&quot;</span>) {</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a483f9f4a7f9758fb98d8d457d53e1616">open_ar</a>();</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;unsupported open mode: &quot;</span> &lt;&lt; mode};</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a5a01e1d52b588996b036fb52b81f3d8a">  133</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a5a01e1d52b588996b036fb52b81f3d8a">Path::open_r</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;open_r(this-&gt;parts);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aa490b4ca4f053611b439d4b3956b2451">  138</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aa490b4ca4f053611b439d4b3956b2451">Path::open_w</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;open_w(this-&gt;parts);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a9fd12e527447a3bdfa57c61c49921b5f">  143</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a9fd12e527447a3bdfa57c61c49921b5f">Path::open_rw</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;open_rw(this-&gt;parts);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#ab7d7932d536db76983f9770016f724f2">  148</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#ab7d7932d536db76983f9770016f724f2">Path::open_a</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;open_a(this-&gt;parts);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a483f9f4a7f9758fb98d8d457d53e1616">  153</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_file.xhtml">File</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a483f9f4a7f9758fb98d8d457d53e1616">Path::open_ar</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;open_ar(this-&gt;parts);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a53047699ec64680d09c2c7db87ae99c5">  158</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a53047699ec64680d09c2c7db87ae99c5">Path::get_native_path</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;get_native_path(this-&gt;parts);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a4ca4da6e9e2d8adadb02373ff2be8ebe">  163</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4ca4da6e9e2d8adadb02373ff2be8ebe">Path::resolve_native_path</a>(<span class="keyword">const</span> std::string &amp;mode)<span class="keyword"> const </span>{</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;r&quot;</span>) {</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a919083912ceb465d8b3c28e4766161fe">resolve_native_path_r</a>();</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == <span class="stringliteral">&quot;w&quot;</span>) {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">resolve_native_path_w</a>();</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    }</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;unsupported resolve mode: &quot;</span> &lt;&lt; mode};</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;}</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a919083912ceb465d8b3c28e4766161fe">  176</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a919083912ceb465d8b3c28e4766161fe">Path::resolve_native_path_r</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keyword">auto</span> resolved_path = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;resolve_r(this-&gt;parts);</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keywordflow">if</span> (resolved_path.first) {</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <span class="keywordflow">return</span> resolved_path.second.get_native_path();</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;failed to locate readable path: &quot;</span> &lt;&lt; *<span class="keyword">this</span>};</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">  188</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">Path::resolve_native_path_w</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keyword">auto</span> resolved_path = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;resolve_w(this-&gt;parts);</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">if</span> (resolved_path.first) {</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> resolved_path.second.get_native_path();</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;failed to locate writable path: &quot;</span> &lt;&lt; *<span class="keyword">this</span>};</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    }</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;}</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a432c6c98bd5e57ea0d9909ab8921169a">  200</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a432c6c98bd5e57ea0d9909ab8921169a">Path::rename</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;target_path) {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// check if both fsobj pointers are the same</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <span class="comment">// maybe a real equality check is better?</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a> != target_path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>) {</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;            <a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;can&#39;t rename across two different filesystem like objects&quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        };</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;rename(this-&gt;parts, target_path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div><div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a2b50acc68a2ec93baae38dbc76698317">  211</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a2b50acc68a2ec93baae38dbc76698317">Path::rmdir</a>() {</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;rmdir(this-&gt;parts);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a1d87cf48082a47a8154ed136b933b4c3">  215</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a1d87cf48082a47a8154ed136b933b4c3">Path::touch</a>() {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;touch(this-&gt;parts);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a7792a326554efd7a7331477ee7deb733">  219</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a7792a326554efd7a7331477ee7deb733">Path::unlink</a>() {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;unlink(this-&gt;parts);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aaa67568af9c376247302feac5244070a">  223</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aaa67568af9c376247302feac5244070a">Path::removerecursive</a>() {</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4ee310e473187eb5e37d402be315676f">is_dir</a>()) {</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;path : this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4b86af755731199df56f8755a273d40b">iterdir</a>()) {</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            path.removerecursive();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        }</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a2b50acc68a2ec93baae38dbc76698317">rmdir</a>();</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    }</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a7792a326554efd7a7331477ee7deb733">unlink</a>();</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;</div><div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#afda6d8962b8e347323e7f8b21c3fcf10">  236</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#afda6d8962b8e347323e7f8b21c3fcf10">Path::get_mtime</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;get_mtime(this-&gt;parts);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aaa66710a132b598475a9f59cbcdfdd04">  240</a></span>&#160;uint64_t <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aaa66710a132b598475a9f59cbcdfdd04">Path::get_filesize</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;get_filesize(this-&gt;parts);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="comment">// int Path::watch();</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="comment">// void Path::poll_fs_watches();</span></div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">  247</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">Path::get_parent</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(<span class="stringliteral">&quot;..&quot;</span>);</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">  252</a></span>&#160;<span class="keyword">const</span> std::string &amp;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">Path::get_name</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    <span class="keywordflow">if</span> (this-&gt;parts.size() &gt; 0) {</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="keywordflow">return</span> this-&gt;parts.back();</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a5f6ab09d105c3dfecc8de7dfd7be7ca2">util::empty_string</a>;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#ad8cfd4845f049d7163308de4b6a0fba0">  261</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#ad8cfd4845f049d7163308de4b6a0fba0">Path::get_suffix</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">auto</span> &amp;name = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">get_name</a>();</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    <span class="keywordtype">size_t</span> pos = name.rfind(<span class="stringliteral">&quot;.&quot;</span>);</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">if</span> (pos == std::string::npos) {</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">return</span> name.substr(pos);</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;}</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#ab8fd090bfda0875ec3720abd1587ba33">  271</a></span>&#160;std::vector&lt;std::string&gt; <a class="code" href="classopenage_1_1util_1_1_path.xhtml#ab8fd090bfda0875ec3720abd1587ba33">Path::get_suffixes</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;    std::string name = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">get_name</a>();</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;    <span class="keywordflow">if</span> (name.size() &gt; 0 and name[0] == <span class="charliteral">&#39;.&#39;</span>) {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        name = name.substr(1);</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    std::vector&lt;std::string&gt; ret;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    <span class="comment">// ret = [&#39;.&#39; + suffix for suffix in name.split(&#39;.&#39;)[1:]]</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;    <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">  282</a></span>&#160;std::string <a class="code" href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">Path::get_stem</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    <span class="keyword">const</span> std::string &amp;name = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">get_name</a>();</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    <span class="keywordtype">size_t</span> pos = name.rfind(<span class="charliteral">&#39;.&#39;</span>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">if</span> (pos == std::string::npos) {</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">return</span> name;</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    }</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;    <span class="keywordflow">return</span> name.substr(0, pos);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">  293</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">Path::joinpath</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> &amp;subpaths)<span class="keyword"> const </span>{</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> new_parts = this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>;</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;part : subpaths) {</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(part.size() &gt; 0)) {</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;            new_parts.push_back(part);</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        }</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;    }</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a>{this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>, new_parts};</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;}</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#af2aa900d03797c9f65b6ba484892139d">  303</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">Path::joinpath</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> &amp;subpath)<span class="keyword"> const </span>{</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(<a class="code" href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">util::split</a>(subpath, <span class="charliteral">&#39;/&#39;</span>));</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;</div><div class="line"><a name="l00307"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aedc1b758f39c3c73bc0c9674b196b93f">  307</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aedc1b758f39c3c73bc0c9674b196b93f">Path::operator []</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">parts_t</a> &amp;subpaths)<span class="keyword"> const </span>{</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(subpaths);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;}</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#af8e0c0f255b7df0bfd44cd19df8a6325">  311</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aedc1b758f39c3c73bc0c9674b196b93f">Path::operator []</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> &amp;subpath)<span class="keyword"> const </span>{</div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(subpath);</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;}</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a00222178ee6ed18cd63bd075d629f936">  315</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a00222178ee6ed18cd63bd075d629f936">Path::operator /</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> &amp;subpath)<span class="keyword"> const </span>{</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(subpath);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a6e86298c20b5fd4596b791de4115b8b9">  319</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a6e86298c20b5fd4596b791de4115b8b9">Path::with_name</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> &amp;name)<span class="keyword"> const </span>{</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">get_parent</a>().<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">joinpath</a>(name);</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#aa7993e64af5227c5949074566deadbf6">  323</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#aa7993e64af5227c5949074566deadbf6">Path::with_suffix</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">part_t</a> &amp;suffix)<span class="keyword"> const </span>{</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a6e86298c20b5fd4596b791de4115b8b9">with_name</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">get_stem</a>() + suffix);</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;}</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;</div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#afdfddfce491febb942d8c7d880557800">  327</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#afdfddfce491febb942d8c7d880557800">Path::operator ==</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;    <span class="keywordflow">return</span> (</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a> == other.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a> and</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        this-&gt;parts == other.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a></div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    );</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a72180e179456cb7a19935e969c9753e2">  334</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a72180e179456cb7a19935e969c9753e2">Path::operator !=</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;other)<span class="keyword"> const </span>{</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordflow">return</span> not (*<span class="keyword">this</span> == other);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;</div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a074a32ef7f82983bb7d9e04092e29329">  339</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1fslike_1_1_f_s_like.xhtml">fslike::FSLike</a> *<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a074a32ef7f82983bb7d9e04092e29329">Path::get_fsobj</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>.get();</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;}</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00344"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_path.xhtml#a16c0ed912bc74f019752253aff81de71">  344</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">Path::parts_t</a> &amp;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a16c0ed912bc74f019752253aff81de71">Path::get_parts</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;}</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;</div><div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#aae7cd67becf8e8e8e0be8e54a12624d3">  349</a></span>&#160;std::ostream &amp;<a class="code" href="namespaceopenage_1_1util.xhtml#abe7e29a3d1ac620fb9d0eb6830be84cf">operator &lt;&lt;</a>(std::ostream &amp;stream, <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;path) {</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    stream &lt;&lt; <span class="stringliteral">&quot;Path(&quot;</span>;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">fsobj</a>-&gt;repr(stream);</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    stream &lt;&lt; <span class="stringliteral">&quot;:&quot;</span>;</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;part : path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">parts</a>) {</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;        stream &lt;&lt; <span class="stringliteral">&quot;/&quot;</span> &lt;&lt; part;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    }</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    stream &lt;&lt; <span class="stringliteral">&quot;)&quot;</span>;</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;    <span class="keywordflow">return</span> stream;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;}</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">  364</a></span>&#160;std::string <a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>(<span class="keyword">const</span> std::string &amp;fullpath) {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordtype">size_t</span> rsep_pos = fullpath.rfind(<a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">fslike::PATHSEP</a>);</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keywordflow">if</span> (rsep_pos == std::string::npos) {</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordflow">return</span> fullpath.substr(rsep_pos + 1);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;}</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;</div><div class="line"><a name="l00374"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">  374</a></span>&#160;std::string <a class="code" href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">dirname</a>(<span class="keyword">const</span> std::string &amp;fullpath) {</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;    <span class="keywordtype">size_t</span> rsep_pos = fullpath.rfind(<a class="code" href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">fslike::PATHSEP</a>);</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    <span class="keywordflow">if</span> (rsep_pos == std::string::npos) {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;&quot;</span>;</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        <span class="keywordflow">return</span> fullpath.substr(0, rsep_pos);</div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    }</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;}} <span class="comment">// openage::util</span></div><div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a9fd12e527447a3bdfa57c61c49921b5f"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a9fd12e527447a3bdfa57c61c49921b5f">openage::util::Path::open_rw</a></div><div class="ttdeci">File open_rw() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00143">path.cpp:143</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a4b86af755731199df56f8755a273d40b"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a4b86af755731199df56f8755a273d40b">openage::util::Path::iterdir</a></div><div class="ttdeci">std::vector&lt; Path &gt; iterdir()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00096">path.cpp:96</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_afb0f22eaba43f4419e7edf3eaa1f957a"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#afb0f22eaba43f4419e7edf3eaa1f957a">openage::pyinterface::PyObjectRef::getattr</a></div><div class="ttdeci">PyObjectRef getattr(const std::string &amp;name) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00166">pyobject.cpp:166</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ac75d8f60c25c4a7570dcdf83b601d639"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">openage::pyinterface::PyObjectRef::get_ref</a></div><div class="ttdeci">PyObject * get_ref() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00246">pyobject.h:246</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_ab7d7932d536db76983f9770016f724f2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#ab7d7932d536db76983f9770016f724f2">openage::util::Path::open_a</a></div><div class="ttdeci">File open_a() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00148">path.cpp:148</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a919083912ceb465d8b3c28e4766161fe"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a919083912ceb465d8b3c28e4766161fe">openage::util::Path::resolve_native_path_r</a></div><div class="ttdeci">std::string resolve_native_path_r() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00176">path.cpp:176</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_abe7e29a3d1ac620fb9d0eb6830be84cf"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#abe7e29a3d1ac620fb9d0eb6830be84cf">openage::util::operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;stream, const File &amp;file)</div><div class="ttdef"><b>Definition:</b> <a href="file_8cpp_source.xhtml#l00122">file.cpp:122</a></div></div>
<div class="ttc" id="strings_8h_xhtml"><div class="ttname"><a href="strings_8h.xhtml">strings.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a4ca4da6e9e2d8adadb02373ff2be8ebe"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a4ca4da6e9e2d8adadb02373ff2be8ebe">openage::util::Path::resolve_native_path</a></div><div class="ttdeci">std::string resolve_native_path(const std::string &amp;mode=&quot;r&quot;) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00163">path.cpp:163</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_af74fec80080f6c627e5539bb20493ba0"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a16c0ed912bc74f019752253aff81de71"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a16c0ed912bc74f019752253aff81de71">openage::util::Path::get_parts</a></div><div class="ttdeci">const parts_t &amp; get_parts() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00344">path.cpp:344</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aaa67568af9c376247302feac5244070a"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aaa67568af9c376247302feac5244070a">openage::util::Path::removerecursive</a></div><div class="ttdeci">void removerecursive()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00223">path.cpp:223</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_ab8fd090bfda0875ec3720abd1587ba33"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#ab8fd090bfda0875ec3720abd1587ba33">openage::util::Path::get_suffixes</a></div><div class="ttdeci">std::vector&lt; std::string &gt; get_suffixes() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00271">path.cpp:271</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a6e86298c20b5fd4596b791de4115b8b9"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a6e86298c20b5fd4596b791de4115b8b9">openage::util::Path::with_name</a></div><div class="ttdeci">Path with_name(const part_t &amp;name) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00319">path.cpp:319</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aa490b4ca4f053611b439d4b3956b2451"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aa490b4ca4f053611b439d4b3956b2451">openage::util::Path::open_w</a></div><div class="ttdeci">File open_w() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00138">path.cpp:138</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a954be5116f7af5633dbbc50bac26b0a8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">openage::util::dirname</a></div><div class="ttdeci">std::string dirname(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00374">path.cpp:374</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a01b9e1b6d2f1e72e14265f1b23e102c2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a01b9e1b6d2f1e72e14265f1b23e102c2">openage::util::Path::part_t</a></div><div class="ttdeci">std::string part_t</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00053">path.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a00222178ee6ed18cd63bd075d629f936"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a00222178ee6ed18cd63bd075d629f936">openage::util::Path::operator/</a></div><div class="ttdeci">Path operator/(const part_t &amp;subpath) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00315">path.cpp:315</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_file_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_file.xhtml">openage::util::File</a></div><div class="ttdef"><b>Definition:</b> <a href="file_8h_source.xhtml#l00039">file.h:39</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml">openage::util::Path</a></div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00046">path.h:46</a></div></div>
<div class="ttc" id="fslike_2python_8h_xhtml"><div class="ttname"><a href="fslike_2python_8h.xhtml">python.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a288d8a3dd8a8a7a377f672d9c88b6ca2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a288d8a3dd8a8a7a377f672d9c88b6ca2">openage::util::Path::fsobj</a></div><div class="ttdeci">std::shared_ptr&lt; fslike::FSLike &gt; fsobj</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00166">path.h:166</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aacfbbb9dd2e0ec286b5581690f9a83aa"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aacfbbb9dd2e0ec286b5581690f9a83aa">openage::util::Path::is_file</a></div><div class="ttdeci">bool is_file() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00080">path.cpp:80</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="compiler_8h_xhtml"><div class="ttname"><a href="compiler_8h.xhtml">compiler.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a5a01e1d52b588996b036fb52b81f3d8a"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a5a01e1d52b588996b036fb52b81f3d8a">openage::util::Path::open_r</a></div><div class="ttdeci">File open_r() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00133">path.cpp:133</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_xhtml_ad9a10d50910ce2850da6335c0b37ffd8"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike.xhtml#ad9a10d50910ce2850da6335c0b37ffd8">openage::util::fslike::pyx_fs_is_fslike_directory</a></div><div class="ttdeci">pyinterface::PyIfFunc&lt; bool, PyObject * &gt; pyx_fs_is_fslike_directory</div><div class="ttdef"><b>Definition:</b> <a href="fslike_2python_8cpp_source.xhtml#l00141">python.cpp:141</a></div></div>
<div class="ttc" id="fslike_2native_8h_xhtml"><div class="ttname"><a href="fslike_2native_8h.xhtml">native.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a483f9f4a7f9758fb98d8d457d53e1616"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a483f9f4a7f9758fb98d8d457d53e1616">openage::util::Path::open_ar</a></div><div class="ttdeci">File open_ar() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00153">path.cpp:153</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_afaf387508110553300e1d9578e71cb30"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#afaf387508110553300e1d9578e71cb30">openage::util::Path::list</a></div><div class="ttdeci">std::vector&lt; part_t &gt; list()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00092">path.cpp:92</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a5f6ab09d105c3dfecc8de7dfd7be7ca2"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a5f6ab09d105c3dfecc8de7dfd7be7ca2">openage::util::empty_string</a></div><div class="ttdeci">std::string empty_string</div><div class="ttdef"><b>Definition:</b> <a href="misc_8cpp_source.xhtml#l00008">misc.cpp:8</a></div></div>
<div class="ttc" id="directory_8h_xhtml"><div class="ttname"><a href="directory_8h.xhtml">directory.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a3fc6528c66f6d83e122e753f73511a3d"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">openage::util::Path::get_parent</a></div><div class="ttdeci">Path get_parent() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00247">path.cpp:247</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_afda6d8962b8e347323e7f8b21c3fcf10"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#afda6d8962b8e347323e7f8b21c3fcf10">openage::util::Path::get_mtime</a></div><div class="ttdeci">int get_mtime() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00236">path.cpp:236</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_afed5e82e9f515fc2d8e2cdc291edebca"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">openage::util::Path::get_stem</a></div><div class="ttdeci">std::string get_stem() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00282">path.cpp:282</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a42a892625a98126a36cb9c12f4b017f8"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a42a892625a98126a36cb9c12f4b017f8">openage::util::Path::parts</a></div><div class="ttdeci">parts_t parts</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00168">path.h:168</a></div></div>
<div class="ttc" id="util_2path_8h_xhtml"><div class="ttname"><a href="util_2path_8h.xhtml">path.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a21fb5a34dad3027d7c9fca721211a258"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a21fb5a34dad3027d7c9fca721211a258">openage::util::Path::joinpath</a></div><div class="ttdeci">Path joinpath(const parts_t &amp;subpaths) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00293">path.cpp:293</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a5b429e300ae4a048dbbd1a733bc1452a"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a5b429e300ae4a048dbbd1a733bc1452a">openage::util::Path::open</a></div><div class="ttdeci">File open(const std::string &amp;mode=&quot;r&quot;) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00111">path.cpp:111</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a4ee310e473187eb5e37d402be315676f"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a4ee310e473187eb5e37d402be315676f">openage::util::Path::is_dir</a></div><div class="ttdeci">bool is_dir() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00084">path.cpp:84</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_ad8cfd4845f049d7163308de4b6a0fba0"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#ad8cfd4845f049d7163308de4b6a0fba0">openage::util::Path::get_suffix</a></div><div class="ttdeci">std::string get_suffix() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00261">path.cpp:261</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_ad250b77528d7feb294ead2006da92b4f"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#ad250b77528d7feb294ead2006da92b4f">openage::util::Path::exists</a></div><div class="ttdeci">bool exists() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00076">path.cpp:76</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a45bb33ddb21332a423a5788fc9ee8462"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a45bb33ddb21332a423a5788fc9ee8462">openage::util::Path::parts_t</a></div><div class="ttdeci">std::vector&lt; part_t &gt; parts_t</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00059">path.h:59</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a72180e179456cb7a19935e969c9753e2"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a72180e179456cb7a19935e969c9753e2">openage::util::Path::operator !=</a></div><div class="ttdeci">bool operator !=(const Path &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00334">path.cpp:334</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a7abde99b6d12b1d6405083fe75c8cd7d"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a7abde99b6d12b1d6405083fe75c8cd7d">openage::util::Path::mkdirs</a></div><div class="ttdeci">bool mkdirs()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00107">path.cpp:107</a></div></div>
<div class="ttc" id="namespaceopenage_1_1subprocess_xhtml_a0a0bbc382a5c765c627d6f79d8aeaf59"><div class="ttname"><a href="namespaceopenage_1_1subprocess.xhtml#a0a0bbc382a5c765c627d6f79d8aeaf59">openage::subprocess::call</a></div><div class="ttdeci">int call(const std::vector&lt; const char * &gt; &amp;argv, bool wait, const char *redirect_stdout_to)</div><div class="ttdef"><b>Definition:</b> <a href="subprocess_8cpp_source.xhtml#l00072">subprocess.cpp:72</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1_f_s_like_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1_f_s_like.xhtml">openage::util::fslike::FSLike</a></div><div class="ttdef"><b>Definition:</b> <a href="fslike_8h_source.xhtml#l00069">fslike.h:69</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a1d87cf48082a47a8154ed136b933b4c3"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a1d87cf48082a47a8154ed136b933b4c3">openage::util::Path::touch</a></div><div class="ttdeci">bool touch()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00215">path.cpp:215</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aedc1b758f39c3c73bc0c9674b196b93f"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aedc1b758f39c3c73bc0c9674b196b93f">openage::util::Path::operator []</a></div><div class="ttdeci">Path operator [](const parts_t &amp;subpaths) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00307">path.cpp:307</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a20819ad3bd985841f0538e3adac52cf6"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a20819ad3bd985841f0538e3adac52cf6">openage::util::Path::get_name</a></div><div class="ttdeci">const std::string &amp; get_name() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00252">path.cpp:252</a></div></div>
<div class="ttc" id="misc_8h_xhtml"><div class="ttname"><a href="misc_8h.xhtml">misc.h</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aa7993e64af5227c5949074566deadbf6"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aa7993e64af5227c5949074566deadbf6">openage::util::Path::with_suffix</a></div><div class="ttdeci">Path with_suffix(const part_t &amp;suffix) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00323">path.cpp:323</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">openage::pyinterface::PyObjectRef</a></div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00049">pyobject.h:49</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a811160d3aa2dbbfc90ee8e540cb91024"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a811160d3aa2dbbfc90ee8e540cb91024">openage::util::Path::writable</a></div><div class="ttdeci">bool writable() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00088">path.cpp:88</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a432c6c98bd5e57ea0d9909ab8921169a"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a432c6c98bd5e57ea0d9909ab8921169a">openage::util::Path::rename</a></div><div class="ttdeci">bool rename(const Path &amp;target_path)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00200">path.cpp:200</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a1175be01a6df63d066ca6f2d3e2c4d3c"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">openage::util::Path::resolve_native_path_w</a></div><div class="ttdeci">std::string resolve_native_path_w() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00188">path.cpp:188</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a074a32ef7f82983bb7d9e04092e29329"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a074a32ef7f82983bb7d9e04092e29329">openage::util::Path::get_fsobj</a></div><div class="ttdeci">fslike::FSLike * get_fsobj() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00339">path.cpp:339</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_ade26ce7a38a05b1e46dca7f839240988"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#ade26ce7a38a05b1e46dca7f839240988">openage::util::Path::Path</a></div><div class="ttdeci">Path()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00041">path.cpp:41</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_afdfddfce491febb942d8c7d880557800"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#afdfddfce491febb942d8c7d880557800">openage::util::Path::operator==</a></div><div class="ttdeci">bool operator==(const Path &amp;other) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00327">path.cpp:327</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a76e2c7f1e3147d1d726d5c277daff1f8"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a76e2c7f1e3147d1d726d5c277daff1f8">openage::pyinterface::PyObjectRef::bytes</a></div><div class="ttdeci">std::string bytes() const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00132">pyobject.cpp:132</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a53047699ec64680d09c2c7db87ae99c5"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a53047699ec64680d09c2c7db87ae99c5">openage::util::Path::get_native_path</a></div><div class="ttdeci">std::string get_native_path() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00158">path.cpp:158</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a7792a326554efd7a7331477ee7deb733"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a7792a326554efd7a7331477ee7deb733">openage::util::Path::unlink</a></div><div class="ttdeci">bool unlink()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00219">path.cpp:219</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aa9a3ed91bb7f5c0fa51acf99e8bcba64"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aa9a3ed91bb7f5c0fa51acf99e8bcba64">openage::util::path_normalizer</a></div><div class="ttdeci">void path_normalizer(Path::parts_t &amp;output, const Path::parts_t &amp;input)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00021">path.cpp:21</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a2b50acc68a2ec93baae38dbc76698317"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a2b50acc68a2ec93baae38dbc76698317">openage::util::Path::rmdir</a></div><div class="ttdeci">bool rmdir()</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00211">path.cpp:211</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1fslike_xhtml_a670007c84e8b0cf3c4f0dfd74e0f6399"><div class="ttname"><a href="namespaceopenage_1_1util_1_1fslike.xhtml#a670007c84e8b0cf3c4f0dfd74e0f6399">openage::util::fslike::PATHSEP</a></div><div class="ttdeci">constexpr char PATHSEP</div><div class="ttdef"><b>Definition:</b> <a href="fslike_2native_8h_source.xhtml#l00013">native.h:13</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_aaa66710a132b598475a9f59cbcdfdd04"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#aaa66710a132b598475a9f59cbcdfdd04">openage::util::Path::get_filesize</a></div><div class="ttdeci">uint64_t get_filesize() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00240">path.cpp:240</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="util_2path_8cpp.xhtml">path.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
