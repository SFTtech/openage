<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::ConstInitVector&lt; T &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1_const_init_vector.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1util_1_1_const_init_vector-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::ConstInitVector&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A std::vector-like object that has a constexpr constructor, and thus can be initialized during the const- or zero-initialization phase, before any dynamic initialization happens.  
 <a href="classopenage_1_1util_1_1_const_init_vector.xhtml#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::ConstInitVector&lt; T &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_const_init_vector__coll__graph.svg" width="166" height="250"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa937103ff0cf9cfcfdc40c5b588f520a"><td class="memItemLeft" align="right" valign="top">constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#aa937103ff0cf9cfcfdc40c5b588f520a">ConstInitVector</a> () noexcept</td></tr>
<tr class="separator:aa937103ff0cf9cfcfdc40c5b588f520a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe5d1ab55d507b83b5cd292f09215d5c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#afe5d1ab55d507b83b5cd292f09215d5c">~ConstInitVector</a> ()</td></tr>
<tr class="separator:afe5d1ab55d507b83b5cd292f09215d5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a0d1bb5f02c9e63a0c8917853033d01"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a4a0d1bb5f02c9e63a0c8917853033d01">ConstInitVector</a> (const <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;other)=delete</td></tr>
<tr class="memdesc:a4a0d1bb5f02c9e63a0c8917853033d01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copying this is not supported.  <a href="#a4a0d1bb5f02c9e63a0c8917853033d01">More...</a><br /></td></tr>
<tr class="separator:a4a0d1bb5f02c9e63a0c8917853033d01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a967da963686387641fa058dc9e0c2794"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a967da963686387641fa058dc9e0c2794">ConstInitVector</a> (<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&amp;other)=delete</td></tr>
<tr class="separator:a967da963686387641fa058dc9e0c2794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7932239e906a33dd0ec0c6368d988595"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7932239e906a33dd0ec0c6368d988595">operator=</a> (const <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;other)=delete</td></tr>
<tr class="separator:a7932239e906a33dd0ec0c6368d988595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3c5be8b9bdb320d1cdc65f675e46fa3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ad3c5be8b9bdb320d1cdc65f675e46fa3">operator=</a> (<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&amp;other)=delete</td></tr>
<tr class="separator:ad3c5be8b9bdb320d1cdc65f675e46fa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc94bd8cdd68e1076a95dbebe26d98a2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#adc94bd8cdd68e1076a95dbebe26d98a2">push_back</a> (const T &amp;<a class="el" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>)</td></tr>
<tr class="separator:adc94bd8cdd68e1076a95dbebe26d98a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a480596ddb84d5de0cf5efd05a8ada773"><td class="memItemLeft" align="right" valign="top">const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a480596ddb84d5de0cf5efd05a8ada773">operator[]</a> (size_t idx) const</td></tr>
<tr class="memdesc:a480596ddb84d5de0cf5efd05a8ada773"><td class="mdescLeft">&#160;</td><td class="mdescRight">The returned reference is invalid if n &gt;= this-&gt;<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a2453ffb8432511227127c0e6df561a43" title="Returns the number of elements that have been pushed back.">size()</a>.  <a href="#a480596ddb84d5de0cf5efd05a8ada773">More...</a><br /></td></tr>
<tr class="separator:a480596ddb84d5de0cf5efd05a8ada773"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2453ffb8432511227127c0e6df561a43"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a2453ffb8432511227127c0e6df561a43">size</a> ()</td></tr>
<tr class="memdesc:a2453ffb8432511227127c0e6df561a43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements that have been pushed back.  <a href="#a2453ffb8432511227127c0e6df561a43">More...</a><br /></td></tr>
<tr class="separator:a2453ffb8432511227127c0e6df561a43"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a513a7f0d7c006a44a0d870cfea7bdf3e"><td class="memItemLeft" align="right" valign="top">T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a></td></tr>
<tr class="separator:a513a7f0d7c006a44a0d870cfea7bdf3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae798749afd7c6cd370a440b65fe762d3"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a></td></tr>
<tr class="separator:ae798749afd7c6cd370a440b65fe762d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7865b21f7d5faf61031a76fe3e3acd91"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a></td></tr>
<tr class="separator:a7865b21f7d5faf61031a76fe3e3acd91"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class openage::util::ConstInitVector&lt; T &gt;</h3>

<p>A std::vector-like object that has a constexpr constructor, and thus can be initialized during the const- or zero-initialization phase, before any dynamic initialization happens. </p>
<p>Use this class if and only if you need that functionality (that should be pretty uncommon; there generally are better ways of guaranteeing dynamic initialization order, such as static function variables). </p>

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00024">24</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aa937103ff0cf9cfcfdc40c5b588f520a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa937103ff0cf9cfcfdc40c5b588f520a">&#9670;&nbsp;</a></span>ConstInitVector() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00026">26</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;: <a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>{<span class="keyword">nullptr</span>}, <a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a>{16}, <a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a>{0} {}</div><div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_ae798749afd7c6cd370a440b65fe762d3"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">openage::util::ConstInitVector::capacity</a></div><div class="ttdeci">size_t capacity</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00095">constinit_vector.h:95</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a513a7f0d7c006a44a0d870cfea7bdf3e"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">openage::util::ConstInitVector::data</a></div><div class="ttdeci">T * data</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00094">constinit_vector.h:94</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a7865b21f7d5faf61031a76fe3e3acd91"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">openage::util::ConstInitVector::count</a></div><div class="ttdeci">size_t count</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00096">constinit_vector.h:96</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="afe5d1ab55d507b83b5cd292f09215d5c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe5d1ab55d507b83b5cd292f09215d5c">&#9670;&nbsp;</a></span>~ConstInitVector()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::~<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00029">29</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;                       {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        std::allocator&lt;T&gt; alloc;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a>; i++) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                alloc.destroy(&amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>[i]);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            alloc.deallocate(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>, this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a>);</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_ae798749afd7c6cd370a440b65fe762d3"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">openage::util::ConstInitVector::capacity</a></div><div class="ttdeci">size_t capacity</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00095">constinit_vector.h:95</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a513a7f0d7c006a44a0d870cfea7bdf3e"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">openage::util::ConstInitVector::data</a></div><div class="ttdeci">T * data</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00094">constinit_vector.h:94</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a7865b21f7d5faf61031a76fe3e3acd91"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">openage::util::ConstInitVector::count</a></div><div class="ttdeci">size_t count</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00096">constinit_vector.h:96</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="constinit__vector_8h_source.xhtml#l00095">openage::util::ConstInitVector&lt; T &gt;::capacity</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00096">openage::util::ConstInitVector&lt; T &gt;::count</a>, and <a class="el" href="constinit__vector_8h_source.xhtml#l00094">openage::util::ConstInitVector&lt; T &gt;::data</a>.</p>

</div>
</div>
<a id="a4a0d1bb5f02c9e63a0c8917853033d01"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a0d1bb5f02c9e63a0c8917853033d01">&#9670;&nbsp;</a></span>ConstInitVector() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copying this is not supported. </p>

</div>
</div>
<a id="a967da963686387641fa058dc9e0c2794"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a967da963686387641fa058dc9e0c2794">&#9670;&nbsp;</a></span>ConstInitVector() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7932239e906a33dd0ec0c6368d988595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7932239e906a33dd0ec0c6368d988595">&#9670;&nbsp;</a></span>operator=() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&amp; <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="ad3c5be8b9bdb320d1cdc65f675e46fa3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3c5be8b9bdb320d1cdc65f675e46fa3">&#9670;&nbsp;</a></span>operator=() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&amp; <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a>&lt; T &gt; &amp;&amp;&#160;</td>
          <td class="paramname"><em>other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">delete</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<a id="a480596ddb84d5de0cf5efd05a8ada773"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a480596ddb84d5de0cf5efd05a8ada773">&#9670;&nbsp;</a></span>operator[]()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T&amp; <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::operator[] </td>
          <td>(</td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>idx</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The returned reference is invalid if n &gt;= this-&gt;<a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a2453ffb8432511227127c0e6df561a43" title="Returns the number of elements that have been pushed back.">size()</a>. </p>
<p>It may be invalidated by a call to <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml#adc94bd8cdd68e1076a95dbebe26d98a2">push_back()</a>. </p>

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00081">81</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                                           {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>[idx];</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a513a7f0d7c006a44a0d870cfea7bdf3e"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">openage::util::ConstInitVector::data</a></div><div class="ttdeci">T * data</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00094">constinit_vector.h:94</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="constinit__vector_8h_source.xhtml#l00094">openage::util::ConstInitVector&lt; T &gt;::data</a>.</p>

</div>
</div>
<a id="adc94bd8cdd68e1076a95dbebe26d98a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc94bd8cdd68e1076a95dbebe26d98a2">&#9670;&nbsp;</a></span>push_back()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::push_back </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>val</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00050">50</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                                 {</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        std::allocator&lt;T&gt; alloc;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <span class="comment">// obj is fresh and needs to allocate memory.</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a> = alloc.allocate(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a>);</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a> == <a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a>)) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;            <span class="comment">// obj is full and needs to resize memory.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            <span class="keywordtype">size_t</span> newcapacity = <a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a> * 2;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            T *newdata = alloc.allocate(newcapacity);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> i = 0; i &lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">capacity</a>; i++) {</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                alloc.construct(&amp;newdata[i], std::move_if_noexcept(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>[i]));</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                alloc.destroy(&amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>[i]);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            alloc.deallocate(this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>, this-&gt;capacity);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a> = newdata;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            this-&gt;capacity = newcapacity;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        }</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// add val at the end.</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        alloc.construct(&amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">data</a>[this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a>], <a class="code" href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        this-&gt;count += 1;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_ae798749afd7c6cd370a440b65fe762d3"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#ae798749afd7c6cd370a440b65fe762d3">openage::util::ConstInitVector::capacity</a></div><div class="ttdeci">size_t capacity</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00095">constinit_vector.h:95</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aa0ccb5ee6d882ee3605ff47745c6467b"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aa0ccb5ee6d882ee3605ff47745c6467b">val</a></div><div class="ttdeci">int val</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00017">constinit_vector.cpp:17</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a513a7f0d7c006a44a0d870cfea7bdf3e"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a513a7f0d7c006a44a0d870cfea7bdf3e">openage::util::ConstInitVector::data</a></div><div class="ttdeci">T * data</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00094">constinit_vector.h:94</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a7865b21f7d5faf61031a76fe3e3acd91"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">openage::util::ConstInitVector::count</a></div><div class="ttdeci">size_t count</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00096">constinit_vector.h:96</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="constinit__vector_8h_source.xhtml#l00095">openage::util::ConstInitVector&lt; T &gt;::capacity</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00096">openage::util::ConstInitVector&lt; T &gt;::count</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00094">openage::util::ConstInitVector&lt; T &gt;::data</a>, and <a class="el" href="compiler_8h_source.xhtml#l00053">unlikely</a>.</p>

<p class="reference">Referenced by <a class="el" href="constinit__vector_8cpp_source.xhtml#l00055">openage::util::tests::constinit_vector()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_const_init_vector_adc94bd8cdd68e1076a95dbebe26d98a2_icgraph.svg" width="347" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="a2453ffb8432511227127c0e6df561a43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2453ffb8432511227127c0e6df561a43">&#9670;&nbsp;</a></span>size()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::size </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of elements that have been pushed back. </p>

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00089">89</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                  {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">count</a>;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1_const_init_vector_xhtml_a7865b21f7d5faf61031a76fe3e3acd91"><div class="ttname"><a href="classopenage_1_1util_1_1_const_init_vector.xhtml#a7865b21f7d5faf61031a76fe3e3acd91">openage::util::ConstInitVector::count</a></div><div class="ttdeci">size_t count</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8h_source.xhtml#l00096">constinit_vector.h:96</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="constinit__vector_8h_source.xhtml#l00096">openage::util::ConstInitVector&lt; T &gt;::count</a>.</p>

<p class="reference">Referenced by <a class="el" href="constinit__vector_8cpp_source.xhtml#l00055">openage::util::tests::constinit_vector()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_const_init_vector_a2453ffb8432511227127c0e6df561a43_icgraph.svg" width="347" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae798749afd7c6cd370a440b65fe762d3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae798749afd7c6cd370a440b65fe762d3">&#9670;&nbsp;</a></span>capacity</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::capacity</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00095">95</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="constinit__vector_8h_source.xhtml#l00050">openage::util::ConstInitVector&lt; T &gt;::push_back()</a>, and <a class="el" href="constinit__vector_8h_source.xhtml#l00029">openage::util::ConstInitVector&lt; T &gt;::~ConstInitVector()</a>.</p>

</div>
</div>
<a id="a7865b21f7d5faf61031a76fe3e3acd91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7865b21f7d5faf61031a76fe3e3acd91">&#9670;&nbsp;</a></span>count</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::count</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00096">96</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="constinit__vector_8h_source.xhtml#l00050">openage::util::ConstInitVector&lt; T &gt;::push_back()</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00089">openage::util::ConstInitVector&lt; T &gt;::size()</a>, and <a class="el" href="constinit__vector_8h_source.xhtml#l00029">openage::util::ConstInitVector&lt; T &gt;::~ConstInitVector()</a>.</p>

</div>
</div>
<a id="a513a7f0d7c006a44a0d870cfea7bdf3e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a513a7f0d7c006a44a0d870cfea7bdf3e">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">T* <a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">openage::util::ConstInitVector</a>&lt; T &gt;::data</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="constinit__vector_8h_source.xhtml#l00094">94</a> of file <a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="content__snippet_8py_source.xhtml#l00127">openage.convert.dataformat.content_snippet.ContentSnippet::__eq__()</a>, <a class="el" href="struct__snippet_8py_source.xhtml#l00095">openage.convert.dataformat.struct_snippet.StructSnippet::__hash__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00096">openage.convert.dataformat.content_snippet.ContentSnippet::__hash__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00140">openage.convert.dataformat.content_snippet.ContentSnippet::__repr__()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00129">openage.convert.dataformat.data_definition.DataDefinition::__str__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00151">openage.convert.dataformat.content_snippet.ContentSnippet::__str__()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00127">openage.convert.dataformat.data_formatter.DataFormatter::add_data()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00170">openage.convert.dataformat.data_formatter.DataFormatter::export()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition::generate_csv()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00045">openage.convert.dataformat.content_snippet.ContentSnippet::get_data()</a>, <a class="el" href="texture_8py_source.xhtml#l00078">openage.convert.texture.TextureImage::get_data()</a>, <a class="el" href="texture_8py_source.xhtml#l00075">openage.convert.texture.TextureImage::get_pil_image()</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00081">openage::util::ConstInitVector&lt; T &gt;::operator[]()</a>, <a class="el" href="constinit__vector_8h_source.xhtml#l00050">openage::util::ConstInitVector&lt; T &gt;::push_back()</a>, <a class="el" href="peresource_8py_source.xhtml#l00168">openage.convert.peresource.PEResources::read_directory()</a>, and <a class="el" href="constinit__vector_8h_source.xhtml#l00029">openage::util::ConstInitVector&lt; T &gt;::~ConstInitVector()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="constinit__vector_8h_source.xhtml">constinit_vector.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1_const_init_vector.xhtml">ConstInitVector</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
