<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/console/tests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('console_2tests_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">tests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="console_2tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2014-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#ifdef _MSC_VER</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#define STDOUT_FILENO 1</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../util/fds.h&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;../util/pty.h&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;fcntl.h&gt;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;errno.h&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="buf_8h.xhtml">buf.h</a>&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="console_8h.xhtml">console.h</a>&quot;</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="draw_8h.xhtml">draw.h</a>&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">namespace </span>console {</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1console_1_1tests.xhtml">   27</a></span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">// TODO: move to util</span></div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">   31</a></span>&#160;<span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">max</a>(<span class="keywordtype">int</span> a, <span class="keywordtype">int</span> b) {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">return</span> (a &gt; b) ? a : b;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="comment">// TODO: test for console coordinates and resizing</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1console_1_1tests.xhtml#a15c3b269411a779e1ae9af60a3b6fedf">   39</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a15c3b269411a779e1ae9af60a3b6fedf">render</a>() {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml">console::Buf</a> buf{{80, 25}, 1337, 80};</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    buf.<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">write</a>(<span class="stringliteral">&quot;Hello, brave new console world!\n\n\n\n&quot;</span>);</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    buf.write(<span class="stringliteral">&quot;stuff, lol.\n\n&quot;</span>);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    buf.write(<span class="stringliteral">&quot;\x1b[1mbold stuff, lol.\x1b[m\n\n&quot;</span>);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    buf.write(<span class="stringliteral">&quot;\x1b[5;31;1mred bold blinking stuff, lol, ... also, this text seems to be quite long, maybe even wider than the terminal width. i wonder what could \x1b[7mhappen.\x1b[m\n\n&quot;</span>);</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 18; i++) {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        buf.write(<span class="stringliteral">&quot;rofl\n&quot;</span>);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    }</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    buf.scroll(100);</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">util::FD</a> outfd{STDOUT_FILENO};</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="namespaceopenage_1_1console_1_1draw.xhtml#a7375ee96f4d8df916d1b34cb806c3e67">console::draw::to_terminal</a>(&amp;buf, &amp;outfd, <span class="keyword">true</span>);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1console_1_1tests.xhtml#a4a108e620e3fead2c08ff14841552186">   55</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a4a108e620e3fead2c08ff14841552186">interactive</a>() {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">    #ifndef _WIN32</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <a class="code" href="classopenage_1_1console_1_1_buf.xhtml">console::Buf</a> buf{{80, 25}, 1337, 80};</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keyword">struct </span>winsize ws;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    ws.ws_col = buf.<a class="code" href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">dims</a>.x;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    ws.ws_row = buf.dims.y;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    ws.ws_xpixel = buf.dims.x * 8;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    ws.ws_ypixel = buf.dims.y * 13;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">int</span> amaster;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">switch</span> (forkpty(&amp;amaster, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, &amp;ws)) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;fork() failed: &quot;</span> &lt;&lt; strerror(errno));</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">case</span> 0: {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="comment">// we are the child, spawn a shell</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> *shell = getenv(<span class="stringliteral">&quot;SHELL&quot;</span>);</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">if</span> (shell == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            shell = <span class="stringliteral">&quot;/bin/sh&quot;</span>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        }</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        execl(shell, shell, <span class="keyword">nullptr</span>);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;execl(\&quot;&quot;</span> &lt;&lt; shell &lt;&lt; <span class="stringliteral">&quot;\&quot;, \&quot;&quot;</span> &lt;&lt; shell &lt;&lt; <span class="stringliteral">&quot;\&quot;, nullptr) failed: &quot;</span> &lt;&lt; strerror(errno));</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="comment">//we are the parent</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">util::FD</a> ptyout{amaster};            <span class="comment">// for writing to the slave</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">util::FD</a> ptyin{&amp;ptyout, <span class="keyword">true</span>};       <span class="comment">// for reading the slave&#39;s output</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">util::FD</a> termout{STDOUT_FILENO};     <span class="comment">// for writing to the terminal</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_d.xhtml">util::FD</a> termin{STDIN_FILENO, <span class="keyword">true</span>}; <span class="comment">// for reading the user input</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// hide cursor</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    termout.<a class="code" href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">puts</a>(<span class="stringliteral">&quot;\x1b[?25l&quot;</span>);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="comment">// set canon input mode</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    termin.setinputmodecanon();</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="comment">// set amaster to auto-close</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    ptyout.close_on_destroy = <span class="keyword">true</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    constexpr <span class="keywordtype">int</span> rdbuf_size = 4096;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordtype">char</span> rdbuf[rdbuf_size];</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordtype">int</span> nfds = <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">max</a>(termin.fd, ptyin.fd) + 1;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordtype">bool</span> loop = <span class="keyword">true</span>;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <a class="code" href="namespaceopenage_1_1console_1_1draw.xhtml#a7375ee96f4d8df916d1b34cb806c3e67">console::draw::to_terminal</a>(&amp;buf, &amp;termout, <span class="keyword">true</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">while</span> (loop) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        fd_set rfds;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="keyword">struct </span>timeval tv;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="comment">// Watch stdin (fd 0) to see when it has input.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        FD_ZERO(&amp;rfds);</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        FD_SET(ptyin.fd, &amp;rfds);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        FD_SET(termin.fd, &amp;rfds);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        tv.tv_sec = 0;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        tv.tv_usec = 1000000 / 60;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keywordflow">switch</span> (select(nfds, &amp;rfds, NULL, NULL, &amp;tv)) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;            <span class="comment">// error</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="comment">// timeout</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">default</span>:</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <span class="comment">// success</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;            <span class="keywordflow">if</span> (FD_ISSET(termin.fd, &amp;rfds)) {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                ssize_t retval = read(termin.fd, rdbuf, rdbuf_size);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;                <span class="keywordflow">switch</span> (retval) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;                <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                    <span class="comment">// error... probably EWOULDBLOCK. ignore.</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    <span class="comment">// EOF on stdin... huh... well... that was unexpected... TODO</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;                    <span class="keywordflow">if</span> (ptyout.write(rdbuf, retval) != retval) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                        <span class="comment">// for some reason, we couldn&#39;t write all input to</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                        <span class="comment">// a master.</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                        loop = <span class="keyword">false</span>;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            }</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">if</span> (FD_ISSET(ptyin.fd, &amp;rfds)) {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                ssize_t retval = read(ptyin.fd, rdbuf, rdbuf_size);</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                <span class="keywordflow">switch</span> (retval) {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                <span class="keywordflow">case</span> -1:</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                    <span class="keywordflow">switch</span>(errno) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                    <span class="keywordflow">case</span> EIO:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                        loop = <span class="keyword">false</span>;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                        <span class="comment">// probably EWOULDBLOCK. ignore.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;                <span class="keywordflow">case</span> 0:</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;                    <span class="comment">// EOF on amaster</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                    loop = <span class="keyword">false</span>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; retval; i++) {</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                        buf.write(rdbuf[i]);</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                    }</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                }</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            <span class="keywordflow">break</span>;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">if</span> (tv.tv_usec == 0) {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            <a class="code" href="namespaceopenage_1_1console_1_1draw.xhtml#a7375ee96f4d8df916d1b34cb806c3e67">console::draw::to_terminal</a>(&amp;buf, &amp;termout, <span class="keyword">false</span>);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            tv.tv_usec = 1000000 / 60;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        }</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    }</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="comment">// show cursor</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    termout.puts(<span class="stringliteral">&quot;\x1b[?25h&quot;</span>);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor">    #endif </span><span class="comment">/* _WIN32 */</span><span class="preprocessor"></span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}}} <span class="comment">// namespace openage::console::tests</span></div><div class="ttc" id="console_8h_xhtml"><div class="ttname"><a href="console_8h.xhtml">console.h</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml_a5c27276c6b3cf4af0e5d13979c0e81a0"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml#a5c27276c6b3cf4af0e5d13979c0e81a0">openage::util::FD::puts</a></div><div class="ttdeci">int puts(const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="fds_8cpp_source.xhtml#l00057">fds.cpp:57</a></div></div>
<div class="ttc" id="draw_8h_xhtml"><div class="ttname"><a href="draw_8h.xhtml">draw.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a4a108e620e3fead2c08ff14841552186"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a4a108e620e3fead2c08ff14841552186">openage::console::tests::interactive</a></div><div class="ttdeci">void interactive()</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00055">tests.cpp:55</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a15c3b269411a779e1ae9af60a3b6fedf"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a15c3b269411a779e1ae9af60a3b6fedf">openage::console::tests::render</a></div><div class="ttdeci">void render()</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00039">tests.cpp:39</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_d_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_f_d.xhtml">openage::util::FD</a></div><div class="ttdef"><b>Definition:</b> <a href="fds_8h_source.xhtml#l00017">fds.h:17</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a06e75c551d4009e9976cd43dab18fb30"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a06e75c551d4009e9976cd43dab18fb30">openage::console::Buf::dims</a></div><div class="ttdeci">coord::term dims</div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00420">buf.h:420</a></div></div>
<div class="ttc" id="buf_8h_xhtml"><div class="ttname"><a href="buf_8h.xhtml">buf.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1draw_xhtml_a7375ee96f4d8df916d1b34cb806c3e67"><div class="ttname"><a href="namespaceopenage_1_1console_1_1draw.xhtml#a7375ee96f4d8df916d1b34cb806c3e67">openage::console::draw::to_terminal</a></div><div class="ttdeci">void to_terminal(Buf *buf, util::FD *fd, bool clear)</div><div class="ttdef"><b>Definition:</b> <a href="draw_8cpp_source.xhtml#l00091">draw.cpp:91</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml_a3db6d160e44c8db825a37c0cfbc143ea"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml#a3db6d160e44c8db825a37c0cfbc143ea">openage::console::Buf::write</a></div><div class="ttdeci">void write(const char *c, ssize_t len=-1)</div><div class="ttdef"><b>Definition:</b> <a href="buf_8cpp_source.xhtml#l00308">buf.cpp:308</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1console_1_1_buf_xhtml"><div class="ttname"><a href="classopenage_1_1console_1_1_buf.xhtml">openage::console::Buf</a></div><div class="ttdef"><b>Definition:</b> <a href="buf_8h_source.xhtml#l00121">buf.h:121</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a7cece960099fe4958b3f040f3f89471.xhtml">console</a></li><li class="navelem"><a class="el" href="console_2tests_8cpp.xhtml">tests.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
