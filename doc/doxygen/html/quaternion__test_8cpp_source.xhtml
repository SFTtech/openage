<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/quaternion_test.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('quaternion__test_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">quaternion_test.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="quaternion__test_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="quaternion_8h.xhtml">quaternion.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../testing/testing.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1tests.xhtml#ab3f1d081c603b383598beeee8e4429df">   16</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1util_1_1tests.xhtml#ab3f1d081c603b383598beeee8e4429df">quaternion</a>() {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    {</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;        <span class="comment">// Quaternion construction tests</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;        <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> <span class="keywordtype">id</span>{};</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> id_explicit{1.0, 0.0, 0.0, 0.0};</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordtype">id</span>.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(id_explicit) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="keywordtype">id</span>.equals_deg(id_explicit, 1e-5f) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> wrong{0.0, 0.0, 1.0, 0.0};</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        not <span class="keywordtype">id</span>.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(wrong) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix3f</a> id_mat3 = <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a0ba437147db630d1ca901f870764a024">Matrix3f::identity</a>();</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_id_mat3{id_mat3};</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keywordtype">id</span>.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(q_id_mat3) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix4f</a> id_mat4 = <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a0ba437147db630d1ca901f870764a024">Matrix4f::identity</a>();</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_id_mat4{id_mat4};</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordtype">id</span>.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(q_id_mat4) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix4f</a> neg_mat4{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            -1, 0, 0, 0,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            0, 1, 0, 0,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            0, 0, -1, 0,</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            0, 0, 0, 1,</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        };</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_neg{neg_mat4};</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_nex_exp{0, 0, 1, 0};</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        q_neg.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(q_nex_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="comment">// member functions</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q0{1, 2, 3, 4};</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q1{5, 6, 7, 8};</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(q0.dot(q1), 5 + 12 + 21 + 32, 1e-5f);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <a class="code" href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a>(q0.norm(), 5.4772255 <span class="comment">/*= sqrt(30) */</span>, 1e-4f);</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2{2, 8, 4, 16};</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2_normd = q2.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#adaf56c826ceec78d0f4980148ce498fa">normalized</a>();</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        q2_normd.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(q2) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2conj_exp{2, -8, -4, -16};</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        q2conj_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(q2.conjugated()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2inv_exp{</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            0.0058823529411764705f,</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;            -0.023529411764705882f,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            -0.011764705882352941f,</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            -0.047058823529411764f</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        };</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2inv = q2.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#ab7cebbaf133b69d0122980f73416ddf6">inversed</a>();</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        q2inv.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#adaf56c826ceec78d0f4980148ce498fa">normalized</a>().<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(q2inv_exp.normalized()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        q2.normalize();</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q2norm_exp{</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            0.10846522f, 0.433860915f, 0.216930457f, 0.8677218312f</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        };</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        q2norm_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(q2) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="comment">// Operator tests.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> <span class="keywordtype">id</span>{};</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla0{13, 37, 42, 235};</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        bla0.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(<span class="keywordtype">id</span> * bla0) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla1{8, 16, 24, 32};</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla0_1_exp{21, 45, 50, 243};</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        bla0_1_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla0 + bla1) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla1_2_exp{2, 8, 12, 16};</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        bla1_2_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla1 / 4) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla1_3_exp{16, 64, 96, 128};</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        bla1_3_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla1 * 8) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla1_4_exp{21, 53, 66, 267};</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        bla1_4_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla0 + bla1) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla1_5_exp{5, 21, 18, 203};</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        bla1_5_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla0 - bla1) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla2_exp{</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            13 * 21 - 37 * 45 - 42 * 50 - 235 * 243,</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;            13 * 45 + 37 * 21 + 42 * 243 - 235 * 50,</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            13 * 50 - 37 * 243 + 42 * 21 + 235 * 45,</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            13 * 243 + 37 * 50 - 42 * 45 + 235 * 21</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        };</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        bla2_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(bla0 * bla0_1_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        (bla2_exp == bla2_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        (bla2_exp != bla0) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> bla0_neg_exp{-13, -37, -42, -235};</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        bla0_neg_exp.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">equals</a>(-bla0) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    {</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="keyword">enum class</span> axis {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            x, y, z</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        };</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">// Rotation tests</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="keyword">auto</span> rot_mat = [&amp;](axis a, <span class="keywordtype">float</span> am, <span class="keywordtype">bool</span> deg=<span class="keyword">true</span>) -&gt; <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix3f</a> {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">if</span> (deg) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                am = (am * <a class="code" href="namespaceopenage_1_1math.xhtml#a2fa23a3c6b5e149587e859cb261ef4cd">math::PI</a>) / 180.0;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;            <span class="keywordflow">switch</span> (a) {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">case</span> axis::x:</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;                <span class="keywordflow">return</span> {</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;                    1, 0, 0,</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;                    0, std::cos(am), -std::sin(am),</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;                    0, std::sin(am), std::cos(am)</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                };</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            <span class="keywordflow">case</span> axis::y:</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;                <span class="keywordflow">return</span> {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                    std::cos(am), 0, std::sin(am),</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                    0, 1, 0,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                    -std::sin(am), 0, std::cos(am)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                };</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="keywordflow">case</span> axis::z:</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                <span class="keywordflow">return</span> {</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                    std::cos(am), -std::sin(am), 0,</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    std::sin(am), std::cos(am), 0,</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                    0, 0, 1,</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;                };</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>{<a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;wtf unreachable code reached&quot;</span>};</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        };</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="comment">// zero rotation = identity.</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_matrix.xhtml">Matrix3f</a> rot = rot_mat(axis::x, 0, <span class="keyword">false</span>);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        rot.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#a0ba437147db630d1ca901f870764a024">Matrix3f::identity</a>()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_rot{rot};</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a> q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a49239acad85282d401d7d56f3c96959d">Quaternionf::from_rad</a>(0, {1, 0, 0});</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="comment">// 10 rad rotation</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        rot = rot_mat(axis::x, 10, <span class="keyword">false</span>);</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a49239acad85282d401d7d56f3c96959d">Quaternionf::from_rad</a>(10, {1, 0, 0});</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aae617726f6df2524bd7402fdefb3cc0f">equals_rad</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="comment">// wrong 90-rad-rotation:</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a49239acad85282d401d7d56f3c96959d">Quaternionf::from_rad</a>(90, {1, 0, 0});</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        not q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aae617726f6df2524bd7402fdefb3cc0f">equals_rad</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        <span class="comment">// 10 deg rotation</span></div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        rot = rot_mat(axis::x, 10);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(10, {1, 0, 0});</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="comment">// 90 deg rotation</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        rot = rot_mat(axis::x, 90);</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(90, {1, 0, 0});</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        rot = rot_mat(axis::y, 90);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(90, {0, 1, 0});</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        rot = rot_mat(axis::z, 90);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(90, {0, 0, 1});</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment">// -90 deg rotation</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        rot = rot_mat(axis::y, -90);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(-90, {0, 1, 0});</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        <span class="comment">// 45 deg rotation</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        rot = rot_mat(axis::z, 45);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        q_rot_deg = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(45, {0, 0, 1});</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment">// rotation combination</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        rot = rot_mat(axis::z, 45) * rot_mat(axis::y, 60);</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        q_rot_deg = (<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(45, {0, 0, 1}) *</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;                     <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(60, {0, 1, 0}));</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        rot = rot_mat(axis::z, 45) *</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;              rot_mat(axis::y, 60) *</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;              rot_mat(axis::x, -200);</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml">Quaternionf</a>{rot};</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        q_rot_deg = (<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(45, {0, 0, 1}) *</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                     <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(60, {0, 1, 0}) *</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;                     <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(-200, {1, 0, 0}));</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        q_rot.<a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">equals_deg</a>(q_rot_deg) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="comment">// to_matrix tests</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        rot = rot_mat(axis::x, 235);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(235, {1, 0, 0});</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        rot.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(q_rot.to_matrix()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        rot = rot_mat(axis::y, -55);</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(-55, {0, 1, 0});</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        rot.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(q_rot.to_matrix()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        rot = rot_mat(axis::z, 64);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        q_rot = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(64, {0, 0, 1});</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        rot.<a class="code" href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">equals</a>(q_rot.to_matrix()) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    }</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a> vec{5, 0, 0};</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a> turned = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(180, {0, 0, 1}) * vec;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a> turned_exp{-5, 0, 0};</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        turned.<a class="code" href="classopenage_1_1util_1_1_vector.xhtml#adb9d43a588f0d7044f201a2dff2db844">equals</a>(turned_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        <span class="comment">// intentional fail:</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        turned_exp = <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a>{-42, -42, -42};</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        not turned.<a class="code" href="classopenage_1_1util_1_1_vector.xhtml#adb9d43a588f0d7044f201a2dff2db844">equals</a>(turned_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;        <span class="comment">// another turn</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;        vec = <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a>{1337, 42, 235};</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;        turned = <a class="code" href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">Quaternionf::from_deg</a>(90, {1, 0, 0}) * vec;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        turned_exp = <a class="code" href="classopenage_1_1util_1_1_vector.xhtml">Vector3f</a>{1337, -235, 42};</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        turned.<a class="code" href="classopenage_1_1util_1_1_vector.xhtml#adb9d43a588f0d7044f201a2dff2db844">equals</a>(turned_exp) or <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    }</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;}}} <span class="comment">// openage::util::tests</span></div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdoc">Convenience macro, for usage in test functions:</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_aa3f586260959ed4c65c62a3ec93f6a6e"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#aa3f586260959ed4c65c62a3ec93f6a6e">openage::util::Quaternion::equals</a></div><div class="ttdeci">bool equals(const this_type &amp;other, T eps=default_eps) const</div><div class="ttdoc">Test if the rotation of both quaternions is the same.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00243">quaternion.h:243</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_ac1bc212dbfd151ce922ba27cad25a074"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#ac1bc212dbfd151ce922ba27cad25a074">openage::util::Matrix::equals</a></div><div class="ttdeci">bool equals(const this_type &amp;other, float eps=default_eps) const</div><div class="ttdoc">Test if both matrices contain the same values within epsilon.</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00089">matrix.h:89</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_adaf56c826ceec78d0f4980148ce498fa"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#adaf56c826ceec78d0f4980148ce498fa">openage::util::Quaternion::normalized</a></div><div class="ttdeci">this_type normalized() const</div><div class="ttdoc">Return the normalized version of this quaternion.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00189">quaternion.h:189</a></div></div>
<div class="ttc" id="namespaceopenage_1_1math_xhtml_a2fa23a3c6b5e149587e859cb261ef4cd"><div class="ttname"><a href="namespaceopenage_1_1math.xhtml#a2fa23a3c6b5e149587e859cb261ef4cd">openage::math::PI</a></div><div class="ttdeci">constexpr double PI</div><div class="ttdoc">pi</div><div class="ttdef"><b>Definition:</b> <a href="math__constants_8h_source.xhtml#l00015">math_constants.h:15</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml_a0ba437147db630d1ca901f870764a024"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml#a0ba437147db630d1ca901f870764a024">openage::util::Matrix::identity</a></div><div class="ttdeci">static this_type identity()</div><div class="ttdoc">Constructs the identity matrix for the current size.</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00076">matrix.h:76</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_aae617726f6df2524bd7402fdefb3cc0f"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#aae617726f6df2524bd7402fdefb3cc0f">openage::util::Quaternion::equals_rad</a></div><div class="ttdeci">bool equals_rad(const this_type &amp;other, T rad_eps=default_eps) const</div><div class="ttdoc">Test rotation equality with another quaternion with given precision in radians.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00264">quaternion.h:264</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_matrix_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_matrix.xhtml">openage::util::Matrix</a></div><div class="ttdoc">Matrix class with arithmetic.</div><div class="ttdef"><b>Definition:</b> <a href="matrix_8h_source.xhtml#l00020">matrix.h:20</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_vector_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_vector.xhtml">openage::util::Vector</a></div><div class="ttdoc">Vector class with arithmetic.</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00024">vector.h:24</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_ab7cebbaf133b69d0122980f73416ddf6"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#ab7cebbaf133b69d0122980f73416ddf6">openage::util::Quaternion::inversed</a></div><div class="ttdeci">this_type inversed() const</div><div class="ttdoc">Return the inverted quaternion.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00215">quaternion.h:215</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_a49239acad85282d401d7d56f3c96959d"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#a49239acad85282d401d7d56f3c96959d">openage::util::Quaternion::from_rad</a></div><div class="ttdeci">static this_type from_rad(T rad, Vector3t&lt; T &gt; axis)</div><div class="ttdoc">Create a quaternion from a rotation in radians around a given axis.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00145">quaternion.h:145</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1tests_xhtml_ab3f1d081c603b383598beeee8e4429df"><div class="ttname"><a href="namespaceopenage_1_1util_1_1tests.xhtml#ab3f1d081c603b383598beeee8e4429df">openage::util::tests::quaternion</a></div><div class="ttdeci">void quaternion()</div><div class="ttdef"><b>Definition:</b> <a href="quaternion__test_8cpp_source.xhtml#l00016">quaternion_test.cpp:16</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_a2e1d1f1785181562048952f28858bea9"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#a2e1d1f1785181562048952f28858bea9">openage::util::Quaternion::equals_deg</a></div><div class="ttdeci">bool equals_deg(const this_type &amp;other, T deg_eps=default_eps) const</div><div class="ttdoc">Test rotation equality with another quaternion with given precision in degree.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00275">quaternion.h:275</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml">openage::util::Quaternion</a></div><div class="ttdoc">Implements Quaternions to represent 3d rotations.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00031">quaternion.h:31</a></div></div>
<div class="ttc" id="quaternion_8h_xhtml"><div class="ttname"><a href="quaternion_8h.xhtml">quaternion.h</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="testing_8h_xhtml_ae531a534fa7f4028ddf113ae72caa6aa"><div class="ttname"><a href="testing_8h.xhtml#ae531a534fa7f4028ddf113ae72caa6aa">TESTEQUALS_FLOAT</a></div><div class="ttdeci">#define TESTEQUALS_FLOAT(left, right, epsilon)</div><div class="ttdoc">Asserts that the left expression equals the right expression, within a margin of error epsilon,...</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00068">testing.h:68</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_vector_xhtml_adb9d43a588f0d7044f201a2dff2db844"><div class="ttname"><a href="classopenage_1_1util_1_1_vector.xhtml#adb9d43a588f0d7044f201a2dff2db844">openage::util::Vector::equals</a></div><div class="ttdeci">bool equals(const this_type &amp;other, T eps=default_eps)</div><div class="ttdoc">Equality test with given precision.</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00060">vector.h:60</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_quaternion_xhtml_aeee334db9faebbbb15c5abd9bedcc03b"><div class="ttname"><a href="classopenage_1_1util_1_1_quaternion.xhtml#aeee334db9faebbbb15c5abd9bedcc03b">openage::util::Quaternion::from_deg</a></div><div class="ttdeci">static this_type from_deg(T deg, Vector3t&lt; T &gt; axis)</div><div class="ttdoc">Create a quaternion from a rotation in degree around a given axis.</div><div class="ttdef"><b>Definition:</b> <a href="quaternion_8h_source.xhtml#l00159">quaternion.h:159</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="quaternion__test_8cpp.xhtml">quaternion_test.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
