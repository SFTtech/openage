<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/demo/physics.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('physics_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">physics.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="physics_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2017-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="physics_8h.xhtml">physics.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;cassert&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;cmath&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#ifdef __MINGW32__</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;ncurses/ncurses.h&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;ncurses.h&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#endif // __MINGW32__</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;gui.h&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &quot;config.h&quot;</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;../../error/error.h&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#include &quot;../../rng/global_rng.h&quot;</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">#include &quot;../../util/stringformatter.h&quot;</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml">openage::event::demo</a> {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml">   27</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml">BallReflectWall</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">DependencyEventClass</a> {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a98f2cf74c7c5267db2364fa2529a2a2a">   29</a></span>&#160;    <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a98f2cf74c7c5267db2364fa2529a2a2a">BallReflectWall</a>() : <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">DependencyEventClass</a>(<span class="stringliteral">&quot;demo.ball.reflect_wall&quot;</span>) {}</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a096aec2cf4cef743c6abc12e4a99240f">   31</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a096aec2cf4cef743c6abc12e4a99240f">setup_event</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;evnt,</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;                     <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate)<span class="keyword"> override </span>{</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        <span class="comment">// FIXME dependency to a full ball object so that any curve</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="comment">// triggers a change</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        evnt-&gt;depend_on(state-&gt;ball-&gt;position);</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        evnt-&gt;depend_on(state-&gt;ball-&gt;speed);</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="comment">// TODO add dependency to size of game area</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="comment">// FIXME: warn if it&#39;s not a dependency eventclass</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    }</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="comment">// FIXME we REALLY need dependencies to objects i.e. Ball : public EventTarget()</span></div><div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a215ab77e1d0c301cf5ee7c79da4ffd4a">   46</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a215ab77e1d0c301cf5ee7c79da4ffd4a">invoke</a>(<a class="code" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;,</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;target,</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now,</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;<span class="comment">/*param*/</span>)<span class="keyword"> override </span>{</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">auto</span> positioncurve = std::dynamic_pointer_cast&lt;<a class="code" href="classopenage_1_1curve_1_1_continuous.xhtml">curve::Continuous&lt;util::Vector2d&gt;</a>&gt;(target);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">auto</span> speedcurve = state-&gt;ball-&gt;speed;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// get speed and position to insert new movement keyframe</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = speedcurve-&gt;get(now);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keyword">auto</span> pos = positioncurve-&gt;get(now);</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] *= -1.0;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        state-&gt;ball-&gt;speed-&gt;set_last(now, <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>);</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] == 0) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] &gt; 0) {</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                (state-&gt;display_boundary[1] - pos[1]) / <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1]</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            );</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;        }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] &lt; 0) {</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                pos[1] / -<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1]</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            );</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        }</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now + ty, pos + (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> * ty.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>()));</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a3e60c155c12ea17e0c149b3eca114f70">   82</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a3e60c155c12ea17e0c149b3eca114f70">predict_invoke_time</a>(<span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;target,</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                                      <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now)<span class="keyword"> override </span>{</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="keyword">auto</span> positioncurve = std::dynamic_pointer_cast&lt;<a class="code" href="classopenage_1_1curve_1_1_continuous.xhtml">curve::Continuous&lt;util::Vector2d&gt;</a>&gt;(target);</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = state-&gt;ball-&gt;speed-&gt;get(now);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <span class="keyword">auto</span> pos = positioncurve-&gt;get(now);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] == 0) {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;curve::time_t&gt;::max</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        }</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] &gt; 0) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[1] - pos[1]) / <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1]);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        }</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1] &lt; 0) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[1] / -<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[1]);</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        }</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">util::FString</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;WALL TY %f NOW %f, NOWTY %f &quot;</span>,</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    ty.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>(), now.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>(), (now + ty).to_double());</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        };</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">return</span> now + ty;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml">  117</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml">BallReflectPanel</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">DependencyEventClass</a> {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a4ff75fb0a97d1a13c02ed2c148125779">  119</a></span>&#160;    <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a4ff75fb0a97d1a13c02ed2c148125779">BallReflectPanel</a> ()</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        :</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_dependency_event_class.xhtml">DependencyEventClass</a>(<span class="stringliteral">&quot;demo.ball.reflect_panel&quot;</span>) {}</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a031ec32c576b33298fdb75dee692de8b">  123</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a031ec32c576b33298fdb75dee692de8b">setup_event</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;target,</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                     <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate)<span class="keyword"> override </span>{</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment">// FIXME dependency to a full ball object</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        <span class="comment">// then a change to any of the curves triggers the update.</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        target-&gt;depend_on(state-&gt;ball-&gt;position);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        target-&gt;depend_on(state-&gt;ball-&gt;speed);</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        target-&gt;depend_on(state-&gt;p1-&gt;position);</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        target-&gt;depend_on(state-&gt;p2-&gt;position);</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <span class="comment">// TODO add dependency to size of game area</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    }</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="comment">// FIXME we REALLY need dependencies to objects</span></div><div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#aa56d9723c3d16a001d71bca91fd08c70">  138</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#aa56d9723c3d16a001d71bca91fd08c70">invoke</a>(<a class="code" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;mgr,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;<span class="comment">/*target*/</span>,</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now,</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;<span class="comment">/*param*/</span>)<span class="keyword"> override </span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = state-&gt;ball-&gt;speed-&gt;get(now);</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">int</span> cnt = 0;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">util::FString</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;Panel hit [%i]&quot;</span>, ++cnt);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Panel hit at &quot;</span> &lt;&lt; now);</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> (pos[0] &lt;= 1 and</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &lt; 0 and</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            (pos[1] &lt; state-&gt;p1-&gt;position-&gt;get(now) - state-&gt;p1-&gt;size-&gt;get(now) / 2 or</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;             pos[1] &gt; state-&gt;p1-&gt;position-&gt;get(now) + state-&gt;p1-&gt;size-&gt;get(now) / 2)) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="comment">// ball missed the paddle of player 1</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;            <span class="keyword">auto</span> l = state-&gt;p1-&gt;lives-&gt;get(now);</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            l--;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;            state-&gt;p1-&gt;lives-&gt;set_last(now, l);</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, mgr, now);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pos[0] &gt;= state-&gt;display_boundary[0] - 1 and</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                 <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &gt; 0 and</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                 (pos[1] &lt; state-&gt;p2-&gt;position-&gt;get(now) - state-&gt;p2-&gt;size-&gt;get(now) / 2 or</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                  pos[1] &gt; state-&gt;p2-&gt;position-&gt;get(now) + state-&gt;p2-&gt;size-&gt;get(now) / 2)) {</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            <span class="comment">// ball missed the paddel of player 2</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keyword">auto</span> l = state-&gt;p2-&gt;lives-&gt;get(now);</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            l--;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            state-&gt;p2-&gt;lives-&gt;set_last(now, l);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;            <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, mgr, now);</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        }</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (pos[0] &gt;= state-&gt;display_boundary[0]- 1 || pos[0] &lt;= 1) {</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] *= -1;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            state-&gt;ball-&gt;speed-&gt;set_last(now, <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            state-&gt;ball-&gt;position-&gt;set_last(now, pos);</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        }</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &gt; 0) {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0]);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &lt; 0) {</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0]);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="keyword">auto</span> hit_pos = pos + <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> * ty.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>();</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &gt; 0) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;            hit_pos[0] = state-&gt;display_boundary[0];</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;        }</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;            hit_pos[0] = 0;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now + ty, hit_pos);</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;</div><div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a81a50b0cb9bf2c5148a355f02829c992">  215</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> <a class="code" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a81a50b0cb9bf2c5148a355f02829c992">predict_invoke_time</a>(<span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;target,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;                                      <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now)<span class="keyword"> override </span>{</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keyword">auto</span> positioncurve = std::dynamic_pointer_cast&lt;<a class="code" href="classopenage_1_1curve_1_1_continuous.xhtml">curve::Continuous&lt;util::Vector2d&gt;</a>&gt;(target);</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = state-&gt;ball-&gt;speed-&gt;get(now);</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;        <span class="keyword">auto</span> pos = positioncurve-&gt;get(now);</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] == 0)</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;            <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">std::numeric_limits&lt;curve::time_t&gt;::max</a>();</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &gt; 0) {</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0]);</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        }</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &lt; 0) {</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0]);</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        }</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;            <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">util::FString</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;PANEL REFLECT AT %f NEXT %f&quot;</span>, now.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>(), (now + ty).to_double());</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        }</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;predicting panel reflection at t=&quot;</span> &lt;&lt; now</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;                     &lt;&lt; <span class="stringliteral">&quot;, next reflection at t=&quot;</span> &lt;&lt; (now + ty));</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="keyword">auto</span> hit_pos = pos + <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> * ty.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>();</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a>[0] &gt; 0) {</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;            hit_pos[0] = state-&gt;display_boundary[0];</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        }</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;            hit_pos[0] = 0;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        }</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        <a class="code" href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a>(hit_pos[0] &gt;= 0, <span class="stringliteral">&quot;hit position x must be positive&quot;</span>);</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;        <span class="keywordflow">return</span> now + ty;</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;};</div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;</div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml">  266</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml">ResetGame</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1event_1_1_once_event_class.xhtml">OnceEventClass</a> {</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a16a85582aadff8d8b2f796730ea76ed0">  268</a></span>&#160;    <a class="code" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a16a85582aadff8d8b2f796730ea76ed0">ResetGame</a> ()</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;        :</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <a class="code" href="classopenage_1_1event_1_1_once_event_class.xhtml">OnceEventClass</a>(<span class="stringliteral">&quot;demo.reset&quot;</span>) {}</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a3f85b39bd4cd0b45ec66c681f5a3553e">  272</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a3f85b39bd4cd0b45ec66c681f5a3553e">setup_event</a>(<span class="keyword">const</span> std::shared_ptr&lt;Event&gt; &amp;<span class="comment">/*target*/</span>,</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;                     <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;<span class="comment">/*state*/</span>)<span class="keyword"> override </span>{}</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a0fa6b84fb64f30f1edd75d465876a2b3">  275</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a0fa6b84fb64f30f1edd75d465876a2b3">invoke</a>(<a class="code" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;<span class="comment">/*mgr*/</span>,</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;<span class="comment">/*target*/</span>,</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;                <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now,</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;                <span class="keyword">const</span> <a class="code" href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">EventClass::param_map</a> &amp;<span class="comment">/*param*/</span>)<span class="keyword"> override </span>{</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="comment">// Check if the condition still applies</span></div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        {</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">if</span> (pos[0] &gt; 0 &amp;&amp; pos[0] &lt; state-&gt;display_boundary[0]) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                <span class="comment">// the gamestate is still valid - there is no need to reset</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;                <span class="keywordflow">return</span>;</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            }</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;        <span class="comment">// move ball to the center</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now - <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(0.1),</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;                                        state-&gt;ball-&gt;position-&gt;get(now));</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now, state-&gt;display_boundary * 0.5);</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="comment">// move paddles to center</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        state-&gt;p1-&gt;position-&gt;set_last(now, state-&gt;display_boundary[1] / 2);</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        state-&gt;p2-&gt;position-&gt;set_last(now, state-&gt;display_boundary[1] / 2);</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordtype">float</span> dirx = (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 2) ? 1 : -1;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <span class="keywordtype">float</span> diry = (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 2) ? 1 : -1;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <span class="keyword">auto</span> init_speed = <a class="code" href="namespaceopenage_1_1util.xhtml#a5759baf587738b4365920f5b944b0088">util::Vector2d</a>(</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;            dirx * (10 + (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 100) / 4.f),</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;            diry * (0.3 + (<a class="code" href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">rng::random</a>() % 100) / 18.f)</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        );</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;        state-&gt;ball-&gt;speed-&gt;set_last(now, init_speed);</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keyword">auto</span> pos = state-&gt;ball-&gt;position-&gt;get(now);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;            <span class="keyword">static</span> <span class="keywordtype">int</span> cnt = 0;</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;            <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">util::FString</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>;</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;            <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.fmt(<span class="stringliteral">&quot;Reset. Speed %f | %f POS %f | %f [%i]&quot;</span>,</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;                    init_speed[0],</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;                    init_speed[1],</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;                    pos[0],</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;                    pos[1],</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;                    ++cnt);</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;            state-&gt;gui-&gt;log(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>);</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        }</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Game was reset.&quot;</span>);</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;        }</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> ty = 0;</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;        <span class="comment">// calculate the wall-hit-times</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        <span class="keywordflow">if</span> (init_speed[1] &gt; 0) {</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[1] - pos[1]) / init_speed[1]);</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        }</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (init_speed[1] &lt; 0) {</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[1] / -init_speed[1]);</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;            <span class="comment">// currently never happens, but this would be a non-vertically-moving ball</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;            <span class="comment">// fallback to calculating panel-hit-times</span></div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;            <span class="keywordflow">if</span> (init_speed[0] &gt; 0) {</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;                ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>((state-&gt;display_boundary[0] - pos[0]) / init_speed[0]);</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;            }</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;                ty = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(pos[0] / -init_speed[0]);</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;            }</div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;        }</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;</div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;        state-&gt;ball-&gt;position-&gt;set_last(now + ty, pos + init_speed * ty.<a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">to_double</a>());</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a33a2a9a5f92a673b2cef91dac21eab78">  354</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> <a class="code" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a33a2a9a5f92a673b2cef91dac21eab78">predict_invoke_time</a>(<span class="keyword">const</span> std::shared_ptr&lt;EventTarget&gt; &amp;<span class="comment">/*target*/</span>,</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;                                      <span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;<span class="comment">/*state*/</span>,</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;                                      <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;old_time)<span class="keyword"> override </span>{</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;        <span class="keywordflow">return</span> old_time;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;};</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;</div><div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a8667e80722a83c0f0ff29835d5d54baf">  362</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a8667e80722a83c0f0ff29835d5d54baf">Physics::init</a>(<span class="keyword">const</span> std::shared_ptr&lt;PongState&gt; &amp;gstate,</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                   <span class="keyword">const</span> std::shared_ptr&lt;Loop&gt; &amp;loop,</div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;                   <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now) {</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;    <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;</div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;    <span class="keywordflow">if</span> (not state-&gt;enable_gui) {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Physics initialization&quot;</span>);</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    }</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;BallReflectPanel&gt;());</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;BallReflectWall&gt;());</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;    loop-&gt;add_event_class(std::make_shared&lt;ResetGame&gt;());</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;    loop-&gt;create_event(<span class="stringliteral">&quot;demo.ball.reflect_wall&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    loop-&gt;create_event(<span class="stringliteral">&quot;demo.ball.reflect_panel&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;</div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;    <span class="comment">// FIXME once &quot;reset&quot;: deregister</span></div><div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;    <span class="comment">//reset(state, mgr, now);</span></div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;}</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a808f9e14e491c56f818471417ea08396">  383</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a808f9e14e491c56f818471417ea08396">Physics::process_input</a>(<span class="keyword">const</span> std::shared_ptr&lt;PongState&gt; &amp;state,</div><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                            <span class="keyword">const</span> std::shared_ptr&lt;PongPlayer&gt; &amp;player,</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;                            <span class="keyword">const</span> std::vector&lt;PongEvent&gt; &amp;events,</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;                            <span class="keyword">const</span> std::shared_ptr&lt;Loop&gt; &amp;mgr,</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;                            <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now) {</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="comment">// seconds into the future</span></div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    constexpr <span class="keyword">static</span> <span class="keyword">auto</span> predicted_movement_time = <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">curve::time_t::from_double</a>(5.0);</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="comment">// lines per second</span></div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;    constexpr <span class="keyword">static</span> <span class="keywordtype">double</span> movement_speed = 8.0;</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; evnt : events) {</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        <span class="comment">// Process only if the future has changed</span></div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        <span class="keywordflow">if</span> (player-&gt;state-&gt;get(now).state != evnt.state) {</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;            <span class="comment">// log the new input in the state curve</span></div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;            player-&gt;state-&gt;set_last(now, evnt);</div><div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;</div><div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;            <span class="comment">// if the state is active longer than predicted,</span></div><div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;            <span class="comment">// we have to extend the prediction!</span></div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;            <span class="keywordtype">bool</span> extend_previous_prediction = <span class="keyword">false</span>;</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;            <span class="keyword">auto</span> prev_state = player-&gt;state-&gt;get_previous(now);</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;            <span class="keywordflow">if</span> (prev_state and prev_state-&gt;second.state == evnt.state) {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;                extend_previous_prediction = <span class="keyword">true</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;            }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;            <span class="keywordflow">switch</span>(evnt.state) {</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">PongEvent::UP</a>:</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">PongEvent::DOWN</a>: {</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;                <span class="keywordtype">float</span> current_pos = player-&gt;position-&gt;get(now);</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;                <span class="keywordflow">if</span> (not extend_previous_prediction) {</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;                    <span class="comment">// create a keyframe for the new movement</span></div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;                    player-&gt;position-&gt;set_last(now, current_pos);</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;                    <span class="comment">// TODO: drop the intermediate keyframes</span></div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;                    <span class="comment">//       for position and speed.</span></div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;                }</div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;                <span class="keywordflow">switch</span> (evnt.state) {</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">PongEvent::UP</a>:</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;                    player-&gt;speed-&gt;set_last(now, -movement_speed);</div><div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;                <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">PongEvent::DOWN</a>:</div><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                    player-&gt;speed-&gt;set_last(now, movement_speed);</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;                <span class="keywordflow">default</span>:</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;                    <span class="comment">// never reached.</span></div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;                    <span class="keywordflow">break</span>;</div><div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;                }</div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;                <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> move_stop_guess = now + predicted_movement_time;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;                <span class="comment">// change the position by integrating the speed curve.</span></div><div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;                <span class="comment">// TODO: add native integral to curves.</span></div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;                <span class="keywordtype">float</span> new_pos = current_pos +</div><div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;                                (((player-&gt;speed-&gt;get(move_stop_guess) +</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;                                   player-&gt;speed-&gt;get(now)) / 2.0) *</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;                                 predicted_movement_time.to_double());</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;                <span class="comment">// if paddle will get out-of-bounds, calculate the bound hit time</span></div><div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;</div><div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;                <span class="comment">// TODO: add native key/value finding in range to curves</span></div><div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;                <span class="keywordflow">if</span> (new_pos &lt; 0) {</div><div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;                    move_stop_guess = now + (current_pos / movement_speed);</div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;                    new_pos = 0;</div><div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;                }</div><div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;</div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;                <span class="keywordflow">if</span> (new_pos &gt; state-&gt;display_boundary[1]) {</div><div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;                    move_stop_guess = now + ((state-&gt;display_boundary[1] - current_pos) / movement_speed);</div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;                    new_pos = state-&gt;display_boundary[1];</div><div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;                }</div><div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;</div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;                <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml">PongEvent</a> set_idle{evnt.<a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a6d9ff911f4cd25cd30d169378b7cfb5e">player</a>, <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">PongEvent::IDLE</a>};</div><div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;                player-&gt;state-&gt;set_last(move_stop_guess, set_idle);</div><div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;                player-&gt;speed-&gt;set_last(move_stop_guess, 0);</div><div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;                player-&gt;position-&gt;set_last(move_stop_guess, new_pos);</div><div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;</div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;                <span class="comment">// TODO: predict_reflect_panel(state, queue, now);</span></div><div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;            }</div><div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;</div><div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">PongEvent::IDLE</a>:</div><div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;                player-&gt;position-&gt;set_last(now, player-&gt;position-&gt;get(now));</div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;                player-&gt;speed-&gt;set_last(now, 0);</div><div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;</div><div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;            <span class="keywordflow">case</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26">PongEvent::START</a>:</div><div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(state, *mgr, now);</div><div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;</div><div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;                <span class="comment">//if (player-&gt;state-&gt;get(now).state == PongEvent::LOST) {</span></div><div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;                <span class="comment">//  state-&gt;ball.position-&gt;set_last(now, state.display_boundary * 0.5);</span></div><div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;                <span class="comment">//}</span></div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;                <span class="comment">//update_ball(state, now, init_recursion_limit);</span></div><div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;                <span class="comment">//break;</span></div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;            <span class="keywordflow">default</span>:</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;            }</div><div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;        }</div><div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    }</div><div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;}</div><div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div><div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;</div><div class="line"><a name="l00489"></a><span class="lineno"><a class="line" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">  489</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">Physics::reset</a>(<span class="keyword">const</span> std::shared_ptr&lt;State&gt; &amp;gstate,</div><div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;                    <a class="code" href="classopenage_1_1event_1_1_loop.xhtml">Loop</a> &amp;mgr,</div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;                    <span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_fixed_point.xhtml">curve::time_t</a> &amp;now) {</div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    <span class="keyword">auto</span> state = std::dynamic_pointer_cast&lt;PongState&gt;(gstate);</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    mgr.<a class="code" href="classopenage_1_1event_1_1_loop.xhtml#a345332e87684e73eeef16da46255882f">create_event</a>(<span class="stringliteral">&quot;demo.reset&quot;</span>, state-&gt;ball-&gt;position, state, now);</div><div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;}</div><div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;</div><div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;} <span class="comment">// openage::event::demo</span></div><div class="ttc" id="classopenage_1_1event_1_1demo_1_1_reset_game_xhtml_a3f85b39bd4cd0b45ec66c681f5a3553e"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a3f85b39bd4cd0b45ec66c681f5a3553e">openage::event::demo::ResetGame::setup_event</a></div><div class="ttdeci">void setup_event(const std::shared_ptr&lt; Event &gt; &amp;, const std::shared_ptr&lt; State &gt; &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00272">physics.cpp:272</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_xhtml_a81a50b0cb9bf2c5148a355f02829c992"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a81a50b0cb9bf2c5148a355f02829c992">openage::event::demo::BallReflectPanel::predict_invoke_time</a></div><div class="ttdeci">curve::time_t predict_invoke_time(const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;gstate, const curve::time_t &amp;now) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00215">physics.cpp:215</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml">openage::event::demo::BallReflectWall</a></div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00027">physics.cpp:27</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_event_class_1_1param__map_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_event_class_1_1param__map.xhtml">openage::event::EventClass::param_map</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00072">eventclass.h:72</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall_xhtml_a98f2cf74c7c5267db2364fa2529a2a2a"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a98f2cf74c7c5267db2364fa2529a2a2a">openage::event::demo::BallReflectWall::BallReflectWall</a></div><div class="ttdeci">BallReflectWall()</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00029">physics.cpp:29</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_dependency_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_dependency_event_class.xhtml">openage::event::DependencyEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00192">eventclass.h:192</a></div></div>
<div class="ttc" id="physics_8h_xhtml"><div class="ttname"><a href="physics_8h.xhtml">physics.h</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_reset_game_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml">openage::event::demo::ResetGame</a></div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00266">physics.cpp:266</a></div></div>
<div class="ttc" id="classopenage_1_1curve_1_1_continuous_xhtml"><div class="ttname"><a href="classopenage_1_1curve_1_1_continuous.xhtml">openage::curve::Continuous</a></div><div class="ttdef"><b>Definition:</b> <a href="continuous_8h_source.xhtml#l00020">continuous.h:20</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a6d9ff911f4cd25cd30d169378b7cfb5e"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a6d9ff911f4cd25cd30d169378b7cfb5e">openage::event::demo::PongEvent::player</a></div><div class="ttdeci">size_t player</div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00032">gamestate.h:32</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::attr_type::speed</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a483c36345c5b597c1626162bc96dc52c"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a483c36345c5b597c1626162bc96dc52c">openage::util::FixedPoint&lt; int64_t, 16 &gt;::from_double</a></div><div class="ttdeci">static constexpr FixedPoint from_double(double n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00192">fixed_point.h:192</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_xhtml_aa56d9723c3d16a001d71bca91fd08c70"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#aa56d9723c3d16a001d71bca91fd08c70">openage::event::demo::BallReflectPanel::invoke</a></div><div class="ttdeci">void invoke(Loop &amp;mgr, const std::shared_ptr&lt; EventTarget &gt; &amp;, const std::shared_ptr&lt; State &gt; &amp;gstate, const curve::time_t &amp;now, const EventClass::param_map &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00138">physics.cpp:138</a></div></div>
<div class="ttc" id="namespaceopenage_1_1rng_xhtml_ac3379af641e8c899794429fd6e8fa70a"><div class="ttname"><a href="namespaceopenage_1_1rng.xhtml#ac3379af641e8c899794429fd6e8fa70a">openage::rng::random</a></div><div class="ttdeci">uint64_t random()</div><div class="ttdef"><b>Definition:</b> <a href="global__rng_8cpp_source.xhtml#l00018">global_rng.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a5759baf587738b4365920f5b944b0088"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a5759baf587738b4365920f5b944b0088">openage::util::Vector2d</a></div><div class="ttdeci">Vector&lt; 2, double &gt; Vector2d</div><div class="ttdef"><b>Definition:</b> <a href="vector_8h_source.xhtml#l00225">vector.h:225</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml_ae20e8a0a86b80f8211fdf87477524f87"><div class="ttname"><a href="error_2error_8h.xhtml#ae20e8a0a86b80f8211fdf87477524f87">ENSURE</a></div><div class="ttdeci">#define ENSURE(...)</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00155">error.h:155</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_physics_xhtml_aaaafd5ac8b7a69517a6f26f9fa220984"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#aaaafd5ac8b7a69517a6f26f9fa220984">openage::event::demo::Physics::reset</a></div><div class="ttdeci">static void reset(const std::shared_ptr&lt; State &gt; &amp;, Loop &amp;mgr, const curve::time_t &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00489">physics.cpp:489</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa4d80ef707f224cf7055ac1c7fc5ea403">openage::event::demo::PongEvent::DOWN</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml_a3d55d1b8ecdb0fd4ff8e7e3da2598554"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml#a3d55d1b8ecdb0fd4ff8e7e3da2598554">openage::util::FixedPoint::to_double</a></div><div class="ttdeci">constexpr double to_double() const</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00263">fixed_point.h:263</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml">openage::event::demo::PongEvent</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00023">gamestate.h:23</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall_xhtml_a096aec2cf4cef743c6abc12e4a99240f"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a096aec2cf4cef743c6abc12e4a99240f">openage::event::demo::BallReflectWall::setup_event</a></div><div class="ttdeci">void setup_event(const std::shared_ptr&lt; Event &gt; &amp;evnt, const std::shared_ptr&lt; State &gt; &amp;gstate) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00031">physics.cpp:31</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_physics_xhtml_a8667e80722a83c0f0ff29835d5d54baf"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a8667e80722a83c0f0ff29835d5d54baf">openage::event::demo::Physics::init</a></div><div class="ttdeci">static void init(const std::shared_ptr&lt; PongState &gt; &amp;, const std::shared_ptr&lt; Loop &gt; &amp;mgr, const curve::time_t &amp;)</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00362">physics.cpp:362</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_xhtml_a031ec32c576b33298fdb75dee692de8b"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a031ec32c576b33298fdb75dee692de8b">openage::event::demo::BallReflectPanel::setup_event</a></div><div class="ttdeci">void setup_event(const std::shared_ptr&lt; Event &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;gstate) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00123">physics.cpp:123</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_once_event_class_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_once_event_class.xhtml">openage::event::OnceEventClass</a></div><div class="ttdef"><b>Definition:</b> <a href="eventclass_8h_source.xhtml#l00212">eventclass.h:212</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaab9eff9ad1c50ede6bf15f9dc46da201a">openage::event::demo::PongEvent::UP</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall_xhtml_a3e60c155c12ea17e0c149b3eca114f70"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a3e60c155c12ea17e0c149b3eca114f70">openage::event::demo::BallReflectWall::predict_invoke_time</a></div><div class="ttdeci">curve::time_t predict_invoke_time(const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;gstate, const curve::time_t &amp;now) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00082">physics.cpp:82</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml">openage::event::demo::BallReflectPanel</a></div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00117">physics.cpp:117</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_reset_game_xhtml_a16a85582aadff8d8b2f796730ea76ed0"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a16a85582aadff8d8b2f796730ea76ed0">openage::event::demo::ResetGame::ResetGame</a></div><div class="ttdeci">ResetGame()</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00268">physics.cpp:268</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_reset_game_xhtml_a33a2a9a5f92a673b2cef91dac21eab78"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a33a2a9a5f92a673b2cef91dac21eab78">openage::event::demo::ResetGame::predict_invoke_time</a></div><div class="ttdeci">curve::time_t predict_invoke_time(const std::shared_ptr&lt; EventTarget &gt; &amp;, const std::shared_ptr&lt; State &gt; &amp;, const curve::time_t &amp;old_time) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00354">physics.cpp:354</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_loop_xhtml"><div class="ttname"><a href="classopenage_1_1event_1_1_loop.xhtml">openage::event::Loop</a></div><div class="ttdef"><b>Definition:</b> <a href="event_2loop_8h_source.xhtml#l00032">loop.h:32</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1_loop_xhtml_a345332e87684e73eeef16da46255882f"><div class="ttname"><a href="classopenage_1_1event_1_1_loop.xhtml#a345332e87684e73eeef16da46255882f">openage::event::Loop::create_event</a></div><div class="ttdeci">std::weak_ptr&lt; Event &gt; create_event(const std::string &amp;name, const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;state, const curve::time_t &amp;reference_time, const EventClass::param_map &amp;params=EventClass::param_map({}))</div><div class="ttdef"><b>Definition:</b> <a href="loop_8cpp_source.xhtml#l00021">loop.cpp:21</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa28b496791c9c4dec421dec318d576c68">openage::event::demo::PongEvent::IDLE</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel_xhtml_a4ff75fb0a97d1a13c02ed2c148125779"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml#a4ff75fb0a97d1a13c02ed2c148125779">openage::event::demo::BallReflectPanel::BallReflectPanel</a></div><div class="ttdeci">BallReflectPanel()</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00119">physics.cpp:119</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_physics_xhtml_a808f9e14e491c56f818471417ea08396"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_physics.xhtml#a808f9e14e491c56f818471417ea08396">openage::event::demo::Physics::process_input</a></div><div class="ttdeci">void process_input(const std::shared_ptr&lt; PongState &gt; &amp;, const std::shared_ptr&lt; PongPlayer &gt; &amp;, const std::vector&lt; PongEvent &gt; &amp;input, const std::shared_ptr&lt; Loop &gt; &amp;mgr, const curve::time_t &amp;now)</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00383">physics.cpp:383</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_fixed_point_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_fixed_point.xhtml">openage::util::FixedPoint&lt; int64_t, 16 &gt;</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml">openage::util::FString</a></div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00270">stringformatter.h:270</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall_xhtml_a215ab77e1d0c301cf5ee7c79da4ffd4a"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml#a215ab77e1d0c301cf5ee7c79da4ffd4a">openage::event::demo::BallReflectWall::invoke</a></div><div class="ttdeci">void invoke(Loop &amp;, const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;gstate, const curve::time_t &amp;now, const EventClass::param_map &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00046">physics.cpp:46</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml">openage::event::demo</a></div><div class="ttdef"><b>Definition:</b> <a href="aicontroller_8cpp_source.xhtml#l00005">aicontroller.cpp:5</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_reset_game_xhtml_a0fa6b84fb64f30f1edd75d465876a2b3"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml#a0fa6b84fb64f30f1edd75d465876a2b3">openage::event::demo::ResetGame::invoke</a></div><div class="ttdeci">void invoke(Loop &amp;, const std::shared_ptr&lt; EventTarget &gt; &amp;, const std::shared_ptr&lt; State &gt; &amp;gstate, const curve::time_t &amp;now, const EventClass::param_map &amp;) override</div><div class="ttdef"><b>Definition:</b> <a href="physics_8cpp_source.xhtml#l00275">physics.cpp:275</a></div></div>
<div class="ttc" id="classopenage_1_1event_1_1demo_1_1_pong_event_xhtml_a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26"><div class="ttname"><a href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml#a9da408d681295db9e3f6632c4b673dcaa8b5086a6d55ac55b34228876b42a7a26">openage::event::demo::PongEvent::START</a></div><div class="ttdef"><b>Definition:</b> <a href="gamestate_8h_source.xhtml#l00026">gamestate.h:26</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_906fd80251564c07ab43a732fc1e9e78.xhtml">event</a></li><li class="navelem"><a class="el" href="dir_6197a954b4bd6d8383a8df145c55be91.xhtml">demo</a></li><li class="navelem"><a class="el" href="physics_8cpp.xhtml">physics.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
