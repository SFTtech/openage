<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::CSVCollection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1_c_s_v_collection.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classopenage_1_1util_1_1_c_s_v_collection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::CSVCollection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="csv_8h_source.xhtml">csv.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::CSVCollection:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_c_s_v_collection__coll__graph.svg" width="199" height="132"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aef170fc4b2d0f3806bd19a855ab9d3cd"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#aef170fc4b2d0f3806bd19a855ab9d3cd">csv_file_map_t</a> = std::unordered_map&lt; std::string, std::vector&lt; std::string &gt; &gt;</td></tr>
<tr class="separator:aef170fc4b2d0f3806bd19a855ab9d3cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aae99478db7d16d650eff5dd34a2194ca"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#aae99478db7d16d650eff5dd34a2194ca">CSVCollection</a> (const <a class="el" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;entryfile)</td></tr>
<tr class="separator:aae99478db7d16d650eff5dd34a2194ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a935638b7068bf067e0f9f9d879806d7b"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#a935638b7068bf067e0f9f9d879806d7b">~CSVCollection</a> ()=default</td></tr>
<tr class="separator:a935638b7068bf067e0f9f9d879806d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a687817b834b18f90124915261c3752a8"><td class="memTemplParams" colspan="2">template&lt;class lineformat &gt; </td></tr>
<tr class="memitem:a687817b834b18f90124915261c3752a8"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; lineformat &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#a687817b834b18f90124915261c3752a8">read</a> (const std::string &amp;<a class="el" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>) const</td></tr>
<tr class="separator:a687817b834b18f90124915261c3752a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd8690a2db783f6d55a7ef374f6db782"><td class="memTemplParams" colspan="2">template&lt;typename lineformat &gt; </td></tr>
<tr class="memitem:abd8690a2db783f6d55a7ef374f6db782"><td class="memTemplItemLeft" align="right" valign="top">std::vector&lt; lineformat &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#abd8690a2db783f6d55a7ef374f6db782">get_data</a> (const std::string &amp;<a class="el" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>) const</td></tr>
<tr class="separator:abd8690a2db783f6d55a7ef374f6db782"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ae98e255e27b3a106aca1d24f591a8538"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#aef170fc4b2d0f3806bd19a855ab9d3cd">csv_file_map_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a></td></tr>
<tr class="separator:ae98e255e27b3a106aca1d24f591a8538"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Collection of multiple csv files. Read from a packed csv that contains all the data.</p>
<p>Then, data can be read recursively. </p>

<p class="definition">Definition at line <a class="el" href="csv_8h_source.xhtml#l00028">28</a> of file <a class="el" href="csv_8h_source.xhtml">csv.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="aef170fc4b2d0f3806bd19a855ab9d3cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef170fc4b2d0f3806bd19a855ab9d3cd">&#9670;&nbsp;</a></span>csv_file_map_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#aef170fc4b2d0f3806bd19a855ab9d3cd">openage::util::CSVCollection::csv_file_map_t</a> =  std::unordered_map&lt;std::string, std::vector&lt;std::string&gt; &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Type for storing csv data: {filename: [line, ...]}. </p>

<p class="definition">Definition at line <a class="el" href="csv_8h_source.xhtml#l00035">35</a> of file <a class="el" href="csv_8h_source.xhtml">csv.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="aae99478db7d16d650eff5dd34a2194ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aae99478db7d16d650eff5dd34a2194ca">&#9670;&nbsp;</a></span>CSVCollection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::CSVCollection::CSVCollection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1util_1_1_path.xhtml">Path</a> &amp;&#160;</td>
          <td class="paramname"><em>entryfile</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Initialize the collection by reading the given file. This file must contain the data that this collection is made up of. </p>

<p class="definition">Definition at line <a class="el" href="csv_8cpp_source.xhtml#l00016">16</a> of file <a class="el" href="csv_8cpp_source.xhtml">csv.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;                                                       {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keyword">auto</span> file = entryfile_path.open();</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a> &lt;&lt; <span class="stringliteral">&quot;Loading csv collection: &quot;</span> &lt;&lt; file);</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// The file format is defined in:</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="comment">// openage/convert/dataformat/data_definition.py</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// example:</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">//</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="comment">// ### some/folder/and/filename.docx</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="comment">// # irrelevant</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="comment">// # comments</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="comment">// data,stuff,moar,bla</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="comment">// store the currently read file name</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    std::string current_file;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;line : file.get_lines()) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="comment">// a new file starts:</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        <span class="keywordflow">if</span> (line[0] == <span class="charliteral">&#39;#&#39;</span> and</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            line[1] == <span class="charliteral">&#39;#&#39;</span> and</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;            line[2] == <span class="charliteral">&#39;#&#39;</span> and</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            line[3] == <span class="charliteral">&#39; &#39;</span>) {</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;            <span class="comment">// remove the &quot;### &quot;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            current_file = (<a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a>.erase(0, 4));</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <span class="comment">// create a vector to put lines in</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a>.emplace(current_file, std::vector&lt;std::string&gt;{});</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        }</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a>.empty() or <a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a>[0] == <span class="charliteral">&#39;#&#39;</span>) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            }</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(current_file.size() &gt; 0)) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="comment">// add line to the current file linelist</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;                this-&gt;<a class="code" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a>.at(current_file).push_back(line);</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            }</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                <span class="keywordflow">throw</span> Error{</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;                    <a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;csv collection content encountered &quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;without known target in &quot;</span> &lt;&lt; entryfile_path</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;, linedata: &quot;</span> &lt;&lt; <a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                };</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            }</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a> &lt;&lt; <span class="stringliteral">&quot;Loaded multi-csv file: &quot;</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;             &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a>.size() &lt;&lt; <span class="stringliteral">&quot; sub-files&quot;</span>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_c_s_v_collection_xhtml_ae98e255e27b3a106aca1d24f591a8538"><div class="ttname"><a href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">openage::util::CSVCollection::data</a></div><div class="ttdeci">csv_file_map_t data</div><div class="ttdef"><b>Definition:</b> <a href="csv_8h_source.xhtml#l00130">csv.h:130</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="message_8h_xhtml_ae1103fea1e1b3c41ca3322d5389f7162"><div class="ttname"><a href="message_8h.xhtml#ae1103fea1e1b3c41ca3322d5389f7162">INFO</a></div><div class="ttdeci">#define INFO</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00177">message.h:177</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474"><div class="ttname"><a href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">openage::attack_formation::line</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="message_8h_xhtml_a49606be7356624568932ec81c0d429f4"><div class="ttname"><a href="message_8h.xhtml#a49606be7356624568932ec81c0d429f4">DBG</a></div><div class="ttdeci">#define DBG</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00176">message.h:176</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="csv_8h_source.xhtml#l00130">data</a>, <a class="el" href="message_8h_source.xhtml#l00176">DBG</a>, <a class="el" href="message_8h_source.xhtml#l00179">ERR</a>, <a class="el" href="message_8h_source.xhtml#l00177">INFO</a>, <a class="el" href="compiler_8h_source.xhtml#l00052">likely</a>, <a class="el" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">openage::line</a>, <a class="el" href="log_8cpp_source.xhtml#l00013">openage::log::log()</a>, and <a class="el" href="util_2path_8cpp_source.xhtml#l00111">openage::util::Path::open()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_c_s_v_collection_aae99478db7d16d650eff5dd34a2194ca_cgraph.svg" width="100%" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a935638b7068bf067e0f9f9d879806d7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a935638b7068bf067e0f9f9d879806d7b">&#9670;&nbsp;</a></span>~CSVCollection()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual openage::util::CSVCollection::~CSVCollection </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="abd8690a2db783f6d55a7ef374f6db782"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd8690a2db783f6d55a7ef374f6db782">&#9670;&nbsp;</a></span>get_data()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename lineformat &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;lineformat&gt; openage::util::CSVCollection::get_data </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Parse the data from one file in the map. </p>

<p class="definition">Definition at line <a class="el" href="csv_8h_source.xhtml#l00089">89</a> of file <a class="el" href="csv_8h_source.xhtml">csv.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                                                                    {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="keywordtype">size_t</span> line_count = 0;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        std::vector&lt;lineformat&gt; ret;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment">// locate the data in the collection</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="keyword">auto</span> it = this-&gt;<a class="code" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a>.find(<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">if</span> (it != std::end(this-&gt;<a class="code" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">data</a>)) {</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            <span class="keyword">const</span> std::vector&lt;std::string&gt; &amp;lines = it-&gt;second;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;line : lines) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;                line_count += 1;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                lineformat current_line_data;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;                <span class="comment">// use the line copy to fill the current line struct.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                <span class="keywordtype">int</span> error_column = current_line_data.fill(line);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                <span class="keywordflow">if</span> (error_column != -1) {</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;                    <span class="keywordflow">throw</span> Error{</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                        <a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;Failed to read CSV file: &quot;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                        &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a> &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; line_count &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; error_column</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;                        &lt;&lt; <span class="stringliteral">&quot;: error parsing &quot;</span> &lt;&lt; <a class="code" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">line</a></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                    };</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                }</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                ret.push_back(current_line_data);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;            <span class="keywordflow">throw</span> Error{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                <a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;File was not found in csv cache: &#39;&quot;</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                    &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a> &lt;&lt; <span class="stringliteral">&quot;&#39;&quot;</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            };</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        }</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_c_s_v_collection_xhtml_ae98e255e27b3a106aca1d24f591a8538"><div class="ttname"><a href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#ae98e255e27b3a106aca1d24f591a8538">openage::util::CSVCollection::data</a></div><div class="ttdeci">csv_file_map_t data</div><div class="ttdef"><b>Definition:</b> <a href="csv_8h_source.xhtml#l00130">csv.h:130</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474"><div class="ttname"><a href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">openage::attack_formation::line</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="csv_8h_source.xhtml#l00130">data</a>, <a class="el" href="message_8h_source.xhtml#l00179">ERR</a>, <a class="el" href="util_2path_8cpp_source.xhtml#l00364">openage::util::filename()</a>, and <a class="el" href="namespaceopenage.xhtml#a0093da9e88fad4b564ffa3c2fed20f20a6438c669e0d0de98e6929c2cc0fac474">openage::line</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_c_s_v_collection_abd8690a2db783f6d55a7ef374f6db782_cgraph.svg" width="399" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a687817b834b18f90124915261c3752a8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a687817b834b18f90124915261c3752a8">&#9670;&nbsp;</a></span>read()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class lineformat &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;lineformat&gt; openage::util::CSVCollection::read </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>filename</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This function is the entry point to load the whole file tree recursively.</p>
<p>Should be called again from the .recurse() method of the struct.</p>
<p>The internal flow is as follows:</p><ul>
<li>read entries of the given files (call to the generated field parsers (the fill function))</li>
<li>then, recurse into referenced subdata entries (this implementation is generated)</li>
<li>from there, reach this function again to read each subdata entry. </li>
</ul>

<p class="definition">Definition at line <a class="el" href="csv_8h_source.xhtml#l00059">59</a> of file <a class="el" href="csv_8h_source.xhtml">csv.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                                                                {</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="comment">// first read the content from the data</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <span class="keyword">auto</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = this-&gt;get_data&lt;lineformat&gt;(<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        std::string dir = <a class="code" href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">dirname</a>(<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordtype">size_t</span> line_count = 0;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        <span class="comment">// then recurse into each subdata entry.</span></div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;entry : <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            line_count += 1;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="keywordflow">if</span> (not entry.recurse(*<span class="keyword">this</span>, dir)) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                <span class="keywordflow">throw</span> Error{</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                    <a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>)</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;                    &lt;&lt; <span class="stringliteral">&quot;Failed to read follow-up files for &quot;</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                    &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a> &lt;&lt; <span class="stringliteral">&quot;:&quot;</span> &lt;&lt; line_count</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                };</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            }</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    }</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a954be5116f7af5633dbbc50bac26b0a8"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a954be5116f7af5633dbbc50bac26b0a8">openage::util::dirname</a></div><div class="ttdeci">std::string dirname(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00374">path.cpp:374</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="util_2path_8cpp_source.xhtml#l00374">openage::util::dirname()</a>, <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log::err()</a>, <a class="el" href="util_2path_8cpp_source.xhtml#l00364">openage::util::filename()</a>, <a class="el" href="message_8h_source.xhtml#l00171">MSG</a>, and <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing::result()</a>.</p>

<p class="reference">Referenced by <a class="el" href="csv_8h_source.xhtml#l00157">openage::util::csv_subdata&lt; lineformat &gt;::read()</a>, <a class="el" href="exportable_8py_source.xhtml#l00182">openage.convert.dataformat.exportable.Exportable::read()</a>, and <a class="el" href="peresource_8py_source.xhtml#l00138">openage.convert.peresource.StringLiteral::readall()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_c_s_v_collection_a687817b834b18f90124915261c3752a8_cgraph.svg" width="615" height="190"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_c_s_v_collection_a687817b834b18f90124915261c3752a8_icgraph.svg" width="100%" height="414"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="ae98e255e27b3a106aca1d24f591a8538"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae98e255e27b3a106aca1d24f591a8538">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml#aef170fc4b2d0f3806bd19a855ab9d3cd">csv_file_map_t</a> openage::util::CSVCollection::data</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="csv_8h_source.xhtml#l00130">130</a> of file <a class="el" href="csv_8h_source.xhtml">csv.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="content__snippet_8py_source.xhtml#l00127">openage.convert.dataformat.content_snippet.ContentSnippet::__eq__()</a>, <a class="el" href="struct__snippet_8py_source.xhtml#l00095">openage.convert.dataformat.struct_snippet.StructSnippet::__hash__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00096">openage.convert.dataformat.content_snippet.ContentSnippet::__hash__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00140">openage.convert.dataformat.content_snippet.ContentSnippet::__repr__()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00129">openage.convert.dataformat.data_definition.DataDefinition::__str__()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00151">openage.convert.dataformat.content_snippet.ContentSnippet::__str__()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00127">openage.convert.dataformat.data_formatter.DataFormatter::add_data()</a>, <a class="el" href="csv_8cpp_source.xhtml#l00016">CSVCollection()</a>, <a class="el" href="data__formatter_8py_source.xhtml#l00170">openage.convert.dataformat.data_formatter.DataFormatter::export()</a>, <a class="el" href="data__definition_8py_source.xhtml#l00037">openage.convert.dataformat.data_definition.DataDefinition::generate_csv()</a>, <a class="el" href="content__snippet_8py_source.xhtml#l00045">openage.convert.dataformat.content_snippet.ContentSnippet::get_data()</a>, <a class="el" href="texture_8py_source.xhtml#l00078">openage.convert.texture.TextureImage::get_data()</a>, <a class="el" href="csv_8h_source.xhtml#l00089">get_data()</a>, <a class="el" href="texture_8py_source.xhtml#l00075">openage.convert.texture.TextureImage::get_pil_image()</a>, and <a class="el" href="peresource_8py_source.xhtml#l00168">openage.convert.peresource.PEResources::read_directory()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="csv_8h_source.xhtml">csv.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="csv_8cpp_source.xhtml">csv.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1_c_s_v_collection.xhtml">CSVCollection</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
