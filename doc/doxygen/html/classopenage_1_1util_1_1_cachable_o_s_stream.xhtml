<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::CachableOSStream Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1_cachable_o_s_stream.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1util_1_1_cachable_o_s_stream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::CachableOSStream Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="stringformatter_8h_source.xhtml">stringformatter.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::CachableOSStream:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_cachable_o_s_stream__coll__graph.svg" width="343" height="583"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af5a5b6f793311c523e1aee1a354e73ff"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a> ()</td></tr>
<tr class="separator:af5a5b6f793311c523e1aee1a354e73ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acff1e0e6a81b08fac82788f921e677b7"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#acff1e0e6a81b08fac82788f921e677b7">CachableOSStream</a> (std::string &amp;output)</td></tr>
<tr class="separator:acff1e0e6a81b08fac82788f921e677b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9d7710f8703f4dbba1b65d8b02e84036"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">acquire</a> (std::string &amp;output)</td></tr>
<tr class="separator:a9d7710f8703f4dbba1b65d8b02e84036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad770ce91fe372bb8069e06ea06293f85"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">release</a> (<a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *cs)</td></tr>
<tr class="separator:ad770ce91fe372bb8069e06ea06293f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a286e7e1b4c5d5340c8bc35f87660f621"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml">ExternalOStringStream</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a></td></tr>
<tr class="separator:a286e7e1b4c5d5340c8bc35f87660f621"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a5b3cdc213039012cd3064b613a59ab94"><td class="memItemLeft" align="right" valign="top">std::atomic_flag&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">flag</a> = ATOMIC_FLAG_INIT</td></tr>
<tr class="separator:a5b3cdc213039012cd3064b613a59ab94"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Designed for usage by <a class="el" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a>.</p>
<p>The problem with iostreams, including <a class="el" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml">ExternalOStringStream</a>, is that they use lots of memory, and are quite slow to construct, due to some pesky implementation details.</p>
<p>This class fixes this by keeping a reservoir of such objects, and providing access to them via <a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">acquire()</a>, in a thread-safe manner. If the cache is exhausted, new objects are constructed on the heap as needed.</p>
<p><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">release()</a> makes a cached object available for acquiring again (cache) or destroys it (heap). </p>

<p class="definition">Definition at line <a class="el" href="stringformatter_8h_source.xhtml#l00032">32</a> of file <a class="el" href="stringformatter_8h_source.xhtml">stringformatter.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af5a5b6f793311c523e1aee1a354e73ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5a5b6f793311c523e1aee1a354e73ff">&#9670;&nbsp;</a></span>CachableOSStream() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::CachableOSStream::CachableOSStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="stringformatter_8cpp_source.xhtml#l00011">11</a> of file <a class="el" href="stringformatter_8cpp_source.xhtml">stringformatter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{}</div></div><!-- fragment -->
</div>
</div>
<a id="acff1e0e6a81b08fac82788f921e677b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acff1e0e6a81b08fac82788f921e677b7">&#9670;&nbsp;</a></span>CachableOSStream() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::util::CachableOSStream::CachableOSStream </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>output</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calls stream.use_with(output); for use by heap objects. </p>

<p class="definition">Definition at line <a class="el" href="stringformatter_8cpp_source.xhtml#l00014">14</a> of file <a class="el" href="stringformatter_8cpp_source.xhtml">stringformatter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    :</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a>{} {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a>.<a class="code" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml#aa35d807fa9bc56758974bbe602bf1a8e">use_with</a>(output);</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1_external_o_string_stream_xhtml_aa35d807fa9bc56758974bbe602bf1a8e"><div class="ttname"><a href="classopenage_1_1util_1_1_external_o_string_stream.xhtml#aa35d807fa9bc56758974bbe602bf1a8e">openage::util::ExternalOStringStream::use_with</a></div><div class="ttdeci">void use_with(std::string &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="externalsstream_8h_source.xhtml#l00054">externalsstream.h:54</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_af5a5b6f793311c523e1aee1a354e73ff"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">openage::util::CachableOSStream::CachableOSStream</a></div><div class="ttdeci">CachableOSStream()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00011">stringformatter.cpp:11</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a286e7e1b4c5d5340c8bc35f87660f621"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">openage::util::CachableOSStream::stream</a></div><div class="ttdeci">ExternalOStringStream stream</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00034">stringformatter.h:34</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9d7710f8703f4dbba1b65d8b02e84036"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d7710f8703f4dbba1b65d8b02e84036">&#9670;&nbsp;</a></span>acquire()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> * openage::util::CachableOSStream::acquire </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>output</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns a brand-new(*) <a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> object. Origin may vary (static internal cache, heap allocation).</p>
<p>After you're done, pass the pointer to <a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">release()</a>.</p>
<p>(*) Disclaimer: Object might not actually be brand-new.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">output</td><td>The string object that the stream should output its data to. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="stringformatter_8cpp_source.xhtml#l00022">22</a> of file <a class="el" href="stringformatter_8cpp_source.xhtml">stringformatter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;                                                             {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keyword">static</span> std::array&lt;CachableOSStream, 128&gt; cache;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="comment">// Find an available cache element.</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">for</span> (<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a> &amp;elem : cache) {</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">if</span> (elem.flag.test_and_set() == <span class="keyword">false</span>) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;            elem.stream.use_with(output);</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;            <span class="keywordflow">return</span> &amp;elem;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        }</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="comment">// All cached objects are currently in use... that probably means that</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// your code is broken.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// Anyways, have fun with your dynamically-allocated object.</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="comment">// \todo Print a warning debug message about this?</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// then again, printing a log message about the logging system being</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="comment">// overloaded might not be the most clever idea.</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a>{output};</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_af5a5b6f793311c523e1aee1a354e73ff"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">openage::util::CachableOSStream::CachableOSStream</a></div><div class="ttdeci">CachableOSStream()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00011">stringformatter.cpp:11</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="stringformatter_8h_source.xhtml#l00034">stream</a>, and <a class="el" href="externalsstream_8h_source.xhtml#l00054">openage::util::ExternalOStringStream::use_with()</a>.</p>

<p class="reference">Referenced by <a class="el" href="stringformatter_8h_source.xhtml#l00234">openage::util::StringFormatter&lt; Formatter &gt;::ensure_stream_obj()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_cachable_o_s_stream_a9d7710f8703f4dbba1b65d8b02e84036_cgraph.svg" width="474" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_cachable_o_s_stream_a9d7710f8703f4dbba1b65d8b02e84036_icgraph.svg" width="498" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<a id="ad770ce91fe372bb8069e06ea06293f85"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad770ce91fe372bb8069e06ea06293f85">&#9670;&nbsp;</a></span>release()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::util::CachableOSStream::release </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *&#160;</td>
          <td class="paramname"><em>cs</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Resets the stream to a brand-new state, and clears the flag.</p>
<p>no-op if cs is nullptr. </p>

<p class="definition">Definition at line <a class="el" href="stringformatter_8cpp_source.xhtml#l00044">44</a> of file <a class="el" href="stringformatter_8cpp_source.xhtml">stringformatter.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;                                                   {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> (cs == <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="comment">// std::atomic_flag doesn&#39;t have a simple way of getting the truth</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="comment">// value, so we have to do a &quot;full&quot; test_and_set() instead,</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="comment">// even though thread-safety is not a concern here.</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">if</span> (cs-&gt;flag.test_and_set()) {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        cs-&gt;stream.clear();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        cs-&gt;flag.clear();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="comment">// test_and_set returned false -&gt; the flag was not set.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="comment">// This is because the element was not acquired from the cache,</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="comment">// but instead dynamically allocated. de-alloc it.</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="keyword">delete</span> cs;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div></div><!-- fragment -->
<p class="reference">References <a class="el" href="stringformatter_8h_source.xhtml#l00074">flag</a>, and <a class="el" href="stringformatter_8h_source.xhtml#l00034">stream</a>.</p>

<p class="reference">Referenced by <a class="el" href="stringformatter_8h_source.xhtml#l00106">openage::util::StringFormatter&lt; Formatter &gt;::~StringFormatter()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1_cachable_o_s_stream_ad770ce91fe372bb8069e06ea06293f85_icgraph.svg" width="486" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a5b3cdc213039012cd3064b613a59ab94"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b3cdc213039012cd3064b613a59ab94">&#9670;&nbsp;</a></span>flag</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::atomic_flag openage::util::CachableOSStream::flag = ATOMIC_FLAG_INIT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>true if all of the following are true:</p><ul>
<li>object is part of a larger cache</li>
<li>object is currently in use (-&gt; unavailable) <a href="http://en.cppreference.com/w/cpp/atomic/ATOMIC_FLAG_INIT">http://en.cppreference.com/w/cpp/atomic/ATOMIC_FLAG_INIT</a> <a href="https://stackoverflow.com/questions/24437396/stdatomic-flag-as-member-variable">https://stackoverflow.com/questions/24437396/stdatomic-flag-as-member-variable</a> </li>
</ul>

<p class="definition">Definition at line <a class="el" href="stringformatter_8h_source.xhtml#l00074">74</a> of file <a class="el" href="stringformatter_8h_source.xhtml">stringformatter.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="stringformatter_8cpp_source.xhtml#l00044">release()</a>.</p>

</div>
</div>
<a id="a286e7e1b4c5d5340c8bc35f87660f621"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a286e7e1b4c5d5340c8bc35f87660f621">&#9670;&nbsp;</a></span>stream</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml">ExternalOStringStream</a> openage::util::CachableOSStream::stream</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="stringformatter_8h_source.xhtml#l00034">34</a> of file <a class="el" href="stringformatter_8h_source.xhtml">stringformatter.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="stringformatter_8cpp_source.xhtml#l00022">acquire()</a>, <a class="el" href="stringformatter_8h_source.xhtml#l00136">openage::util::StringFormatter&lt; Formatter &gt;::operator&lt;&lt;()</a>, <a class="el" href="stream_8py_source.xhtml#l00130">openage.util.filelike.stream.StreamFragment::read()</a>, <a class="el" href="stringformatter_8cpp_source.xhtml#l00044">release()</a>, and <a class="el" href="stringformatter_8h_source.xhtml#l00217">openage::util::StringFormatter&lt; Formatter &gt;::reset_flags()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="stringformatter_8h_source.xhtml">stringformatter.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/<a class="el" href="stringformatter_8cpp_source.xhtml">stringformatter.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
