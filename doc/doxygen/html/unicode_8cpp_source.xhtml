<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/util/unicode.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('unicode_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">unicode.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="unicode_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2013-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="unicode_8h.xhtml">unicode.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ae33f30385d0dd3708f7465705c9a73de">   10</a></span>&#160;<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ae33f30385d0dd3708f7465705c9a73de">utf8_decoder::utf8_decoder</a>() {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#acca7311eed2d83530c6ae78e73132d31">reset</a>();</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1utf8__decoder.xhtml#acca7311eed2d83530c6ae78e73132d31">   14</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#acca7311eed2d83530c6ae78e73132d31">utf8_decoder::reset</a>() {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = -1;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 0;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ad74a496758770d9f1be27e9b3fec4dd0">   19</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ad74a496758770d9f1be27e9b3fec4dd0">utf8_decoder::feed</a>(<span class="keywordtype">char</span> c) {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <span class="keywordflow">if</span> ((c &amp; (1 &lt;&lt; 7)) == 0) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;        <span class="comment">// single-byte character</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a>) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            <span class="comment">// successful re-synchronization</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            <span class="comment">// (current multi-byte character discarded)</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;            <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        }</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 0;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = c;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (c &amp; (1 &lt;&lt; 6)) {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a>) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <span class="comment">// successful re-synchronization</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;            <span class="comment">// (current multi-byte character discarded)</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;            <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="comment">// beginning of a multi-byte character</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">if</span> ((c &amp; (1 &lt;&lt; 5)) == 0) {</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;            <span class="comment">// 2-byte character</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 1;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = c &amp; ((1 &lt;&lt; 5) - 1);</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((c &amp; (1 &lt;&lt; 4)) == 0) {</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;            <span class="comment">// 3-byte character</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 2;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = c &amp; ((1 &lt;&lt; 4) - 1);</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((c &amp; (1 &lt;&lt; 3)) == 0) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="comment">// 4-byte character</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 3;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = c &amp; ((1 &lt;&lt; 3) - 1);</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="comment">// no 5- or 6-byte characters exist in utf8</span></div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> = 0;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;            <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = -1;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        }</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <span class="comment">// inside a multi-byte character</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <span class="keywordflow">if</span> (!<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a>) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            <span class="comment">// we expected the start of a new character</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">remaining</a> -= 1;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> = (<a class="code" href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">out</a> &lt;&lt; 6) | (c &amp; ((1 &lt;&lt; 6) - 1));</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#a3e9f9bfa57d843330bd6d4bf85397433">   72</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a3e9f9bfa57d843330bd6d4bf85397433">utf8_decode</a>(<span class="keyword">const</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> *s, <span class="keywordtype">size_t</span> len, int32_t *outbuf) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">size_t</span> advance;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordtype">wchar_t</span> w;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a> = 0;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keywordflow">while</span> (len &gt; 0) {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="keywordflow">if</span> (s[0] &lt; 0x80) {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            <span class="comment">// 1-byte (ASCII) character</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;            w = *s;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            advance = 1;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (len &gt;= 2 &amp;&amp; s[0] &gt;= 0xc2 &amp;&amp; s[0] &lt;= 0xdf &amp;&amp; (s[1] &amp; 0xc0) == 0x80) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;            <span class="comment">// 2-byte character</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;            w = ((s[0] &amp; 0x1f) &lt;&lt; 6) | (s[1] &amp; 0x3f);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;            advance = 2;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (len &gt;= 3 &amp;&amp;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;              ((s[0] == 0xe0  &amp;&amp; s[1] &gt;= 0xa0 &amp;&amp; s[1] &lt;= 0xbf)</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            || (s[0] &gt;= 0xe1 &amp;&amp; s[0] &lt;= 0xec &amp;&amp; s[1] &gt;= 0x80 &amp;&amp; s[1] &lt;= 0xbf)</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            || (s[0] == 0xed &amp;&amp; s[1] &gt;= 0x80 &amp;&amp; s[1] &lt;= 0x9f)</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            || (s[0] &gt;= 0xee &amp;&amp; s[0] &lt;= 0xef &amp;&amp; s[1] &gt;= 0x80 &amp;&amp; s[1] &lt;= 0xbf))</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;            &amp;&amp; (s[2] &amp; 0xc0) == 0x80) {</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            <span class="comment">// 3-byte character</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            w = ((s[0] &amp; 0x0f) &lt;&lt; 12) | ((s[1] &amp; 0x3f) &lt;&lt; 6) | (s[2] &amp; 0x3f);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            advance = 3;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (len &gt;= 4 &amp;&amp;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;              ((s[0] == 0xf0 &amp;&amp; s[1] &gt;= 0x90 &amp;&amp; s[1] &lt;= 0xbf)</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            || (s[0] &gt;= 0xf1 &amp;&amp; s[0] &lt;= 0xf3 &amp;&amp; s[1] &gt;= 0x80 &amp;&amp; s[1] &lt;= 0xbf)</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;            || (s[0] == 0xf4 &amp;&amp; s[1] &gt;= 0x80 &amp;&amp; s[1] &lt;= 0x8f))</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;            &amp;&amp; (s[2] &amp; 0xc0) == 0x80</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;            &amp;&amp; (s[3] &amp; 0xc0) == 0x80) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;            <span class="comment">// 4-byte character</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            w = ((s[0] &amp; 0x07) &lt;&lt; 18) | ((s[1] &amp; 0x3f) &lt;&lt; 12) | ((s[2] &amp; 0x3f) &lt;&lt; 6) | (s[3] &amp; 0x3f);</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;            advance = 4;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="comment">// decoding error; try with next byte</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;            w = 0xfffd;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            advance = 1;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        len -= advance;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        s += advance;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        *outbuf++ = w;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>++;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#aed7ef0b5ccf0d22a6329396d9a59f671">  120</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1util.xhtml#aed7ef0b5ccf0d22a6329396d9a59f671">utf8_encode</a>(<span class="keywordtype">int</span> cp, <span class="keywordtype">char</span> *outbuf) {</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">if</span> (cp &lt; 0) {</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <span class="comment">// illegal codepoint (negative)</span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        outbuf[0] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &lt; 0x80) {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        outbuf[0] = cp;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        outbuf[1] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &lt; 0x800) {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        outbuf[2] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        outbuf[1] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        outbuf[0] = 0xc0 | cp;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &lt; 0x10000) {</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        outbuf[3] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        outbuf[2] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        outbuf[1] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        outbuf[0] = 0xe0 | cp;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">return</span> 3;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (cp &lt; 0x200000) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        outbuf[4] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        outbuf[3] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        outbuf[2] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        outbuf[1] = 0x80 | (cp &amp; 0x3f); cp &gt;&gt;= 6;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        outbuf[0] = 0xf0 | cp;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="comment">// illegal codepoint: unicode is only defined up to 0x1fffff</span></div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        outbuf[0] = <span class="charliteral">&#39;\0&#39;</span>;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> 0;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#a5519d25810f698275993214ce79016c7">  154</a></span>&#160;<span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a5519d25810f698275993214ce79016c7">utf8_last_char_size</a>(<span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordtype">int</span> r = 0;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">int</span> i = <a class="code" href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">strlen</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) - 1;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">while</span> ((i &gt;= 0) &amp;&amp; (<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>[i] &amp; 0x80) &amp;&amp; !(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>[i] &amp; 0x40)) {</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        i--;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        r++;</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">if</span> (i &gt;= 0) {</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        r++;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    }</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">return</span> r;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util.xhtml#a82a1e7bf14b6f49be2d5fe4ec89f920e">  167</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1util.xhtml#a82a1e7bf14b6f49be2d5fe4ec89f920e">utf8_pop_back</a>(std::string &amp;<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>) {</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.erase(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>.size() - <a class="code" href="namespaceopenage_1_1util.xhtml#a5519d25810f698275993214ce79016c7">utf8_last_char_size</a>(&amp;<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>[0]));</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;}} <span class="comment">// openage::util</span></div><div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_ac5e38c7efcc1e8d4b7f7668da156ba4b"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#ac5e38c7efcc1e8d4b7f7668da156ba4b">openage::util::utf8_decoder::out</a></div><div class="ttdeci">codepoint_t out</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8h_source.xhtml#l00028">unicode.h:28</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_a55d64109af786e729e84a4da7d275c19"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#a55d64109af786e729e84a4da7d275c19">openage::util::utf8_decoder::remaining</a></div><div class="ttdeci">unsigned remaining</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8h_source.xhtml#l00033">unicode.h:33</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_ad74a496758770d9f1be27e9b3fec4dd0"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#ad74a496758770d9f1be27e9b3fec4dd0">openage::util::utf8_decoder::feed</a></div><div class="ttdeci">bool feed(char c)</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00019">unicode.cpp:19</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_ae33f30385d0dd3708f7465705c9a73de"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#ae33f30385d0dd3708f7465705c9a73de">openage::util::utf8_decoder::utf8_decoder</a></div><div class="ttdeci">utf8_decoder()</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00010">unicode.cpp:10</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aed7ef0b5ccf0d22a6329396d9a59f671"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aed7ef0b5ccf0d22a6329396d9a59f671">openage::util::utf8_encode</a></div><div class="ttdeci">size_t utf8_encode(int cp, char *outbuf)</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00120">unicode.cpp:120</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1constexpr___xhtml_a72a87a05e383ec62bf0b60359f314df7"><div class="ttname"><a href="namespaceopenage_1_1util_1_1constexpr__.xhtml#a72a87a05e383ec62bf0b60359f314df7">openage::util::constexpr_::strlen</a></div><div class="ttdeci">constexpr size_t strlen(const char *str)</div><div class="ttdef"><b>Definition:</b> <a href="constexpr_8h_source.xhtml#l00030">constexpr.h:30</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a5519d25810f698275993214ce79016c7"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a5519d25810f698275993214ce79016c7">openage::util::utf8_last_char_size</a></div><div class="ttdeci">size_t utf8_last_char_size(char *str)</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00154">unicode.cpp:154</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1utf8__decoder_xhtml_acca7311eed2d83530c6ae78e73132d31"><div class="ttname"><a href="classopenage_1_1util_1_1utf8__decoder.xhtml#acca7311eed2d83530c6ae78e73132d31">openage::util::utf8_decoder::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00014">unicode.cpp:14</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a3e9f9bfa57d843330bd6d4bf85397433"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a3e9f9bfa57d843330bd6d4bf85397433">openage::util::utf8_decode</a></div><div class="ttdeci">size_t utf8_decode(const unsigned char *s, size_t len, int32_t *outbuf)</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00072">unicode.cpp:72</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a82a1e7bf14b6f49be2d5fe4ec89f920e"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a82a1e7bf14b6f49be2d5fe4ec89f920e">openage::util::utf8_pop_back</a></div><div class="ttdeci">void utf8_pop_back(std::string &amp;str)</div><div class="ttdef"><b>Definition:</b> <a href="unicode_8cpp_source.xhtml#l00167">unicode.cpp:167</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="unicode_8h_xhtml"><div class="ttname"><a href="unicode_8h.xhtml">unicode.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="unicode_8cpp.xhtml">unicode.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
