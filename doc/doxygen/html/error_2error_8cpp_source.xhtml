<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/error/error.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('error_2error_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">error.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="error_2error_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2013-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="error_2error_8h.xhtml">error.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;../util/compiler.h&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="stackanalyzer_8h.xhtml">stackanalyzer.h</a>&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">namespace </span>error {</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1error.xhtml#a1f2a2504ac8f64e3666ce4322b32f0e6">   13</a></span>&#160;constexpr <span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="namespaceopenage_1_1error.xhtml#a1f2a2504ac8f64e3666ce4322b32f0e6">runtime_error_message</a> = <span class="stringliteral">&quot;polymorphic openage Error object; catch by reference!&quot;</span>;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1error.xhtml#a69283bf7d976b89c848b6b413190e15a">   15</a></span>&#160;<span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="namespaceopenage_1_1error.xhtml#a69283bf7d976b89c848b6b413190e15a">enable_break_on_create</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#ad7fc5249c96f6c6e2c3bfa55dfe8235b">   16</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml#ad7fc5249c96f6c6e2c3bfa55dfe8235b">Error::debug_break_on_create</a>(<span class="keywordtype">bool</span> state) {</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <a class="code" href="namespaceopenage_1_1error.xhtml#a69283bf7d976b89c848b6b413190e15a">enable_break_on_create</a> = state;</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#a755a7891dfe08412bc2312f29b0e618d">   20</a></span>&#160;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#ae0f4bcb1755332c4a26a998a88810072">Error::Error</a>(<span class="keyword">const</span> <a class="code" href="structopenage_1_1log_1_1message.xhtml">log::message</a> &amp;msg, <span class="keywordtype">bool</span> generate_backtrace, <span class="keywordtype">bool</span> store_cause)</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    :</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::runtime_error{<a class="code" href="namespaceopenage_1_1error.xhtml#a1f2a2504ac8f64e3666ce4322b32f0e6">runtime_error_message</a>},</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    msg(msg) {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="namespaceopenage_1_1error.xhtml#a69283bf7d976b89c848b6b413190e15a">enable_break_on_create</a>)) {</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;        <a class="code" href="compiler_8h.xhtml#a0409e98ff9aade482fcfc9e67e762a86">BREAKPOINT</a>;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">if</span> (generate_backtrace) {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        <span class="keyword">auto</span> backtrace = std::make_shared&lt;StackAnalyzer&gt;();</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        backtrace-&gt;analyze();</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        this-&gt;backtrace = backtrace;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    }</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">if</span> (store_cause) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        this-&gt;store_cause();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    }</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">Error::store_cause</a>() {</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="comment">// we could simply do this-&gt;cause = std::current_exception(),</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// but we need to trim the cause Error&#39;s backtrace.</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(!std::current_exception())) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> &amp;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">cause</a>) {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <a class="code" href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">cause</a>.trim_backtrace();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        this-&gt;cause = std::current_exception();</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        this-&gt;cause = std::current_exception();</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    }</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#a1a6de651093edf2d3673cd0d146992e4">   60</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml#a1a6de651093edf2d3673cd0d146992e4">Error::trim_backtrace</a>() {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a>) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a>-&gt;trim_to_current_stack_frame();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;}</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#ae0f4bcb1755332c4a26a998a88810072">   67</a></span>&#160;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#ae0f4bcb1755332c4a26a998a88810072">Error::Error</a>()</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    :</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespacestd.xhtml">std</a>::runtime_error{<a class="code" href="namespaceopenage_1_1error.xhtml#a1f2a2504ac8f64e3666ce4322b32f0e6">runtime_error_message</a>} {}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">   72</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">Error::what</a>() const noexcept {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#a8c610dd442b678978bf3414c61a69695">text</a>.c_str();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">   77</a></span>&#160;std::string <a class="code" href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">Error::type_name</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">util::demangle</a>(<span class="keyword">typeid</span>(*this).name());</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">   82</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">Error::rethrow_cause</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">cause</a>) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        std::rethrow_exception(this-&gt;<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">cause</a>);</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1error.xhtml#a902be6cbbea4f6485907cc5e15406b3a">   89</a></span>&#160;std::ostream &amp;<a class="code" href="namespaceopenage_1_1error.xhtml#a58eb7522d2a474098647490b1a6041f0">operator &lt;&lt;</a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> &amp;e) {</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="comment">// output the exception cause</span></div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keywordtype">bool</span> had_a_cause = <span class="keyword">true</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause</a>();</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        had_a_cause = <span class="keyword">false</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> &amp;cause) {</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        os &lt;&lt; cause &lt;&lt; std::endl;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    } <span class="keywordflow">catch</span> (std::exception &amp;cause) {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        os &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">util::demangle</a>(<span class="keyword">typeid</span>(cause).name()) &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; cause.what() &lt;&lt; std::endl;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;unknown non std::exception cause!&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    }</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">if</span> (had_a_cause) {</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        os &lt;&lt; std::endl &lt;&lt; <span class="stringliteral">&quot;The above exception was the direct cause of the following exception:&quot;</span> &lt;&lt; std::endl &lt;&lt; std::endl;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="comment">// output the exception backtrace</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keywordflow">if</span> (e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a>) {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        os &lt;&lt; *e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;origin:&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="comment">// the exception message metadata also holds some &quot;backtrace-like&quot; info</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    os &lt;&lt; <a class="code" href="structopenage_1_1error_1_1backtrace__symbol.xhtml">backtrace_symbol</a>{</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#ac3ad82d38502272df446a781982b4fc0">filename</a>,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#ae21f5b04f1658aa09f0cf00eaf3b482e">lineno</a>,</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#a45eb775bf38f7423cd7fb27895d17e06">functionname</a>,</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">nullptr</span>} &lt;&lt; std::endl;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    os &lt;&lt; e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">type_name</a>();</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">if</span> (not e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#a8c610dd442b678978bf3414c61a69695">text</a>.empty()) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        os &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; e.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>.<a class="code" href="structopenage_1_1log_1_1message.xhtml#a8c610dd442b678978bf3414c61a69695">text</a>;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    }</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">return</span> os;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}} <span class="comment">// openage::error</span></div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a1a6de651093edf2d3673cd0d146992e4"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a1a6de651093edf2d3673cd0d146992e4">openage::error::Error::trim_backtrace</a></div><div class="ttdeci">void trim_backtrace()</div><div class="ttdoc">Calls this-&gt;backtrace-&gt;trim_to_current_stack_frame(), if this-&gt;backtrace is not nullptr.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00060">error.cpp:60</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a2eac361ac1550421b68e453b9a710d4b"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">openage::error::Error::rethrow_cause</a></div><div class="ttdeci">void rethrow_cause() const</div><div class="ttdoc">Re-throws the exception cause, if the exception has one.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00082">error.cpp:82</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_aad1888d960bfad6b919cea7f8d9baff6"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">openage::error::Error::cause</a></div><div class="ttdeci">std::exception_ptr cause</div><div class="ttdoc">Re-throw this with rethrow_cause().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00141">error.h:141</a></div></div>
<div class="ttc" id="namespaceopenage_1_1error_xhtml_a69283bf7d976b89c848b6b413190e15a"><div class="ttname"><a href="namespaceopenage_1_1error.xhtml#a69283bf7d976b89c848b6b413190e15a">openage::error::enable_break_on_create</a></div><div class="ttdeci">static bool enable_break_on_create</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00015">error.cpp:15</a></div></div>
<div class="ttc" id="stackanalyzer_8h_xhtml"><div class="ttname"><a href="stackanalyzer_8h.xhtml">stackanalyzer.h</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_aebb433114d67e8c71b37a3de18019571"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">openage::error::Error::what</a></div><div class="ttdeci">const char * what() const noexcept override</div><div class="ttdoc">Returns the message's content.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00072">error.cpp:72</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_ae0f4bcb1755332c4a26a998a88810072"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#ae0f4bcb1755332c4a26a998a88810072">openage::error::Error::Error</a></div><div class="ttdeci">Error()</div><div class="ttdoc">Constructs an empty error.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00067">error.cpp:67</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_aa06c25a19f000f6ec51993e123b6681f"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">openage::error::Error::msg</a></div><div class="ttdeci">log::message msg</div><div class="ttdoc">The error message.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00091">error.h:91</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="structopenage_1_1error_1_1backtrace__symbol_xhtml"><div class="ttname"><a href="structopenage_1_1error_1_1backtrace__symbol.xhtml">openage::error::backtrace_symbol</a></div><div class="ttdoc">A single symbol, as determined from a program counter, and returned by Backtrace::get_symbols().</div><div class="ttdef"><b>Definition:</b> <a href="backtrace_8h_source.xhtml#l00034">backtrace.h:34</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="hash__functions_8h_source.xhtml#l00009">hash_functions.h:9</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml_ac3ad82d38502272df446a781982b4fc0"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml#ac3ad82d38502272df446a781982b4fc0">openage::log::message::filename</a></div><div class="ttdeci">const char * filename</div><div class="ttdoc">The filename where the message has been constructed.</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00063">message.h:63</a></div></div>
<div class="ttc" id="namespaceopenage_1_1error_xhtml_a58eb7522d2a474098647490b1a6041f0"><div class="ttname"><a href="namespaceopenage_1_1error.xhtml#a58eb7522d2a474098647490b1a6041f0">openage::error::operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const backtrace_symbol &amp;bt_sym)</div><div class="ttdoc">Prints a backtrace_symbol object.</div><div class="ttdef"><b>Definition:</b> <a href="backtrace_8cpp_source.xhtml#l00016">backtrace.cpp:16</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a27cbe56bc7dbab4d399072ef87fe2014"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">openage::error::Error::store_cause</a></div><div class="ttdeci">void store_cause()</div><div class="ttdoc">Stores a pointer to the currently-handled exception in this-&gt;cause.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00041">error.cpp:41</a></div></div>
<div class="ttc" id="error_2error_8h_xhtml"><div class="ttname"><a href="error_2error_8h.xhtml">error.h</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a8ad0320b8e32d6f187d0f4a74bd89d69"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">openage::error::Error::backtrace</a></div><div class="ttdeci">std::shared_ptr&lt; Backtrace &gt; backtrace</div><div class="ttdoc">The (optional) backtrace.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00097">error.h:97</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_ad7fc5249c96f6c6e2c3bfa55dfe8235b"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#ad7fc5249c96f6c6e2c3bfa55dfe8235b">openage::error::Error::debug_break_on_create</a></div><div class="ttdeci">static void debug_break_on_create(bool state)</div><div class="ttdoc">Turn on debug breaks in the constructor.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00016">error.cpp:16</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml_a8c610dd442b678978bf3414c61a69695"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml#a8c610dd442b678978bf3414c61a69695">openage::log::message::text</a></div><div class="ttdeci">std::string text</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00058">message.h:58</a></div></div>
<div class="ttc" id="namespaceopenage_1_1error_xhtml_a1f2a2504ac8f64e3666ce4322b32f0e6"><div class="ttname"><a href="namespaceopenage_1_1error.xhtml#a1f2a2504ac8f64e3666ce4322b32f0e6">openage::error::runtime_error_message</a></div><div class="ttdeci">constexpr const char * runtime_error_message</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00013">error.cpp:13</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml_ae21f5b04f1658aa09f0cf00eaf3b482e"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml#ae21f5b04f1658aa09f0cf00eaf3b482e">openage::log::message::lineno</a></div><div class="ttdeci">unsigned lineno</div><div class="ttdoc">The line number where the message has been constructed.</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00068">message.h:68</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aebed129b2a0773520cdd8d40b0f70318"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">openage::util::demangle</a></div><div class="ttdeci">std::string demangle(const char *symbol)</div><div class="ttdoc">Demangles a symbol name.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8cpp_source.xhtml#l00025">compiler.cpp:25</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml">openage::log::message</a></div><div class="ttdoc">A complete log/exception message, containing a text message and metadata.</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00057">message.h:57</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a6c5c486df5943aa399b6c051d9eb9059"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">openage::error::Error::type_name</a></div><div class="ttdeci">virtual std::string type_name() const</div><div class="ttdoc">The type name of the exception (for pretty-printing in case the exception hierarchy is used).</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00077">error.cpp:77</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml_a45eb775bf38f7423cd7fb27895d17e06"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml#a45eb775bf38f7423cd7fb27895d17e06">openage::log::message::functionname</a></div><div class="ttdeci">const char * functionname</div><div class="ttdoc">The (pretty) function name where the message has been constructed.</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00073">message.h:73</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_a0409e98ff9aade482fcfc9e67e762a86"><div class="ttname"><a href="compiler_8h.xhtml#a0409e98ff9aade482fcfc9e67e762a86">BREAKPOINT</a></div><div class="ttdeci">#define BREAKPOINT</div><div class="ttdoc">Software breakpoint if you're too lazy to add it in gdb but instead wanna add it into the code direct...</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00065">compiler.h:65</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_3c7a1d16eeb7847b36e40c66a45c0cab.xhtml">error</a></li><li class="navelem"><a class="el" href="error_2error_8cpp.xhtml">error.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
