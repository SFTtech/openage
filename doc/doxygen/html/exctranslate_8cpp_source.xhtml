<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/exctranslate.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('exctranslate_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">exctranslate.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="exctranslate_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exctranslate_8h.xhtml">exctranslate.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;new&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;stdexcept&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;ios&gt;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;../util/timing.h&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;../error/error.h&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &quot;../util/compiler.h&quot;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &quot;../util/thread_id.h&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;../log/level.h&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyexception_8h.xhtml">pyexception.h</a>&quot;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">// python exception translation function pointers</span></div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">   24</a></span>&#160;void (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a>)(<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> *) = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">   25</a></span>&#160;void (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">raise_cpp_pyexception</a>)(<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> *) = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">   27</a></span>&#160;void (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">describe_py_exception</a>)(<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> *) = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">   28</a></span>&#160;bool (*<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">check_for_py_exception</a>)() = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#ad8166ad0c6228bd8ad488cb2648ef2f6">   31</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad8166ad0c6228bd8ad488cb2648ef2f6">set_exc_translation_funcs</a>(</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordtype">void</span> (*raise_cpp_error_impl)(<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> *),</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordtype">void</span> (*raise_cpp_pyexception_impl)(<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> *),</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordtype">bool</span> (*check_for_py_exception_impl)(),</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">void</span> (*describe_py_exception_impl)(<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> *)) {</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a> = raise_cpp_error_impl;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">raise_cpp_pyexception</a> = raise_cpp_pyexception_impl;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">check_for_py_exception</a> = check_for_py_exception_impl;</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">describe_py_exception</a> = describe_py_exception_impl;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="comment"> * This function is the cython exception handler!</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a17ffe36150248f6802ac372166798637">   47</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a17ffe36150248f6802ac372166798637">translate_exc_cpp_to_py</a>() {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="comment">// when we reach this, cython caught an error.</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="comment">// and we&#39;re now in the handler.</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="comment">// to continue, first rethrow the exception so we can analyze it:</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">throw</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> &amp;exc) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">raise_cpp_pyexception</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="stringliteral">&quot;raise_pyexception_in_py is uninitialized; &quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                <span class="stringliteral">&quot;can&#39;t translate C++ exception to Python exception.&quot;</span>,</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;                <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        }</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="comment">// handle the python object directly by PyErr_SetObject</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">raise_cpp_pyexception</a>(&amp;exc);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> &amp;exc) {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                <span class="stringliteral">&quot;raise_error_in_py is uninitialized; &quot;</span></div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="stringliteral">&quot;can&#39;t translate C++ exception to Python exception.&quot;</span>,</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                <span class="keyword">false</span>, <span class="keyword">false</span>);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <span class="comment">// translate the exception to python</span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="comment">// = insert it in pythons backtrace</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a>(&amp;exc);</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="comment">// we also need to catch std::exception so that rethrown causes are handled</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="comment">// properly. otherwise they just crash everything. not good.</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">catch</span> (<span class="keyword">const</span> std::exception &amp;exc) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="comment">// the std::exception doesn&#39;t contain a stack trace...</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="comment">// as we&#39;re at a special place we must not generate the current</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="comment">// stack trace either. and we _must not_ store the causing</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment">// exception, as the whole point of this code is to get rid</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="comment">// of std::exceptions.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> error{</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;            <a class="code" href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a> &lt;&lt; <span class="stringliteral">&quot;std::exception: &quot;</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;                &lt;&lt; <a class="code" href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">util::demangle</a>(<span class="keyword">typeid</span>(exc).name())</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                &lt;&lt; <span class="stringliteral">&quot;: &quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                &lt;&lt; exc.what(),</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;            <span class="keyword">false</span>,</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;            <span class="keyword">false</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        };</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">raise_cpp_error</a>(&amp;error);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">     * all other exceptions are more than unexpected;</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">     * they don&#39;t contain any useful stack trace information,</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">     * so the safest course of action is not to catch them.</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="comment">     * That way, terminate() is called, where we can analyze the stack</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="comment">     * trace and debug the issue in gdb.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;}</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">  110</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">translate_exc_py_to_cpp</a>() {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">describe_py_exception</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;            <span class="stringliteral">&quot;describe_py_exception is uninitialized; &quot;</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="stringliteral">&quot;can&#39;t check for and translate Python exception to C++ exception.&quot;</span>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a>(not <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">check_for_py_exception</a>())) {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">// no exception has occurred.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> pyex;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">describe_py_exception</a>(&amp;pyex);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="comment">// recurse to throw a possible cause.</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">translate_exc_py_to_cpp</a>();</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        pyex.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">store_cause</a>();</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// throw exception without cause.</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">throw</span> pyex;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a942ae5fea51139bab5bdc29ac244125d">  137</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a942ae5fea51139bab5bdc29ac244125d">init_exc_message</a>(<a class="code" href="structopenage_1_1log_1_1message.xhtml">log::message</a> *msg, <span class="keyword">const</span> std::string &amp;<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> lineno, <span class="keyword">const</span> std::string &amp;functionname) noexcept {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        msg-&gt;init_with_metadata_copy(<a class="code" href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">filename</a>, functionname);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">// we cannot afford to raise an exception from this function;</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="comment">// this is part of the exception translation code.</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        std::cout &lt;&lt; <span class="stringliteral">&quot;[WTF] failed so init exception message!&quot;</span> &lt;&lt; std::endl;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    }</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    msg-&gt;lvl = <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">log::level::err</a>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    msg-&gt;lineno = lineno;</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}} <span class="comment">// openage::pyinterface</span></div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a664e0be1f5d2f4d1e1a624f6f4a5f0c1"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a664e0be1f5d2f4d1e1a624f6f4a5f0c1">openage::util::filename</a></div><div class="ttdeci">std::string filename(const std::string &amp;fullpath)</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00364">path.cpp:364</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad8166ad0c6228bd8ad488cb2648ef2f6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad8166ad0c6228bd8ad488cb2648ef2f6">openage::pyinterface::set_exc_translation_funcs</a></div><div class="ttdeci">void set_exc_translation_funcs(void(*raise_cpp_error_impl)(Error *), void(*raise_cpp_pyexception_impl)(PyException *), bool(*check_for_py_exception_impl)(), void(*describe_py_exception_impl)(PyException *))</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00031">exctranslate.cpp:31</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a1ed950b8158655d0bcb54fbb36404873"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a1ed950b8158655d0bcb54fbb36404873">openage::pyinterface::raise_cpp_pyexception</a></div><div class="ttdeci">void(* raise_cpp_pyexception)(PyException *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00025">exctranslate.cpp:25</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_a217a0bd562b98ae8c2ffce44935351e1"><div class="ttname"><a href="compiler_8h.xhtml#a217a0bd562b98ae8c2ffce44935351e1">likely</a></div><div class="ttdeci">#define likely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00052">compiler.h:52</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a53f43e6841f4160dfdaea8592cb0db3d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a53f43e6841f4160dfdaea8592cb0db3d">openage::pyinterface::raise_cpp_error</a></div><div class="ttdeci">void(* raise_cpp_error)(Error *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00024">exctranslate.cpp:24</a></div></div>
<div class="ttc" id="exctranslate_8h_xhtml"><div class="ttname"><a href="exctranslate_8h.xhtml">exctranslate.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aa215bdc802dfaf2c82acb6b3acf3d6e6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aa215bdc802dfaf2c82acb6b3acf3d6e6">openage::pyinterface::check_for_py_exception</a></div><div class="ttdeci">bool(* check_for_py_exception)()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00028">exctranslate.cpp:28</a></div></div>
<div class="ttc" id="pyexception_8h_xhtml"><div class="ttname"><a href="pyexception_8h.xhtml">pyexception.h</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a27cbe56bc7dbab4d399072ef87fe2014"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">openage::error::Error::store_cause</a></div><div class="ttdeci">void store_cause()</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00041">error.cpp:41</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a29e783fc0db24c266caed883f5781e96"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a29e783fc0db24c266caed883f5781e96">openage::pyinterface::describe_py_exception</a></div><div class="ttdeci">void(* describe_py_exception)(PyException *)</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00027">exctranslate.cpp:27</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a942ae5fea51139bab5bdc29ac244125d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a942ae5fea51139bab5bdc29ac244125d">openage::pyinterface::init_exc_message</a></div><div class="ttdeci">void init_exc_message(log::message *msg, const std::string &amp;filename, unsigned int lineno, const std::string &amp;functionname) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00137">exctranslate.cpp:137</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a17ffe36150248f6802ac372166798637"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a17ffe36150248f6802ac372166798637">openage::pyinterface::translate_exc_cpp_to_py</a></div><div class="ttdeci">void translate_exc_cpp_to_py()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00047">exctranslate.cpp:47</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">openage::pyinterface::PyException</a></div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8h_source.xhtml#l00060">pyexception.h:60</a></div></div>
<div class="ttc" id="message_8h_xhtml_a735563036dced0b7d6cc98f97ea4978b"><div class="ttname"><a href="message_8h.xhtml#a735563036dced0b7d6cc98f97ea4978b">ERR</a></div><div class="ttdeci">#define ERR</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00179">message.h:179</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aebed129b2a0773520cdd8d40b0f70318"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">openage::util::demangle</a></div><div class="ttdeci">std::string demangle(const char *symbol)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8cpp_source.xhtml#l00025">compiler.cpp:25</a></div></div>
<div class="ttc" id="structopenage_1_1log_1_1message_xhtml"><div class="ttname"><a href="structopenage_1_1log_1_1message.xhtml">openage::log::message</a></div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00057">message.h:57</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a89529648faa2ef530fefcc90f1c1ab70"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a89529648faa2ef530fefcc90f1c1ab70">openage::pyinterface::translate_exc_py_to_cpp</a></div><div class="ttdeci">void translate_exc_py_to_cpp()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate_8cpp_source.xhtml#l00110">exctranslate.cpp:110</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="exctranslate_8cpp.xhtml">exctranslate.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
