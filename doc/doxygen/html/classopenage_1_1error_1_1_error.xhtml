<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::error::Error Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1error_1_1_error.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1error_1_1_error-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::error::Error Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="error_2error_8h_source.xhtml">error.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for openage::error::Error:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1error_1_1_error__inherit__graph.svg" width="528" height="500"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for openage::error::Error:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1error_1_1_error__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a755a7891dfe08412bc2312f29b0e618d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a755a7891dfe08412bc2312f29b0e618d">Error</a> (const <a class="el" href="structopenage_1_1log_1_1message.xhtml">log::message</a> &amp;<a class="el" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a>, bool generate_backtrace=true, bool <a class="el" href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">store_cause</a>=true)</td></tr>
<tr class="separator:a755a7891dfe08412bc2312f29b0e618d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27cbe56bc7dbab4d399072ef87fe2014"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a27cbe56bc7dbab4d399072ef87fe2014">store_cause</a> ()</td></tr>
<tr class="separator:a27cbe56bc7dbab4d399072ef87fe2014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a6de651093edf2d3673cd0d146992e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a1a6de651093edf2d3673cd0d146992e4">trim_backtrace</a> ()</td></tr>
<tr class="separator:a1a6de651093edf2d3673cd0d146992e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eac361ac1550421b68e453b9a710d4b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause</a> () const</td></tr>
<tr class="separator:a2eac361ac1550421b68e453b9a710d4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c5c486df5943aa399b6c051d9eb9059"><td class="memItemLeft" align="right" valign="top">virtual std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">type_name</a> () const</td></tr>
<tr class="separator:a6c5c486df5943aa399b6c051d9eb9059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebb433114d67e8c71b37a3de18019571"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">what</a> () const noexcept override</td></tr>
<tr class="separator:aebb433114d67e8c71b37a3de18019571"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad7fc5249c96f6c6e2c3bfa55dfe8235b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#ad7fc5249c96f6c6e2c3bfa55dfe8235b">debug_break_on_create</a> (bool state)</td></tr>
<tr class="separator:ad7fc5249c96f6c6e2c3bfa55dfe8235b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aa06c25a19f000f6ec51993e123b6681f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structopenage_1_1log_1_1message.xhtml">log::message</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#aa06c25a19f000f6ec51993e123b6681f">msg</a></td></tr>
<tr class="separator:aa06c25a19f000f6ec51993e123b6681f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad0320b8e32d6f187d0f4a74bd89d69"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1error_1_1_backtrace.xhtml">Backtrace</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#a8ad0320b8e32d6f187d0f4a74bd89d69">backtrace</a></td></tr>
<tr class="separator:a8ad0320b8e32d6f187d0f4a74bd89d69"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ae0f4bcb1755332c4a26a998a88810072"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#ae0f4bcb1755332c4a26a998a88810072">Error</a> ()</td></tr>
<tr class="separator:ae0f4bcb1755332c4a26a998a88810072"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:aad1888d960bfad6b919cea7f8d9baff6"><td class="memItemLeft" align="right" valign="top">std::exception_ptr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1error_1_1_error.xhtml#aad1888d960bfad6b919cea7f8d9baff6">cause</a></td></tr>
<tr class="separator:aad1888d960bfad6b919cea7f8d9baff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Openage base exception type; the constructor usage is analogous to <a class="el" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log()</a>.</p>
<p>pxd:</p>
<p>cppclass <a class="el" href="classopenage_1_1error_1_1_error.xhtml">Error</a>: message msg</p>
<p>string <a class="el" href="classopenage_1_1error_1_1_error.xhtml#a6c5c486df5943aa399b6c051d9eb9059">type_name()</a> except + const char *what() except + void <a class="el" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause()</a> except + void <a class="el" href="classopenage_1_1error_1_1_error.xhtml#a1a6de651093edf2d3673cd0d146992e4">trim_backtrace()</a> except + @staticmethod void <a class="el" href="classopenage_1_1error_1_1_error.xhtml#ad7fc5249c96f6c6e2c3bfa55dfe8235b">debug_break_on_create(bool state)</a> except +</p>
<p><a class="el" href="classopenage_1_1error_1_1_backtrace.xhtml">Backtrace</a> *backtrace </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8h_source.xhtml#l00051">51</a> of file <a class="el" href="error_2error_8h_source.xhtml">error.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a755a7891dfe08412bc2312f29b0e618d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a755a7891dfe08412bc2312f29b0e618d">&#9670;&nbsp;</a></span>Error() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::error::Error::Error </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="structopenage_1_1log_1_1message.xhtml">log::message</a> &amp;&#160;</td>
          <td class="paramname"><em>msg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>generate_backtrace</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>store_cause</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>As with <a class="el" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log()</a> </td></tr>
    <tr><td class="paramname">generate_backtrace</td><td>If true, some platform-specific code is run to collect traceback information (e.g.: backtrace (3)) (default true). The performance impacts should be not too bad, as only program counter pointers are collected. </td></tr>
    <tr><td class="paramname">store_cause</td><td>If true, a pointer to the causing exception is collected and stored (default true). </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00020">20</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="ae0f4bcb1755332c4a26a998a88810072"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0f4bcb1755332c4a26a998a88810072">&#9670;&nbsp;</a></span>Error() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::error::Error::Error </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Constructs an empty error. For use by our friend, <a class="el" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">pyinterface::PyException</a>. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00067">67</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad7fc5249c96f6c6e2c3bfa55dfe8235b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7fc5249c96f6c6e2c3bfa55dfe8235b">&#9670;&nbsp;</a></span>debug_break_on_create()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void openage::error::Error::debug_break_on_create </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>state</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Turn on debug breaks in the constructor </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00016">16</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="a2eac361ac1550421b68e453b9a710d4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2eac361ac1550421b68e453b9a710d4b">&#9670;&nbsp;</a></span>rethrow_cause()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::error::Error::rethrow_cause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Re-throws the exception cause, if the exception has one. Otherwise, does nothing.</p>
<p>Use this when handling the exception, to handle the cause. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00082">82</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="a27cbe56bc7dbab4d399072ef87fe2014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a27cbe56bc7dbab4d399072ef87fe2014">&#9670;&nbsp;</a></span>store_cause()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::error::Error::store_cause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Stores a pointer to the currently-handled exception in this-&gt;cause. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00041">41</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="a1a6de651093edf2d3673cd0d146992e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a6de651093edf2d3673cd0d146992e4">&#9670;&nbsp;</a></span>trim_backtrace()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::error::Error::trim_backtrace </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Calls this-&gt;backtrace-&gt;trim_to_current_stack_frame(), if this-&gt;backtrace is not nullptr.</p>
<p>Designed to be used in catch clauses, to strip away all those unneeded symbols from program init upwards.</p>
<p>Automatically called for cause exceptions, and when storing cause exceptions, and by the to_py converter. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="a6c5c486df5943aa399b6c051d9eb9059"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c5c486df5943aa399b6c051d9eb9059">&#9670;&nbsp;</a></span>type_name()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::string openage::error::Error::type_name </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The type name of the exception (for pretty-printing in case the exception hierarchy is used). Uses typeid internally. </p>

<p>Reimplemented in <a class="el" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">openage::pyinterface::PyException</a>.</p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00077">77</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<a id="aebb433114d67e8c71b37a3de18019571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebb433114d67e8c71b37a3de18019571">&#9670;&nbsp;</a></span>what()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * openage::error::Error::what </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">noexcept</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the message's content. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8cpp_source.xhtml#l00072">72</a> of file <a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a8ad0320b8e32d6f187d0f4a74bd89d69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ad0320b8e32d6f187d0f4a74bd89d69">&#9670;&nbsp;</a></span>backtrace</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1error_1_1_backtrace.xhtml">Backtrace</a>&gt; openage::error::Error::backtrace</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The (optional) backtrace. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8h_source.xhtml#l00097">97</a> of file <a class="el" href="error_2error_8h_source.xhtml">error.h</a>.</p>

</div>
</div>
<a id="aad1888d960bfad6b919cea7f8d9baff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad1888d960bfad6b919cea7f8d9baff6">&#9670;&nbsp;</a></span>cause</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::exception_ptr openage::error::Error::cause</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Re-throw this with <a class="el" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause()</a>. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8h_source.xhtml#l00141">141</a> of file <a class="el" href="error_2error_8h_source.xhtml">error.h</a>.</p>

</div>
</div>
<a id="aa06c25a19f000f6ec51993e123b6681f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa06c25a19f000f6ec51993e123b6681f">&#9670;&nbsp;</a></span>msg</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structopenage_1_1log_1_1message.xhtml">log::message</a> openage::error::Error::msg</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>The error message. </p>

<p class="definition">Definition at line <a class="el" href="error_2error_8h_source.xhtml#l00091">91</a> of file <a class="el" href="error_2error_8h_source.xhtml">error.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>libopenage/error/<a class="el" href="error_2error_8h_source.xhtml">error.h</a></li>
<li>libopenage/error/<a class="el" href="error_2error_8cpp_source.xhtml">error.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1error.xhtml">error</a></li><li class="navelem"><a class="el" href="classopenage_1_1error_1_1_error.xhtml">Error</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
