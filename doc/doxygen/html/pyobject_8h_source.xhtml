<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/pyinterface/pyobject.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('pyobject_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">pyobject.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="pyobject_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// pxd: from libcpp cimport bool as cppbool</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// pxd: from libc.stdint cimport int64_t</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// pxd: from libcpp.string cimport string</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// pxd: from libcpp.vector cimport vector</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">// pxd: from libopenage.pyinterface.defs cimport PyObject</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="defs_8h.xhtml">defs.h</a>&quot;</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">// pxd: from libopenage.pyinterface.functional cimport PyIfFunc1, PyIfFunc2, PyIfFunc3</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// pxd: from libopenage.pyinterface.functional cimport Func1</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="functional_8h.xhtml">functional.h</a>&quot;</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">   49</a></span>&#160;<span class="keyword">class </span><a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>() noexcept;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;&amp;other) noexcept;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;operator =(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;operator =(<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;&amp;other);</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    ~<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>();</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// operator == is not implemented because users might expect it to</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// implement either of .is() or .equals().</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    std::string <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    std::string <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    std::string <a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordtype">int</span> len() <span class="keyword">const</span>;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">bool</span> callable() <span class="keyword">const</span>;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ...Args&gt;</div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">  120</a></span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">call</a>(Args... args)<span class="keyword"> const </span>{</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="comment">// this vector collects the function call arguments</span></div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        std::vector&lt;PyObjectRef&gt; arg_objs {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(args)...</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        };</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> this-&gt;call_impl(arg_objs);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    }</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> call_impl(std::vector&lt;PyObjectRef&gt; &amp;args) <span class="keyword">const</span>;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>(T arg);</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="comment">// the specializations follow in the cpp file.</span></div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> getattr(<span class="keyword">const</span> std::string &amp;name) <span class="keyword">const</span>;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">bool</span> hasattr(<span class="keyword">const</span> std::string &amp;name) <span class="keyword">const</span>;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    <span class="keywordtype">void</span> setattr(<span class="keyword">const</span> std::string &amp;name, <span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;attr) <span class="keyword">const</span>;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordtype">bool</span> isinstance(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;type) <span class="keyword">const</span>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordtype">bool</span> to_bool() <span class="keyword">const</span>;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    int64_t to_int() <span class="keyword">const</span>;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordtype">void</span> dir(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func&lt;void, std::string&gt;</a> &amp;callback) <span class="keyword">const</span>;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordtype">bool</span> is(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordtype">bool</span> equals(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;other) <span class="keyword">const</span>;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> eval(<span class="keyword">const</span> std::string &amp;expression) <span class="keyword">const</span>;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    <span class="keywordtype">void</span> exec(<span class="keyword">const</span> std::string &amp;statement) <span class="keyword">const</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> get(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;key) <span class="keyword">const</span>;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> get(<span class="keyword">const</span> std::string &amp;key) <span class="keyword">const</span>;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> get(<span class="keywordtype">int</span> key) <span class="keyword">const</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordtype">bool</span> in(<span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">container</a>) <span class="keyword">const</span>;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> type() <span class="keyword">const</span>;</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    std::string modulename() <span class="keyword">const</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    std::string classname() <span class="keyword">const</span>;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">  239</a></span>&#160;    <a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">ref</a>;</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">  246</a></span>&#160;    <a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">get_ref</a>() const noexcept {</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>;</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    }</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ab037499ba421c3232ae2a09a1d7282ab">  254</a></span>&#160;    <a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *operator ()() const noexcept {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>;</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;    <span class="keywordtype">void</span> set_ref(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;    <span class="keywordtype">void</span> set_ref_without_incrementing(<a class="code" href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a> *<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a6266a9e1764626579712f42d3074a609">  273</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a6266a9e1764626579712f42d3074a609">clear_ref_without_decrementing</a>() noexcept {</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        this-&gt;ref = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    }</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;};</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface.xhtml#a5a9c21964d61589af1bc3d35eeaf5a6c">  282</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObj</a> = <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a>;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;std::ostream &amp;<a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a75f2b534b1258ff5d4578f171c3f1caa">operator &lt;&lt;</a>(std::ostream &amp;os, <span class="keyword">const</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> &amp;<a class="code" href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a>);</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="comment">// now follow the various Python callbacks that implement all of the above,</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="comment">// and need to be installed by openage.cppinterface.pyobject.setup().</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="comment">// for use by the reference-counting constructors</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="comment">// pxd: PyIfFunc1[void, PyObjectPtr] py_xincref</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">py_xincref</a>;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="comment">// pxd: PyIfFunc1[void, PyObjectPtr] py_xdecref</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">py_xdecref</a>;</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="comment">// for all of those member functions</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="comment">// pxd: PyIfFunc1[string, PyObjectPtr] py_str</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">py_str</a>;</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="comment">// pxd: PyIfFunc1[string, PyObjectPtr] py_repr</span></div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">py_repr</a>;</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="comment">// pxd: PyIfFunc1[string, PyObjectPtr] py_bytes</span></div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">py_bytes</a>;</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="comment">// pxd: PyIfFunc1[int, PyObjectPtr] py_len</span></div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;int, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">py_len</a>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="comment">// pxd: PyIfFunc1[cppbool, PyObjectPtr] py_callable</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">py_callable</a>;</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, PyObjectPtr] py_call0</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">py_call0</a>;</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="comment">// pxd: PyIfFunc3[void, PyObjectRefPtr, PyObjectPtr, vector[PyObjectPtr]] py_calln</span></div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::vector&lt;PyObject *&gt;</a>&amp;&gt; <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">py_calln</a>;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="comment">// pxd: PyIfFunc2[cppbool, PyObjectPtr, string] py_hasattr</span></div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">py_hasattr</a>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="comment">// pxd: PyIfFunc3[void, PyObjectRefPtr, PyObjectPtr, string] py_getattr</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">py_getattr</a>;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="comment">// pxd: PyIfFunc3[void, PyObjectPtr, string, PyObjectPtr] py_setattr</span></div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">py_setattr</a>;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="comment">// pxd: PyIfFunc2[cppbool, PyObjectPtr, PyObjectPtr] py_isinstance</span></div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">py_isinstance</a>;</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="comment">// pxd: PyIfFunc1[cppbool, PyObjectPtr] py_to_bool</span></div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">py_to_bool</a>;</div><div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="comment">// pxd: PyIfFunc1[int64_t, PyObjectPtr] py_to_int</span></div><div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;int64_t, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">py_to_int</a>;</div><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectPtr, Func1[void, string]] py_dir</span></div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, Func&lt;void, std::string&gt;</a>&gt; <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">py_dir</a>;</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="comment">// pxd: PyIfFunc2[cppbool, PyObjectPtr, PyObjectPtr] py_equals</span></div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">py_equals</a>;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectPtr, string] py_exec</span></div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">py_exec</a>;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="comment">// pxd: PyIfFunc3[void, PyObjectPtr, PyObjectRefPtr, string] py_eval</span></div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *, std::string&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">py_eval</a>;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="comment">// pxd: PyIfFunc3[void, PyObjectPtr, PyObjectRefPtr, PyObjectPtr] py_get</span></div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">py_get</a>;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="comment">// pxd: PyIfFunc2[cppbool, PyObjectPtr, PyObjectPtr] py_in</span></div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">py_in</a>;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectPtr, PyObjectRefPtr] py_type</span></div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObject *, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">py_type</a>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="comment">// pxd: PyIfFunc1[string, PyObjectPtr] py_modulename</span></div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">py_modulename</a>;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;<span class="comment">// pxd: PyIfFunc1[string, PyObjectPtr] py_classname</span></div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;std::string, PyObject *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">py_classname</a>;</div><div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;</div><div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, const string] py_builtin</span></div><div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">py_builtin</a>;</div><div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, const string] py_import</span></div><div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">py_import</a>;</div><div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, const string] py_createstr</span></div><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">py_createstr</a>;</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, const string] py_createbytes</span></div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">py_createbytes</a>;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;<span class="comment">// pxd: PyIfFunc2[void, PyObjectRefPtr, int] py_createint</span></div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *, int&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">py_createint</a>;</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="comment">// pxd: PyIfFunc1[void, PyObjectRefPtr] py_createdict</span></div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">py_createdict</a>;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="comment">// pxd: PyIfFunc1[void, PyObjectRefPtr] py_createlist</span></div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, PyObjectRef *&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">py_createlist</a>;</div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">// pxd: PyObjectRef None</span></div><div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">None</a>;</div><div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="comment">// pxd: PyObjectRef True</span></div><div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">True</a>;</div><div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="comment">// pxd: PyObjectRef False</span></div><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;<span class="keyword">extern</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">PyObjectRef</a> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">False</a>;</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;} <span class="comment">// pyinterface</span></div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;<span class="keyword">namespace </span>py {</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1py.xhtml#aba3b73f5f4dff0e8b09683628705ea44">  381</a></span>&#160;<span class="keyword">using</span> <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> = <a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">pyinterface::PyObjectRef</a>;</div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div><div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">builtin</a>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <span class="keyword">import</span>(<span class="keyword">const</span> std::string &amp;name);</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(<span class="keyword">const</span> std::string &amp;value);</div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div><div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div><div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">bytes</a>(<span class="keyword">const</span> std::string &amp;value);</div><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">integer</a>(<span class="keywordtype">int</span> value);</div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;</div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">dict</a>();</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;</div><div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">Obj</a> <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>();</div><div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div><div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">pyinterface::None</a>;</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;</div><div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">pyinterface::True</a>;</div><div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;</div><div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;</div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword">using</span> <a class="code" href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">pyinterface::False</a>;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;} <span class="comment">// py</span></div><div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;} <span class="comment">// openage</span></div><div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_ac75d8f60c25c4a7570dcdf83b601d639"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#ac75d8f60c25c4a7570dcdf83b601d639">openage::pyinterface::PyObjectRef::get_ref</a></div><div class="ttdeci">PyObject * get_ref() const noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00246">pyobject.h:246</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a63919a2347c856579a992996c9c26d8a"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a63919a2347c856579a992996c9c26d8a">openage::pyinterface::py_eval</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef *, std::string &gt; py_eval</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00291">pyobject.cpp:291</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3316eef7fb6fbfced2f80c600bad8908"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3316eef7fb6fbfced2f80c600bad8908">openage::pyinterface::py_setattr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, std::string, PyObject * &gt; py_setattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00284">pyobject.cpp:284</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afd53890300da035a2fa6cf0366f3f755"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afd53890300da035a2fa6cf0366f3f755">openage::pyinterface::py_createdict</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef * &gt; py_createdict</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00303">pyobject.cpp:303</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a71a44ad87b997a932215fa57c7643a19"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a71a44ad87b997a932215fa57c7643a19">openage::pyinterface::None</a></div><div class="ttdeci">PyObjectRef None</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00306">pyobject.cpp:306</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a5e10f968ee5f44d64489eff5791a2b93"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a5e10f968ee5f44d64489eff5791a2b93">openage::pyinterface::py_builtin</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_builtin</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00298">pyobject.cpp:298</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_aea581b919984cda327632efe3d11f8b3"><div class="ttname"><a href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a></div><div class="ttdeci">#define OAAPI</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00026">compiler.h:26</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a4912d8bb9e44d51c84e6363694941f42"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a4912d8bb9e44d51c84e6363694941f42">openage::pyinterface::py_classname</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_classname</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00296">pyobject.cpp:296</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afdb5d7025dc1ed4583dfdf6d14ecbb2c"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afdb5d7025dc1ed4583dfdf6d14ecbb2c">openage::pyinterface::py_createint</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, int &gt; py_createint</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00302">pyobject.cpp:302</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a963c22d15551b5aa2e567e9603ef79e1"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a963c22d15551b5aa2e567e9603ef79e1">openage::pyinterface::py_in</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_in</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00293">pyobject.cpp:293</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a09953e7373020e0af78c70ea155754ee"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a09953e7373020e0af78c70ea155754ee">openage::pyinterface::True</a></div><div class="ttdeci">PyObjectRef True</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00307">pyobject.cpp:307</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a71d239927cc521d7d6cd2ff3f0e724ba"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a71d239927cc521d7d6cd2ff3f0e724ba">openage::pyinterface::PyObjectRef::ref</a></div><div class="ttdeci">PyObject * ref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00239">pyobject.h:239</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a></div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00058">functional.h:58</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aec589471ebd2cf0deea9cb901fa5b120"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aec589471ebd2cf0deea9cb901fa5b120">openage::pyinterface::py_modulename</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_modulename</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00295">pyobject.cpp:295</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a22d3d2911cba5872786856d0cd41bf53"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a22d3d2911cba5872786856d0cd41bf53">openage::pyinterface::py_exec</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, std::string &gt; py_exec</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00290">pyobject.cpp:290</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5108334e805e942718d59b97160775d1"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5108334e805e942718d59b97160775d1">openage::py::bytes</a></div><div class="ttdeci">Obj bytes(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00338">pyobject.cpp:338</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a019072ec9dc9b26854864b8d639545f6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a019072ec9dc9b26854864b8d639545f6">openage::pyinterface::py_import</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_import</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00299">pyobject.cpp:299</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afc5196e488904c84cd675b55494f3695"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afc5196e488904c84cd675b55494f3695">openage::pyinterface::py_repr</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_repr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00276">pyobject.cpp:276</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a63957aa9bf0c9835493a16ff6b543418"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a63957aa9bf0c9835493a16ff6b543418">openage::pyinterface::py_call0</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject * &gt; py_call0</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00280">pyobject.cpp:280</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a72f6244131021857b5da82ec1a2b60b4"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a72f6244131021857b5da82ec1a2b60b4">openage::pyinterface::py_hasattr</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, std::string &gt; py_hasattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00282">pyobject.cpp:282</a></div></div>
<div class="ttc" id="functional_8h_xhtml"><div class="ttname"><a href="functional_8h.xhtml">functional.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a7866f2cf6f90156274ac6b83776e73d9"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a7866f2cf6f90156274ac6b83776e73d9">openage::pyinterface::py_xincref</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject * &gt; py_xincref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00272">pyobject.cpp:272</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a1da67fe4551652e4267a218123e27309"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a1da67fe4551652e4267a218123e27309">openage::pyinterface::py_bytes</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_bytes</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00277">pyobject.cpp:277</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a5ba80af3e9224d2de11179ce232f75d9"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a5ba80af3e9224d2de11179ce232f75d9">openage::py::dict</a></div><div class="ttdeci">Obj dict()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00352">pyobject.cpp:352</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a26ef6836021b3dc7fe2215b7fab97e9d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a26ef6836021b3dc7fe2215b7fab97e9d">openage::pyinterface::py_get</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef *, PyObject * &gt; py_get</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00292">pyobject.cpp:292</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a4c514ea8f04bb945cd0d0086c89e8aa3"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a4c514ea8f04bb945cd0d0086c89e8aa3">openage::pyinterface::py_to_int</a></div><div class="ttdeci">PyIfFunc&lt; int64_t, PyObject * &gt; py_to_int</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00287">pyobject.cpp:287</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a2ff686c130c1870c58243e9f9530685a"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a2ff686c130c1870c58243e9f9530685a">openage::pyinterface::py_callable</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject * &gt; py_callable</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00279">pyobject.cpp:279</a></div></div>
<div class="ttc" id="defs_8h_xhtml_afcb7b4d4ac414eefbeef02c60e6acb52"><div class="ttname"><a href="defs_8h.xhtml#afcb7b4d4ac414eefbeef02c60e6acb52">PyObject</a></div><div class="ttdeci">struct _object PyObject</div><div class="ttdef"><b>Definition:</b> <a href="defs_8h_source.xhtml#l00010">defs.h:10</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a6266a9e1764626579712f42d3074a609"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a6266a9e1764626579712f42d3074a609">openage::pyinterface::PyObjectRef::clear_ref_without_decrementing</a></div><div class="ttdeci">void clear_ref_without_decrementing() noexcept</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00273">pyobject.h:273</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_aee648d1c95091e0207f3bf9d4f69dd01"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#aee648d1c95091e0207f3bf9d4f69dd01">openage::pyinterface::py_str</a></div><div class="ttdeci">PyIfFunc&lt; std::string, PyObject * &gt; py_str</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00275">pyobject.cpp:275</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3cf5d417d7e8b932bd437163d1aa86d5"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3cf5d417d7e8b932bd437163d1aa86d5">openage::pyinterface::py_getattr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject *, std::string &gt; py_getattr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00283">pyobject.cpp:283</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad0be0c0750d33fff88a405db89a1dbe7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad0be0c0750d33fff88a405db89a1dbe7">openage::pyinterface::py_len</a></div><div class="ttdeci">PyIfFunc&lt; int, PyObject * &gt; py_len</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00278">pyobject.cpp:278</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_1_1tests_xhtml_afc4e799a037edab37e1e35a74da593b7"><div class="ttname"><a href="namespaceopenage_1_1curve_1_1tests.xhtml#afc4e799a037edab37e1e35a74da593b7">openage::curve::tests::container</a></div><div class="ttdeci">void container()</div><div class="ttdef"><b>Definition:</b> <a href="container_8cpp_source.xhtml#l00205">container.cpp:205</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a7dd7680eb550d5db3c7f902316a748c1"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a7dd7680eb550d5db3c7f902316a748c1">openage::pyinterface::py_dir</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, Func&lt; void, std::string &gt; &gt; py_dir</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00288">pyobject.cpp:288</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_ac68b5313b47c4615286f64c7d996a903"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#ac68b5313b47c4615286f64c7d996a903">openage::py::builtin</a></div><div class="ttdeci">Obj builtin(const std::string &amp;name)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00317">pyobject.cpp:317</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ab5131b0e0209f78e76c5556cd7371dd7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ab5131b0e0209f78e76c5556cd7371dd7">openage::pyinterface::py_xdecref</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject * &gt; py_xdecref</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00273">pyobject.cpp:273</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_acf94e2be78e15a835eef9c8346c16f14"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#acf94e2be78e15a835eef9c8346c16f14">openage::pyinterface::py_createstr</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_createstr</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00300">pyobject.cpp:300</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad6ddd0e21b23d1b521586e0694a80a04"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad6ddd0e21b23d1b521586e0694a80a04">openage::pyinterface::py_to_bool</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject * &gt; py_to_bool</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00286">pyobject.cpp:286</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_afea8e32a161fe2e4644bda2196185215"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#afea8e32a161fe2e4644bda2196185215">openage::pyinterface::py_isinstance</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_isinstance</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00285">pyobject.cpp:285</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a3b908fa94eb8b9a2209772fb111795a9"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a3b908fa94eb8b9a2209772fb111795a9">openage::pyinterface::py_createlist</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef * &gt; py_createlist</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00304">pyobject.cpp:304</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml_a54af3d98bf36729efd5a013bc124a2e9"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml#a54af3d98bf36729efd5a013bc124a2e9">openage::pyinterface::PyObjectRef::call</a></div><div class="ttdeci">PyObjectRef call(Args... args) const</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00120">pyobject.h:120</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_acf53a5711df9e4c084c8db8a0da7c742"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#acf53a5711df9e4c084c8db8a0da7c742">openage::pyinterface::py_equals</a></div><div class="ttdeci">PyIfFunc&lt; bool, PyObject *, PyObject * &gt; py_equals</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00289">pyobject.cpp:289</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a8aa560a3c62f746b36bb98e84bf1934c"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a8aa560a3c62f746b36bb98e84bf1934c">openage::pyinterface::py_calln</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, PyObject *, std::vector&lt; PyObject * &gt; &amp; &gt; py_calln</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00281">pyobject.cpp:281</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_if_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">openage::pyinterface::PyIfFunc</a></div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00407">functional.h:407</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad71d6296abe650b46217af0efb0725a2"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad71d6296abe650b46217af0efb0725a2">openage::pyinterface::False</a></div><div class="ttdeci">PyObjectRef False</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00308">pyobject.cpp:308</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_ad33eb5ce8235933127b3d7ed2f519ce7"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#ad33eb5ce8235933127b3d7ed2f519ce7">openage::pyinterface::py_type</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObject *, PyObjectRef * &gt; py_type</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00294">pyobject.cpp:294</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_object_ref_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_object_ref.xhtml">openage::pyinterface::PyObjectRef</a></div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8h_source.xhtml#l00049">pyobject.h:49</a></div></div>
<div class="ttc" id="constinit__vector_8cpp_xhtml_aad68795cb6d982f4dda0a4b91a8c1577"><div class="ttname"><a href="constinit__vector_8cpp.xhtml#aad68795cb6d982f4dda0a4b91a8c1577">ref</a></div><div class="ttdeci">int * ref</div><div class="ttdef"><b>Definition:</b> <a href="constinit__vector_8cpp_source.xhtml#l00047">constinit_vector.cpp:47</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a1f03713cea0d4ee15fc445111404e7d7"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a1f03713cea0d4ee15fc445111404e7d7">openage::py::integer</a></div><div class="ttdeci">Obj integer(int value)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00345">pyobject.cpp:345</a></div></div>
<div class="ttc" id="defs_8h_xhtml"><div class="ttname"><a href="defs_8h.xhtml">defs.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_a75f2b534b1258ff5d4578f171c3f1caa"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#a75f2b534b1258ff5d4578f171c3f1caa">openage::pyinterface::operator&lt;&lt;</a></div><div class="ttdeci">std::ostream &amp; operator&lt;&lt;(std::ostream &amp;os, const PyObjectRef &amp;ref)</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00261">pyobject.cpp:261</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_xhtml_abc65c10c883e9b61d86316e6e0d71318"><div class="ttname"><a href="namespaceopenage_1_1pyinterface.xhtml#abc65c10c883e9b61d86316e6e0d71318">openage::pyinterface::py_createbytes</a></div><div class="ttdeci">PyIfFunc&lt; void, PyObjectRef *, const std::string &amp; &gt; py_createbytes</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00301">pyobject.cpp:301</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="pyobject_8h.xhtml">pyobject.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
