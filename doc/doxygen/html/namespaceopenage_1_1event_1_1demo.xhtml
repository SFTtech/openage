<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::event::demo Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1event_1_1demo.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">openage::event::demo Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_a_i_input.xhtml">AIInput</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_panel.xhtml">BallReflectPanel</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_ball_reflect_wall.xhtml">BallReflectWall</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_physics.xhtml">Physics</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_ball.xhtml">PongBall</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_event.xhtml">PongEvent</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_player.xhtml">PongPlayer</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_pong_state.xhtml">PongState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1event_1_1demo_1_1_reset_game.xhtml">ResetGame</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a917d739b2622e48457d5ea001955f8af"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8af">timescale</a> { <a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa65296dcb194a9e54080c0abe84c75f31">timescale::NOSLEEP</a>, 
<a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa4abfc22ad3c3ef567d80c65263fd7754">timescale::REALTIME</a>, 
<a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa0e3066cbbd284dce8b76e7c4620d6d75">timescale::SLOW</a>, 
<a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afadca6e617f6fb54033deb311e7e7c93cc">timescale::FAST</a>
 }</td></tr>
<tr class="memdesc:a917d739b2622e48457d5ea001955f8af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Simulation speeds.  <a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8af">More...</a><br /></td></tr>
<tr class="separator:a917d739b2622e48457d5ea001955f8af"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a941b2bcbd6e44b20cc352eb1c2b64068"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a941b2bcbd6e44b20cc352eb1c2b64068">curvepong</a> (bool disable_gui, bool no_human)</td></tr>
<tr class="separator:a941b2bcbd6e44b20cc352eb1c2b64068"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1607b8f39e576983b7c82860db47e224"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a1607b8f39e576983b7c82860db47e224">curvepong</a> ()</td></tr>
<tr class="separator:a1607b8f39e576983b7c82860db47e224"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a917d739b2622e48457d5ea001955f8af"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a917d739b2622e48457d5ea001955f8af">&#9670;&nbsp;</a></span>timescale</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8af">openage::event::demo::timescale</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Simulation speeds. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a917d739b2622e48457d5ea001955f8afa65296dcb194a9e54080c0abe84c75f31"></a>NOSLEEP&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a917d739b2622e48457d5ea001955f8afa4abfc22ad3c3ef567d80c65263fd7754"></a>REALTIME&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a917d739b2622e48457d5ea001955f8afa0e3066cbbd284dce8b76e7c4620d6d75"></a>SLOW&#160;</td><td class="fielddoc"></td></tr>
<tr><td class="fieldname"><a id="a917d739b2622e48457d5ea001955f8afadca6e617f6fb54033deb311e7e7c93cc"></a>FAST&#160;</td><td class="fielddoc"></td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="event_2demo_2main_8cpp_source.xhtml#l00034">34</a> of file <a class="el" href="event_2demo_2main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                     {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa65296dcb194a9e54080c0abe84c75f31">NOSLEEP</a>,</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa4abfc22ad3c3ef567d80c65263fd7754">REALTIME</a>,</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa0e3066cbbd284dce8b76e7c4620d6d75">SLOW</a>,</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afadca6e617f6fb54033deb311e7e7c93cc">FAST</a>,</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;};</div><div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml_a917d739b2622e48457d5ea001955f8afadca6e617f6fb54033deb311e7e7c93cc"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afadca6e617f6fb54033deb311e7e7c93cc">openage::event::demo::timescale::FAST</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml_a917d739b2622e48457d5ea001955f8afa4abfc22ad3c3ef567d80c65263fd7754"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa4abfc22ad3c3ef567d80c65263fd7754">openage::event::demo::timescale::REALTIME</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml_a917d739b2622e48457d5ea001955f8afa65296dcb194a9e54080c0abe84c75f31"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa65296dcb194a9e54080c0abe84c75f31">openage::event::demo::timescale::NOSLEEP</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml_a917d739b2622e48457d5ea001955f8afa0e3066cbbd284dce8b76e7c4620d6d75"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8afa0e3066cbbd284dce8b76e7c4620d6d75">openage::event::demo::timescale::SLOW</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a1607b8f39e576983b7c82860db47e224"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1607b8f39e576983b7c82860db47e224">&#9670;&nbsp;</a></span>curvepong() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int openage::event::demo::curvepong </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

</div>
</div>
<a id="a941b2bcbd6e44b20cc352eb1c2b64068"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a941b2bcbd6e44b20cc352eb1c2b64068">&#9670;&nbsp;</a></span>curvepong() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> void openage::event::demo::curvepong </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>disable_gui</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>no_human</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="event_2demo_2main_8cpp_source.xhtml#l00042">42</a> of file <a class="el" href="event_2demo_2main_8cpp_source.xhtml">main.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                                                {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordtype">bool</span> enable_gui = not disable_gui;</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordtype">bool</span> human_player = not no_human;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <a class="code" href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8af">timescale</a> <a class="code" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">speed</a> = timescale::REALTIME;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    std::shared_ptr&lt;Gui&gt; gui = std::make_shared&lt;Gui&gt;();</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">if</span> (enable_gui) {</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        gui-&gt;init();</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    }</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="keywordtype">bool</span> running = <span class="keyword">true</span>;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">while</span> (running) {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <span class="keyword">auto</span> loop = std::make_shared&lt;Loop&gt;();</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> now = 1;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        Physics phys;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        AIInput ai;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keyword">auto</span> state = std::make_shared&lt;PongState&gt;(loop, enable_gui</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;#<span class="keywordflow">if</span> WITH_NCURSES</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                                                 , gui</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;#endif</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        );</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="namespaceopenage_1_1util_1_1tests.xhtml#ab1596e1f3cfa6d6c8554e6a539731687">Physics::init</a>(state, loop, now);</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        state-&gt;p1-&gt;lives-&gt;set_last(now, 3);</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        state-&gt;p1-&gt;size-&gt;set_last(now, 4);</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        state-&gt;p2-&gt;lives-&gt;set_last(now, 3);</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        state-&gt;p2-&gt;size-&gt;set_last(now, 4);</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            gui-&gt;clear();</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;            gui-&gt;get_display_size(state, now);  <span class="comment">// update gui related parameters</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        }</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">else</span> {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;            state-&gt;display_boundary = {100, 40};</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        }</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        <span class="comment">// initialize the game by resetting physics</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        std::vector&lt;PongEvent&gt; start_event{PongEvent{0, PongEvent::START}};</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        phys.process_input(state, state-&gt;p1, start_event, loop, now);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        std::vector&lt;PongEvent&gt; inputs;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">// this is the game loop, running while both players live!</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="keywordflow">while</span> (state-&gt;p1-&gt;lives-&gt;get(now) &gt; 0 and</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;               state-&gt;p2-&gt;lives-&gt;get(now) &gt; 0) {</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;            <span class="keyword">auto</span> loop_start = Clock::now();</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;            <span class="keywordflow">if</span> (enable_gui) {</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                gui-&gt;clear();</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;                gui-&gt;get_display_size(state, now);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;            }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;            <span class="comment">// process the input for both players</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="comment">// player 1 can be AI or human.</span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;            <span class="keywordflow">if</span> (human_player) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                phys.process_input(state, state-&gt;p1,</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;                                   inputs, loop, now);</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            }</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            <span class="keywordflow">else</span> {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;                phys.process_input(state, state-&gt;p1,</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;                                   ai.get_inputs(state-&gt;p1, state-&gt;ball, now),</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;                                   loop, now);</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            }</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            phys.process_input(state, state-&gt;p2,</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                               ai.get_inputs(state-&gt;p2, state-&gt;ball, now),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                               loop, now);</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="comment">// paddle x positions</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            state-&gt;p1-&gt;paddle_x = 0;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;            state-&gt;p2-&gt;paddle_x = state-&gt;display_boundary[0] - 1;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;            <span class="comment">// evaluate the event queue to reach the desired game time!</span></div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            loop-&gt;reach_time(now, state);</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#if WITH_NCURSES</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;            <span class="keywordflow">if</span> (state-&gt;enable_gui) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;                gui-&gt;draw(state, now);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                <span class="keywordtype">int</span> pos = 1;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;                mvprintw(pos++, state-&gt;display_boundary[0]/2 + 10, <span class="stringliteral">&quot;Enqueued events:&quot;</span>);</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;                <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span> &amp;e : loop-&gt;get_queue().get_event_queue().get_sorted_events()) {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;                    mvprintw(pos++, state-&gt;display_boundary[0]/2 + 10,</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;                             <span class="stringliteral">&quot;%f: %s&quot;</span>,</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                             e-&gt;get_time().to_double(),</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                             e-&gt;get_eventclass()-&gt;id().c_str());</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                }</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                gui-&gt;update_screen();</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                <span class="comment">// get the input after the current frame, because the get_inputs</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                <span class="comment">// implicitly updates the screen. if this is done too early,</span></div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                <span class="comment">// the screen will be updated to be empty -&gt; flickering.</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                <span class="comment">// \todo take terminal input without ncurses, if on tty? e.g. &#39;q&#39; to close it?</span></div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                inputs = gui-&gt;get_inputs(state-&gt;p1);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="comment">// handle timing for screen refresh and simulation advancement</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;            <span class="keyword">using</span> dt_s_t = std::chrono::duration&lt;double, std::ratio&lt;1&gt;&gt;;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            <span class="keyword">using</span> dt_ms_t = std::chrono::duration&lt;double, std::milli&gt;;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="comment">// microseconds per frame</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            <span class="comment">// 30fps = 1s/30 = 1000000us/30 per frame</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            constexpr <span class="keyword">static</span> std::chrono::microseconds per_frame = 33333us;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            constexpr <span class="keyword">static</span> <a class="code" href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">curve::time_t</a> per_frame_s = std::chrono::duration_cast&lt;dt_s_t&gt;(per_frame).count();</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">if</span> (speed == timescale::NOSLEEP) {</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="comment">// increase the simulation loop time a bit</span></div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;                SDL_Delay(5);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;            }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            dt_ms_t dt_us = Clock::now() - loop_start;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            <span class="keywordflow">if</span> (speed != timescale::NOSLEEP) {</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                dt_ms_t wait_time = per_frame - dt_us;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="keywordflow">if</span> (wait_time &gt; dt_ms_t::zero()) {</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                    SDL_Delay(wait_time.count());</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                }</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            }</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">switch</span> (speed) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            <span class="keywordflow">case</span> timescale::NOSLEEP:</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                <span class="comment">// advance the frame calculation time only,</span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;                <span class="comment">// because we didn&#39;t sleep</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                now += std::chrono::duration_cast&lt;dt_s_t&gt;(dt_us).count();</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">case</span> timescale::REALTIME:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;                <span class="comment">// advance the game time in seconds</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;                now += per_frame_s;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            <span class="keywordflow">case</span> timescale::SLOW:</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;                now += per_frame_s / 10;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;            <span class="keywordflow">case</span> timescale::FAST:</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;                now += per_frame_s * 4;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;                <span class="keywordflow">break</span>;</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;            }</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        }</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;}</div><div class="ttc" id="namespaceopenage_xhtml_a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153"><div class="ttname"><a href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::attr_type::speed</a></div></div>
<div class="ttc" id="namespaceopenage_1_1curve_xhtml_af909cf1de79df6389fd9431b7424b48a"><div class="ttname"><a href="namespaceopenage_1_1curve.xhtml#af909cf1de79df6389fd9431b7424b48a">openage::curve::time_t</a></div><div class="ttdeci">util::FixedPoint&lt; int64_t, 16 &gt; time_t</div><div class="ttdoc">Defines the type that is used as time index.</div><div class="ttdef"><b>Definition:</b> <a href="curve_8h_source.xhtml#l00016">curve.h:16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1event_1_1demo_xhtml_a917d739b2622e48457d5ea001955f8af"><div class="ttname"><a href="namespaceopenage_1_1event_1_1demo.xhtml#a917d739b2622e48457d5ea001955f8af">openage::event::demo::timescale</a></div><div class="ttdeci">timescale</div><div class="ttdoc">Simulation speeds.</div><div class="ttdef"><b>Definition:</b> <a href="event_2demo_2main_8cpp_source.xhtml#l00034">main.cpp:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1tests_xhtml_ab1596e1f3cfa6d6c8554e6a539731687"><div class="ttname"><a href="namespaceopenage_1_1util_1_1tests.xhtml#ab1596e1f3cfa6d6c8554e6a539731687">openage::util::tests::init</a></div><div class="ttdeci">void init()</div><div class="ttdef"><b>Definition:</b> <a href="init_8cpp_source.xhtml#l00020">init.cpp:20</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="aicontroller_8cpp_source.xhtml#l00007">openage::event::demo::AIInput::get_inputs()</a>, <a class="el" href="init_8cpp_source.xhtml#l00020">openage::util::tests::init()</a>, <a class="el" href="physics_8cpp_source.xhtml#l00383">openage::event::demo::Physics::process_input()</a>, and <a class="el" href="namespaceopenage.xhtml#a38adadf644885a7fe121be11ffeb8c36ace4ef3ec98443ed10da505114b58f153">openage::speed</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1event_1_1demo_a941b2bcbd6e44b20cc352eb1c2b64068_cgraph.svg" width="100%" height="579"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event.xhtml">event</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1event_1_1demo.xhtml">demo</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
