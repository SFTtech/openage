<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.codegen.codegen Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1codegen_1_1codegen.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">openage.codegen.codegen Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml">CodegenDirWrapper</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Only allows pure-read and pure-write operations;.  <a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml">CodegenMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modus operandi.  <a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml">WriteCatcher</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae7b44d30354970dff216b8f5d58fdd02"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#ae7b44d30354970dff216b8f5d58fdd02">codegen</a> (mode, input_dir, output_dir)</td></tr>
<tr class="separator:ae7b44d30354970dff216b8f5d58fdd02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3231dc85f25b4690179432502707a9c2"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">depend_module_blacklist</a> ()</td></tr>
<tr class="separator:a3231dc85f25b4690179432502707a9c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8de5b571a29191e7550c6acae3367da9"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">get_codegen_depends</a> (outputwrapper)</td></tr>
<tr class="memdesc:a8de5b571a29191e7550c6acae3367da9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Yields all codegen dependencies.  <a href="#a8de5b571a29191e7550c6acae3367da9">More...</a><br /></td></tr>
<tr class="separator:a8de5b571a29191e7550c6acae3367da9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cce911eb4c73e57753d1a055e95549b"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">get_header_lines</a> ()</td></tr>
<tr class="memdesc:a7cce911eb4c73e57753d1a055e95549b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Yields the lines for the automatically-added file header.  <a href="#a7cce911eb4c73e57753d1a055e95549b">More...</a><br /></td></tr>
<tr class="separator:a7cce911eb4c73e57753d1a055e95549b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e6e694be0654b40e778b12ff2334b87"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">postprocess_write</a> (parts, data)</td></tr>
<tr class="memdesc:a1e6e694be0654b40e778b12ff2334b87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Post-processes a single write operation, as intercepted during codegen.  <a href="#a1e6e694be0654b40e778b12ff2334b87">More...</a><br /></td></tr>
<tr class="separator:a1e6e694be0654b40e778b12ff2334b87"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="ae7b44d30354970dff216b8f5d58fdd02"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7b44d30354970dff216b8f5d58fdd02">&#9670;&nbsp;</a></span>codegen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.codegen.codegen.codegen </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>input_dir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>output_dir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="codegen_8py_source.xhtml#l00118">118</a> of file <a class="el" href="codegen_8py_source.xhtml">codegen.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    output_dir = Directory(output_dir).root</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment"># this wrapper intercepts all writes and logs all reads.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    wrapper = CodegenDirWrapper(input_dir)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1listing.xhtml#a8178b40ca254e32043552b4b3f13aeeb">generate_all</a>(wrapper.root)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment"># set of all generated filenames</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    generated = set()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">for</span> parts, data <span class="keywordflow">in</span> wrapper.get_writes():</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment"># TODO: this assumes output_dir is a fslike.Directory!</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        generated.add(output_dir.fsobj.resolve(parts))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment"># now, actually perform the generation.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment"># first, assemble the path for the current file</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        wpath = output_dir[parts]</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            data = <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">postprocess_write</a>(parts, data)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">except</span> ValueError <span class="keyword">as</span> exc:</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(<span class="stringliteral">&quot;code generation issue with output file %s:\n%s&quot;</span>,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>), exc.args[0])</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            sys.exit(1)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> mode == CodegenMode.codegen:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment"># skip writing if the file already has that exact content</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">try</span>:</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keyword">with</span> wpath.open(<span class="stringliteral">&#39;rb&#39;</span>) <span class="keyword">as</span> outfile:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    <span class="keywordflow">if</span> outfile.read() == data:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="keywordflow">continue</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">except</span> FileNotFoundError:</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">pass</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="comment"># write new content to file</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            wpath.parent.mkdirs()</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keyword">with</span> wpath.open(<span class="stringliteral">&#39;wb&#39;</span>) <span class="keyword">as</span> outfile:</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                print(<span class="stringliteral">&quot;\x1b[36mcodegen: %s\x1b[0m&quot;</span> % b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                outfile.write(data)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">elif</span> mode == CodegenMode.dryrun:</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment"># no-op</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">pass</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">elif</span> mode == CodegenMode.clean:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span> wpath.is_file():</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                print(b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>))</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                wpath.unlink()</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(<span class="stringliteral">&quot;unknown codegen mode: %s&quot;</span>, mode)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            sys.exit(1)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    generated = {os.path.realpath(path).decode() <span class="keywordflow">for</span> path <span class="keywordflow">in</span> generated}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    depends = {os.path.realpath(path) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">get_codegen_depends</a>(wrapper)}</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> generated, depends</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">depend_module_blacklist</a>():</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">    Yields all modules whose source files shall explicitly not appear in the</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">    dependency list, even if they have been imported.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment"># openage.config is created only after the first run of cmake,</span></div><div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a1e6e694be0654b40e778b12ff2334b87"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">openage.codegen.codegen.postprocess_write</a></div><div class="ttdeci">def postprocess_write(parts, data)</div><div class="ttdoc">Post-processes a single write operation, as intercepted during codegen.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00266">codegen.py:266</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1listing_xhtml_a8178b40ca254e32043552b4b3f13aeeb"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1listing.xhtml#a8178b40ca254e32043552b4b3f13aeeb">openage.codegen.listing.generate_all</a></div><div class="ttdeci">def generate_all(projectdir)</div><div class="ttdoc">Contains the listing of all code generator invocations.</div><div class="ttdef"><b>Definition:</b> <a href="listing_8py_source.xhtml#l00013">listing.py:13</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a3231dc85f25b4690179432502707a9c2"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">openage.codegen.codegen.depend_module_blacklist</a></div><div class="ttdeci">def depend_module_blacklist()</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00181">codegen.py:181</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a8de5b571a29191e7550c6acae3367da9"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">openage.codegen.codegen.get_codegen_depends</a></div><div class="ttdeci">def get_codegen_depends(outputwrapper)</div><div class="ttdoc">Yields all codegen dependencies.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00207">codegen.py:207</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="log_2____init_____8py_source.xhtml#l00124">openage::log.err()</a>, <a class="el" href="listing_8py_source.xhtml#l00013">openage.codegen.listing.generate_all()</a>, <a class="el" href="codegen_8py_source.xhtml#l00207">openage.codegen.codegen.get_codegen_depends()</a>, and <a class="el" href="codegen_8py_source.xhtml#l00266">openage.codegen.codegen.postprocess_write()</a>.</p>

<p class="reference">Referenced by <a class="el" href="codegen_2main_8py_source.xhtml#l00110">openage.codegen.main.main()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_ae7b44d30354970dff216b8f5d58fdd02_cgraph.svg" width="100%" height="586"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_ae7b44d30354970dff216b8f5d58fdd02_icgraph.svg" width="478" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3231dc85f25b4690179432502707a9c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3231dc85f25b4690179432502707a9c2">&#9670;&nbsp;</a></span>depend_module_blacklist()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.codegen.codegen.depend_module_blacklist </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="codegen_8py_source.xhtml#l00181">181</a> of file <a class="el" href="codegen_8py_source.xhtml">codegen.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment"># thus, the depends list will change at the second run of codegen,</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment"># re-triggering cmake.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">import</span> openage.config</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">yield</span> openage.config</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">except</span> ImportError:</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment"># devmode is imported by config, so the same reason as above applies.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">yield</span> <a class="code" href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">except</span> ImportError:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">get_codegen_depends</a>(outputwrapper):</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1devmode_xhtml"><div class="ttname"><a href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="ttdef"><b>Definition:</b> <a href="devmode_8py_source.xhtml#l00001">devmode.py:1</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a8de5b571a29191e7550c6acae3367da9"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">openage.codegen.codegen.get_codegen_depends</a></div><div class="ttdeci">def get_codegen_depends(outputwrapper)</div><div class="ttdoc">Yields all codegen dependencies.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00207">codegen.py:207</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="codegen_8py_source.xhtml#l00207">openage.codegen.codegen.get_codegen_depends()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a3231dc85f25b4690179432502707a9c2_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a8de5b571a29191e7550c6acae3367da9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8de5b571a29191e7550c6acae3367da9">&#9670;&nbsp;</a></span>get_codegen_depends()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.codegen.codegen.get_codegen_depends </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>outputwrapper</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Yields all codegen dependencies. </p>
<p>outputwrapper is the <a class="el" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml" title="Only allows pure-read and pure-write operations;.">CodegenDirWrapper</a> that was passed to generate_all; it's used to determine the files that have been read.</p>
<p>In addition, all imported python modules are yielded. </p>

<p class="definition">Definition at line <a class="el" href="codegen_8py_source.xhtml#l00207">207</a> of file <a class="el" href="codegen_8py_source.xhtml">codegen.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">for</span> parts <span class="keywordflow">in</span> outputwrapper.get_reads():</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="comment"># TODO: this assumes that the wrap.obj.fsobj is a fslike.Directory</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="comment"># this just resolves paths to the output directory</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">yield</span> outputwrapper.obj.fsobj.resolve(parts).decode()</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    module_blacklist = set(<a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">depend_module_blacklist</a>())</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="comment"># add all source files that have been loaded as depends</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">for</span> module <span class="keywordflow">in</span> modules.values():</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">if</span> module <span class="keywordflow">in</span> module_blacklist:</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            filename = module.__file__</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">except</span> AttributeError:</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="comment"># built-in modules don&#39;t have __file__, we don&#39;t want those as</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="comment"># depends.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">if</span> filename <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="comment"># some modules have __file__ == None, we don&#39;t want those either.</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span> module.__package__ == <span class="stringliteral">&#39;&#39;</span>:</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> filename.endswith(<span class="stringliteral">&#39;.py&#39;</span>):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="comment"># This usually means that some .so file is imported as module.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="comment"># This is not a problem as long as it&#39;s not &quot;our&quot; .so file.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="comment"># =&gt; just handle non-openage non-.py files normally</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;openage&#39;</span> <span class="keywordflow">in</span> module.__name__:</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                print(<span class="stringliteral">&quot;codegeneration depends on non-.py module &quot;</span> + filename)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                sys.exit(1)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">yield</span> filename</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">get_header_lines</a>():</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a3231dc85f25b4690179432502707a9c2"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">openage.codegen.codegen.depend_module_blacklist</a></div><div class="ttdeci">def depend_module_blacklist()</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00181">codegen.py:181</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a7cce911eb4c73e57753d1a055e95549b"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">openage.codegen.codegen.get_header_lines</a></div><div class="ttdeci">def get_header_lines()</div><div class="ttdoc">Yields the lines for the automatically-added file header.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00250">codegen.py:250</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="codegen_8py_source.xhtml#l00181">openage.codegen.codegen.depend_module_blacklist()</a>.</p>

<p class="reference">Referenced by <a class="el" href="codegen_8py_source.xhtml#l00118">openage.codegen.codegen.codegen()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a8de5b571a29191e7550c6acae3367da9_cgraph.svg" width="480" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a8de5b571a29191e7550c6acae3367da9_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a7cce911eb4c73e57753d1a055e95549b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cce911eb4c73e57753d1a055e95549b">&#9670;&nbsp;</a></span>get_header_lines()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.codegen.codegen.get_header_lines </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Yields the lines for the automatically-added file header. </p>

<p class="definition">Definition at line <a class="el" href="codegen_8py_source.xhtml#l00250">250</a> of file <a class="el" href="codegen_8py_source.xhtml">codegen.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keywordflow">yield</span> (</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="stringliteral">&quot;Copyright 2013-{year} the openage authors. &quot;</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="stringliteral">&quot;See copying.md for legal info.&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    ).format(year=datetime.now().year)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;Warning: this file was auto-generated; manual changes are futile.&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;For details, see buildsystem/codegen.cmake and openage/codegen.&quot;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">postprocess_write</a>(parts, data):</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a1e6e694be0654b40e778b12ff2334b87"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">openage.codegen.codegen.postprocess_write</a></div><div class="ttdeci">def postprocess_write(parts, data)</div><div class="ttdoc">Post-processes a single write operation, as intercepted during codegen.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00266">codegen.py:266</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="codegen_8py_source.xhtml#l00266">openage.codegen.codegen.postprocess_write()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a7cce911eb4c73e57753d1a055e95549b_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a1e6e694be0654b40e778b12ff2334b87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e6e694be0654b40e778b12ff2334b87">&#9670;&nbsp;</a></span>postprocess_write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.codegen.codegen.postprocess_write </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>parts</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Post-processes a single write operation, as intercepted during codegen. </p>

<p class="definition">Definition at line <a class="el" href="codegen_8py_source.xhtml#l00266">266</a> of file <a class="el" href="codegen_8py_source.xhtml">codegen.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    <span class="keywordflow">if</span> parts[0] != b<span class="stringliteral">&quot;libopenage&quot;</span>:</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Not in libopenage source directory&quot;</span>)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment"># test whether filename matches the pattern *.gen.*</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    name, extension = os.path.splitext(parts[-1].decode())</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name.endswith(<span class="stringliteral">&#39;.gen&#39;</span>):</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Doesn&#39;t match required filename format .gen.SUFFIX&quot;</span>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="comment"># check file extension, and use the appropriate comment prefix</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">if</span> extension <span class="keywordflow">in</span> {<span class="stringliteral">&#39;.h&#39;</span>, <span class="stringliteral">&#39;.cpp&#39;</span>}:</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        comment_prefix = <span class="stringliteral">&#39;//&#39;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Extension not in {.h, .cpp}&quot;</span>)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    datalines = data.decode(<span class="stringliteral">&#39;ascii&#39;</span>).<a class="code" href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">split</a>(<span class="stringliteral">&#39;\n&#39;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&#39;Copyright&#39;</span> <span class="keywordflow">in</span> datalines[0]:</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        datalines = datalines[1:]</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    headerlines = []</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">get_header_lines</a>():</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">if</span> line:</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            headerlines.append(comment_prefix + <span class="stringliteral">&quot; &quot;</span> + line)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            headerlines.append(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;\n&#39;</span>.join(chain(headerlines, datalines)).encode(<span class="stringliteral">&#39;ascii&#39;</span>)</div><div class="ttc" id="namespaceopenage_1_1util_xhtml_af74fec80080f6c627e5539bb20493ba0"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#af74fec80080f6c627e5539bb20493ba0">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a7cce911eb4c73e57753d1a055e95549b"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">openage.codegen.codegen.get_header_lines</a></div><div class="ttdeci">def get_header_lines()</div><div class="ttdoc">Yields the lines for the automatically-added file header.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00250">codegen.py:250</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="codegen_8py_source.xhtml#l00250">openage.codegen.codegen.get_header_lines()</a>, and <a class="el" href="strings_8cpp_source.xhtml#l00136">openage::util.split()</a>.</p>

<p class="reference">Referenced by <a class="el" href="codegen_8py_source.xhtml#l00118">openage.codegen.codegen.codegen()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a1e6e694be0654b40e778b12ff2334b87_cgraph.svg" width="510" height="104"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1codegen_1_1codegen_a1e6e694be0654b40e778b12ff2334b87_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1codegen.xhtml">codegen</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1codegen_1_1codegen.xhtml">codegen</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
