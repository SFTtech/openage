<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.convert.blendomatic.BlendingMode Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage.convert.blendomatic.BlendingMode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage.convert.blendomatic.BlendingMode:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode__coll__graph.svg" width="206" height="162"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a24383622e7c86f981971b1e143cac37a"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#a24383622e7c86f981971b1e143cac37a">__init__</a> (self, idx, data_file, tile_count, header)</td></tr>
<tr class="separator:a24383622e7c86f981971b1e143cac37a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1301aa1adfc9ad82d074d3af9ea85bd1"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#a1301aa1adfc9ad82d074d3af9ea85bd1">get_tile_from_data</a> (self, data)</td></tr>
<tr class="memdesc:a1301aa1adfc9ad82d074d3af9ea85bd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">get the data pixels, interprete them in isometric tile format  <a href="#a1301aa1adfc9ad82d074d3af9ea85bd1">More...</a><br /></td></tr>
<tr class="separator:a1301aa1adfc9ad82d074d3af9ea85bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a11f7ad1bcac957d6dd0c8d7fe0ef619f"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#a11f7ad1bcac957d6dd0c8d7fe0ef619f">pxcount</a></td></tr>
<tr class="separator:a11f7ad1bcac957d6dd0c8d7fe0ef619f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57535a4b1e21ed2a05c631814bf53ed1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#a57535a4b1e21ed2a05c631814bf53ed1">row_count</a></td></tr>
<tr class="separator:a57535a4b1e21ed2a05c631814bf53ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bbf810eb3a1ba01b9b6edb73646ac39"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#a0bbf810eb3a1ba01b9b6edb73646ac39">alphamasks</a></td></tr>
<tr class="separator:a0bbf810eb3a1ba01b9b6edb73646ac39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af177dfb90bcb74cf40fe641626dc87e2"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml#af177dfb90bcb74cf40fe641626dc87e2">bitmasks</a></td></tr>
<tr class="separator:af177dfb90bcb74cf40fe641626dc87e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00073">73</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a24383622e7c86f981971b1e143cac37a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a24383622e7c86f981971b1e143cac37a">&#9670;&nbsp;</a></span>__init__()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.blendomatic.BlendingMode.__init__ </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>idx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data_file</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>tile_count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>header</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00086">86</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment"># should be 2353 -&gt; number of pixels (single alpha byte values)</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        self.pxcount = header[0]</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;        <span class="comment"># tile_flags = header[1:]  # TODO what do they do?</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>(<span class="stringliteral">&quot;blending mode %d tiles have %d pixels&quot;</span>, idx, self.pxcount)</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="comment"># as we draw in isometric tile format, this is the row count</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        self.row_count = int(<a class="code" href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">sqrt</a>(self.pxcount)) + 1  <span class="comment"># should be 49</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        <span class="comment"># alpha_masks_raw is an array of bytes that will draw 32 images,</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <span class="comment"># which are bit masks.</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="comment">#</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment"># one of these masks also has 2353 pixels</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        <span class="comment"># the storage of the bit masks is 4*tilesize, here&#39;s why:</span></div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <span class="comment">#</span></div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <span class="comment"># 4 * 8bit * 2353 pixels = 75296 bitpixels</span></div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;        <span class="comment"># ==&gt; 75296/(32 images) = 2353 bitpixel/image</span></div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">#</span></div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="comment"># this means if we interprete the 75296 bitpixels as 32 images,</span></div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="comment"># each of these images gets 2353 bit as data.</span></div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment"># TODO: why 32 images? isn&#39;t that depending on tile_count?</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        alpha_masks_raw = unpack_from(<span class="stringliteral">&quot;%dB&quot;</span> % (self.pxcount * 4),</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;                                      data_file.read(self.pxcount * 4))</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment"># list of alpha-mask tiles</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        self.alphamasks = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        <span class="comment"># draw mask tiles for this blending mode</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">for</span> _ <span class="keywordflow">in</span> range(tile_count):</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            pixels = unpack_from(<span class="stringliteral">&quot;%dB&quot;</span> % self.pxcount,</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;                                 data_file.read(self.pxcount))</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;            self.alphamasks.append(self.get_tile_from_data(pixels))</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        bitvalues = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">for</span> i <span class="keywordflow">in</span> alpha_masks_raw:</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            <span class="keywordflow">for</span> b_id <span class="keywordflow">in</span> range(7, -1, -1):</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;                <span class="comment"># bitmask from 0b00000001 to 0b10000000</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;                bit_mask = 2 ** b_id</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;                bitvalues.append(i &amp; bit_mask)</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="comment"># list of bit-mask tiles</span></div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        self.bitmasks = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment"># TODO: is 32 really hardcoded?</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(32):</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;            pixels = bitvalues[i * self.pxcount:(i + 1) * self.pxcount]</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;            self.bitmasks.append(self.get_tile_from_data(pixels))</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keyword">def </span>get_tile_from_data(self, data):</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"><div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a0fc492a11cf74e80f976b24bea2a2eb2"><div class="ttname"><a href="namespacestd.xhtml#a0fc492a11cf74e80f976b24bea2a2eb2">std::sqrt</a></div><div class="ttdeci">constexpr double sqrt(openage::util::FixedPoint&lt; I, F &gt; n)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00470">fixed_point.h:470</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1301aa1adfc9ad82d074d3af9ea85bd1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1301aa1adfc9ad82d074d3af9ea85bd1">&#9670;&nbsp;</a></span>get_tile_from_data()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.convert.blendomatic.BlendingMode.get_tile_from_data </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>self</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>data</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>get the data pixels, interprete them in isometric tile format </p>
<pre class="fragment">     ....*....
     ..*****..
     *********
     ..*****..
     ....*....  like this, only bigger..

   we end up drawing the rhombus with 49 rows.
   the space indicated by . is added by the function.
</pre> 
<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00150">150</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        half_row_count = self.row_count // 2</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;        tile_size = len(data)</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;        read_so_far = 0</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        max_width = 0</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        tilerows = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>()</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">for</span> y_pos <span class="keywordflow">in</span> range(self.row_count):</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">if</span> y_pos &lt; half_row_count:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                <span class="comment"># upper half of the tile</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="comment"># row i+1 has 4 more pixels than row i</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="comment"># another +1 for the middle one</span></div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                read_values = 1 + (4 * y_pos)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="keywordflow">else</span>:</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="comment"># lower half of tile</span></div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                read_values = (((self.row_count * 2) - 1) -</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                               (4 * (y_pos - half_row_count)))</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            <span class="keywordflow">if</span> read_values &gt; (tile_size - read_so_far):</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;reading more bytes than tile has left&quot;</span>)</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">if</span> read_values &lt; 0:</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;reading negative count: %d&quot;</span> % read_values)</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;            <span class="comment"># grab the pixels out of the big list</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;            pixels = <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(data[read_so_far:(read_so_far + read_values)])</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="comment"># how many empty pixels on the left before the real data begins</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            space_count = self.row_count - 1 - (read_values // 2)</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            <span class="comment"># insert padding to the left and right (-1 for fully transparent)</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            padding = ([-1] * space_count)</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            pixels = padding + pixels + padding</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;            <span class="keywordflow">if</span> len(pixels) &gt; max_width:</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                max_width = len(pixels)</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            read_so_far += read_values</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            tilerows.append(pixels)</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="keywordflow">if</span> read_so_far != tile_size:</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            <span class="keywordflow">raise</span> Exception(<span class="stringliteral">&quot;got leftover bytes: %d&quot;</span> % (tile_size - read_so_far))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> BlendingTile(tilerows, max_width, self.row_count)</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">class </span>Blendomatic(Exportable):</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="stringliteral">    Represents the blendomatic.dat file.</span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="stringliteral">    In it are multiple blending modes,</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="stringliteral">    which then contain multiple tiles.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div><div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, and <a class="el" href="blendomatic_8py_source.xhtml#l00095">openage.convert.blendomatic.BlendingMode.row_count</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode_a1301aa1adfc9ad82d074d3af9ea85bd1_cgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div></div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a0bbf810eb3a1ba01b9b6edb73646ac39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0bbf810eb3a1ba01b9b6edb73646ac39">&#9670;&nbsp;</a></span>alphamasks</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.blendomatic.BlendingMode.alphamasks</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00114">114</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>

</div>
</div>
<a id="af177dfb90bcb74cf40fe641626dc87e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af177dfb90bcb74cf40fe641626dc87e2">&#9670;&nbsp;</a></span>bitmasks</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.blendomatic.BlendingMode.bitmasks</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00130">130</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>

</div>
</div>
<a id="a11f7ad1bcac957d6dd0c8d7fe0ef619f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a11f7ad1bcac957d6dd0c8d7fe0ef619f">&#9670;&nbsp;</a></span>pxcount</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.blendomatic.BlendingMode.pxcount</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00089">89</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>

</div>
</div>
<a id="a57535a4b1e21ed2a05c631814bf53ed1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57535a4b1e21ed2a05c631814bf53ed1">&#9670;&nbsp;</a></span>row_count</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage.convert.blendomatic.BlendingMode.row_count</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="blendomatic_8py_source.xhtml#l00095">95</a> of file <a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a>.</p>

<p class="reference">Referenced by <a class="el" href="blendomatic_8py_source.xhtml#l00150">openage.convert.blendomatic.BlendingMode.get_tile_from_data()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/openage/convert/<a class="el" href="blendomatic_8py_source.xhtml">blendomatic.py</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert.xhtml">convert</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1convert_1_1blendomatic.xhtml">blendomatic</a></li><li class="navelem"><a class="el" href="classopenage_1_1convert_1_1blendomatic_1_1_blending_mode.xhtml">BlendingMode</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
