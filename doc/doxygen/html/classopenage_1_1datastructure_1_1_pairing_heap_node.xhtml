<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: openage::datastructure::PairingHeapNode&lt; T, compare &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1datastructure_1_1_pairing_heap_node-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::datastructure::PairingHeapNode&lt; T, compare &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for openage::datastructure::PairingHeapNode&lt; T, compare &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_node__inherit__graph.svg" width="206" height="492"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div class="dynheader">
Collaboration diagram for openage::datastructure::PairingHeapNode&lt; T, compare &gt;:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1datastructure_1_1_pairing_heap_node__coll__graph.svg" width="206" height="492"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ad25d6fdfdc3e7bfc92d2c77395571e75"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> = <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a>&lt; T, compare &gt;</td></tr>
<tr class="separator:ad25d6fdfdc3e7bfc92d2c77395571e75"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af1b32b518657c3a03efa60240c5634d5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#af1b32b518657c3a03efa60240c5634d5">PairingHeapNode</a> (const T &amp;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a3dcccc1c86bffe3bf6d852687bd8a9c4">data</a>)</td></tr>
<tr class="separator:af1b32b518657c3a03efa60240c5634d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17ab80e5ef35e2d22599ebcfabbdf639"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a17ab80e5ef35e2d22599ebcfabbdf639">PairingHeapNode</a> (T &amp;&amp;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a3dcccc1c86bffe3bf6d852687bd8a9c4">data</a>)</td></tr>
<tr class="separator:a17ab80e5ef35e2d22599ebcfabbdf639"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2d2dd30261c2108d7ff21a4df43098c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad2d2dd30261c2108d7ff21a4df43098c">~PairingHeapNode</a> ()=default</td></tr>
<tr class="separator:ad2d2dd30261c2108d7ff21a4df43098c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f1e12c9a1871b3ba19edb4a73935ae4"><td class="memItemLeft" align="right" valign="top">const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a4f1e12c9a1871b3ba19edb4a73935ae4">get_data</a> () const</td></tr>
<tr class="separator:a4f1e12c9a1871b3ba19edb4a73935ae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b2c1f83d627f4f401d53787e9fa076f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a0b2c1f83d627f4f401d53787e9fa076f">become_child_of</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;node)</td></tr>
<tr class="separator:a0b2c1f83d627f4f401d53787e9fa076f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6b72619532af9b5a828dd541a225b1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a3f6b72619532af9b5a828dd541a225b1">add_child</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;new_child)</td></tr>
<tr class="separator:a3f6b72619532af9b5a828dd541a225b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9de129f708553f7a91cdfbacc9b48ea6"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a9de129f708553f7a91cdfbacc9b48ea6">link_with</a> (const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;node)</td></tr>
<tr class="separator:a9de129f708553f7a91cdfbacc9b48ea6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6227d9be8c7b75e3456c25850e324327"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a6227d9be8c7b75e3456c25850e324327">link_backwards</a> ()</td></tr>
<tr class="separator:a6227d9be8c7b75e3456c25850e324327"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a954463b2218a69cf977df80d4bd7d872"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a954463b2218a69cf977df80d4bd7d872">loosen</a> ()</td></tr>
<tr class="separator:a954463b2218a69cf977df80d4bd7d872"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a3aca0150a01a40ee16f3da49f38c3c31"><td class="memItemLeft" align="right" valign="top">friend&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a3aca0150a01a40ee16f3da49f38c3c31">PairingHeap&lt; T, compare, this_type &gt;</a></td></tr>
<tr class="separator:a3aca0150a01a40ee16f3da49f38c3c31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dcccc1c86bffe3bf6d852687bd8a9c4"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a3dcccc1c86bffe3bf6d852687bd8a9c4">data</a></td></tr>
<tr class="separator:a3dcccc1c86bffe3bf6d852687bd8a9c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa48e37e1eb9ea1cd87cf17b2f511b479"><td class="memItemLeft" align="right" valign="top">compare&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#aa48e37e1eb9ea1cd87cf17b2f511b479">cmp</a></td></tr>
<tr class="separator:aa48e37e1eb9ea1cd87cf17b2f511b479"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a913846c9030bbcb2502d4cc96cd56afa"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a913846c9030bbcb2502d4cc96cd56afa">first_child</a></td></tr>
<tr class="separator:a913846c9030bbcb2502d4cc96cd56afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01fb1e27e0012a6f31147c7d11a4fc08"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a01fb1e27e0012a6f31147c7d11a4fc08">prev_sibling</a></td></tr>
<tr class="separator:a01fb1e27e0012a6f31147c7d11a4fc08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5275316630476a1db17714404feb3d34"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#a5275316630476a1db17714404feb3d34">next_sibling</a></td></tr>
<tr class="separator:a5275316630476a1db17714404feb3d34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8766c62075853897ab56f7066315813"><td class="memItemLeft" align="right" valign="top">std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ae8766c62075853897ab56f7066315813">parent</a></td></tr>
<tr class="separator:ae8766c62075853897ab56f7066315813"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, typename compare = std::less&lt;T&gt;&gt;<br />
class openage::datastructure::PairingHeapNode&lt; T, compare &gt;</h3>


<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00042">42</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>
</div><h2 class="groupheader">Member Typedef Documentation</h2>
<a id="ad25d6fdfdc3e7bfc92d2c77395571e75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad25d6fdfdc3e7bfc92d2c77395571e75">&#9670;&nbsp;</a></span>this_type</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">using <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> =  <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a>&lt;T, compare&gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00044">44</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="af1b32b518657c3a03efa60240c5634d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1b32b518657c3a03efa60240c5634d5">&#9670;&nbsp;</a></span>PairingHeapNode() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a> </td>
          <td>(</td>
          <td class="paramtype">const T &amp;&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00052">52</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a17ab80e5ef35e2d22599ebcfabbdf639"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17ab80e5ef35e2d22599ebcfabbdf639">&#9670;&nbsp;</a></span>PairingHeapNode() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a> </td>
          <td>(</td>
          <td class="paramtype">T &amp;&amp;&#160;</td>
          <td class="paramname"><em>data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00056">56</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="ad2d2dd30261c2108d7ff21a4df43098c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2d2dd30261c2108d7ff21a4df43098c">&#9670;&nbsp;</a></span>~PairingHeapNode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::~<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3f6b72619532af9b5a828dd541a225b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f6b72619532af9b5a828dd541a225b1">&#9670;&nbsp;</a></span>add_child()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::add_child </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>new_child</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Add the given node as a child to this one. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00079">79</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a0b2c1f83d627f4f401d53787e9fa076f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b2c1f83d627f4f401d53787e9fa076f">&#9670;&nbsp;</a></span>become_child_of()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::become_child_of </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Let this node become a child of the given one. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00072">72</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a4f1e12c9a1871b3ba19edb4a73935ae4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f1e12c9a1871b3ba19edb4a73935ae4">&#9670;&nbsp;</a></span>get_data()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const T&amp; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::get_data </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Get contained node data. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00065">65</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a6227d9be8c7b75e3456c25850e324327"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6227d9be8c7b75e3456c25850e324327">&#9670;&nbsp;</a></span>link_backwards()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::link_backwards </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Link all siblings backwards from right to left. Recursive call, one stage for each all childs of the root node. This results in the computation of the new subtree root. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00134">134</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a9de129f708553f7a91cdfbacc9b48ea6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9de129f708553f7a91cdfbacc9b48ea6">&#9670;&nbsp;</a></span>link_with()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::link_with </td>
          <td>(</td>
          <td class="paramtype">const std::shared_ptr&lt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>node</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>This method decides which node becomes the new root node by comparing <code>this</code> with <code>node</code>. The new root is returned, it has the other node as child. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00099">99</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a954463b2218a69cf977df80d4bd7d872"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a954463b2218a69cf977df80d4bd7d872">&#9670;&nbsp;</a></span>loosen()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::loosen </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Cut this node from all parent and sibling connections, but keeps the child pointer. This effectively cuts out the subtree. </p>

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00157">157</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="aa48e37e1eb9ea1cd87cf17b2f511b479"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa48e37e1eb9ea1cd87cf17b2f511b479">&#9670;&nbsp;</a></span>cmp</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">compare <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::cmp</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00049">49</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a3dcccc1c86bffe3bf6d852687bd8a9c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dcccc1c86bffe3bf6d852687bd8a9c4">&#9670;&nbsp;</a></span>data</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::data</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00048">48</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a913846c9030bbcb2502d4cc96cd56afa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a913846c9030bbcb2502d4cc96cd56afa">&#9670;&nbsp;</a></span>first_child</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::first_child</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00182">182</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a5275316630476a1db17714404feb3d34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5275316630476a1db17714404feb3d34">&#9670;&nbsp;</a></span>next_sibling</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::next_sibling</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00184">184</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a3aca0150a01a40ee16f3da49f38c3c31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3aca0150a01a40ee16f3da49f38c3c31">&#9670;&nbsp;</a></span>PairingHeap&lt; T, compare, this_type &gt;</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">friend <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap.xhtml">PairingHeap</a>&lt; T, compare, <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a> &gt;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00046">46</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="ae8766c62075853897ab56f7066315813"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae8766c62075853897ab56f7066315813">&#9670;&nbsp;</a></span>parent</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::parent</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00185">185</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<a id="a01fb1e27e0012a6f31147c7d11a4fc08"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a01fb1e27e0012a6f31147c7d11a4fc08">&#9670;&nbsp;</a></span>prev_sibling</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T , typename compare  = std::less&lt;T&gt;&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::shared_ptr&lt;<a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml#ad25d6fdfdc3e7bfc92d2c77395571e75">this_type</a>&gt; <a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">openage::datastructure::PairingHeapNode</a>&lt; T, compare &gt;::prev_sibling</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="pairing__heap_8h_source.xhtml#l00183">183</a> of file <a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>libopenage/datastructure/<a class="el" href="pairing__heap_8h_source.xhtml">pairing_heap.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1datastructure.xhtml">datastructure</a></li><li class="navelem"><a class="el" href="classopenage_1_1datastructure_1_1_pairing_heap_node.xhtml">PairingHeapNode</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
