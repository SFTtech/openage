<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/codegen/codegen.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('codegen_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">codegen.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="codegen_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2014-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Utility and driver module for C++ code generation.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">import</span> os</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">import</span> sys</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">from</span> sys <span class="keyword">import</span> modules</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">from</span> enum <span class="keyword">import</span> Enum</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">from</span> io <span class="keyword">import</span> UnsupportedOperation</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">from</span> itertools <span class="keyword">import</span> chain</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">from</span> ..util.fslike.directory <span class="keyword">import</span> Directory</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">from</span> ..util.fslike.wrapper <span class="keyword">import</span> Wrapper</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">from</span> ..util.filelike.fifo <span class="keyword">import</span> FIFO</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">from</span> ..log <span class="keyword">import</span> err</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">from</span> .listing <span class="keyword">import</span> generate_all</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml">CodegenMode</a>(Enum):</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral">    Modus operandi</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml">   28</a></span>&#160;    <span class="comment"># pylint doesn&#39;t understand that this Enum doesn&#39;t require member methods.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="comment"># pylint: disable=too-few-public-methods</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="comment"># source files are created regularily</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    codegen = <span class="stringliteral">&quot;codegen&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml#a37deaf8b5c0e610381c730362bc27232">   34</a></span>&#160;    <span class="comment"># caches are updated, but no source files are created</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    dryrun = <span class="stringliteral">&quot;dryrun&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;</div><div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml#ab5adb084f4c5f9de696afa1f2cbb79be">   37</a></span>&#160;    <span class="comment"># files are deleted</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    clean = <span class="stringliteral">&quot;clean&quot;</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml#a88d0e915aa0b3173a9980f4fe2c39ae6">   40</a></span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml">WriteCatcher</a>(<a class="code" href="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o.xhtml">FIFO</a>):</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="stringliteral">    Behaves like FIFO, but close() is converted to seteof(),</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="stringliteral">    and read() fails if eof is not set.</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">def </span>close(self):</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml">   47</a></span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad6a8efec2fd957629879b16a6c02bfe7">eof</a> = <span class="keyword">True</span></div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#a81a39d07ebb17dfc512f9c4f904fb692">   48</a></span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad6a8efec2fd957629879b16a6c02bfe7">   49</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad481d2443b0fd3d9f33567caf73b4512">read</a>(self, size=-1):</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad6a8efec2fd957629879b16a6c02bfe7">eof</a>:</div><div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad481d2443b0fd3d9f33567caf73b4512">   51</a></span>&#160;            <span class="keywordflow">raise</span> UnsupportedOperation(</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;                <span class="stringliteral">&quot;can not read from WriteCatcher while not closed for writing&quot;</span>)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keywordflow">return</span> super().<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad481d2443b0fd3d9f33567caf73b4512">read</a>(size)</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml">CodegenDirWrapper</a>(<a class="code" href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper.xhtml">Wrapper</a>):</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="stringliteral">    Only allows pure-read and pure-write operations;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral">    Intercepts all writes for later inspection, and logs all reads.</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">    The constructor takes the to-be-wrapped fslike object.</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o.xhtml#a2313ec42fd2d4ef616f78f2664acf44b">__init__</a>(self, obj):</div><div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml">   65</a></span>&#160;        super().<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a221fe6b3e5607e4c4442927435dd3567">__init__</a>(obj)</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a221fe6b3e5607e4c4442927435dd3567">   66</a></span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment"># stores tuples (parts, intercept_obj), where intercept_obj is a FIFO.</span></div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">writes</a> = []</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">   70</a></span>&#160;        <span class="comment"># stores a list of parts.</span></div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">reads</a> = []</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">   73</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a5b2a11aa8eb21b96f56bf6bdf3656bc3">open_r</a>(self, parts):</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">reads</a>.append(parts)</div><div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a5b2a11aa8eb21b96f56bf6bdf3656bc3">   75</a></span>&#160;        <span class="keywordflow">return</span> super().<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a5b2a11aa8eb21b96f56bf6bdf3656bc3">open_r</a>(parts)</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a99104ace940e9eaf171fc9d2947d778b">open_w</a>(self, parts):</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        intercept_obj = <a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml">WriteCatcher</a>()</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a99104ace940e9eaf171fc9d2947d778b">   79</a></span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">writes</a>.append((parts, intercept_obj))</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span> intercept_obj</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#aaad0d91bef9dadc5cb0431ac3543ab24">get_reads</a>(self):</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="stringliteral">        Returns an iterable of all path component tuples for files that have</span></div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="stringliteral">        been read.</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">for</span> parts <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">reads</a>:</div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#aaad0d91bef9dadc5cb0431ac3543ab24">   88</a></span>&#160;            <span class="keywordflow">yield</span> parts</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">reads</a>.clear()</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#ac16ab8acd4c7b30822ee0615716a9462">get_writes</a>(self):</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">        Returns an iterable of all (path components, data_written) tuples for</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">        files that have been written.</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;        <span class="keywordflow">for</span> parts, intercept_obj <span class="keywordflow">in</span> self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">writes</a>:</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#ac16ab8acd4c7b30822ee0615716a9462">   98</a></span>&#160;            <span class="keywordflow">yield</span> parts, intercept_obj.read()</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        self.<a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">writes</a>.clear()</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a2ad3cdde94231847073835b9a40f7063">__repr__</a>(self):</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> <span class="stringliteral">&quot;CodegenDirWrapper({})&quot;</span>.format(<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(self.<a class="code" href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper.xhtml#adecd44b6b3b415426460d74232f5b44d">obj</a>))</div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a2ad3cdde94231847073835b9a40f7063">  104</a></span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#ae7b44d30354970dff216b8f5d58fdd02">codegen</a>(mode, input_dir, output_dir):</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">    Calls .listing.generate_all(), and post-processes the generated</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">    data, checking them and adding a header.</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    Reads the input templates relative to input_dir.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    Writes them to output_dir according to mode. output_dir is a path or str.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="stringliteral">    Returns ({generated}, {depends}), where</span></div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="stringliteral">    generated is a list of (absolute) filenames of generated files, and</span></div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="stringliteral">    depends is a list of (absolute) filenames of dependency files.</span></div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    input_dir = <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">Directory</a>(input_dir).root</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#ae7b44d30354970dff216b8f5d58fdd02">  118</a></span>&#160;    output_dir = <a class="code" href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">Directory</a>(output_dir).root</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="comment"># this wrapper intercepts all writes and logs all reads.</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    wrapper = <a class="code" href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml">CodegenDirWrapper</a>(input_dir)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    <a class="code" href="namespaceopenage_1_1codegen_1_1listing.xhtml#a8178b40ca254e32043552b4b3f13aeeb">generate_all</a>(wrapper.root)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="comment"># set of all generated filenames</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    generated = set()</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">for</span> parts, data <span class="keywordflow">in</span> wrapper.get_writes():</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="comment"># TODO: this assumes output_dir is a fslike.Directory!</span></div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        generated.add(output_dir.fsobj.resolve(parts))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <span class="comment"># now, actually perform the generation.</span></div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="comment"># first, assemble the path for the current file</span></div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        wpath = output_dir[parts]</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;            data = <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">postprocess_write</a>(parts, data)</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">except</span> ValueError <span class="keyword">as</span> exc:</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(<span class="stringliteral">&quot;code generation issue with output file %s:\n%s&quot;</span>,</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;                b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>), exc.args[0])</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;            sys.exit(1)</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> mode == CodegenMode.codegen:</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment"># skip writing if the file already has that exact content</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordflow">try</span>:</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;                <span class="keyword">with</span> wpath.open(<span class="stringliteral">&#39;rb&#39;</span>) <span class="keyword">as</span> outfile:</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;                    <span class="keywordflow">if</span> outfile.read() == data:</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;                        <span class="keywordflow">continue</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">except</span> FileNotFoundError:</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">pass</span></div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            <span class="comment"># write new content to file</span></div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;            wpath.parent.mkdirs()</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keyword">with</span> wpath.open(<span class="stringliteral">&#39;wb&#39;</span>) <span class="keyword">as</span> outfile:</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                print(<span class="stringliteral">&quot;\x1b[36mcodegen: %s\x1b[0m&quot;</span> % b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>))</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                outfile.write(data)</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">elif</span> mode == CodegenMode.dryrun:</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="comment"># no-op</span></div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">pass</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">elif</span> mode == CodegenMode.clean:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            <span class="keywordflow">if</span> wpath.is_file():</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                print(b<span class="stringliteral">&#39;/&#39;</span>.join(parts).decode(errors=<span class="stringliteral">&#39;replace&#39;</span>))</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                wpath.unlink()</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>(<span class="stringliteral">&quot;unknown codegen mode: %s&quot;</span>, mode)</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            sys.exit(1)</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    generated = {os.path.realpath(path).decode() <span class="keywordflow">for</span> path <span class="keywordflow">in</span> generated}</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    depends = {os.path.realpath(path) <span class="keywordflow">for</span> path <span class="keywordflow">in</span> <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">get_codegen_depends</a>(wrapper)}</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keywordflow">return</span> generated, depends</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">depend_module_blacklist</a>():</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="stringliteral">    Yields all modules whose source files shall explicitly not appear in the</span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="stringliteral">    dependency list, even if they have been imported.</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    <span class="comment"># openage.config is created only after the first run of cmake,</span></div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">  181</a></span>&#160;    <span class="comment"># thus, the depends list will change at the second run of codegen,</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="comment"># re-triggering cmake.</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        <span class="keyword">import</span> openage.config</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;        <span class="keywordflow">yield</span> openage.config</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    <span class="keywordflow">except</span> ImportError:</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="comment"># devmode is imported by config, so the same reason as above applies.</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="keyword">import</span> <a class="code" href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">yield</span> <a class="code" href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">except</span> ImportError:</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">get_codegen_depends</a>(outputwrapper):</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="stringliteral">    Yields all codegen dependencies.</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="stringliteral">    outputwrapper is the CodegenDirWrapper that was passed to generate_all;</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="stringliteral">    it&#39;s used to determine the files that have been read.</span></div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="stringliteral">    In addition, all imported python modules are yielded.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="comment"># add all files that have been read as depends</span></div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">  207</a></span>&#160;    <span class="keywordflow">for</span> parts <span class="keywordflow">in</span> outputwrapper.get_reads():</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        <span class="comment"># TODO: this assumes that the wrap.obj.fsobj is a fslike.Directory</span></div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="comment"># this just resolves paths to the output directory</span></div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;        <span class="keywordflow">yield</span> outputwrapper.obj.fsobj.resolve(parts).decode()</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    module_blacklist = set(<a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">depend_module_blacklist</a>())</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="comment"># add all source files that have been loaded as depends</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    <span class="keywordflow">for</span> module <span class="keywordflow">in</span> modules.values():</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keywordflow">if</span> module <span class="keywordflow">in</span> module_blacklist:</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">try</span>:</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            filename = module.__file__</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        <span class="keywordflow">except</span> AttributeError:</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;            <span class="comment"># built-in modules don&#39;t have __file__, we don&#39;t want those as</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;            <span class="comment"># depends.</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        <span class="keywordflow">if</span> filename <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;            <span class="comment"># some modules have __file__ == None, we don&#39;t want those either.</span></div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="keywordflow">if</span> module.__package__ == <span class="stringliteral">&#39;&#39;</span>:</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;            <span class="keywordflow">continue</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> filename.endswith(<span class="stringliteral">&#39;.py&#39;</span>):</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;            <span class="comment"># This usually means that some .so file is imported as module.</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;            <span class="comment"># This is not a problem as long as it&#39;s not &quot;our&quot; .so file.</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            <span class="comment"># =&gt; just handle non-openage non-.py files normally</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;            <span class="keywordflow">if</span> <span class="stringliteral">&#39;openage&#39;</span> <span class="keywordflow">in</span> module.__name__:</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;                print(<span class="stringliteral">&quot;codegeneration depends on non-.py module &quot;</span> + filename)</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;                sys.exit(1)</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;        <span class="keywordflow">yield</span> filename</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">get_header_lines</a>():</div><div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="stringliteral">    Yields the lines for the automatically-added file header.</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">  250</a></span>&#160;    <span class="keywordflow">yield</span> (</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="stringliteral">&quot;Copyright 2013-{year} the openage authors. &quot;</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="stringliteral">&quot;See copying.md for legal info.&quot;</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    ).format(year=datetime.now().year)</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;Warning: this file was auto-generated; manual changes are futile.&quot;</span></div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;For details, see buildsystem/codegen.cmake and openage/codegen.&quot;</span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    <span class="keywordflow">yield</span> <span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">postprocess_write</a>(parts, data):</div><div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="stringliteral">    Post-processes a single write operation, as intercepted during codegen.</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="comment"># test whether filename starts with &#39;libopenage/&#39;</span></div><div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">  266</a></span>&#160;    <span class="keywordflow">if</span> parts[0] != b<span class="stringliteral">&quot;libopenage&quot;</span>:</div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Not in libopenage source directory&quot;</span>)</div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;</div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    <span class="comment"># test whether filename matches the pattern *.gen.*</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    name, extension = os.path.splitext(parts[-1].decode())</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> name.endswith(<span class="stringliteral">&#39;.gen&#39;</span>):</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Doesn&#39;t match required filename format .gen.SUFFIX&quot;</span>)</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    <span class="comment"># check file extension, and use the appropriate comment prefix</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;    <span class="keywordflow">if</span> extension <span class="keywordflow">in</span> {<span class="stringliteral">&#39;.h&#39;</span>, <span class="stringliteral">&#39;.cpp&#39;</span>}:</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;        comment_prefix = <span class="stringliteral">&#39;//&#39;</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;Extension not in {.h, .cpp}&quot;</span>)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    datalines = data.decode(<span class="stringliteral">&#39;ascii&#39;</span>).<a class="code" href="namespaceopenage_1_1util.xhtml#a9556b8562574e2c6ad102d8fd87569c6">split</a>(<span class="stringliteral">&#39;\n&#39;</span>)</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;    <span class="keywordflow">if</span> <span class="stringliteral">&#39;Copyright&#39;</span> <span class="keywordflow">in</span> datalines[0]:</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        datalines = datalines[1:]</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    headerlines = []</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keywordflow">for</span> line <span class="keywordflow">in</span> <a class="code" href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">get_header_lines</a>():</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <span class="keywordflow">if</span> line:</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;            headerlines.append(comment_prefix + <span class="stringliteral">&quot; &quot;</span> + line)</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;        <span class="keywordflow">else</span>:</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            headerlines.append(<span class="stringliteral">&quot;&quot;</span>)</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&#39;\n&#39;</span>.join(chain(headerlines, datalines)).encode(<span class="stringliteral">&#39;ascii&#39;</span>)</div><div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode_xhtml"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_mode.xhtml">openage.codegen.codegen.CodegenMode</a></div><div class="ttdoc">Modus operandi.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00028">codegen.py:28</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory.xhtml">openage::util::fslike.directory.Directory</a></div><div class="ttdoc">Provides an actual file system directory's contents as-they-are.</div><div class="ttdef"><b>Definition:</b> <a href="directory_8py_source.xhtml#l00023">directory.py:23</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_xhtml_a2313ec42fd2d4ef616f78f2664acf44b"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o.xhtml#a2313ec42fd2d4ef616f78f2664acf44b">openage::util::filelike.fifo.FIFO.__init__</a></div><div class="ttdeci">def __init__(self)</div><div class="ttdef"><b>Definition:</b> <a href="fifo_8py_source.xhtml#l00033">fifo.py:33</a></div></div>
<div class="ttc" id="namespaceopenage_1_1devmode_xhtml"><div class="ttname"><a href="namespaceopenage_1_1devmode.xhtml">openage.devmode</a></div><div class="ttdef"><b>Definition:</b> <a href="devmode_8py_source.xhtml#l00001">devmode.py:1</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a1e6e694be0654b40e778b12ff2334b87"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a1e6e694be0654b40e778b12ff2334b87">openage.codegen.codegen.postprocess_write</a></div><div class="ttdeci">def postprocess_write(parts, data)</div><div class="ttdoc">Post-processes a single write operation, as intercepted during codegen.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00266">codegen.py:266</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_write_catcher_xhtml"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml">openage.codegen.codegen.WriteCatcher</a></div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00047">codegen.py:47</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a221fe6b3e5607e4c4442927435dd3567"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a221fe6b3e5607e4c4442927435dd3567">openage.codegen.codegen.CodegenDirWrapper.__init__</a></div><div class="ttdeci">def __init__(self, obj)</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00066">codegen.py:66</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a5b2a11aa8eb21b96f56bf6bdf3656bc3"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a5b2a11aa8eb21b96f56bf6bdf3656bc3">openage.codegen.codegen.CodegenDirWrapper.open_r</a></div><div class="ttdeci">def open_r(self, parts)</div><div class="ttdoc">Shall return a BufferedReader for the given file (&quot;mode 'rb'&quot;).</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00075">codegen.py:75</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_ae7b44d30354970dff216b8f5d58fdd02"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#ae7b44d30354970dff216b8f5d58fdd02">openage.codegen.codegen.codegen</a></div><div class="ttdeci">def codegen(mode, input_dir, output_dir)</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00118">codegen.py:118</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a9556b8562574e2c6ad102d8fd87569c6"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a9556b8562574e2c6ad102d8fd87569c6">openage::util::split</a></div><div class="ttdeci">std::vector&lt; std::string &gt; split(const std::string &amp;txt, char delimiter)</div><div class="ttdoc">Split a string at a delimiter into a vector.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00136">strings.cpp:136</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper.xhtml">openage::util::fslike.wrapper.Wrapper</a></div><div class="ttdoc">Wraps a Path, implementing all methods as pass-through.</div><div class="ttdef"><b>Definition:</b> <a href="wrapper_8py_source.xhtml#l00032">wrapper.py:32</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a9b2d04f31e0fb0392e7ff643d56007a8"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a9b2d04f31e0fb0392e7ff643d56007a8">openage.codegen.codegen.CodegenDirWrapper.writes</a></div><div class="ttdeci">writes</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00070">codegen.py:70</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1listing_xhtml_a8178b40ca254e32043552b4b3f13aeeb"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1listing.xhtml#a8178b40ca254e32043552b4b3f13aeeb">openage.codegen.listing.generate_all</a></div><div class="ttdeci">def generate_all(projectdir)</div><div class="ttdoc">Contains the listing of all code generator invocations.</div><div class="ttdef"><b>Definition:</b> <a href="listing_8py_source.xhtml#l00013">listing.py:13</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml">openage.codegen.codegen.CodegenDirWrapper</a></div><div class="ttdoc">Only allows pure-read and pure-write operations;.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00065">codegen.py:65</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o.xhtml">openage::util::filelike.fifo.FIFO</a></div><div class="ttdoc">File-like wrapper around ByteQueue.</div><div class="ttdef"><b>Definition:</b> <a href="fifo_8py_source.xhtml#l00031">fifo.py:31</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a2ad3cdde94231847073835b9a40f7063"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a2ad3cdde94231847073835b9a40f7063">openage.codegen.codegen.CodegenDirWrapper.__repr__</a></div><div class="ttdeci">def __repr__(self)</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00104">codegen.py:104</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_ac16ab8acd4c7b30822ee0615716a9462"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#ac16ab8acd4c7b30822ee0615716a9462">openage.codegen.codegen.CodegenDirWrapper.get_writes</a></div><div class="ttdeci">def get_writes(self)</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00098">codegen.py:98</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a3231dc85f25b4690179432502707a9c2"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a3231dc85f25b4690179432502707a9c2">openage.codegen.codegen.depend_module_blacklist</a></div><div class="ttdeci">def depend_module_blacklist()</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00181">codegen.py:181</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a3a721471ca0beb2fd5e14407ae8a3f50"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a3a721471ca0beb2fd5e14407ae8a3f50">openage.codegen.codegen.CodegenDirWrapper.reads</a></div><div class="ttdeci">reads</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00073">codegen.py:73</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdoc">method that behaves similar to python's &quot;repr&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper_xhtml_adecd44b6b3b415426460d74232f5b44d"><div class="ttname"><a href="classopenage_1_1util_1_1fslike_1_1wrapper_1_1_wrapper.xhtml#adecd44b6b3b415426460d74232f5b44d">openage::util::fslike.wrapper.Wrapper.obj</a></div><div class="ttdeci">obj</div><div class="ttdef"><b>Definition:</b> <a href="wrapper_8py_source.xhtml#l00037">wrapper.py:37</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_aaad0d91bef9dadc5cb0431ac3543ab24"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#aaad0d91bef9dadc5cb0431ac3543ab24">openage.codegen.codegen.CodegenDirWrapper.get_reads</a></div><div class="ttdeci">def get_reads(self)</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00088">codegen.py:88</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_write_catcher_xhtml_ad6a8efec2fd957629879b16a6c02bfe7"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad6a8efec2fd957629879b16a6c02bfe7">openage.codegen.codegen.WriteCatcher.eof</a></div><div class="ttdeci">eof</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00049">codegen.py:49</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a7cce911eb4c73e57753d1a055e95549b"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a7cce911eb4c73e57753d1a055e95549b">openage.codegen.codegen.get_header_lines</a></div><div class="ttdeci">def get_header_lines()</div><div class="ttdoc">Yields the lines for the automatically-added file header.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00250">codegen.py:250</a></div></div>
<div class="ttc" id="namespaceopenage_1_1codegen_1_1codegen_xhtml_a8de5b571a29191e7550c6acae3367da9"><div class="ttname"><a href="namespaceopenage_1_1codegen_1_1codegen.xhtml#a8de5b571a29191e7550c6acae3367da9">openage.codegen.codegen.get_codegen_depends</a></div><div class="ttdeci">def get_codegen_depends(outputwrapper)</div><div class="ttdoc">Yields all codegen dependencies.</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00207">codegen.py:207</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_write_catcher_xhtml_ad481d2443b0fd3d9f33567caf73b4512"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_write_catcher.xhtml#ad481d2443b0fd3d9f33567caf73b4512">openage.codegen.codegen.WriteCatcher.read</a></div><div class="ttdeci">def read(self, size=-1)</div><div class="ttdoc">Read at most size bytes (less if EOF has been reached).</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00051">codegen.py:51</a></div></div>
<div class="ttc" id="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper_xhtml_a99104ace940e9eaf171fc9d2947d778b"><div class="ttname"><a href="classopenage_1_1codegen_1_1codegen_1_1_codegen_dir_wrapper.xhtml#a99104ace940e9eaf171fc9d2947d778b">openage.codegen.codegen.CodegenDirWrapper.open_w</a></div><div class="ttdeci">def open_w(self, parts)</div><div class="ttdoc">Shall return a BufferedWriter for the given file (&quot;mode 'wb'&quot;).</div><div class="ttdef"><b>Definition:</b> <a href="codegen_8py_source.xhtml#l00079">codegen.py:79</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_50ca7421ab2f3fda9cc13a2d3f2b0d4a.xhtml">codegen</a></li><li class="navelem"><a class="el" href="codegen_8py.xhtml">codegen.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
