<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/util/strings.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('strings_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">strings.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="strings_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">Misc string helper functions; this includes encoding, decoding,</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">manipulation, ...</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#ac1fba27a561107c1b6134c7552093594">decode_until_null</a>(data, encoding=&#39;utf-8&#39;):</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="stringliteral">    decodes a bytes object, aborting at the first \\0 character.</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; decode_until_null(b&quot;foo\\0bar&quot;)</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="stringliteral">    &#39;foo&#39;</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    end = data.find(0)</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    <span class="keywordflow">if</span> end != -1:</div><div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#ac1fba27a561107c1b6134c7552093594">   17</a></span>&#160;        data = data[:end]</div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="keywordflow">return</span> data.decode(encoding)</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">try_decode</a>(data):</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">    does its best to attempt decoding the given string of unknown encoding.</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">try</span>:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="keywordflow">return</span> data.decode(<span class="stringliteral">&#39;utf-8&#39;</span>)</div><div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">   28</a></span>&#160;    <span class="keywordflow">except</span> UnicodeDecodeError:</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">pass</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keywordflow">return</span> data.decode(<span class="stringliteral">&#39;iso-8859-1&#39;</span>)</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a590c070189baee98012e6ea365b9e677">binstr</a>(num, bits=None, group=8):</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="stringliteral">    Similar to the built-in bin(), but optionally takes</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="stringliteral">    the number of bits as an argument, and prints underscores instead of</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="stringliteral">    zeroes.</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; binstr(1337, 16)</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">    &#39;_____1_1 __111__1&#39;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    result = bin(num)[2:]</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div><div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#a590c070189baee98012e6ea365b9e677">   45</a></span>&#160;    <span class="keywordflow">if</span> bits <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        result = result.rjust(bits, <span class="stringliteral">&#39;0&#39;</span>)</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    result = result.replace(<span class="stringliteral">&#39;0&#39;</span>, <span class="stringliteral">&#39;_&#39;</span>)</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keywordflow">if</span> group <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        grouped = [result[i:i + group] <span class="keywordflow">for</span> i <span class="keywordflow">in</span> range(0, len(result), group)]</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        result = <span class="stringliteral">&#39; &#39;</span>.join(grouped)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> result</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a8f24773995264adf47e500b704fa7d42">colorize</a>(string, colorcode):</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="stringliteral">    Colorizes string with the given EMCA-48 SGR code.</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; colorize(&#39;foo&#39;, &#39;31;1&#39;)</span></div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="stringliteral">    &#39;\\x1b[31;1mfoo\\x1b[m&#39;</span></div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> colorcode:</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        colorized = <span class="stringliteral">&#39;\x1b[{colorcode}m{string}\x1b[m&#39;</span>.format(</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#a8f24773995264adf47e500b704fa7d42">   66</a></span>&#160;            colorcode=colorcode, string=string)</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">else</span>:</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        colorized = string</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">return</span> colorized</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a7ae648d1a835e5ee33b60c06d1f3f612">lstrip_once</a>(string, substr):</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="stringliteral">    Removes substr at the start of string, and raises ValueError on failure.</span></div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; lstrip_once(&quot;openage.test&quot;, &quot;openage.&quot;)</span></div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="stringliteral">    &#39;test&#39;</span></div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; lstrip_once(&quot;libopenage.test&quot;, &quot;openage.&quot;)</span></div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="stringliteral">    Traceback (most recent call last):</span></div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="stringliteral">    ValueError: &#39;libopenage.test&#39; doesn&#39;t start with &#39;openage.&#39;</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> string.startswith(substr):</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;{string} doesn&#39;t start with {substr}&quot;</span>.format(</div><div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#a7ae648d1a835e5ee33b60c06d1f3f612">   85</a></span>&#160;            string=<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(string), substr=<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(substr)))</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> string[len(substr):]</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#af1d14da687cbcc0bdf4ab1afbd5bc867">rstrip_once</a>(string, substr):</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="stringliteral">    Removes substr at the end of string, and raises ValueError on failure.</span></div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; rstrip_once(&quot;test.cpp&quot;, &quot;.cpp&quot;)</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="stringliteral">    &#39;test&#39;</span></div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="keywordflow">if</span> <span class="keywordflow">not</span> string.endswith(substr):</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="keywordflow">raise</span> ValueError(</div><div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#af1d14da687cbcc0bdf4ab1afbd5bc867">   99</a></span>&#160;            <span class="stringliteral">&quot;{string} doesn&#39;t end with {substr}&quot;</span>.format(string=<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(string),</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                                        substr=<a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(substr)))</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> string[:-len(substr)]</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1strings.xhtml#a16e727f3dbbdb651bec86f64231a2d54">format_progress</a>(progress, total):</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="stringliteral">    Formats an &quot;x out of y&quot; string with fixed width.</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">    &gt;&gt;&gt; format_progress(5, 20)</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="stringliteral">    &#39; 5/20&#39;</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> <span class="stringliteral">&quot;{progress:&gt;{width}}/{total}&quot;</span>.format(progress=progress,</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                                                width=len(<a class="code" href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">str</a>(total)),</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1strings.xhtml#a16e727f3dbbdb651bec86f64231a2d54">  114</a></span>&#160;                                                total=total)</div><div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a7ae648d1a835e5ee33b60c06d1f3f612"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a7ae648d1a835e5ee33b60c06d1f3f612">openage::util.strings.lstrip_once</a></div><div class="ttdeci">def lstrip_once(string, substr)</div><div class="ttdoc">Removes substr at the start of string, and raises ValueError on failure.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00085">strings.py:85</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_af1d14da687cbcc0bdf4ab1afbd5bc867"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#af1d14da687cbcc0bdf4ab1afbd5bc867">openage::util.strings.rstrip_once</a></div><div class="ttdeci">def rstrip_once(string, substr)</div><div class="ttdoc">Removes substr at the end of string, and raises ValueError on failure.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00099">strings.py:99</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a8f24773995264adf47e500b704fa7d42"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a8f24773995264adf47e500b704fa7d42">openage::util.strings.colorize</a></div><div class="ttdeci">def colorize(string, colorcode)</div><div class="ttdoc">Colorizes string with the given EMCA-48 SGR code.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00066">strings.py:66</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a2326b323f70b3a792727afcf330b38fe"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a2326b323f70b3a792727afcf330b38fe">openage::util.strings.try_decode</a></div><div class="ttdeci">def try_decode(data)</div><div class="ttdoc">does its best to attempt decoding the given string of unknown encoding.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00028">strings.py:28</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_ac1fba27a561107c1b6134c7552093594"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#ac1fba27a561107c1b6134c7552093594">openage::util.strings.decode_until_null</a></div><div class="ttdeci">def decode_until_null(data, encoding='utf-8')</div><div class="ttdoc">decodes a bytes object, aborting at the first \0 character.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00017">strings.py:17</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdoc">method that behaves similar to python's &quot;repr&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a590c070189baee98012e6ea365b9e677"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a590c070189baee98012e6ea365b9e677">openage::util.strings.binstr</a></div><div class="ttdeci">def binstr(num, bits=None, group=8)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00045">strings.py:45</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a4d2bbe46a5d10404c658b54f3b199551"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a4d2bbe46a5d10404c658b54f3b199551">openage::py::str</a></div><div class="ttdeci">Obj str(const std::string &amp;value)</div><div class="ttdoc">str(value);</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00331">pyobject.cpp:331</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1strings_xhtml_a16e727f3dbbdb651bec86f64231a2d54"><div class="ttname"><a href="namespaceopenage_1_1util_1_1strings.xhtml#a16e727f3dbbdb651bec86f64231a2d54">openage::util.strings.format_progress</a></div><div class="ttdeci">def format_progress(progress, total)</div><div class="ttdoc">Formats an &quot;x out of y&quot; string with fixed width.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8py_source.xhtml#l00114">strings.py:114</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_add32c31ab2cc20d9f874152de79d6bd.xhtml">util</a></li><li class="navelem"><a class="el" href="strings_8py.xhtml">strings.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
