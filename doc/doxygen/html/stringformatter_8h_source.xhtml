<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/stringformatter.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('stringformatter_8h_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">stringformatter.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="stringformatter_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#pragma once</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;atomic&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;memory&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../util/compiler.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="externalsstream_8h.xhtml">externalsstream.h</a>&quot;</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="strings_8h.xhtml">strings.h</a>&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>util {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">   32</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> {</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">   34</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_external_o_string_stream.xhtml">ExternalOStringStream</a> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">/*</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="comment">     * Does not call stream.use_with(); for use by cache objects.</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="comment">     */</span></div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a>();</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">CachableOSStream</a>(std::string &amp;output);</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">static</span> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">acquire</a>(std::string &amp;output);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keyword">static</span> <a class="code" href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a> <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">release</a>(<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *cs);</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">   74</a></span>&#160;    std::atomic_flag <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">flag</a> = ATOMIC_FLAG_INIT;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">template</span>&lt;<span class="keyword">typename</span> ChildType&gt;</div><div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml">   92</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a> {</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#abc8c5d3dda80dadf6bbefa12c075bdab">   98</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#abc8c5d3dda80dadf6bbefa12c075bdab">StringFormatter</a>(std::string &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>)</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        :</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>{&amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>},</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>{<span class="keyword">nullptr</span>} {}</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#aa55bdace86e9b1eda7b225b694c5a165">  106</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#aa55bdace86e9b1eda7b225b694c5a165">~StringFormatter</a>() {</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">CachableOSStream::release</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">  110</a></span>&#160;    <span class="keyword">inline</span> ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>() {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="keywordflow">return</span> *static_cast&lt;ChildType *&gt;(<span class="keyword">this</span>);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    }</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a14f06db924cc9c7f7a8cb71ac5849577">  114</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a14f06db924cc9c7f7a8cb71ac5849577">StringFormatter</a>(<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter&lt;ChildType&gt;</a> &amp;&amp;other) noexcept</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        :</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>{other.output},</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>{other.stream_ptr} {</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        other.stream_ptr = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    }</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a42ffb5b1e764e003ac8c59facc580722">  122</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter&lt;ChildType&gt;</a> &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a42ffb5b1e764e003ac8c59facc580722">operator =</a>(<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter&lt;ChildType&gt;</a> &amp;&amp;other) noexcept {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a> = other.output;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a> = other.stream_ptr;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        other.stream_ptr = <span class="keyword">nullptr</span>;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    }</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="comment">// no copy construction!</span></div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#abc8c5d3dda80dadf6bbefa12c075bdab">StringFormatter</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a> &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a42ffb5b1e764e003ac8c59facc580722">operator =</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a> &amp;) = <span class="keyword">delete</span>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="comment">// These methods allow usage like an ostream object.</span></div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">  136</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(<span class="keyword">const</span> T &amp;t) {</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">ensure_stream_obj</a>();</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a> &lt;&lt; t;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        }</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    }</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#afbfb9d33b20ea4ae22a8261bc82d0e1a">  145</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(std::ios &amp;(*x)(std::ios &amp;)) {</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">ensure_stream_obj</a>();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a> &lt;&lt; x;</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        }</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    }</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a89d3cf2f11edaa7885c3ab0e6bfe3536">  154</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(std::ostream &amp;(*x)(std::ostream &amp;)) {</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">ensure_stream_obj</a>();</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a> &lt;&lt; x;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        }</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    }</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    <span class="comment">// Optimizations to prevent needless stream-acquiring if just a simple</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="comment">// string is printed.</span></div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a638f9190413d043007430971011ece57">  165</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *s) {</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>-&gt;append(s);</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        }</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    }</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a34cd9ca325f900c88254381412c953c6">  173</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(<span class="keyword">const</span> std::string &amp;s) {</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>-&gt;append(s);</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        }</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    }</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    <span class="comment">// Printf-style formatting</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a6d06a46c42c75fe91a1736559b914ab3">fmt</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a6d06a46c42c75fe91a1736559b914ab3">fmt</a>, ...) <a class="code" href="strings_8h.xhtml#a60a24efce8f52dc0e12db06cff185276">ATTRIBUTE_FORMAT</a>(2, 3) {</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;            va_list ap;</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;            va_start(ap, <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a6d06a46c42c75fe91a1736559b914ab3">fmt</a>);</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;            <a class="code" href="namespaceopenage_1_1util.xhtml#a042594ac67e652c429fba1eeb1bec6fa">util::vsformat</a>(<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a6d06a46c42c75fe91a1736559b914ab3">fmt</a>, ap, *this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>);</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;            va_end(ap);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        }</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="comment">// Allow direct inputting of stuff that&#39;s wrapped in the C++11 pointer types.</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a5219fb7cba6db3e5c7603a57c94c0326">  196</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(<span class="keyword">const</span> std::unique_ptr&lt;T&gt; &amp;ptr) {</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            *<span class="keyword">this</span> &lt;&lt; ptr.get();</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        }</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    <span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><a name="l00205"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a21573badd1afe0cf9dc9b2c6311d34b3">  205</a></span>&#160;    ChildType &amp;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">operator &lt;&lt;</a>(<span class="keyword">const</span> std::shared_ptr&lt;T&gt; &amp;ptr) {</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()) {</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;            *<span class="keyword">this</span> &lt;&lt; ptr.get();</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        }</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">child_type_ref</a>();</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a3007d4045a594b7b18d9936908732cb1">  217</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a3007d4045a594b7b18d9936908732cb1">reset_flags</a>() {</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a> != <span class="keyword">nullptr</span>) {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>-&gt;<a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">stream</a>.clear();</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;        }</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">  226</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">should_format</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    }</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">  234</a></span>&#160;    <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">ensure_stream_obj</a>() {</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a> == <span class="keyword">nullptr</span>)) {</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a> = <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">CachableOSStream::acquire</a>(*this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>);</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        }</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    }</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div><div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">  240</a></span>&#160;    std::string *<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">output</a>;</div><div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">  241</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">CachableOSStream</a> *<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">stream_ptr</a>;</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;};</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_formatter.xhtml">  248</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1_formatter.xhtml">Formatter</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a>&lt;Formatter&gt; {};</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;</div><div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml">  270</a></span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">FString</a> : <span class="keyword">public</span> <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a>&lt;FString&gt; {</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00272"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a6781d6f730ba4ec0de006209a4578f06">  272</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a6781d6f730ba4ec0de006209a4578f06">FString</a>()</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        :</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a>&lt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">FString</a>&gt;{this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>} {}</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// allow assignment and construction from std::string.</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;</div><div class="line"><a name="l00278"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a0ee14b9c964e5bcdf909fb877ea99cf3">  278</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a0ee14b9c964e5bcdf909fb877ea99cf3">FString</a>(<span class="keyword">const</span> std::string &amp;other)</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        :</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter</a>&lt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">FString</a>&gt;{this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>},</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>{other} {}</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#aa863db7df7b17caa1eba82568ded809e">  283</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#aa863db7df7b17caa1eba82568ded809e">FString</a>(std::string &amp;&amp;other) noexcept</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;        :</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml">StringFormatter&lt;FString&gt;</a>{this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>},</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>{<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(other)} {}</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;</div><div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a26060a21e2a84090f618139322c53ee3">  288</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">FString</a> &amp;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a26060a21e2a84090f618139322c53ee3">operator =</a>(<span class="keyword">const</span> std::string &amp;other) {</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a> = other;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;    }</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;</div><div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#ad1df6c4aa6f0bdfa096b596e03803260">  293</a></span>&#160;    <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml">FString</a> &amp;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a26060a21e2a84090f618139322c53ee3">operator =</a>(std::string &amp;&amp;other) noexcept {</div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a> = <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(other);</div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;        <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    }</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="comment">// allow conversion to std::string.</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;</div><div class="line"><a name="l00300"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a8034b9b91efab393bfaee00be7267273">  300</a></span>&#160;    <span class="keyword">operator</span> std::string &amp;() {</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>;</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;    }</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;</div><div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a25e403e8e3ee7462ed20e6fcf33f510a">  304</a></span>&#160;    <span class="keyword">operator</span> <span class="keyword">const</span> std::string &amp;() <span class="keyword">const</span> {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#ad8485cc2e0ece728bfc22c6c8d55b3f5">  308</a></span>&#160;    <span class="keyword">operator</span> std::string () &amp;&amp; {</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>);</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    }</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div><div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a262d81155e6d17ead2d4851faf6bec03">  312</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a262d81155e6d17ead2d4851faf6bec03">reset</a>() {</div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>.clear();</div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1_string_formatter.xhtml#a3007d4045a594b7b18d9936908732cb1">reset_flags</a>();</div><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="comment">// users may directly access this.</span></div><div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">  318</a></span>&#160;    std::string <a class="code" href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">buffer</a>;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;};</div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}} <span class="comment">// namespace openage::util</span></div><div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a9f4f8b039a336f8368ba3ab9f7464a60"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a9f4f8b039a336f8368ba3ab9f7464a60">openage::util::StringFormatter::should_format</a></div><div class="ttdeci">virtual bool should_format() const</div><div class="ttdoc">Returns if formatting should actually occur.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00226">stringformatter.h:226</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_a0ee14b9c964e5bcdf909fb877ea99cf3"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#a0ee14b9c964e5bcdf909fb877ea99cf3">openage::util::FString::FString</a></div><div class="ttdeci">FString(const std::string &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00278">stringformatter.h:278</a></div></div>
<div class="ttc" id="strings_8h_xhtml"><div class="ttname"><a href="strings_8h.xhtml">strings.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_a262d81155e6d17ead2d4851faf6bec03"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#a262d81155e6d17ead2d4851faf6bec03">openage::util::FString::reset</a></div><div class="ttdeci">void reset()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00312">stringformatter.h:312</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_adee46a55b6f42172045bc199ef0469f0"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#adee46a55b6f42172045bc199ef0469f0">openage::util::StringFormatter::child_type_ref</a></div><div class="ttdeci">ChildType &amp; child_type_ref()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00110">stringformatter.h:110</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a9a56b87b8c33c7e76cb717cbf2e3dd16"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a9a56b87b8c33c7e76cb717cbf2e3dd16">openage::util::StringFormatter::ensure_stream_obj</a></div><div class="ttdeci">void ensure_stream_obj()</div><div class="ttdoc">Ensures that we have a valid CachableOSStream object in stream_ptr.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00234">stringformatter.h:234</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_aea581b919984cda327632efe3d11f8b3"><div class="ttname"><a href="compiler_8h.xhtml#aea581b919984cda327632efe3d11f8b3">OAAPI</a></div><div class="ttdeci">#define OAAPI</div><div class="ttdoc">DLL entry-point decorations.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00026">compiler.h:26</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a9d7710f8703f4dbba1b65d8b02e84036"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a9d7710f8703f4dbba1b65d8b02e84036">openage::util::CachableOSStream::acquire</a></div><div class="ttdeci">static CachableOSStream * acquire(std::string &amp;output)</div><div class="ttdoc">Returns a brand-new(*) CachableOSStream object.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00022">stringformatter.cpp:22</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_aa863db7df7b17caa1eba82568ded809e"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#aa863db7df7b17caa1eba82568ded809e">openage::util::FString::FString</a></div><div class="ttdeci">FString(std::string &amp;&amp;other) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00283">stringformatter.h:283</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_a6781d6f730ba4ec0de006209a4578f06"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#a6781d6f730ba4ec0de006209a4578f06">openage::util::FString::FString</a></div><div class="ttdeci">FString()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00272">stringformatter.h:272</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_formatter_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_formatter.xhtml">openage::util::Formatter</a></div><div class="ttdoc">Allows simple direct usage of StringFormatter.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00248">stringformatter.h:248</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml">openage::util::StringFormatter</a></div><div class="ttdoc">Wraps an output string stream, and provides all sorts of overloads for operator &lt;&lt;,...</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00092">stringformatter.h:92</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_af5a5b6f793311c523e1aee1a354e73ff"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#af5a5b6f793311c523e1aee1a354e73ff">openage::util::CachableOSStream::CachableOSStream</a></div><div class="ttdeci">CachableOSStream()</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00011">stringformatter.cpp:11</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml">openage::util::CachableOSStream</a></div><div class="ttdoc">Designed for usage by StringFormatter.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00032">stringformatter.h:32</a></div></div>
<div class="ttc" id="strings_8h_xhtml_a60a24efce8f52dc0e12db06cff185276"><div class="ttname"><a href="strings_8h.xhtml#a60a24efce8f52dc0e12db06cff185276">ATTRIBUTE_FORMAT</a></div><div class="ttdeci">#define ATTRIBUTE_FORMAT(i, j)</div><div class="ttdef"><b>Definition:</b> <a href="strings_8h_source.xhtml#l00016">strings.h:16</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_a925ea72c490734799429c31848defd61"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#a925ea72c490734799429c31848defd61">openage::util::FString::buffer</a></div><div class="ttdeci">std::string buffer</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00318">stringformatter.h:318</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_ad770ce91fe372bb8069e06ea06293f85"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#ad770ce91fe372bb8069e06ea06293f85">openage::util::CachableOSStream::release</a></div><div class="ttdeci">static OAAPI void release(CachableOSStream *cs)</div><div class="ttdoc">Resets the stream to a brand-new state, and clears the flag.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8cpp_source.xhtml#l00044">stringformatter.cpp:44</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_abc8c5d3dda80dadf6bbefa12c075bdab"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#abc8c5d3dda80dadf6bbefa12c075bdab">openage::util::StringFormatter::StringFormatter</a></div><div class="ttdeci">StringFormatter(std::string &amp;output)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00098">stringformatter.h:98</a></div></div>
<div class="ttc" id="externalsstream_8h_xhtml"><div class="ttname"><a href="externalsstream_8h.xhtml">externalsstream.h</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml_a26060a21e2a84090f618139322c53ee3"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml#a26060a21e2a84090f618139322c53ee3">openage::util::FString::operator=</a></div><div class="ttdeci">FString &amp; operator=(const std::string &amp;other)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00288">stringformatter.h:288</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a5b3cdc213039012cd3064b613a59ab94"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a5b3cdc213039012cd3064b613a59ab94">openage::util::CachableOSStream::flag</a></div><div class="ttdeci">std::atomic_flag flag</div><div class="ttdoc">true if all of the following are true:</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00074">stringformatter.h:74</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a6d06a46c42c75fe91a1736559b914ab3"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a6d06a46c42c75fe91a1736559b914ab3">openage::util::StringFormatter::fmt</a></div><div class="ttdeci">ChildType &amp; fmt(const char *fmt,...) ATTRIBUTE_FORMAT(2</div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_aa55bdace86e9b1eda7b225b694c5a165"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#aa55bdace86e9b1eda7b225b694c5a165">openage::util::StringFormatter::~StringFormatter</a></div><div class="ttdeci">virtual ~StringFormatter()</div><div class="ttdoc">Releases the CachableOSStream object (if it was acquired).</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00106">stringformatter.h:106</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_cachable_o_s_stream_xhtml_a286e7e1b4c5d5340c8bc35f87660f621"><div class="ttname"><a href="classopenage_1_1util_1_1_cachable_o_s_stream.xhtml#a286e7e1b4c5d5340c8bc35f87660f621">openage::util::CachableOSStream::stream</a></div><div class="ttdeci">ExternalOStringStream stream</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00034">stringformatter.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_ae9e740d17f1e7b337604384f5d540a7b"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#ae9e740d17f1e7b337604384f5d540a7b">openage::util::StringFormatter::output</a></div><div class="ttdeci">std::string * output</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00240">stringformatter.h:240</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a14f06db924cc9c7f7a8cb71ac5849577"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a14f06db924cc9c7f7a8cb71ac5849577">openage::util::StringFormatter::StringFormatter</a></div><div class="ttdeci">StringFormatter(StringFormatter&lt; ChildType &gt; &amp;&amp;other) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00114">stringformatter.h:114</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_ad4ebd58a5fcd96c87d116a2090a9b334"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#ad4ebd58a5fcd96c87d116a2090a9b334">openage::util::StringFormatter::operator&lt;&lt;</a></div><div class="ttdeci">ChildType &amp; operator&lt;&lt;(const T &amp;t)</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00136">stringformatter.h:136</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a042594ac67e652c429fba1eeb1bec6fa"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a042594ac67e652c429fba1eeb1bec6fa">openage::util::vsformat</a></div><div class="ttdeci">size_t vsformat(const char *fmt, va_list ap, std::string &amp;output)</div><div class="ttdoc">printf-style valist-to-string formatting; the result is appended to output.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00032">strings.cpp:32</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a3007d4045a594b7b18d9936908732cb1"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a3007d4045a594b7b18d9936908732cb1">openage::util::StringFormatter::reset_flags</a></div><div class="ttdeci">void reset_flags()</div><div class="ttdoc">Clears the underlying stream object's flags, if such a stream object exists.</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00217">stringformatter.h:217</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_external_o_string_stream_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_external_o_string_stream.xhtml">openage::util::ExternalOStringStream</a></div><div class="ttdoc">Similar to std::ostringstream, but data is written to an external string object.</div><div class="ttdef"><b>Definition:</b> <a href="externalsstream_8h_source.xhtml#l00041">externalsstream.h:41</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a97f4f76a08e17ca9d9a0b3749afd8479"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a97f4f76a08e17ca9d9a0b3749afd8479">openage::util::StringFormatter::stream_ptr</a></div><div class="ttdeci">CachableOSStream * stream_ptr</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00241">stringformatter.h:241</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_f_string_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_f_string.xhtml">openage::util::FString</a></div><div class="ttdoc">A self-formatting string! Get yours today!</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00270">stringformatter.h:270</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_string_formatter_xhtml_a42ffb5b1e764e003ac8c59facc580722"><div class="ttname"><a href="classopenage_1_1util_1_1_string_formatter.xhtml#a42ffb5b1e764e003ac8c59facc580722">openage::util::StringFormatter::operator=</a></div><div class="ttdeci">StringFormatter&lt; ChildType &gt; &amp; operator=(StringFormatter&lt; ChildType &gt; &amp;&amp;other) noexcept</div><div class="ttdef"><b>Definition:</b> <a href="stringformatter_8h_source.xhtml#l00122">stringformatter.h:122</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_a25237b91464ed624c167f154229e196.xhtml">util</a></li><li class="navelem"><a class="el" href="stringformatter_8h.xhtml">stringformatter.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
