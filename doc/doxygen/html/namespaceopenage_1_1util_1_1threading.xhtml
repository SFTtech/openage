<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage.util.threading Namespace Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('namespaceopenage_1_1util_1_1threading.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">openage.util.threading Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml">ClosableQueue</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">For use in concurrent_chain.  <a href="classopenage_1_1util_1_1threading_1_1_closable_queue.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1threading_1_1_generator_event.xhtml">GeneratorEvent</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a95e47e3e6d90915099eb2ee2ebc15260"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a> (generators, jobs=None)</td></tr>
<tr class="separator:a95e47e3e6d90915099eb2ee2ebc15260"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8d251956234d35535fbdc382d49571"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1util_1_1threading.xhtml#a1f8d251956234d35535fbdc382d49571">generator_to_queue</a> (generator, queue)</td></tr>
<tr class="separator:a1f8d251956234d35535fbdc382d49571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf02a648f9349f36e6ee76f092059ef0"><td class="memItemLeft" align="right" valign="top">def&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">test_concurrent_chain</a> ()</td></tr>
<tr class="memdesc:aaf02a648f9349f36e6ee76f092059ef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tests concurrent_chain.  <a href="#aaf02a648f9349f36e6ee76f092059ef0">More...</a><br /></td></tr>
<tr class="separator:aaf02a648f9349f36e6ee76f092059ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a id="a95e47e3e6d90915099eb2ee2ebc15260"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95e47e3e6d90915099eb2ee2ebc15260">&#9670;&nbsp;</a></span>concurrent_chain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.util.threading.concurrent_chain </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>generators</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>jobs</em> = <code>None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="threading_8py_source.xhtml#l00024">24</a> of file <a class="el" href="threading_8py_source.xhtml">threading.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        jobs = os.cpu_count()</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">if</span> jobs == 1:</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        <span class="comment"># we don&#39;t need to do all that threading stuff;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="comment"># let&#39;s just behave _precisely_ like itertools.chain.</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;        <span class="keywordflow">for</span> generator <span class="keywordflow">in</span> generators:</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;            <span class="keywordflow">yield</span> <span class="keyword">from</span> generator</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">return</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    queue = ClosableQueue()</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    running_generator_count = 0</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keyword">with</span> ThreadPoolExecutor(jobs) <span class="keyword">as</span> pool:</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <span class="keywordflow">for</span> generator <span class="keywordflow">in</span> generators:</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;            pool.submit(generator_to_queue, generator, queue)</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;            running_generator_count += 1</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">while</span> running_generator_count &gt; 0:</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;            event_type, value = queue.get()</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;            <span class="keywordflow">if</span> event_type == GeneratorEvent.VALUE:</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;                <span class="keywordflow">yield</span> value</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;            <span class="keywordflow">elif</span> event_type == GeneratorEvent.EXCEPTION:</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                queue.close(<span class="stringliteral">&quot;Exception in different generator&quot;</span>)</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;                <span class="keywordflow">raise</span> value</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;            <span class="keywordflow">elif</span> event_type == GeneratorEvent.STOP_ITERATION:</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;                running_generator_count -= 1</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">class </span>ClosableQueue(Queue):</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><span class="stringliteral"></div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="driver_8py_source.xhtml#l00239">openage.convert.driver.convert_media()</a>, and <a class="el" href="threading_8py_source.xhtml#l00117">openage.util.threading.test_concurrent_chain()</a>.</p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1util_1_1threading_a95e47e3e6d90915099eb2ee2ebc15260_icgraph.svg" width="100%" height="388"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a1f8d251956234d35535fbdc382d49571"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1f8d251956234d35535fbdc382d49571">&#9670;&nbsp;</a></span>generator_to_queue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.util.threading.generator_to_queue </td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>generator</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>queue</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="threading_8py_source.xhtml#l00105">105</a> of file <a class="el" href="threading_8py_source.xhtml">threading.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        queue.raise_if_closed()</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="keywordflow">for</span> item <span class="keywordflow">in</span> generator:</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;            queue.put((GeneratorEvent.VALUE, item))</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        queue.put((GeneratorEvent.STOP_ITERATION, <span class="keywordtype">None</span>))</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">except</span> BaseException <span class="keyword">as</span> exc:</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        queue.put((GeneratorEvent.EXCEPTION, exc))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">def </span><a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">test_concurrent_chain</a>():</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="stringliteral">&quot;&quot;&quot; Tests concurrent_chain &quot;&quot;&quot;</span></div><div class="ttc" id="namespaceopenage_1_1util_1_1threading_xhtml_aaf02a648f9349f36e6ee76f092059ef0"><div class="ttname"><a href="namespaceopenage_1_1util_1_1threading.xhtml#aaf02a648f9349f36e6ee76f092059ef0">openage::util.threading.test_concurrent_chain</a></div><div class="ttdeci">def test_concurrent_chain()</div><div class="ttdoc">Tests concurrent_chain.</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00117">threading.py:117</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="aaf02a648f9349f36e6ee76f092059ef0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf02a648f9349f36e6ee76f092059ef0">&#9670;&nbsp;</a></span>test_concurrent_chain()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">def openage.util.threading.test_concurrent_chain </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tests concurrent_chain. </p>

<p class="definition">Definition at line <a class="el" href="threading_8py_source.xhtml#l00117">117</a> of file <a class="el" href="threading_8py_source.xhtml">threading.py</a>.</p>
<div class="fragment"><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keyword">def </span>errorgen():</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="stringliteral">&quot;&quot;&quot; Test generator that raises an exception &quot;&quot;&quot;</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <span class="keywordflow">yield</span> <span class="stringliteral">&quot;errorgen&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">raise</span> ValueError()</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([], 2)), [])</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10)], 2)), <a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(range(10)))</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">assert_value</a>(</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        sorted(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(<a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10), range(20)], 2))),</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        sorted(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(itertools.chain(range(10), range(20))))</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    )</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    chain = <a class="code" href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">concurrent_chain</a>([range(10), range(20), errorgen(), range(30)], 2)</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">with</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">assert_raises</a>(ValueError):</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>(<a class="code" href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">list</a>(chain))</div><div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="namespaceopenage_1_1py_xhtml_a58cbca251b8e2118e0a6b9b0b78a7b32"><div class="ttname"><a href="namespaceopenage_1_1py.xhtml#a58cbca251b8e2118e0a6b9b0b78a7b32">openage::py::list</a></div><div class="ttdeci">Obj list()</div><div class="ttdef"><b>Definition:</b> <a href="pyobject_8cpp_source.xhtml#l00359">pyobject.cpp:359</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a1e253d6f2b396e2a0162c7b1c8ab36d9"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a1e253d6f2b396e2a0162c7b1c8ab36d9">openage::testing.testing.assert_raises</a></div><div class="ttdeci">def assert_raises(expectedexception)</div><div class="ttdoc">Context guard that asserts that a certain exception is raised inside.</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00061">testing.py:61</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_1_1threading_xhtml_a95e47e3e6d90915099eb2ee2ebc15260"><div class="ttname"><a href="namespaceopenage_1_1util_1_1threading.xhtml#a95e47e3e6d90915099eb2ee2ebc15260">openage::util.threading.concurrent_chain</a></div><div class="ttdeci">def concurrent_chain(generators, jobs=None)</div><div class="ttdef"><b>Definition:</b> <a href="threading_8py_source.xhtml#l00024">threading.py:24</a></div></div>
<div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_a2800c6619c18337197b7ad519bbad072"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#a2800c6619c18337197b7ad519bbad072">openage::testing.testing.assert_value</a></div><div class="ttdeci">def assert_value(value, expected=None, validator=None)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00025">testing.py:25</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="testing_8py_source.xhtml#l00061">openage.testing.testing.assert_raises()</a>, <a class="el" href="testing_8py_source.xhtml#l00025">openage.testing.testing.assert_value()</a>, <a class="el" href="threading_8py_source.xhtml#l00024">openage.util.threading.concurrent_chain()</a>, <a class="el" href="pyobject_8cpp_source.xhtml#l00359">openage::py.list()</a>, and <a class="el" href="testing_8py_source.xhtml#l00044">openage.testing.testing.result()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="namespaceopenage_1_1util_1_1threading_aaf02a648f9349f36e6ee76f092059ef0_cgraph.svg" width="100%" height="498"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util_1_1threading.xhtml">threading</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
