<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::util::compress::BitStream&lt; inbuf_size &gt; Class Template Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classopenage_1_1util_1_1compress_1_1_bit_stream-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::util::compress::BitStream&lt; inbuf_size &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Inheritance diagram for openage::util::compress::BitStream&lt; inbuf_size &gt;:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream__inherit__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::util::compress::BitStream&lt; inbuf_size &gt;:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream__coll__graph.svg" width="219" height="426"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a58f06b5edf346fb0c963a2f2c246021e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a58f06b5edf346fb0c963a2f2c246021e">BitStream</a> (<a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a> <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">read_callback</a>)</td></tr>
<tr class="separator:a58f06b5edf346fb0c963a2f2c246021e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4522bbae0ee989e1f5b45606fb2e673"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits</a> (unsigned int nbits)</td></tr>
<tr class="separator:af4522bbae0ee989e1f5b45606fb2e673"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac38c2ac02d9fa968f2c3e74a404e4014"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a> (unsigned char *buf, unsigned count)</td></tr>
<tr class="separator:ac38c2ac02d9fa968f2c3e74a404e4014"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32ee58040a10ca9b1b347f7d535d6439"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a> ()</td></tr>
<tr class="separator:a32ee58040a10ca9b1b347f7d535d6439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80c91d5b7ddc061dd9082827286f0e1e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a80c91d5b7ddc061dd9082827286f0e1e">read_4bytes_le</a> ()</td></tr>
<tr class="separator:a80c91d5b7ddc061dd9082827286f0e1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a33a092ac1b0b664ecf4ced11e1a313"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a0a33a092ac1b0b664ecf4ced11e1a313">switch_to_bitstream_mode</a> ()</td></tr>
<tr class="separator:a0a33a092ac1b0b664ecf4ced11e1a313"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9c25fda38455fbfc348a777e109d03e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af9c25fda38455fbfc348a777e109d03e">switch_to_bytestream_mode</a> ()</td></tr>
<tr class="separator:af9c25fda38455fbfc348a777e109d03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a9740c842e2425f54ddfc168c0df8bb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a9740c842e2425f54ddfc168c0df8bb">align_if_in_bitstream_mode</a> ()</td></tr>
<tr class="separator:a7a9740c842e2425f54ddfc168c0df8bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:af838909174b3ceb524b2a84d601eae40"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a></td></tr>
<tr class="separator:af838909174b3ceb524b2a84d601eae40"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a3dd5d41385065ddc49e0038916e68197"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a3dd5d41385065ddc49e0038916e68197">input_bytes_available</a> ()</td></tr>
<tr class="separator:a3dd5d41385065ddc49e0038916e68197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9acf1a67f1d14213c39e611068f8d435"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">ensure_input_bytes</a> ()</td></tr>
<tr class="separator:a9acf1a67f1d14213c39e611068f8d435"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaca412bb0ba077bf3239ec39b1f2fa82"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaca412bb0ba077bf3239ec39b1f2fa82">load_next_16_bits</a> ()</td></tr>
<tr class="separator:aaca412bb0ba077bf3239ec39b1f2fa82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a9875f4e718027a319d43a5939d9d95"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">ensure_bits</a> (unsigned int nbits)</td></tr>
<tr class="separator:a5a9875f4e718027a319d43a5939d9d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bb87ab9b57a3a5ef8f492c4cbe12b40"><td class="memItemLeft" align="right" valign="top">unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">peek_bits</a> (unsigned int nbits)</td></tr>
<tr class="separator:a2bb87ab9b57a3a5ef8f492c4cbe12b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a6ffb1cd9c139eeaf11f1bfec7bc444"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">remove_bits</a> (unsigned int nbits)</td></tr>
<tr class="separator:a7a6ffb1cd9c139eeaf11f1bfec7bc444"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29bf6b73c439be6e72434af82309bc54"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a29bf6b73c439be6e72434af82309bc54">align_bitstream</a> (unsigned int min_discard=0)</td></tr>
<tr class="separator:a29bf6b73c439be6e72434af82309bc54"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a2cb36e4bf92437f4d9f6a9f56709c5d4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">read_callback</a></td></tr>
<tr class="separator:a2cb36e4bf92437f4d9f6a9f56709c5d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa35e71c7747a466560300921128c0311"><td class="memItemLeft" align="right" valign="top">unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a> [inbuf_size]</td></tr>
<tr class="separator:aa35e71c7747a466560300921128c0311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135389936c8b0ccb1040d3dfcb891fcb"><td class="memItemLeft" align="right" valign="top">unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a></td></tr>
<tr class="separator:a135389936c8b0ccb1040d3dfcb891fcb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7ce94956c72390c58d9a73752b4b78a"><td class="memItemLeft" align="right" valign="top">unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a></td></tr>
<tr class="separator:ae7ce94956c72390c58d9a73752b4b78a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affde2836bacf9c151d2e948c6a63142c"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a></td></tr>
<tr class="separator:affde2836bacf9c151d2e948c6a63142c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21ca9188361a3509167a4aec70f31f75"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a></td></tr>
<tr class="separator:a21ca9188361a3509167a4aec70f31f75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaba7eceb80262c8b4e5c8e5bef734b41"><td class="memItemLeft" align="right" valign="top">size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a></td></tr>
<tr class="separator:aaba7eceb80262c8b4e5c8e5bef734b41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad394c424cb9dce3e7c79e07dacafee60"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a></td></tr>
<tr class="separator:ad394c424cb9dce3e7c79e07dacafee60"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a50503bd5290c8f14fae50bd980edc92a"><td class="memTemplParams" colspan="2">template&lt;unsigned maxsymbols_p, unsigned tablebits_p, bool allow_empty&gt; </td></tr>
<tr class="memitem:a50503bd5290c8f14fae50bd980edc92a"><td class="memTemplItemLeft" align="right" valign="top">class&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a50503bd5290c8f14fae50bd980edc92a">HuffmanTable</a></td></tr>
<tr class="separator:a50503bd5290c8f14fae50bd980edc92a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;unsigned int inbuf_size&gt;<br />
class openage::util::compress::BitStream&lt; inbuf_size &gt;</h3>

<p>Bitstream that is stored in 16-bit little-endian numbers. There are two modes:</p>
<h2>Bit stream </h2>
<p>This is the default mode. Bits may be retrieved via <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af4522bbae0ee989e1f5b45606fb2e673">read_bits()</a>.</p>
<p>The input bytes</p>
<p>0babcdefgh 0bijklmnop 0bmnopqrst 0buvwxyzAB</p>
<p>are decoded to the following bitstream:</p>
<p>ijkl mnop abcd efgh uvwx yzAB mnop qrst</p>
<p>Someone should get a medal for this.</p>
<h2>Byte stream </h2>
<p>In bytestream mode, <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes()</a> can be used to read any number of bytes, verbatim, from the data source.</p>
<h2>Mode switching </h2>
<p>You can switch between modes via</p>
<ul>
<li><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af9c25fda38455fbfc348a777e109d03e">switch_to_bytestream_mode()</a></li>
<li><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a0a33a092ac1b0b664ecf4ced11e1a313">switch_to_bitstream_mode()</a></li>
</ul>
<p>Every modeswitch aligns the stream to a 16-bit boundary by discarding the appropriate amount of nullbits/nullbytes. Calling the modeswitch methods while already in the respective mode does nothing. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00069">69</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a58f06b5edf346fb0c963a2f2c246021e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58f06b5edf346fb0c963a2f2c246021e">&#9670;&nbsp;</a></span>BitStream()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::<a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">BitStream</a> </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a>&#160;</td>
          <td class="paramname"><em>read_callback</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00295">295</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;        :</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a>{<span class="keyword">false</span>},</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">read_callback</a>{<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">read_callback</a>},</div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a>{<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>},</div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a>{<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>},</div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a>{0},</div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a>{0},</div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a>{0},</div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a>{<span class="keyword">true</span>} {</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;        static_assert(inbuf_size &gt;= 2, <span class="stringliteral">&quot;inbuf size must be at least 2&quot;</span>);</div><div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;        static_assert(inbuf_size % 2 == 0, <span class="stringliteral">&quot;inbuf size must be even&quot;</span>);</div><div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_affde2836bacf9c151d2e948c6a63142c"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">openage::util::compress::BitStream::bit_buffer</a></div><div class="ttdeci">unsigned int bit_buffer</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00104">bitstream.h:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a2cb36e4bf92437f4d9f6a9f56709c5d4"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">openage::util::compress::BitStream::read_callback</a></div><div class="ttdeci">read_callback_t read_callback</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00080">bitstream.h:80</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aa35e71c7747a466560300921128c0311"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">openage::util::compress::BitStream::inbuf</a></div><div class="ttdeci">unsigned char inbuf[inbuf_size]</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00086">bitstream.h:86</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a135389936c8b0ccb1040d3dfcb891fcb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">openage::util::compress::BitStream::i_ptr</a></div><div class="ttdeci">unsigned char * i_ptr</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00091">bitstream.h:91</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ae7ce94956c72390c58d9a73752b4b78a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">openage::util::compress::BitStream::i_end</a></div><div class="ttdeci">unsigned char * i_end</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00096">bitstream.h:96</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a21ca9188361a3509167a4aec70f31f75"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">openage::util::compress::BitStream::bits_left</a></div><div class="ttdeci">unsigned int bits_left</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00111">bitstream.h:111</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af838909174b3ceb524b2a84d601eae40"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">openage::util::compress::BitStream::eof</a></div><div class="ttdeci">unsigned char eof</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00074">bitstream.h:74</a></div></div>
</div><!-- fragment -->
</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a29bf6b73c439be6e72434af82309bc54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a29bf6b73c439be6e72434af82309bc54">&#9670;&nbsp;</a></span>align_bitstream()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::align_bitstream </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>min_discard</em> = <code>0</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>Aligns the bitstream to the next multiple of 2 bytes.</p>
<p>If min_discard is given, at least that amount of bits is discarded. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00269">269</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;                                                     {</div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> nbits = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> % 16;</div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        <span class="keywordflow">if</span> (nbits != 0) {</div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;            nbits = 16 - nbits;</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        }</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;</div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;        <span class="keywordflow">while</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(nbits &lt; min_discard)) {</div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;            nbits += 16;</div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;        }</div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;</div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        <span class="keywordflow">if</span> (nbits == 0) {</div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        }</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">peek_bits</a>(nbits)) {</div><div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;            <span class="keyword">auto</span> errmsg = <a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>);</div><div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;            errmsg &lt;&lt; <span class="stringliteral">&quot;attempted to discard &quot;</span> &lt;&lt; nbits &lt;&lt; <span class="stringliteral">&quot; non-null bits: &quot;</span>;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;            <span class="keywordflow">for</span> (<span class="keywordtype">unsigned</span> ctr = 1; ctr &lt;= nbits; ctr++) {</div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;                errmsg &lt;&lt; (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">peek_bits</a>(ctr) &amp; 1);</div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;            }</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;            <span class="keywordflow">throw</span> Error(errmsg);</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;        }</div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">remove_bits</a>(nbits);</div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a2bb87ab9b57a3a5ef8f492c4cbe12b40"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">openage::util::compress::BitStream::peek_bits</a></div><div class="ttdeci">unsigned peek_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00229">bitstream.h:229</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a7a6ffb1cd9c139eeaf11f1bfec7bc444"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">openage::util::compress::BitStream::remove_bits</a></div><div class="ttdeci">void remove_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00247">bitstream.h:247</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00428">openage::util::compress::BitStream&lt; 4096 &gt;::align_if_in_bitstream_mode()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00406">openage::util::compress::BitStream&lt; 4096 &gt;::switch_to_bytestream_mode()</a>.</p>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a29bf6b73c439be6e72434af82309bc54_icgraph.svg" width="428" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7a9740c842e2425f54ddfc168c0df8bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a9740c842e2425f54ddfc168c0df8bb">&#9670;&nbsp;</a></span>align_if_in_bitstream_mode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::align_if_in_bitstream_mode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Aligns the bitstream - that is, <em>if</em> we're currenlty in bitstream mode.</p>
<p>Otherwise, a no-op. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00428">428</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;                                      {</div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> == <span class="keyword">true</span>) {</div><div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a29bf6b73c439be6e72434af82309bc54">align_bitstream</a>();</div><div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;        }</div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a29bf6b73c439be6e72434af82309bc54"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a29bf6b73c439be6e72434af82309bc54">openage::util::compress::BitStream::align_bitstream</a></div><div class="ttdeci">void align_bitstream(unsigned int min_discard=0)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00269">bitstream.h:269</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">openage::util::compress::LZXDStream::decompress_next_frame()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a7a9740c842e2425f54ddfc168c0df8bb_icgraph.svg" width="664" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a5a9875f4e718027a319d43a5939d9d95"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a9875f4e718027a319d43a5939d9d95">&#9670;&nbsp;</a></span>ensure_bits()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::ensure_bits </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nbits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>ensures there are at least nbits bits in the bit buffer. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00214">214</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;                                                {</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(!this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a>)) {</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;instream: attempted to ensure bits while in bytestream mode&quot;</span>);</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">while</span> (<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a> &lt; nbits) {</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaca412bb0ba077bf3239ec39b1f2fa82">load_next_16_bits</a>();</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        }</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaca412bb0ba077bf3239ec39b1f2fa82"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaca412bb0ba077bf3239ec39b1f2fa82">openage::util::compress::BitStream::load_next_16_bits</a></div><div class="ttdeci">void load_next_16_bits()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00185">bitstream.h:185</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a21ca9188361a3509167a4aec70f31f75"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">openage::util::compress::BitStream::bits_left</a></div><div class="ttdeci">unsigned int bits_left</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00111">bitstream.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00229">openage::util::compress::BitStream&lt; 4096 &gt;::peek_bits()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00247">openage::util::compress::BitStream&lt; 4096 &gt;::remove_bits()</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a5a9875f4e718027a319d43a5939d9d95_icgraph.svg" width="439" height="118"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9acf1a67f1d14213c39e611068f8d435"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9acf1a67f1d14213c39e611068f8d435">&#9670;&nbsp;</a></span>ensure_input_bytes()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::ensure_input_bytes </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>ensures that at least one byte is available in the input byte buffer.</p>
<p>returns the amount of available bytes. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00140">140</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;                              {</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">// check if we need to actually read some bytes.</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a3dd5d41385065ddc49e0038916e68197">input_bytes_available</a>() == 0) {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;            <span class="comment">// fill the entire input buffer.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;            <span class="keywordtype">size_t</span> <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">read_callback</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>, inbuf_size);</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;            <span class="comment">// we might overrun the input stream by asking for bits we don&#39;t use,</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;            <span class="comment">// so fake 2 more bytes at the end of input</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a> == 0)) {</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;                <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a>) {</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;                    <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Unexpected EOF in the middle of a block&quot;</span>);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                    <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a> = 2;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;                    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>[0] = 0;</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;                    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>[1] = 0;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;                    this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">eof</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;                }</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            }</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(read_bytes &gt; (<span class="keywordtype">int</span>) inbuf_size)) {</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;                <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;read() returned more data than requested&quot;</span>);</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;            }</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;            <span class="comment">// update i_ptr and i_end</span></div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a> = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a> = &amp;this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">inbuf</a>[<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a>];</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        <span class="comment">// check if the reading was successful.</span></div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a> &gt;= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a>)) {</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;input byte buffer empty: failed to ensure_input_bytes&quot;</span>);</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        }</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ac38c2ac02d9fa968f2c3e74a404e4014"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">openage::util::compress::BitStream::read_bytes</a></div><div class="ttdeci">unsigned read_bytes(unsigned char *buf, unsigned count)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00329">bitstream.h:329</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a3dd5d41385065ddc49e0038916e68197"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a3dd5d41385065ddc49e0038916e68197">openage::util::compress::BitStream::input_bytes_available</a></div><div class="ttdeci">unsigned int input_bytes_available()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00127">bitstream.h:127</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a2cb36e4bf92437f4d9f6a9f56709c5d4"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2cb36e4bf92437f4d9f6a9f56709c5d4">openage::util::compress::BitStream::read_callback</a></div><div class="ttdeci">read_callback_t read_callback</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00080">bitstream.h:80</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aa35e71c7747a466560300921128c0311"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aa35e71c7747a466560300921128c0311">openage::util::compress::BitStream::inbuf</a></div><div class="ttdeci">unsigned char inbuf[inbuf_size]</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00086">bitstream.h:86</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a135389936c8b0ccb1040d3dfcb891fcb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">openage::util::compress::BitStream::i_ptr</a></div><div class="ttdeci">unsigned char * i_ptr</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00091">bitstream.h:91</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ae7ce94956c72390c58d9a73752b4b78a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">openage::util::compress::BitStream::i_end</a></div><div class="ttdeci">unsigned char * i_end</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00096">bitstream.h:96</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_af838909174b3ceb524b2a84d601eae40"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#af838909174b3ceb524b2a84d601eae40">openage::util::compress::BitStream::eof</a></div><div class="ttdeci">unsigned char eof</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00074">bitstream.h:74</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00185">openage::util::compress::BitStream&lt; 4096 &gt;::load_next_16_bits()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00329">openage::util::compress::BitStream&lt; 4096 &gt;::read_bytes()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a9acf1a67f1d14213c39e611068f8d435_icgraph.svg" width="480" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a3dd5d41385065ddc49e0038916e68197"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3dd5d41385065ddc49e0038916e68197">&#9670;&nbsp;</a></span>input_bytes_available()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::input_bytes_available </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>returns the number of bytes that are available in the input byte buffer. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00127">127</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                                         {</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a> &gt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a>)) {</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;input byte buffer state invalid: i_ptr &gt; i_end&quot;</span>);</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        }</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">i_end</a> - this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a>;</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a135389936c8b0ccb1040d3dfcb891fcb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">openage::util::compress::BitStream::i_ptr</a></div><div class="ttdeci">unsigned char * i_ptr</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00091">bitstream.h:91</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ae7ce94956c72390c58d9a73752b4b78a"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ae7ce94956c72390c58d9a73752b4b78a">openage::util::compress::BitStream::i_end</a></div><div class="ttdeci">unsigned char * i_end</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00096">bitstream.h:96</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00140">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_input_bytes()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00329">openage::util::compress::BitStream&lt; 4096 &gt;::read_bytes()</a>.</p>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a3dd5d41385065ddc49e0038916e68197_icgraph.svg" width="434" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="aaca412bb0ba077bf3239ec39b1f2fa82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaca412bb0ba077bf3239ec39b1f2fa82">&#9670;&nbsp;</a></span>load_next_16_bits()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::load_next_16_bits </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>loads the next 16-bit value into the bitstream. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00185">185</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                             {</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <span class="comment">// example: input stream contains bytes A, B. previous byte was J.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="comment">// 5 bits are left</span></div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;        <span class="comment">// bit buffer is:                     jjjjj000 00000000 00000000 00000000</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        <span class="comment">// ensure_bits(9) is called.</span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="comment">// b0 = aaaaaaaa</span></div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        <span class="comment">// b1 = bbbbbbbb</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="comment">// bit_buffer |= bbbbbbbb aaaaaaaa &lt;&lt; (32 - 16 - 5) == 11</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="comment">// new bit buffer:                    jjjjjbbb bbbbbaaa aaaaa000 00000000</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;        <span class="comment">// read two bytes to b0, b1</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">ensure_input_bytes</a>();</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> b0 = *<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a>++;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">ensure_input_bytes</a>();</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> b1 = *<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a>++;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment">// inject bits into bit_buffer</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a> |= ((b1 &lt;&lt; 8) | b0) &lt;&lt; (<span class="keyword">sizeof</span>(<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a>) * 8 - 16 - <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a>);</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a> += 16;</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_affde2836bacf9c151d2e948c6a63142c"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">openage::util::compress::BitStream::bit_buffer</a></div><div class="ttdeci">unsigned int bit_buffer</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00104">bitstream.h:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a9acf1a67f1d14213c39e611068f8d435"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">openage::util::compress::BitStream::ensure_input_bytes</a></div><div class="ttdeci">void ensure_input_bytes()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00140">bitstream.h:140</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a135389936c8b0ccb1040d3dfcb891fcb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">openage::util::compress::BitStream::i_ptr</a></div><div class="ttdeci">unsigned char * i_ptr</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00091">bitstream.h:91</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a21ca9188361a3509167a4aec70f31f75"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">openage::util::compress::BitStream::bits_left</a></div><div class="ttdeci">unsigned int bits_left</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00111">bitstream.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00214">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_bits()</a>.</p>
<div id="dynsection-7" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-7-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-7-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-7-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_aaca412bb0ba077bf3239ec39b1f2fa82_icgraph.svg" width="435" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a2bb87ab9b57a3a5ef8f492c4cbe12b40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2bb87ab9b57a3a5ef8f492c4cbe12b40">&#9670;&nbsp;</a></span>peek_bits()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::peek_bits </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nbits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>returns nbits bits from the bit buffer, without removing them. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00229">229</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;                                           {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;        <span class="comment">// example: bit buffer is:   abcdefgh ijkl0000 00000000 00000000</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        <span class="comment">// peek_bits(3) is called.</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;        <span class="comment">// return (bit_buffer &gt;&gt; (32 - 3) == 29</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;        <span class="comment">// returned value is:        abc</span></div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">ensure_bits</a>(nbits);</div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;        <span class="keywordflow">return</span> (<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a> &gt;&gt; (<span class="keyword">sizeof</span>(<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a>) * 8 - nbits));</div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_affde2836bacf9c151d2e948c6a63142c"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">openage::util::compress::BitStream::bit_buffer</a></div><div class="ttdeci">unsigned int bit_buffer</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00104">bitstream.h:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a5a9875f4e718027a319d43a5939d9d95"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">openage::util::compress::BitStream::ensure_bits</a></div><div class="ttdeci">void ensure_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00214">bitstream.h:214</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00269">openage::util::compress::BitStream&lt; 4096 &gt;::align_bitstream()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; 4096 &gt;::read_bits()</a>.</p>
<div id="dynsection-8" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-8-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-8-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-8-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a2bb87ab9b57a3a5ef8f492c4cbe12b40_icgraph.svg" width="422" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a80c91d5b7ddc061dd9082827286f0e1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a80c91d5b7ddc061dd9082827286f0e1e">&#9670;&nbsp;</a></span>read_4bytes_le()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::read_4bytes_le </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bytestream mode.</p>
<p>reads a little-endian-encoded 4-byte number and returns it. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00368">368</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;                                  {</div><div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;        <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>  = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a>() &lt;&lt;  0;</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;        result |= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a>() &lt;&lt;  8;</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;        result |= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a>() &lt;&lt; 16;</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;        result |= this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a>() &lt;&lt; 24;</div><div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;</div><div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">result</a>;</div><div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;    }</div><div class="ttc" id="namespaceopenage_1_1testing_1_1testing_xhtml_ac25bf81db406af62d08113ef7ae9fd6e"><div class="ttname"><a href="namespaceopenage_1_1testing_1_1testing.xhtml#ac25bf81db406af62d08113ef7ae9fd6e">openage::testing.testing.result</a></div><div class="ttdeci">def result(value)</div><div class="ttdef"><b>Definition:</b> <a href="testing_8py_source.xhtml#l00044">testing.py:44</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a32ee58040a10ca9b1b347f7d535d6439"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">openage::util::compress::BitStream::read_single_byte</a></div><div class="ttdeci">unsigned char read_single_byte()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00353">bitstream.h:353</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00477">openage::util::compress::LZXDStream::init_next_block()</a>.</p>
<div id="dynsection-9" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-9-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-9-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-9-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a80c91d5b7ddc061dd9082827286f0e1e_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af4522bbae0ee989e1f5b45606fb2e673"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af4522bbae0ee989e1f5b45606fb2e673">&#9670;&nbsp;</a></span>read_bits()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::read_bits </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nbits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>takes nbits bits from the bit buffer and returns them. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00315">315</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;                                           {</div><div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;        <span class="keywordtype">unsigned</span> ret = <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">peek_bits</a>(nbits);</div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">remove_bits</a>(nbits);</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">return</span> ret;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a2bb87ab9b57a3a5ef8f492c4cbe12b40"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a2bb87ab9b57a3a5ef8f492c4cbe12b40">openage::util::compress::BitStream::peek_bits</a></div><div class="ttdeci">unsigned peek_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00229">bitstream.h:229</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a7a6ffb1cd9c139eeaf11f1bfec7bc444"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">openage::util::compress::BitStream::remove_bits</a></div><div class="ttdeci">void remove_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00247">bitstream.h:247</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00617">openage::util::compress::LZXDStream::decode_symbol_from_aligned_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00526">openage::util::compress::LZXDStream::decode_symbol_from_verbatim_block()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00740">openage::util::compress::LZXDStream::decompress_next_frame()</a>, and <a class="el" href="lzxd_8cpp_source.xhtml#l00477">openage::util::compress::LZXDStream::init_next_block()</a>.</p>
<div id="dynsection-10" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-10-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-10-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-10-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_af4522bbae0ee989e1f5b45606fb2e673_icgraph.svg" width="100%" height="498"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="ac38c2ac02d9fa968f2c3e74a404e4014"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac38c2ac02d9fa968f2c3e74a404e4014">&#9670;&nbsp;</a></span>read_bytes()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::read_bytes </td>
          <td>(</td>
          <td class="paramtype">unsigned char *&#160;</td>
          <td class="paramname"><em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bytestream mode.</p>
<p>reads up to count verbatim bytes from the input byte buffer, and writes them to *buf.</p>
<p>reads at least 1 and at most count bytes. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00329">329</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;                                                            {</div><div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> == <span class="keyword">true</span>)) {</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;attempt to read_bytes while in bitstream mode&quot;</span>);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;        }</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">ensure_input_bytes</a>();</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> available = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a3dd5d41385065ddc49e0038916e68197">input_bytes_available</a>();</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;        <span class="keywordflow">if</span> (available &lt; count) {</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;            count = available;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;        }</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;        memcpy(buf, this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a>, count);</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">i_ptr</a> += count;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> += count;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;        <span class="keywordflow">return</span> count;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a3dd5d41385065ddc49e0038916e68197"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a3dd5d41385065ddc49e0038916e68197">openage::util::compress::BitStream::input_bytes_available</a></div><div class="ttdeci">unsigned int input_bytes_available()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00127">bitstream.h:127</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a9acf1a67f1d14213c39e611068f8d435"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a9acf1a67f1d14213c39e611068f8d435">openage::util::compress::BitStream::ensure_input_bytes</a></div><div class="ttdeci">void ensure_input_bytes()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00140">bitstream.h:140</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a135389936c8b0ccb1040d3dfcb891fcb"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a135389936c8b0ccb1040d3dfcb891fcb">openage::util::compress::BitStream::i_ptr</a></div><div class="ttdeci">unsigned char * i_ptr</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00091">bitstream.h:91</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00140">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_input_bytes()</a>, <a class="el" href="lzxd_8cpp_source.xhtml#l00727">openage::util::compress::LZXDStream::read_data_from_uncompressed_block()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00353">openage::util::compress::BitStream&lt; 4096 &gt;::read_single_byte()</a>.</p>
<div id="dynsection-11" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-11-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-11-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-11-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_ac38c2ac02d9fa968f2c3e74a404e4014_icgraph.svg" width="100%" height="470"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="a32ee58040a10ca9b1b347f7d535d6439"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32ee58040a10ca9b1b347f7d535d6439">&#9670;&nbsp;</a></span>read_single_byte()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::read_single_byte </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bytestream mode.</p>
<p>reads a single verbatim byte from the input byte buffer, and returns it. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00353">353</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;                                     {</div><div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> buf;</div><div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;</div><div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;        <span class="keywordflow">if</span> (<a class="code" href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a>(this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">read_bytes</a>(&amp;buf, 1) != 1)) {</div><div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;failed to read single byte in bytestream mode&quot;</span>);</div><div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;        }</div><div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;</div><div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;        <span class="keywordflow">return</span> buf;</div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ac38c2ac02d9fa968f2c3e74a404e4014"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ac38c2ac02d9fa968f2c3e74a404e4014">openage::util::compress::BitStream::read_bytes</a></div><div class="ttdeci">unsigned read_bytes(unsigned char *buf, unsigned count)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00329">bitstream.h:329</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="compiler_8h_xhtml_ac6c45889010c1bd68631771b64f18101"><div class="ttname"><a href="compiler_8h.xhtml#ac6c45889010c1bd68631771b64f18101">unlikely</a></div><div class="ttdeci">#define unlikely(x)</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8h_source.xhtml#l00053">compiler.h:53</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00368">openage::util::compress::BitStream&lt; 4096 &gt;::read_4bytes_le()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00384">openage::util::compress::BitStream&lt; 4096 &gt;::switch_to_bitstream_mode()</a>.</p>
<div id="dynsection-12" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-12-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-12-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-12-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a32ee58040a10ca9b1b347f7d535d6439_icgraph.svg" width="439" height="147"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a7a6ffb1cd9c139eeaf11f1bfec7bc444"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a6ffb1cd9c139eeaf11f1bfec7bc444">&#9670;&nbsp;</a></span>remove_bits()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::remove_bits </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>nbits</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>for use in bitstream mode.</p>
<p>removes nbits bits from the bit buffer. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00247">247</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;                                         {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;        <span class="comment">// example: bit buffer is:  abcdefgh ijkl0000 00000000 00000000</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;        <span class="comment">// remove_bits(3) is called.</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="comment">// bit_buffer &lt;&lt;= 3</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;        <span class="comment">//</span></div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;        <span class="comment">// resulting bit buffer is: defghijk l0000000 00000000 00000000</span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">ensure_bits</a>(nbits);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">bit_buffer</a> &lt;&lt;= nbits;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;        <a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a> -= nbits;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> += nbits;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_affde2836bacf9c151d2e948c6a63142c"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#affde2836bacf9c151d2e948c6a63142c">openage::util::compress::BitStream::bit_buffer</a></div><div class="ttdeci">unsigned int bit_buffer</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00104">bitstream.h:104</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a5a9875f4e718027a319d43a5939d9d95"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">openage::util::compress::BitStream::ensure_bits</a></div><div class="ttdeci">void ensure_bits(unsigned int nbits)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00214">bitstream.h:214</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a21ca9188361a3509167a4aec70f31f75"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">openage::util::compress::BitStream::bits_left</a></div><div class="ttdeci">unsigned int bits_left</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00111">bitstream.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00269">openage::util::compress::BitStream&lt; 4096 &gt;::align_bitstream()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00315">openage::util::compress::BitStream&lt; 4096 &gt;::read_bits()</a>.</p>
<div id="dynsection-13" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-13-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-13-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-13-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a7a6ffb1cd9c139eeaf11f1bfec7bc444_icgraph.svg" width="426" height="134"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a0a33a092ac1b0b664ecf4ced11e1a313"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a33a092ac1b0b664ecf4ced11e1a313">&#9670;&nbsp;</a></span>switch_to_bitstream_mode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::switch_to_bitstream_mode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Switches to bitstream mode.</p>
<p>If the previous bytestream had an odd size, one byte is discarded first. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00384">384</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;                                    {</div><div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> == <span class="keyword">true</span>) {</div><div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;        }</div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;</div><div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> &amp; 1) {</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;            <span class="comment">// bytestream hat odd length; discard one nullbyte.</span></div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;            <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span> data = this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">read_single_byte</a>();</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;            <span class="keywordflow">if</span> (data != 0) {</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;                <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>).fmt(<span class="stringliteral">&quot;attempted to discard a non-zero byte at end of bytestream: %02x&quot;</span>, data));</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;            }</div><div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;        }</div><div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;</div><div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> = 0;</div><div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a32ee58040a10ca9b1b347f7d535d6439"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a32ee58040a10ca9b1b347f7d535d6439">openage::util::compress::BitStream::read_single_byte</a></div><div class="ttdeci">unsigned char read_single_byte()</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00353">bitstream.h:353</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00477">openage::util::compress::LZXDStream::init_next_block()</a>.</p>
<div id="dynsection-14" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-14-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-14-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-14-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_a0a33a092ac1b0b664ecf4ced11e1a313_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="af9c25fda38455fbfc348a777e109d03e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9c25fda38455fbfc348a777e109d03e">&#9670;&nbsp;</a></span>switch_to_bytestream_mode()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::switch_to_bytestream_mode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Switches to bytestream mode.</p>
<p>Discards 1 to 16 bits to align the bitstream first. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00406">406</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>
<div class="fragment"><div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;                                     {</div><div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> == <span class="keyword">false</span>) {</div><div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;            <span class="keywordflow">return</span>;</div><div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;        }</div><div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;</div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;        <span class="comment">// for some weird reason, the alignment padding here is 1 to 16 bits, not 0 to 15.</span></div><div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;        <span class="comment">// thus, discard an additional bit.</span></div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a29bf6b73c439be6e72434af82309bc54">align_bitstream</a>(1);</div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">bitstream_mode</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">stream_position</a> = 0;</div><div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;        <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a>) {</div><div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;            <span class="keywordflow">throw</span> Error(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;bits left after switching to bytestream mode: &quot;</span> &lt;&lt; this-&gt;<a class="code" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">bits_left</a>);</div><div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;        }</div><div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    }</div><div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_aaba7eceb80262c8b4e5c8e5bef734b41"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#aaba7eceb80262c8b4e5c8e5bef734b41">openage::util::compress::BitStream::stream_position</a></div><div class="ttdeci">size_t stream_position</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00117">bitstream.h:117</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_ad394c424cb9dce3e7c79e07dacafee60"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#ad394c424cb9dce3e7c79e07dacafee60">openage::util::compress::BitStream::bitstream_mode</a></div><div class="ttdeci">bool bitstream_mode</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00122">bitstream.h:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a29bf6b73c439be6e72434af82309bc54"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a29bf6b73c439be6e72434af82309bc54">openage::util::compress::BitStream::align_bitstream</a></div><div class="ttdeci">void align_bitstream(unsigned int min_discard=0)</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00269">bitstream.h:269</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1compress_1_1_bit_stream_xhtml_a21ca9188361a3509167a4aec70f31f75"><div class="ttname"><a href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a21ca9188361a3509167a4aec70f31f75">openage::util::compress::BitStream::bits_left</a></div><div class="ttdeci">unsigned int bits_left</div><div class="ttdef"><b>Definition:</b> <a href="bitstream_8h_source.xhtml#l00111">bitstream.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00477">openage::util::compress::LZXDStream::init_next_block()</a>.</p>
<div id="dynsection-15" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-15-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-15-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-15-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1util_1_1compress_1_1_bit_stream_af9c25fda38455fbfc348a777e109d03e_icgraph.svg" width="100%" height="300"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Friends And Related Function Documentation</h2>
<a id="a50503bd5290c8f14fae50bd980edc92a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50503bd5290c8f14fae50bd980edc92a">&#9670;&nbsp;</a></span>HuffmanTable</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<div class="memtemplate">
template&lt;unsigned maxsymbols_p, unsigned tablebits_p, bool allow_empty&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">friend class <a class="el" href="classopenage_1_1util_1_1compress_1_1_huffman_table.xhtml">HuffmanTable</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">friend</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00178">178</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="affde2836bacf9c151d2e948c6a63142c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affde2836bacf9c151d2e948c6a63142c">&#9670;&nbsp;</a></span>bit_buffer</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::bit_buffer</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Bit buffer; used in bitstream mode. Filled by via get_next_byte() via <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a5a9875f4e718027a319d43a5939d9d95">ensure_bits()</a>, read by peak_bits(), cleared by <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml#a7a6ffb1cd9c139eeaf11f1bfec7bc444">remove_bits()</a>. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00104">104</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00185">openage::util::compress::BitStream&lt; 4096 &gt;::load_next_16_bits()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00229">openage::util::compress::BitStream&lt; 4096 &gt;::peek_bits()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00247">openage::util::compress::BitStream&lt; 4096 &gt;::remove_bits()</a>.</p>

</div>
</div>
<a id="a21ca9188361a3509167a4aec70f31f75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a21ca9188361a3509167a4aec70f31f75">&#9670;&nbsp;</a></span>bits_left</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::bits_left</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>The number of valid bits in bit_buffer. If e.g. the value is 2, only the two most significant bits of bit_buffer are set. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00111">111</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00214">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_bits()</a>, <a class="el" href="bitstream_8h_source.xhtml#l00185">openage::util::compress::BitStream&lt; 4096 &gt;::load_next_16_bits()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00247">openage::util::compress::BitStream&lt; 4096 &gt;::remove_bits()</a>.</p>

</div>
</div>
<a id="ad394c424cb9dce3e7c79e07dacafee60"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad394c424cb9dce3e7c79e07dacafee60">&#9670;&nbsp;</a></span>bitstream_mode</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::bitstream_mode</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>If set, the bitstream is currently in bytestream mode. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00122">122</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

</div>
</div>
<a id="af838909174b3ceb524b2a84d601eae40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af838909174b3ceb524b2a84d601eae40">&#9670;&nbsp;</a></span>eof</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">unsigned char <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::eof</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>true if the read callback has returned EOF. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00074">74</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="lzxd_8cpp_source.xhtml#l00740">openage::util::compress::LZXDStream::decompress_next_frame()</a>, <a class="el" href="codegen_8py_source.xhtml#l00051">openage.codegen.codegen.WriteCatcher::read()</a>, <a class="el" href="fifo_8py_source.xhtml#l00099">openage.util.filelike.fifo.FIFO::read()</a>, <a class="el" href="fifo_8py_source.xhtml#l00076">openage.util.filelike.fifo.FIFO::seteof()</a>, and <a class="el" href="fifo_8py_source.xhtml#l00082">openage.util.filelike.fifo.FIFO::write()</a>.</p>

</div>
</div>
<a id="ae7ce94956c72390c58d9a73752b4b78a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae7ce94956c72390c58d9a73752b4b78a">&#9670;&nbsp;</a></span>i_end</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char* <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::i_end</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pointer to end of valid data in inbuf. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00096">96</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

</div>
</div>
<a id="a135389936c8b0ccb1040d3dfcb891fcb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a135389936c8b0ccb1040d3dfcb891fcb">&#9670;&nbsp;</a></span>i_ptr</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char* <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::i_ptr</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Pointer to current position in inbuf. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00091">91</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00127">openage::util::compress::BitStream&lt; 4096 &gt;::input_bytes_available()</a>, and <a class="el" href="bitstream_8h_source.xhtml#l00185">openage::util::compress::BitStream&lt; 4096 &gt;::load_next_16_bits()</a>.</p>

</div>
</div>
<a id="aa35e71c7747a466560300921128c0311"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa35e71c7747a466560300921128c0311">&#9670;&nbsp;</a></span>inbuf</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned char <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::inbuf[inbuf_size]</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Input byte buffer. Used by both modes (via ensure_bits and read_bytes). </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00086">86</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00140">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_input_bytes()</a>.</p>

</div>
</div>
<a id="a2cb36e4bf92437f4d9f6a9f56709c5d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2cb36e4bf92437f4d9f6a9f56709c5d4">&#9670;&nbsp;</a></span>read_callback</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml#a129fc036a27a40e60785ce5bb1aa5627">read_callback_t</a> <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::read_callback</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>read callback function; invoked whenever the input buffer is empty. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00080">80</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="bitstream_8h_source.xhtml#l00140">openage::util::compress::BitStream&lt; 4096 &gt;::ensure_input_bytes()</a>.</p>

</div>
</div>
<a id="aaba7eceb80262c8b4e5c8e5bef734b41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaba7eceb80262c8b4e5c8e5bef734b41">&#9670;&nbsp;</a></span>stream_position</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;unsigned int inbuf_size&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">size_t <a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">openage::util::compress::BitStream</a>&lt; inbuf_size &gt;::stream_position</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>counts the number of bits (in bitstream mode) or bytes (in bytestream mode), for determining the correct number of bits/bytes to discard. </p>

<p class="definition">Definition at line <a class="el" href="bitstream_8h_source.xhtml#l00117">117</a> of file <a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/util/compress/<a class="el" href="bitstream_8h_source.xhtml">bitstream.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util.xhtml">util</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1util_1_1compress.xhtml">compress</a></li><li class="navelem"><a class="el" href="classopenage_1_1util_1_1compress_1_1_bit_stream.xhtml">BitStream</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
