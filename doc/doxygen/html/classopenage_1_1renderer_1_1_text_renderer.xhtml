<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: openage::renderer::TextRenderer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('classopenage_1_1renderer_1_1_text_renderer.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-attribs">Private Attributes</a> &#124;
<a href="classopenage_1_1renderer_1_1_text_renderer-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">openage::renderer::TextRenderer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="text_8h_source.xhtml">text.h</a>&gt;</code></p>
<div id="dynsection-0" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-0-trigger" src="closed.png" alt="+"/> Collaboration diagram for openage::renderer::TextRenderer:</div>
<div id="dynsection-0-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-0-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch.xhtml">text_render_batch</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The set of text draw requests with the same font and color.  <a href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch__pass.xhtml">text_render_batch_pass</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A single text draw request containing the text and position.  <a href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch__pass.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abce6be4c1b901fb91a52e29829260eab"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#abce6be4c1b901fb91a52e29829260eab">TextRenderer</a> ()</td></tr>
<tr class="memdesc:abce6be4c1b901fb91a52e29829260eab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Requires a working OpenGL context to create buffer objects.  <a href="#abce6be4c1b901fb91a52e29829260eab">More...</a><br /></td></tr>
<tr class="separator:abce6be4c1b901fb91a52e29829260eab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe8c2a17582e57d5244fa3414b57333b"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#abe8c2a17582e57d5244fa3414b57333b">~TextRenderer</a> ()</td></tr>
<tr class="separator:abe8c2a17582e57d5244fa3414b57333b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa13c06f0e7bc0b5f09f8adcd399f6676"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#aa13c06f0e7bc0b5f09f8adcd399f6676">set_font</a> (<a class="el" href="classopenage_1_1renderer_1_1_font.xhtml">Font</a> *font)</td></tr>
<tr class="memdesc:aa13c06f0e7bc0b5f09f8adcd399f6676"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the font to be used for the future text draw calls.  <a href="#aa13c06f0e7bc0b5f09f8adcd399f6676">More...</a><br /></td></tr>
<tr class="separator:aa13c06f0e7bc0b5f09f8adcd399f6676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb1f0841f532f86ddb815e13fd77bca3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb1f0841f532f86ddb815e13fd77bca3">set_color</a> (const <a class="el" href="classopenage_1_1renderer_1_1_color.xhtml">Color</a> &amp;color)</td></tr>
<tr class="memdesc:adb1f0841f532f86ddb815e13fd77bca3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the color to be used for the future text draw calls.  <a href="#adb1f0841f532f86ddb815e13fd77bca3">More...</a><br /></td></tr>
<tr class="separator:adb1f0841f532f86ddb815e13fd77bca3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4f6173d90b1ecf5a918908172f44fbf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad4f6173d90b1ecf5a918908172f44fbf">draw</a> (<a class="el" href="structopenage_1_1coord_1_1viewport.xhtml">coord::viewport</a> position, const char *format,...)</td></tr>
<tr class="memdesc:ad4f6173d90b1ecf5a918908172f44fbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw a formatted string at the specified position.  <a href="#ad4f6173d90b1ecf5a918908172f44fbf">More...</a><br /></td></tr>
<tr class="separator:ad4f6173d90b1ecf5a918908172f44fbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a021938d1c8fb338a055a3a01d7f06214"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a021938d1c8fb338a055a3a01d7f06214">draw</a> (<a class="el" href="structopenage_1_1coord_1_1viewport.xhtml">coord::viewport</a> position, const std::string &amp;text)</td></tr>
<tr class="memdesc:a021938d1c8fb338a055a3a01d7f06214"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw text at the specified position.  <a href="#a021938d1c8fb338a055a3a01d7f06214">More...</a><br /></td></tr>
<tr class="separator:a021938d1c8fb338a055a3a01d7f06214"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e468eb149f70e240cba45046904eb61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a9e468eb149f70e240cba45046904eb61">draw</a> (int x, int y, const std::string &amp;text)</td></tr>
<tr class="memdesc:a9e468eb149f70e240cba45046904eb61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Draw text at the specified position.  <a href="#a9e468eb149f70e240cba45046904eb61">More...</a><br /></td></tr>
<tr class="separator:a9e468eb149f70e240cba45046904eb61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5f8238ffefc1fcf24366c34141b710e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad5f8238ffefc1fcf24366c34141b710e">render</a> ()</td></tr>
<tr class="memdesc:ad5f8238ffefc1fcf24366c34141b710e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render all the text draw requests made during the frame.  <a href="#ad5f8238ffefc1fcf24366c34141b710e">More...</a><br /></td></tr>
<tr class="separator:ad5f8238ffefc1fcf24366c34141b710e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-attribs"></a>
Private Attributes</h2></td></tr>
<tr class="memitem:a2a787554cfaf147fc43ac0e3bf96dd7b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1renderer_1_1_font.xhtml">Font</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">current_font</a></td></tr>
<tr class="separator:a2a787554cfaf147fc43ac0e3bf96dd7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b8c493c97942d746975f2099431ad41"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1renderer_1_1_color.xhtml">Color</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">current_color</a></td></tr>
<tr class="separator:a5b8c493c97942d746975f2099431ad41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b3dc5f5b71ee184134b339f633d2801"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a></td></tr>
<tr class="separator:a0b3dc5f5b71ee184134b339f633d2801"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d95de38db15ee1396952d2b951ce6e0"><td class="memItemLeft" align="right" valign="top">std::vector&lt; <a class="el" href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch.xhtml">text_render_batch</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a></td></tr>
<tr class="separator:a5d95de38db15ee1396952d2b951ce6e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadc2e04e192e80822188952d141a9a35"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml">GlyphAtlas</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#aadc2e04e192e80822188952d141a9a35">glyph_atlas</a></td></tr>
<tr class="separator:aadc2e04e192e80822188952d141a9a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb2415c3914c1ef7328c733021660b77"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a></td></tr>
<tr class="separator:adb2415c3914c1ef7328c733021660b77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f0c64a89c8443226eaae7c86258a0e0"><td class="memItemLeft" align="right" valign="top">GLuint&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a></td></tr>
<tr class="separator:a6f0c64a89c8443226eaae7c86258a0e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock">
<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00023">23</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="abce6be4c1b901fb91a52e29829260eab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abce6be4c1b901fb91a52e29829260eab">&#9670;&nbsp;</a></span>TextRenderer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::TextRenderer::TextRenderer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Requires a working OpenGL context to create buffer objects. </p>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00048">48</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    :</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">current_font</a>{<span class="keyword">nullptr</span>},</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">current_color</a>{255, 255, 255, 255},</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a>{<span class="keyword">true</span>},</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a>{0},</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a>{0} {</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    glGenBuffers(1, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a>);</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    glGenBuffers(1, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a>);</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a6f0c64a89c8443226eaae7c86258a0e0"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">openage::renderer::TextRenderer::ibo</a></div><div class="ttdeci">GLuint ibo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00117">text.h:117</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a5b8c493c97942d746975f2099431ad41"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">openage::renderer::TextRenderer::current_color</a></div><div class="ttdeci">Color current_color</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00110">text.h:110</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a2a787554cfaf147fc43ac0e3bf96dd7b"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">openage::renderer::TextRenderer::current_font</a></div><div class="ttdeci">Font * current_font</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00109">text.h:109</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a0b3dc5f5b71ee184134b339f633d2801"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">openage::renderer::TextRenderer::is_dirty</a></div><div class="ttdeci">bool is_dirty</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00111">text.h:111</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_adb2415c3914c1ef7328c733021660b77"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">openage::renderer::TextRenderer::vbo</a></div><div class="ttdeci">GLuint vbo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00116">text.h:116</a></div></div>
</div><!-- fragment -->
</div>
</div>
<a id="abe8c2a17582e57d5244fa3414b57333b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe8c2a17582e57d5244fa3414b57333b">&#9670;&nbsp;</a></span>~TextRenderer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">openage::renderer::TextRenderer::~TextRenderer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00060">60</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;                            {</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a> != 0u) {</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;        glDeleteBuffers(1, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    }</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a> != 0u) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        glDeleteBuffers(1, &amp;this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a>);</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    }</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a6f0c64a89c8443226eaae7c86258a0e0"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">openage::renderer::TextRenderer::ibo</a></div><div class="ttdeci">GLuint ibo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00117">text.h:117</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_adb2415c3914c1ef7328c733021660b77"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">openage::renderer::TextRenderer::vbo</a></div><div class="ttdeci">GLuint vbo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00116">text.h:116</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8h_source.xhtml#l00117">ibo</a>, and <a class="el" href="text_8h_source.xhtml#l00116">vbo</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad4f6173d90b1ecf5a918908172f44fbf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad4f6173d90b1ecf5a918908172f44fbf">&#9670;&nbsp;</a></span>draw() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1viewport.xhtml">coord::viewport</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>format</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw a formatted string at the specified position. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>where the text should be displayed. </td></tr>
    <tr><td class="paramname">format</td><td>the text format </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00087">87</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;                                                                       {</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    std::string text;</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    va_list vl;</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    va_start(vl, format);</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <a class="code" href="namespaceopenage_1_1util.xhtml#a042594ac67e652c429fba1eeb1bec6fa">util::vsformat</a>(format, vl, text);</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    va_end(vl);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad4f6173d90b1ecf5a918908172f44fbf">draw</a>(position.x, position.y, text);</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_ad4f6173d90b1ecf5a918908172f44fbf"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad4f6173d90b1ecf5a918908172f44fbf">openage::renderer::TextRenderer::draw</a></div><div class="ttdeci">void draw(coord::viewport position, const char *format,...)</div><div class="ttdoc">Draw a formatted string at the specified position.</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00087">text.cpp:87</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a042594ac67e652c429fba1eeb1bec6fa"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a042594ac67e652c429fba1eeb1bec6fa">openage::util::vsformat</a></div><div class="ttdeci">size_t vsformat(const char *fmt, va_list ap, std::string &amp;output)</div><div class="ttdoc">printf-style valist-to-string formatting; the result is appended to output.</div><div class="ttdef"><b>Definition:</b> <a href="strings_8cpp_source.xhtml#l00032">strings.cpp:32</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="strings_8cpp_source.xhtml#l00032">openage::util::vsformat()</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00097">draw()</a>.</p>
<div id="dynsection-1" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-1-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-1-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-1-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_ad4f6173d90b1ecf5a918908172f44fbf_cgraph.svg" width="346" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-2" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-2-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-2-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-2-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_ad4f6173d90b1ecf5a918908172f44fbf_icgraph.svg" width="328" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a021938d1c8fb338a055a3a01d7f06214"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a021938d1c8fb338a055a3a01d7f06214">&#9670;&nbsp;</a></span>draw() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::draw </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structopenage_1_1coord_1_1viewport.xhtml">coord::viewport</a>&#160;</td>
          <td class="paramname"><em>position</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw text at the specified position. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">position</td><td>where the text should be displayed. </td></tr>
    <tr><td class="paramname">text</td><td>the text to be displayed. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00097">97</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                                                     {</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad4f6173d90b1ecf5a918908172f44fbf">draw</a>(position.x, position.y, text);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_ad4f6173d90b1ecf5a918908172f44fbf"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#ad4f6173d90b1ecf5a918908172f44fbf">openage::renderer::TextRenderer::draw</a></div><div class="ttdeci">void draw(coord::viewport position, const char *format,...)</div><div class="ttdoc">Draw a formatted string at the specified position.</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00087">text.cpp:87</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8cpp_source.xhtml#l00087">draw()</a>.</p>
<div id="dynsection-3" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-3-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-3-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-3-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_a021938d1c8fb338a055a3a01d7f06214_cgraph.svg" width="528" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<a id="a9e468eb149f70e240cba45046904eb61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e468eb149f70e240cba45046904eb61">&#9670;&nbsp;</a></span>draw() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::draw </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>text</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Draw text at the specified position. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>the position in x-direction. </td></tr>
    <tr><td class="paramname">y</td><td>the position in y-direction. </td></tr>
    <tr><td class="paramname">text</td><td>the text to be displayed. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00101">101</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;                                                           {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a> || this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>.empty()) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>.emplace_back(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">current_font</a>, this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">current_color</a>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a> = <span class="keyword">false</span>;</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    }</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>.back().passes.emplace_back(x, y, text);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a5b8c493c97942d746975f2099431ad41"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">openage::renderer::TextRenderer::current_color</a></div><div class="ttdeci">Color current_color</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00110">text.h:110</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a2a787554cfaf147fc43ac0e3bf96dd7b"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">openage::renderer::TextRenderer::current_font</a></div><div class="ttdeci">Font * current_font</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00109">text.h:109</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a0b3dc5f5b71ee184134b339f633d2801"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">openage::renderer::TextRenderer::is_dirty</a></div><div class="ttdeci">bool is_dirty</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00111">text.h:111</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a5d95de38db15ee1396952d2b951ce6e0"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">openage::renderer::TextRenderer::render_batches</a></div><div class="ttdeci">std::vector&lt; text_render_batch &gt; render_batches</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00112">text.h:112</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8h_source.xhtml#l00110">current_color</a>, <a class="el" href="text_8h_source.xhtml#l00109">current_font</a>, <a class="el" href="text_8h_source.xhtml#l00111">is_dirty</a>, and <a class="el" href="text_8h_source.xhtml#l00112">render_batches</a>.</p>

</div>
</div>
<a id="ad5f8238ffefc1fcf24366c34141b710e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5f8238ffefc1fcf24366c34141b710e">&#9670;&nbsp;</a></span>render()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::render </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Render all the text draw requests made during the frame. </p>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00110">110</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;                          {</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="comment">// Sort the batches by font</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    std::sort(std::begin(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>), std::end(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>),</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;              [](<span class="keyword">const</span> text_render_batch &amp;a, <span class="keyword">const</span> text_render_batch &amp;b) -&gt; <span class="keywordtype">bool</span> {</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                  <span class="keywordflow">return</span> a.font &lt; b.font;</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;              });</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="comment">// Merge consecutive batches if font and color values are same</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> current_batch = std::begin(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>); current_batch != std::end(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>); ) {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="keyword">auto</span> next_batch = current_batch;</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        next_batch++;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">if</span> (next_batch != std::end(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>) &amp;&amp;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;            current_batch-&gt;font == next_batch-&gt;font &amp;&amp;</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            current_batch-&gt;color == next_batch-&gt;color) {</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;            <span class="comment">// Merge the render passes of current and next batches and remove the next batch</span></div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;            <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(std::begin(next_batch-&gt;passes),</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;                      std::end(next_batch-&gt;passes),</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;                      std::back_inserter(current_batch-&gt;passes));</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>.erase(next_batch);</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;        } <span class="keywordflow">else</span> {</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;            current_batch++;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        }</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    }</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">size_t</span> index = 0;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    std::vector&lt;text_render_vertex&gt; vertices;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    std::vector&lt;unsigned int&gt; indices;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    std::vector&lt;text_render_task&gt; render_tasks;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    render_tasks.reserve(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>.size());</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> offset = 0;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="comment">// Compute vertices and indices</span></div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;batch : this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">render_batches</a>) {</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;        Font *<a class="code" href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">font</a> = batch.font;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> num_elements = 0;</div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;pass : batch.passes) {</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;            <span class="keyword">auto</span> x = static_cast&lt;float&gt;(pass.x);</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;            <span class="keyword">auto</span> y = static_cast&lt;float&gt;(pass.y);</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;            std::vector&lt;codepoint_t&gt; glyphs = <a class="code" href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">font</a>-&gt;get_glyphs(pass.text);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="comment">// We will create 4 vertices &amp; 6 indices for each glyph (GL_TRIANGLES)</span></div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;            vertices.resize(vertices.size() + glyphs.size() * 4);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;            indices.resize(indices.size() + glyphs.size() * 6);</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;            <a class="code" href="namespaceopenage_1_1renderer.xhtml#ad1ef0d75510a667bb392b7f7f464b435">codepoint_t</a> previous_glyph = 0;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;            <span class="keywordflow">for</span> (<a class="code" href="namespaceopenage_1_1renderer.xhtml#ad1ef0d75510a667bb392b7f7f464b435">codepoint_t</a> glyph : glyphs) {</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;                GlyphAtlas::Entry entry = this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#aadc2e04e192e80822188952d141a9a35">glyph_atlas</a>.<a class="code" href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml#ae5ac0cf0b966e3636c0f9a950e3f1870">get</a>(font, glyph);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                <span class="keywordtype">float</span> x0 = x + entry.<a class="code" href="classopenage_1_1renderer_1_1_glyph_atlas_1_1_entry.xhtml#a06efbd8aa9ee41a146ec356bfdf35738">glyph</a>.<a class="code" href="classopenage_1_1renderer_1_1_glyph.xhtml#a94e2543084eb7e2ac8fe13e4d015f7c8">x_offset</a>;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                <span class="keywordtype">float</span> y0 = y + entry.glyph.y_offset - entry.glyph.height;</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                <span class="keywordtype">float</span> x1 = x0 + entry.glyph.width;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                <span class="keywordtype">float</span> y1 = y0 + entry.glyph.height;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                vertices[index*4 + 0] = {x0, y0, entry.u0, entry.v0};</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;                vertices[index*4 + 1] = {x0, y1, entry.u0, entry.v1};</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;                vertices[index*4 + 2] = {x1, y1, entry.u1, entry.v1};</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;                vertices[index*4 + 3] = {x1, y0, entry.u1, entry.v0};</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;                indices[index*6 + 0] = index*4 + 0;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;                indices[index*6 + 1] = index*4 + 1;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;                indices[index*6 + 2] = index*4 + 2;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                indices[index*6 + 3] = index*4 + 2;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                indices[index*6 + 4] = index*4 + 3;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                indices[index*6 + 5] = index*4 + 0;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;                <span class="comment">// Advance the pen position</span></div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;                x += entry.glyph.x_advance;</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;                y += entry.glyph.y_advance;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                <span class="comment">// Handle font kerning</span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;                <span class="keywordflow">if</span> (previous_glyph != 0) {</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;                    x += <a class="code" href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">font</a>-&gt;get_horizontal_kerning(previous_glyph, glyph);</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;                }</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;                index++;</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;                num_elements += 6;</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;                previous_glyph = glyph;</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            }</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;        }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        text_render_task render_task{GL_TRIANGLES, batch.color, num_elements, offset};</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        render_tasks.push_back(render_task);</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        offset += num_elements;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    <span class="comment">// Upload vertices and indices</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    glBindBuffer(GL_ARRAY_BUFFER, this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">vbo</a>);</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">ibo</a>);</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    glBufferData(GL_ARRAY_BUFFER, vertices.size() * <span class="keyword">sizeof</span>(text_render_vertex), &amp;vertices[0], GL_STATIC_DRAW);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> int), &amp;indices[0], GL_STATIC_DRAW);</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">texturefont_shader::program</a>-&gt;<a class="code" href="classopenage_1_1shader_1_1_program.xhtml#ab36b7c92db2a3e3ce76b79e0451b6978">use</a>();</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#aadc2e04e192e80822188952d141a9a35">glyph_atlas</a>.<a class="code" href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml#ae2dd04418a0db610c8c007993ecfdd22">bind</a>(0);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    glEnableVertexAttribArray(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">texturefont_shader::program</a>-&gt;pos_id);</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    glEnableVertexAttribArray(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a9783220dab674cce458e30335942571e">texturefont_shader::tex_coord</a>);</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    glVertexAttribPointer(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">texturefont_shader::program</a>-&gt;pos_id, 2, GL_FLOAT, GL_FALSE,</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;        <span class="keyword">sizeof</span>(text_render_vertex), (GLvoid *) offsetof(text_render_vertex, x));</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;    glVertexAttribPointer(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a9783220dab674cce458e30335942571e">texturefont_shader::tex_coord</a>, 2, GL_FLOAT, GL_FALSE,</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;        <span class="keyword">sizeof</span>(text_render_vertex), (GLvoid *) offsetof(text_render_vertex, u));</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span> &amp;task : render_tasks) {</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        glUniform4f(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">texturefont_shader::color</a>,</div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;            task.color.r/255.f, task.color.g/255.f, task.color.b/255.f, task.color.a/255.f);</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;        glDrawElements(task.mode, task.num_elements, GL_UNSIGNED_INT, (GLvoid *) (task.offset * <span class="keyword">sizeof</span>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>)));</div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    }</div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;</div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;    glDisableVertexAttribArray(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">texturefont_shader::program</a>-&gt;pos_id);</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    glDisableVertexAttribArray(<a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a9783220dab674cce458e30335942571e">texturefont_shader::tex_coord</a>);</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">texturefont_shader::program</a>-&gt;<a class="code" href="classopenage_1_1shader_1_1_program.xhtml#abfd70a48ce216cf044f558328f8dfa4e">stopusing</a>();</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, 0);</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    glBindBuffer(GL_ARRAY_BUFFER, 0);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="comment">// Clear the render batches for next frame</span></div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    this-&gt;render_batches.clear();</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;}</div><div class="ttc" id="classopenage_1_1shader_1_1_program_xhtml_ab36b7c92db2a3e3ce76b79e0451b6978"><div class="ttname"><a href="classopenage_1_1shader_1_1_program.xhtml#ab36b7c92db2a3e3ce76b79e0451b6978">openage::shader::Program::use</a></div><div class="ttdeci">void use()</div><div class="ttdef"><b>Definition:</b> <a href="program_8cpp_source.xhtml#l00106">program.cpp:106</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a4b7dfc749fd189a6bd8d12bf2bd89a62"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a4b7dfc749fd189a6bd8d12bf2bd89a62">openage::texturefont_shader::program</a></div><div class="ttdeci">shader::Program * program</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00015">text.cpp:15</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_aadc2e04e192e80822188952d141a9a35"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#aadc2e04e192e80822188952d141a9a35">openage::renderer::TextRenderer::glyph_atlas</a></div><div class="ttdeci">GlyphAtlas glyph_atlas</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00114">text.h:114</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a6f0c64a89c8443226eaae7c86258a0e0"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a6f0c64a89c8443226eaae7c86258a0e0">openage::renderer::TextRenderer::ibo</a></div><div class="ttdeci">GLuint ibo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00117">text.h:117</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_glyph_atlas_xhtml_ae5ac0cf0b966e3636c0f9a950e3f1870"><div class="ttname"><a href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml#ae5ac0cf0b966e3636c0f9a950e3f1870">openage::renderer::GlyphAtlas::get</a></div><div class="ttdeci">GlyphAtlas::Entry get(Font *font, codepoint_t codepoint)</div><div class="ttdoc">Retrieves the atlas entry for a specified font and glyph.</div><div class="ttdef"><b>Definition:</b> <a href="glyph__atlas_8cpp_source.xhtml#l00081">glyph_atlas.cpp:81</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_xhtml_ad1ef0d75510a667bb392b7f7f464b435"><div class="ttname"><a href="namespaceopenage_1_1renderer.xhtml#ad1ef0d75510a667bb392b7f7f464b435">openage::renderer::codepoint_t</a></div><div class="ttdeci">unsigned int codepoint_t</div><div class="ttdef"><b>Definition:</b> <a href="font_8h_source.xhtml#l00021">font.h:21</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_glyph_xhtml_a94e2543084eb7e2ac8fe13e4d015f7c8"><div class="ttname"><a href="classopenage_1_1renderer_1_1_glyph.xhtml#a94e2543084eb7e2ac8fe13e4d015f7c8">openage::renderer::Glyph::x_offset</a></div><div class="ttdeci">int x_offset</div><div class="ttdoc">Horizontal distance from origin (current pen position) to glyph's leftmost boundary.</div><div class="ttdef"><b>Definition:</b> <a href="font_8h_source.xhtml#l00029">font.h:29</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a9783220dab674cce458e30335942571e"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a9783220dab674cce458e30335942571e">openage::texturefont_shader::tex_coord</a></div><div class="ttdeci">GLint tex_coord</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00016">text.cpp:16</a></div></div>
<div class="ttc" id="classopenage_1_1shader_1_1_program_xhtml_abfd70a48ce216cf044f558328f8dfa4e"><div class="ttname"><a href="classopenage_1_1shader_1_1_program.xhtml#abfd70a48ce216cf044f558328f8dfa4e">openage::shader::Program::stopusing</a></div><div class="ttdeci">void stopusing()</div><div class="ttdef"><b>Definition:</b> <a href="program_8cpp_source.xhtml#l00110">program.cpp:110</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_glyph_atlas_1_1_entry_xhtml_a06efbd8aa9ee41a146ec356bfdf35738"><div class="ttname"><a href="classopenage_1_1renderer_1_1_glyph_atlas_1_1_entry.xhtml#a06efbd8aa9ee41a146ec356bfdf35738">openage::renderer::GlyphAtlas::Entry::glyph</a></div><div class="ttdeci">Glyph glyph</div><div class="ttdoc">The Glyph.</div><div class="ttdef"><b>Definition:</b> <a href="glyph__atlas_8h_source.xhtml#l00034">glyph_atlas.h:34</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a82374b732aa3c4123fee88dc25508564"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">openage::texturefont_shader::color</a></div><div class="ttdeci">GLint color</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00016">text.cpp:16</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1tests_xhtml_aa4bbd5ddb9f2591224c8b05fff9d945c"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">openage::renderer::tests::font</a></div><div class="ttdeci">void font()</div><div class="ttdef"><b>Definition:</b> <a href="renderer_2font_2tests_8cpp_source.xhtml#l00059">tests.cpp:59</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_glyph_atlas_xhtml_ae2dd04418a0db610c8c007993ecfdd22"><div class="ttname"><a href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml#ae2dd04418a0db610c8c007993ecfdd22">openage::renderer::GlyphAtlas::bind</a></div><div class="ttdeci">void bind(int unit=0)</div><div class="ttdoc">Binds the OpenGL texture of this glyph atlas at the specified unit.</div><div class="ttdef"><b>Definition:</b> <a href="glyph__atlas_8cpp_source.xhtml#l00066">glyph_atlas.cpp:66</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a5d95de38db15ee1396952d2b951ce6e0"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5d95de38db15ee1396952d2b951ce6e0">openage::renderer::TextRenderer::render_batches</a></div><div class="ttdeci">std::vector&lt; text_render_batch &gt; render_batches</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00112">text.h:112</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_adb2415c3914c1ef7328c733021660b77"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#adb2415c3914c1ef7328c733021660b77">openage::renderer::TextRenderer::vbo</a></div><div class="ttdeci">GLuint vbo</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00116">text.h:116</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="glyph__atlas_8cpp_source.xhtml#l00066">openage::renderer::GlyphAtlas::bind()</a>, <a class="el" href="text_8cpp_source.xhtml#l00016">openage::texturefont_shader::color</a>, <a class="el" href="text_8cpp_source.xhtml#l00043">openage::renderer::text_render_task::color</a>, <a class="el" href="renderer_2font_2tests_8cpp_source.xhtml#l00059">openage::renderer::tests::font()</a>, <a class="el" href="text_8h_source.xhtml#l00098">openage::renderer::TextRenderer::text_render_batch::font</a>, <a class="el" href="glyph__atlas_8cpp_source.xhtml#l00081">openage::renderer::GlyphAtlas::get()</a>, <a class="el" href="glyph__atlas_8h_source.xhtml#l00034">openage::renderer::GlyphAtlas::Entry::glyph</a>, <a class="el" href="text_8h_source.xhtml#l00114">glyph_atlas</a>, <a class="el" href="font_8h_source.xhtml#l00032">openage::renderer::Glyph::height</a>, <a class="el" href="text_8h_source.xhtml#l00117">ibo</a>, <a class="el" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::move</a>, <a class="el" href="text_8cpp_source.xhtml#l00015">openage::texturefont_shader::program</a>, <a class="el" href="text_8h_source.xhtml#l00112">render_batches</a>, <a class="el" href="program_8cpp_source.xhtml#l00110">openage::shader::Program::stopusing()</a>, <a class="el" href="text_8cpp_source.xhtml#l00016">openage::texturefont_shader::tex_coord</a>, <a class="el" href="glyph__atlas_8h_source.xhtml#l00035">openage::renderer::GlyphAtlas::Entry::u0</a>, <a class="el" href="glyph__atlas_8h_source.xhtml#l00037">openage::renderer::GlyphAtlas::Entry::u1</a>, <a class="el" href="program_8cpp_source.xhtml#l00106">openage::shader::Program::use()</a>, <a class="el" href="glyph__atlas_8h_source.xhtml#l00036">openage::renderer::GlyphAtlas::Entry::v0</a>, <a class="el" href="glyph__atlas_8h_source.xhtml#l00038">openage::renderer::GlyphAtlas::Entry::v1</a>, <a class="el" href="text_8h_source.xhtml#l00116">vbo</a>, <a class="el" href="font_8h_source.xhtml#l00031">openage::renderer::Glyph::width</a>, <a class="el" href="font_8h_source.xhtml#l00033">openage::renderer::Glyph::x_advance</a>, <a class="el" href="font_8h_source.xhtml#l00029">openage::renderer::Glyph::x_offset</a>, <a class="el" href="font_8h_source.xhtml#l00034">openage::renderer::Glyph::y_advance</a>, and <a class="el" href="font_8h_source.xhtml#l00030">openage::renderer::Glyph::y_offset</a>.</p>
<div id="dynsection-4" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-4-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-4-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-4-content" class="dyncontent" style="display:none;">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_ad5f8238ffefc1fcf24366c34141b710e_cgraph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</div>

</div>
</div>
<a id="adb1f0841f532f86ddb815e13fd77bca3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb1f0841f532f86ddb815e13fd77bca3">&#9670;&nbsp;</a></span>set_color()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::set_color </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classopenage_1_1renderer_1_1_color.xhtml">Color</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the color to be used for the future text draw calls. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">color</td><td>the color to be used. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00078">78</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                                               {</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">current_color</a> == <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a>) {</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    }</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">current_color</a> = <a class="code" href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">color</a>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a5b8c493c97942d746975f2099431ad41"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a5b8c493c97942d746975f2099431ad41">openage::renderer::TextRenderer::current_color</a></div><div class="ttdeci">Color current_color</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00110">text.h:110</a></div></div>
<div class="ttc" id="namespaceopenage_1_1texturefont__shader_xhtml_a82374b732aa3c4123fee88dc25508564"><div class="ttname"><a href="namespaceopenage_1_1texturefont__shader.xhtml#a82374b732aa3c4123fee88dc25508564">openage::texturefont_shader::color</a></div><div class="ttdeci">GLint color</div><div class="ttdef"><b>Definition:</b> <a href="text_8cpp_source.xhtml#l00016">text.cpp:16</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a0b3dc5f5b71ee184134b339f633d2801"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">openage::renderer::TextRenderer::is_dirty</a></div><div class="ttdeci">bool is_dirty</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00111">text.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8cpp_source.xhtml#l00016">openage::texturefont_shader::color</a>, <a class="el" href="text_8h_source.xhtml#l00110">current_color</a>, and <a class="el" href="text_8h_source.xhtml#l00111">is_dirty</a>.</p>

</div>
</div>
<a id="aa13c06f0e7bc0b5f09f8adcd399f6676"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa13c06f0e7bc0b5f09f8adcd399f6676">&#9670;&nbsp;</a></span>set_font()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void openage::renderer::TextRenderer::set_font </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classopenage_1_1renderer_1_1_font.xhtml">Font</a> *&#160;</td>
          <td class="paramname"><em>font</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the font to be used for the future text draw calls. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">font</td><td>the font to be used. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="text_8cpp_source.xhtml#l00069">69</a> of file <a class="el" href="text_8cpp_source.xhtml">text.cpp</a>.</p>
<div class="fragment"><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                                      {</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">current_font</a> == <a class="code" href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">font</a>) {</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    }</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">current_font</a> = <a class="code" href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">font</a>;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">is_dirty</a> = <span class="keyword">true</span>;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div><div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a2a787554cfaf147fc43ac0e3bf96dd7b"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a2a787554cfaf147fc43ac0e3bf96dd7b">openage::renderer::TextRenderer::current_font</a></div><div class="ttdeci">Font * current_font</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00109">text.h:109</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1tests_xhtml_aa4bbd5ddb9f2591224c8b05fff9d945c"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1tests.xhtml#aa4bbd5ddb9f2591224c8b05fff9d945c">openage::renderer::tests::font</a></div><div class="ttdeci">void font()</div><div class="ttdef"><b>Definition:</b> <a href="renderer_2font_2tests_8cpp_source.xhtml#l00059">tests.cpp:59</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1_text_renderer_xhtml_a0b3dc5f5b71ee184134b339f633d2801"><div class="ttname"><a href="classopenage_1_1renderer_1_1_text_renderer.xhtml#a0b3dc5f5b71ee184134b339f633d2801">openage::renderer::TextRenderer::is_dirty</a></div><div class="ttdeci">bool is_dirty</div><div class="ttdef"><b>Definition:</b> <a href="text_8h_source.xhtml#l00111">text.h:111</a></div></div>
</div><!-- fragment -->
<p class="reference">References <a class="el" href="text_8h_source.xhtml#l00109">current_font</a>, <a class="el" href="renderer_2font_2tests_8cpp_source.xhtml#l00059">openage::renderer::tests::font()</a>, and <a class="el" href="text_8h_source.xhtml#l00111">is_dirty</a>.</p>

<p class="reference">Referenced by <a class="el" href="draw_8cpp_source.xhtml#l00022">openage::console::draw::to_opengl()</a>.</p>
<div id="dynsection-5" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-5-trigger" src="closed.png" alt="+"/> Here is the call graph for this function:</div>
<div id="dynsection-5-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-5-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_aa13c06f0e7bc0b5f09f8adcd399f6676_cgraph.svg" width="532" height="67"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>
<div id="dynsection-6" onclick="return toggleVisibility(this)" class="dynheader closed" style="cursor:pointer;">
  <img id="dynsection-6-trigger" src="closed.png" alt="+"/> Here is the caller graph for this function:</div>
<div id="dynsection-6-summary" class="dynsummary" style="display:block;">
</div>
<div id="dynsection-6-content" class="dyncontent" style="display:none;">
<div class="center"><iframe scrolling="no" frameborder="0" src="classopenage_1_1renderer_1_1_text_renderer_aa13c06f0e7bc0b5f09f8adcd399f6676_icgraph.svg" width="598" height="52"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
</div>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a5b8c493c97942d746975f2099431ad41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b8c493c97942d746975f2099431ad41">&#9670;&nbsp;</a></span>current_color</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1renderer_1_1_color.xhtml">Color</a> openage::renderer::TextRenderer::current_color</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00110">110</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00101">draw()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00078">set_color()</a>.</p>

</div>
</div>
<a id="a2a787554cfaf147fc43ac0e3bf96dd7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a787554cfaf147fc43ac0e3bf96dd7b">&#9670;&nbsp;</a></span>current_font</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1renderer_1_1_font.xhtml">Font</a>* openage::renderer::TextRenderer::current_font</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00109">109</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00101">draw()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00069">set_font()</a>.</p>

</div>
</div>
<a id="aadc2e04e192e80822188952d141a9a35"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aadc2e04e192e80822188952d141a9a35">&#9670;&nbsp;</a></span>glyph_atlas</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classopenage_1_1renderer_1_1_glyph_atlas.xhtml">GlyphAtlas</a> openage::renderer::TextRenderer::glyph_atlas</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00114">114</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00110">render()</a>.</p>

</div>
</div>
<a id="a6f0c64a89c8443226eaae7c86258a0e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6f0c64a89c8443226eaae7c86258a0e0">&#9670;&nbsp;</a></span>ibo</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">GLuint openage::renderer::TextRenderer::ibo</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00117">117</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00110">render()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00060">~TextRenderer()</a>.</p>

</div>
</div>
<a id="a0b3dc5f5b71ee184134b339f633d2801"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b3dc5f5b71ee184134b339f633d2801">&#9670;&nbsp;</a></span>is_dirty</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool openage::renderer::TextRenderer::is_dirty</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00111">111</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00101">draw()</a>, <a class="el" href="text_8cpp_source.xhtml#l00078">set_color()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00069">set_font()</a>.</p>

</div>
</div>
<a id="a5d95de38db15ee1396952d2b951ce6e0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d95de38db15ee1396952d2b951ce6e0">&#9670;&nbsp;</a></span>render_batches</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">std::vector&lt;<a class="el" href="structopenage_1_1renderer_1_1_text_renderer_1_1text__render__batch.xhtml">text_render_batch</a>&gt; openage::renderer::TextRenderer::render_batches</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00112">112</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00101">draw()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00110">render()</a>.</p>

</div>
</div>
<a id="adb2415c3914c1ef7328c733021660b77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb2415c3914c1ef7328c733021660b77">&#9670;&nbsp;</a></span>vbo</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">GLuint openage::renderer::TextRenderer::vbo</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p class="definition">Definition at line <a class="el" href="text_8h_source.xhtml#l00116">116</a> of file <a class="el" href="text_8h_source.xhtml">text.h</a>.</p>

<p class="reference">Referenced by <a class="el" href="text_8cpp_source.xhtml#l00110">render()</a>, and <a class="el" href="text_8cpp_source.xhtml#l00060">~TextRenderer()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/<a class="el" href="text_8h_source.xhtml">text.h</a></li>
<li>C:/Users/Jameson/Documents/git-projects/openage/libopenage/renderer/<a class="el" href="text_8cpp_source.xhtml">text.cpp</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="namespaceopenage.xhtml">openage</a></li><li class="navelem"><a class="el" href="namespaceopenage_1_1renderer.xhtml">renderer</a></li><li class="navelem"><a class="el" href="classopenage_1_1renderer_1_1_text_renderer.xhtml">TextRenderer</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
