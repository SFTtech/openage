<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/libopenage/pyinterface/exctranslate_tests.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('exctranslate__tests_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">exctranslate_tests.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="exctranslate__tests_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2017 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="exctranslate__tests_8h.xhtml">exctranslate_tests.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &quot;../log/log.h&quot;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../testing/testing.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="pyexception_8h.xhtml">pyexception.h</a>&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span>pyinterface {</div><div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml">   14</a></span>&#160;<span class="keyword">namespace </span>tests {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span>&lt;<span class="keywordtype">int</span> i=3&gt;</div><div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a18de7d70653d513f4e6fd5e8cb4fe0cd">   18</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a18de7d70653d513f4e6fd5e8cb4fe0cd">throw_foo</a>() {</div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a18de7d70653d513f4e6fd5e8cb4fe0cd">throw_foo</a>&lt;i - 1&gt;();</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;}</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">template</span>&lt;&gt;</div><div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a406d5229bb14f10c386d0e09c77676d6">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a406d5229bb14f10c386d0e09c77676d6">throw_foo&lt;0&gt;</a>() {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;foo&quot;</span>, <span class="keyword">true</span>, <span class="keyword">true</span>);</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ac5cb0834a41caf9f84ee192cc307f24d">   29</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ac5cb0834a41caf9f84ee192cc307f24d">err_cpp_to_py_helper</a>() {</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;            <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;rofl&quot;</span>);</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;            <a class="code" href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a>;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;        }</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a18de7d70653d513f4e6fd5e8cb4fe0cd">throw_foo</a>();</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    }</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div><div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a1e06395c26a8fbab8f488d6e573cde6b">   42</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a1e06395c26a8fbab8f488d6e573cde6b">err_py_to_cpp</a>() {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="comment">// due to the nature of this test, we need to be careful about</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="comment">// throwing TestError to indicate test failure...</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="comment">// we&#39;ll instead call this helper lambda, which will return</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="comment">// a std::string error message.</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    std::string testresult = []() -&gt; std::string {</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keywordflow">try</span> {</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;            <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aedb3b49eb37f36870b17865655b11247">err_py_to_cpp_helper</a>.call();</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;err_py_to_cpp_helper didn&#39;t throw an exception&quot;</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> &amp;exc) {</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;            <span class="comment">// this is what we expected.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;            <span class="comment">// now let&#39;s see whether the object contains the expected data.</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;            <span class="keywordflow">if</span> (exc.<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">type_name</a>() != <span class="stringliteral">&quot;openage.cppinterface.exctranslate_tests.Bar&quot;</span>) {</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;unexpected exc typename: &quot;</span> + exc.<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">type_name</a>();</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            }</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;            std::string msg = exc.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">what</a>();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;            <span class="keywordflow">if</span> (msg != <span class="stringliteral">&quot;bar&quot;</span>) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;unexpected exc message: &quot;</span> + msg;</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;            }</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            <span class="keywordflow">try</span> {</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                exc.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause</a>();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;exc had no cause&quot;</span>;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;            } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">PyException</a> &amp;cause) {</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;                <span class="keywordflow">if</span> (cause.<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">type_name</a>() != <span class="stringliteral">&quot;openage.testing.testing.TestError&quot;</span>) {</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unexpected cause typename: &quot;</span> + cause.<a class="code" href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">type_name</a>();</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;                }</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                std::string causemsg = cause.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">what</a>();</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;                <span class="keywordflow">if</span> (causemsg != <span class="stringliteral">&quot;foo&quot;</span>) {</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;unexpected cause message: &quot;</span> + causemsg;</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;                }</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                <span class="keywordflow">try</span> {</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                    cause.<a class="code" href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">rethrow_cause</a>();</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;OK&quot;</span>;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;                } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;                    <span class="keywordflow">return</span> <span class="stringliteral">&quot;cause unexpectedly had a cause itself.&quot;</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;                }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;            } <span class="keywordflow">catch</span> (std::exception &amp;cause) {</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;exc had cause of unexpected type &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">util::demangle</a>(<span class="keyword">typeid</span>(cause).name());</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;            } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;                <span class="keywordflow">return</span> <span class="stringliteral">&quot;exc had cause of nonstandard type&quot;</span>;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;            }</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        } <span class="keywordflow">catch</span> (std::exception &amp;cause) {</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;exc had unexpected type &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">util::demangle</a>(<span class="keyword">typeid</span>(cause).name());</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        } <span class="keywordflow">catch</span> (...) {</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;            <span class="keywordflow">return</span> <span class="stringliteral">&quot;exc had nonstandard type&quot;</span>;</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        }</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }();</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> (testresult != <span class="stringliteral">&quot;OK&quot;</span>) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="testing_8h.xhtml#a8845e8951e253b5e94ada5be1e308503">TESTFAILMSG</a>(testresult);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;</div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a6ae6b85d3f959e3cec4f7990e76b9c2b">  108</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a6ae6b85d3f959e3cec4f7990e76b9c2b">err_py_to_cpp_demo</a>() {</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">try</span> {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aedb3b49eb37f36870b17865655b11247">err_py_to_cpp_helper</a>.call();</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt;</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;            <span class="stringliteral">&quot;Unexpectedly, the helper did not raise an Exception&quot;</span>);</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    } <span class="keywordflow">catch</span> (<a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a> &amp;<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) {</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>) &lt;&lt;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;            <span class="stringliteral">&quot;The helper raised the following Exception:&quot;</span> &lt;&lt; std::endl &lt;&lt;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;            <a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    }</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad62ace68d6946aec2ca53e5269bb9946">  122</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad62ace68d6946aec2ca53e5269bb9946">bounce_call</a>(<a class="code" href="classopenage_1_1pyinterface_1_1_func.xhtml">Func&lt;void&gt;</a> func, <span class="keywordtype">int</span> times) {</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aa2b601816e1678049ffc42740a366ce9">bounce_call_py</a>.call(func, times);</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aedb3b49eb37f36870b17865655b11247">  127</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void&gt;</a> <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aedb3b49eb37f36870b17865655b11247">err_py_to_cpp_helper</a>;</div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aa2b601816e1678049ffc42740a366ce9">  128</a></span>&#160;<a class="code" href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">PyIfFunc&lt;void, Func&lt;void&gt;</a>, <span class="keywordtype">int</span>&gt; <a class="code" href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aa2b601816e1678049ffc42740a366ce9">bounce_call_py</a>;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}}} <span class="comment">// openage::pyinterface::tests</span></div><div class="ttc" id="testing_8h_xhtml_a32253726c81e858197f39fbf0b56d17c"><div class="ttname"><a href="testing_8h.xhtml#a32253726c81e858197f39fbf0b56d17c">TESTFAIL</a></div><div class="ttdeci">#define TESTFAIL</div><div class="ttdoc">Convenience macro, for usage in test functions:</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00034">testing.h:34</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdoc">Openage base exception type; the constructor usage is analogous to log::log().</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_a2eac361ac1550421b68e453b9a710d4b"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#a2eac361ac1550421b68e453b9a710d4b">openage::error::Error::rethrow_cause</a></div><div class="ttdeci">void rethrow_cause() const</div><div class="ttdoc">Re-throws the exception cause, if the exception has one.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00082">error.cpp:82</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_ac5cb0834a41caf9f84ee192cc307f24d"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ac5cb0834a41caf9f84ee192cc307f24d">openage::pyinterface::tests::err_cpp_to_py_helper</a></div><div class="ttdeci">void err_cpp_to_py_helper()</div><div class="ttdoc">Called by cppinterface.demo_cpp_to_py.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00029">exctranslate_tests.cpp:29</a></div></div>
<div class="ttc" id="classopenage_1_1error_1_1_error_xhtml_aebb433114d67e8c71b37a3de18019571"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml#aebb433114d67e8c71b37a3de18019571">openage::error::Error::what</a></div><div class="ttdeci">const char * what() const noexcept override</div><div class="ttdoc">Returns the message's content.</div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8cpp_source.xhtml#l00072">error.cpp:72</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_a406d5229bb14f10c386d0e09c77676d6"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a406d5229bb14f10c386d0e09c77676d6">openage::pyinterface::tests::throw_foo&lt; 0 &gt;</a></div><div class="ttdeci">void throw_foo&lt; 0 &gt;()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00024">exctranslate_tests.cpp:24</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_func.xhtml">openage::pyinterface::Func</a></div><div class="ttdoc">Holds a function pointer, with bound arguments.</div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00058">functional.h:58</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml_a1352d1476e7824c11aca00df918879e1"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml#a1352d1476e7824c11aca00df918879e1">openage::pyinterface::PyException::type_name</a></div><div class="ttdeci">std::string type_name() const override</div><div class="ttdoc">Returns the type name of py_obj.</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8cpp_source.xhtml#l00035">pyexception.cpp:35</a></div></div>
<div class="ttc" id="pyexception_8h_xhtml"><div class="ttname"><a href="pyexception_8h.xhtml">pyexception.h</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdoc">Convenience method that makes use of the 'general' LogSource.</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_a6ae6b85d3f959e3cec4f7990e76b9c2b"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a6ae6b85d3f959e3cec4f7990e76b9c2b">openage::pyinterface::tests::err_py_to_cpp_demo</a></div><div class="ttdeci">void err_py_to_cpp_demo()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00108">exctranslate_tests.cpp:108</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_a18de7d70653d513f4e6fd5e8cb4fe0cd"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a18de7d70653d513f4e6fd5e8cb4fe0cd">openage::pyinterface::tests::throw_foo</a></div><div class="ttdeci">void throw_foo()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00018">exctranslate_tests.cpp:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_aedb3b49eb37f36870b17865655b11247"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aedb3b49eb37f36870b17865655b11247">openage::pyinterface::tests::err_py_to_cpp_helper</a></div><div class="ttdeci">PyIfFunc&lt; void &gt; err_py_to_cpp_helper</div><div class="ttdoc">Part of pyinterface::demo_py_to_cpp.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00127">exctranslate_tests.cpp:127</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_aa2b601816e1678049ffc42740a366ce9"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#aa2b601816e1678049ffc42740a366ce9">openage::pyinterface::tests::bounce_call_py</a></div><div class="ttdeci">PyIfFunc&lt; void, Func&lt; void &gt;, int &gt; bounce_call_py</div><div class="ttdoc">Called by bounce_call() to bounce back to Python.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00128">exctranslate_tests.cpp:128</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_exception_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_exception.xhtml">openage::pyinterface::PyException</a></div><div class="ttdoc">Thrown by translate_exc_py_to_cpp() from exctranslate.h.</div><div class="ttdef"><b>Definition:</b> <a href="pyexception_8h_source.xhtml#l00060">pyexception.h:60</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_ad62ace68d6946aec2ca53e5269bb9946"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#ad62ace68d6946aec2ca53e5269bb9946">openage::pyinterface::tests::bounce_call</a></div><div class="ttdeci">void bounce_call(Func&lt; void &gt; func, int times)</div><div class="ttdoc">See the doc in exctranslate_tests.pyx.</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00122">exctranslate_tests.cpp:122</a></div></div>
<div class="ttc" id="exctranslate__tests_8h_xhtml"><div class="ttname"><a href="exctranslate__tests_8h.xhtml">exctranslate_tests.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdoc">This file contains forward declarations for all the coordinate types, as well as their scalar types.</div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1pyinterface_1_1_py_if_func_xhtml"><div class="ttname"><a href="classopenage_1_1pyinterface_1_1_py_if_func.xhtml">openage::pyinterface::PyIfFunc</a></div><div class="ttdoc">For usage by &quot;Py Interface Functions&quot;, i.e.</div><div class="ttdef"><b>Definition:</b> <a href="functional_8h_source.xhtml#l00407">functional.h:407</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_aebed129b2a0773520cdd8d40b0f70318"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#aebed129b2a0773520cdd8d40b0f70318">openage::util::demangle</a></div><div class="ttdeci">std::string demangle(const char *symbol)</div><div class="ttdoc">Demangles a symbol name.</div><div class="ttdef"><b>Definition:</b> <a href="compiler_8cpp_source.xhtml#l00025">compiler.cpp:25</a></div></div>
<div class="ttc" id="namespaceopenage_1_1pyinterface_1_1tests_xhtml_a1e06395c26a8fbab8f488d6e573cde6b"><div class="ttname"><a href="namespaceopenage_1_1pyinterface_1_1tests.xhtml#a1e06395c26a8fbab8f488d6e573cde6b">openage::pyinterface::tests::err_py_to_cpp</a></div><div class="ttdeci">void err_py_to_cpp()</div><div class="ttdef"><b>Definition:</b> <a href="exctranslate__tests_8cpp_source.xhtml#l00042">exctranslate_tests.cpp:42</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3f1815b698faf5786fc5e20bcac7704b"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">openage::log.info</a></div><div class="ttdeci">def info(msg, *args, **kwargs)</div><div class="ttdoc">info message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00114">__init__.py:114</a></div></div>
<div class="ttc" id="testing_8h_xhtml_a8845e8951e253b5e94ada5be1e308503"><div class="ttname"><a href="testing_8h.xhtml#a8845e8951e253b5e94ada5be1e308503">TESTFAILMSG</a></div><div class="ttdeci">#define TESTFAILMSG(...)</div><div class="ttdoc">As above, but allows printing a message:</div><div class="ttdef"><b>Definition:</b> <a href="testing_8h_source.xhtml#l00042">testing.h:42</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_1079b96b1d02d2a41f45efcea4bd852f.xhtml">pyinterface</a></li><li class="navelem"><a class="el" href="exctranslate__tests_8cpp.xhtml">exctranslate_tests.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
