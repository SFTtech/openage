<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Openage: libopenage/renderer/resources/texture_data.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="banner.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Openage
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('texture__data_8cpp_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">texture_data.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="texture__data_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// Copyright 2015-2018 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="texture__data_8h.xhtml">texture_data.h</a>&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;SDL2/SDL.h&gt;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;SDL2/SDL_image.h&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &quot;../../log/log.h&quot;</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &quot;../../error/error.h&quot;</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &quot;../../util/csv.h&quot;</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespaceopenage.xhtml">openage</a> {</div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">namespace </span>renderer {</div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">namespace </span>resources {</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div><div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a62ad4c6594b8ad6f357a9e5b18575bc4">   22</a></span>&#160;<span class="keyword">static</span> constexpr <span class="keywordtype">size_t</span> <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a62ad4c6594b8ad6f357a9e5b18575bc4">guess_row_alignment</a>(<span class="keywordtype">size_t</span> width, <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426e">pixel_format</a> fmt, <span class="keywordtype">size_t</span> row_size) {</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="comment">// Use the highest possible alignment for even-width images.</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">if</span> (width % 8 == 0) {</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        <span class="keywordflow">return</span> 8;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    }</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">if</span> (width % 4 == 0) {</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;        <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    }</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span> (width % 2 == 0) {</div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;        <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    }</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="comment">// The size of meaningful data in each row.</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordtype">size_t</span> pix_bytes = width * <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#aa8bc42c345504717eba7d38b39d278c2">pixel_size</a>(fmt);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// The size of padding.</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordtype">size_t</span> padding = row_size - pix_bytes;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">if</span> (padding == 0) {</div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="keywordflow">return</span> 1;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">if</span> (padding &lt;= 1) {</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;        <span class="keywordflow">return</span> 2;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    }</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">if</span> (padding &lt;= 3) {</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    }</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">if</span> (padding &lt;= 7) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        <span class="keywordflow">return</span> 8;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    }</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="comment">// Bail with a sane value.</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> 4;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;</div><div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a54659e7f41b37d889bba34111bb003d0">   56</a></span>&#160;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a54659e7f41b37d889bba34111bb003d0">Texture2dData::Texture2dData</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">util::Path</a> &amp;path, <span class="keywordtype">bool</span> use_metafile) {</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    std::string native_path = path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a4ca4da6e9e2d8adadb02373ff2be8ebe">resolve_native_path</a>();</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    std::unique_ptr&lt;SDL_Surface, decltype(&amp;SDL_FreeSurface)&gt; surface(</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        IMG_Load(native_path.c_str()),</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        &amp;SDL_FreeSurface</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    );</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">if</span> (!surface) {</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>)</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                    &lt;&lt; <span class="stringliteral">&quot;Could not load texture from &quot;</span> &lt;&lt; native_path</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;                    &lt;&lt; <span class="stringliteral">&quot;: &quot;</span> &lt;&lt; IMG_GetError());</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    }</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">dbg</a>) &lt;&lt; <span class="stringliteral">&quot;Texture has been loaded from &quot;</span> &lt;&lt; native_path);</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keyword">auto</span> surf_fmt = *surface-&gt;format;</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426e">pixel_format</a> pix_fmt;</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">switch</span> (surf_fmt.format) {</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keywordflow">case</span> SDL_PIXELFORMAT_RGB24:</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        pix_fmt = <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a">pixel_format::rgb8</a>;</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">case</span> SDL_PIXELFORMAT_BGR24:</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        pix_fmt = <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39">pixel_format::bgr8</a>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="preprocessor">#if SDL_BYTEORDER == SDL_BIG_ENDIAN</span></div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">case</span> SDL_PIXELFORMAT_RGBA8888:</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">case</span> SDL_PIXELFORMAT_ABGR8888:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        pix_fmt = <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a">pixel_format::rgba8</a>;</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <span class="keywordflow">break</span>;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">default</span>:</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Texture &quot;</span> &lt;&lt; native_path &lt;&lt; <span class="stringliteral">&quot; uses an unsupported format.&quot;</span>);</div><div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    }</div><div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;</div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">auto</span> w = uint32_t(surface-&gt;w);</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">auto</span> h = uint32_t(surface-&gt;h);</div><div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordtype">size_t</span> data_size = surf_fmt.BytesPerPixel * surface-&gt;w * surface-&gt;h;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <span class="comment">// copy pixel data from surface</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a> = std::vector&lt;uint8_t&gt;(data_size);</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    memcpy(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data(), surface-&gt;pixels, data_size);</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    std::vector&lt;Texture2dSubInfo&gt; subtextures;</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span> (use_metafile) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <a class="code" href="classopenage_1_1util_1_1_path.xhtml">util::Path</a> meta = (path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">get_parent</a>() / path.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">get_stem</a>()).with_suffix(<span class="stringliteral">&quot;.slp.docx&quot;</span>);</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>) &lt;&lt; <span class="stringliteral">&quot;Loading meta file: &quot;</span> &lt;&lt; meta);</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;        <span class="comment">// get subtexture information by meta file exported by script</span></div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        subtextures = util::read_csv_file&lt;Texture2dSubInfo&gt;(meta);</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">else</span> {</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// we don&#39;t have a texture description file.</span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        <span class="comment">// use the whole image as one texture then.</span></div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <a class="code" href="structopenage_1_1renderer_1_1resources_1_1_texture2d_sub_info.xhtml">Texture2dSubInfo</a> s{0, 0, w, h, w/2, h/2};</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        subtextures.push_back(s);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordtype">size_t</span> align = <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a62ad4c6594b8ad6f357a9e5b18575bc4">guess_row_alignment</a>(w, pix_fmt, surface-&gt;pitch);</div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a> = <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml">Texture2dInfo</a>(w, h, pix_fmt, align, <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(subtextures));</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ac914d524baaf0ac61f42ca7fcd24a8bd">  121</a></span>&#160;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a54659e7f41b37d889bba34111bb003d0">Texture2dData::Texture2dData</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml">Texture2dInfo</a> <span class="keyword">const</span>&amp; <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>, std::vector&lt;uint8_t&gt; &amp;&amp;data)</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    : <a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">info</a>)</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    , data(<a class="code" href="namespacestd.xhtml">std</a>::<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">move</a>(data)) {}</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a01acf205a4e2c76612af7d0e36123496">  125</a></span>&#160;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml">Texture2dData</a> <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a01acf205a4e2c76612af7d0e36123496">Texture2dData::flip_y</a>() {</div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    <span class="keywordtype">size_t</span> row_size = this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a2d87c131a3e1f175ce29d3ec146c2790">get_row_size</a>();</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">size_t</span> height = this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a3bd462432c63a67c1b199c3f717bce50">get_size</a>().second;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    std::vector&lt;uint8_t&gt; new_data(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.size());</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> y = 0; y &lt; height; ++y) {</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        std::copy(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data() + row_size * y, this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data() + row_size * (y+1), new_data.end() - row_size * (y+1));</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a> = new_data;</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml">Texture2dInfo</a> new_info(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>);</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a54659e7f41b37d889bba34111bb003d0">Texture2dData</a>(<a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(new_info), <a class="code" href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">std::move</a>(new_data));</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a4a3717b88a0cfe57351eb76866a8aed5">  142</a></span>&#160;<span class="keyword">const</span> <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml">Texture2dInfo</a>&amp; <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a4a3717b88a0cfe57351eb76866a8aed5">Texture2dData::get_info</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>;</div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;</div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a04a2df204bf7d3f7029b2e74ee417fec">  146</a></span>&#160;<span class="keyword">const</span> uint8_t *<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a04a2df204bf7d3f7029b2e74ee417fec">Texture2dData::get_data</a>()<span class="keyword"> const </span>{</div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">return</span> this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data();</div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div><div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a3dceab170bbee853bcafd6fd924be208">  150</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a3dceab170bbee853bcafd6fd924be208">Texture2dData::store</a>(<span class="keyword">const</span> <a class="code" href="classopenage_1_1util_1_1_path.xhtml">util::Path</a>&amp; file)<span class="keyword"> const </span>{</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <a class="code" href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">log::log</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>) &lt;&lt; <span class="stringliteral">&quot;Saving texture data to &quot;</span> &lt;&lt; file);</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordflow">if</span> (this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a57830eb6623cc7171953bc0214c6ee2c">get_format</a>() != <a class="code" href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a">pixel_format::rgba8</a>) {</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">throw</span> <a class="code" href="classopenage_1_1error_1_1_error.xhtml">Error</a>(<a class="code" href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a>(<a class="code" href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">err</a>) &lt;&lt; <span class="stringliteral">&quot;Storing 2D textures into files is unimplemented. PRs welcome :D&quot;</span>);</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    }</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keyword">auto</span> size = this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a3bd462432c63a67c1b199c3f717bce50">get_size</a>();</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="comment">// If an older SDL2 is used, we have to specify the format manually.</span></div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="preprocessor">#ifndef SDL_PIXELFORMAT_RGBA32</span></div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    uint32_t rmask, gmask, bmask, amask;</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#if SDL_BYTEORDER == SDL_BIG_ENDIAN</span></div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;    rmask = 0xff000000;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    gmask = 0x00ff0000;</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    bmask = 0x0000ff00;</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    amask = 0x000000ff;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#else // little endian, like x86</span></div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;    rmask = 0x000000ff;</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    gmask = 0x0000ff00;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    bmask = 0x00ff0000;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    amask = 0xff000000;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    std::unique_ptr&lt;SDL_Surface, decltype(&amp;SDL_FreeSurface)&gt; surf(</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;        SDL_CreateRGBSurfaceFrom(</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;            <span class="comment">// const_cast is okay, because the surface doesn&#39;t modify data</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;            const_cast&lt;void*&gt;(static_cast&lt;void const*&gt;(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data())),</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;            size.first,</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;            size.second,</div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;            32,</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a2d87c131a3e1f175ce29d3ec146c2790">get_row_size</a>(),</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;            rmask, gmask, bmask, amask</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;        ),</div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;        &amp;SDL_FreeSurface</div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    );</div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    std::unique_ptr&lt;SDL_Surface, decltype(&amp;SDL_FreeSurface)&gt; surf(</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        SDL_CreateRGBSurfaceWithFormatFrom(</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;            <span class="comment">// const_cast is okay, because the surface doesn&#39;t modify data</span></div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;            const_cast&lt;void*&gt;(static_cast&lt;void const*&gt;(this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">data</a>.data())),</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;            size.first,</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;            size.second,</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            32,</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            this-&gt;<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">info</a>.<a class="code" href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a2d87c131a3e1f175ce29d3ec146c2790">get_row_size</a>(),</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;            SDL_PIXELFORMAT_RGBA32</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        ),</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        &amp;SDL_FreeSurface</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    );</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="comment">// Call sdl_image for saving the screenshot to PNG</span></div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    std::string path = file.<a class="code" href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">resolve_native_path_w</a>();</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    IMG_SavePNG(surf.get(), path.c_str());</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;}</div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;</div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}}}</div><div class="ttc" id="classopenage_1_1error_1_1_error_xhtml"><div class="ttname"><a href="classopenage_1_1error_1_1_error.xhtml">openage::error::Error</a></div><div class="ttdef"><b>Definition:</b> <a href="error_2error_8h_source.xhtml#l00051">error.h:51</a></div></div>
<div class="ttc" id="message_8h_xhtml_a8adfad4f54eb306fbb8aaa1b159608a5"><div class="ttname"><a href="message_8h.xhtml#a8adfad4f54eb306fbb8aaa1b159608a5">MSG</a></div><div class="ttdeci">#define MSG(LVL)</div><div class="ttdef"><b>Definition:</b> <a href="message_8h_source.xhtml#l00171">message.h:171</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a325b0901ddb3f2af36f93781b7dd9744"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a325b0901ddb3f2af36f93781b7dd9744">openage::log.err</a></div><div class="ttdeci">def err(msg, *args, **kwargs)</div><div class="ttdoc">error message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00124">__init__.py:124</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a4ca4da6e9e2d8adadb02373ff2be8ebe"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a4ca4da6e9e2d8adadb02373ff2be8ebe">openage::util::Path::resolve_native_path</a></div><div class="ttdeci">std::string resolve_native_path(const std::string &amp;mode=&quot;r&quot;) const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00163">path.cpp:163</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml_a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e"><div class="ttname"><a href="namespaceopenage.xhtml#a7278b1c0b8d94d06da155b0b693b2828a3734a903022249b3010be1897042568e">openage::ability_type::move</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea17ba96e730d343bfe8c3dfa6c7d3bf39">openage::renderer::resources::pixel_format::bgr8</a></div><div class="ttdoc">24 bits per pixel, float, BGR order</div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_info_xhtml_a57830eb6623cc7171953bc0214c6ee2c"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a57830eb6623cc7171953bc0214c6ee2c">openage::renderer::resources::Texture2dInfo::get_format</a></div><div class="ttdeci">pixel_format get_format() const</div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8cpp_source.xhtml#l00032">texture_info.cpp:32</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a62ad4c6594b8ad6f357a9e5b18575bc4"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a62ad4c6594b8ad6f357a9e5b18575bc4">openage::renderer::resources::guess_row_alignment</a></div><div class="ttdeci">static constexpr size_t guess_row_alignment(size_t width, pixel_format fmt, size_t row_size)</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00022">texture_data.cpp:22</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_aad3d76b2466dbc4f81552935f2d84faa"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#aad3d76b2466dbc4f81552935f2d84faa">openage::log.dbg</a></div><div class="ttdeci">def dbg(msg, *args, **kwargs)</div><div class="ttdoc">debug message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00109">__init__.py:109</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml">openage::util::Path</a></div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8h_source.xhtml#l00046">path.h:46</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_info_xhtml_a2d87c131a3e1f175ce29d3ec146c2790"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a2d87c131a3e1f175ce29d3ec146c2790">openage::renderer::resources::Texture2dInfo::get_row_size</a></div><div class="ttdeci">size_t get_row_size() const</div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8cpp_source.xhtml#l00040">texture_info.cpp:40</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_ad10f384dfea1586058f78af7feb90e3b"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#ad10f384dfea1586058f78af7feb90e3b">openage::renderer::resources::Texture2dData::info</a></div><div class="ttdeci">Texture2dInfo info</div><div class="ttdoc">Information about this texture data.</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8h_source.xhtml#l00065">texture_data.h:65</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_a54659e7f41b37d889bba34111bb003d0"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a54659e7f41b37d889bba34111bb003d0">openage::renderer::resources::Texture2dData::Texture2dData</a></div><div class="ttdeci">Texture2dData(const util::Path &amp;path, bool use_metafile=false)</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00056">texture_data.cpp:56</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_aa8bc42c345504717eba7d38b39d278c2"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#aa8bc42c345504717eba7d38b39d278c2">openage::renderer::resources::pixel_size</a></div><div class="ttdeci">constexpr size_t pixel_size(pixel_format fmt)</div><div class="ttdoc">Returns the size in bytes of a single pixel of the specified format.</div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8h_source.xhtml#l00036">texture_info.h:36</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426e"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426e">openage::renderer::resources::pixel_format</a></div><div class="ttdeci">pixel_format</div><div class="ttdoc">How the pixels are represented in a texture.</div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8h_source.xhtml#l00018">texture_info.h:18</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_a4a3717b88a0cfe57351eb76866a8aed5"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a4a3717b88a0cfe57351eb76866a8aed5">openage::renderer::resources::Texture2dData::get_info</a></div><div class="ttdeci">const Texture2dInfo &amp; get_info() const</div><div class="ttdoc">Returns the information describing this texture data.</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00142">texture_data.cpp:142</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_info_xhtml_a3bd462432c63a67c1b199c3f717bce50"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml#a3bd462432c63a67c1b199c3f717bce50">openage::renderer::resources::Texture2dInfo::get_size</a></div><div class="ttdeci">std::pair&lt; int32_t, int32_t &gt; get_size() const</div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8cpp_source.xhtml#l00028">texture_info.cpp:28</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426eaaffcf7617521c42b49e1e2929a725e6a">openage::renderer::resources::pixel_format::rgba8</a></div><div class="ttdoc">32 bits per pixel, float, alpha channel, RGBA order</div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a0eff614e7d6e818746700ed9d29e583f"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a0eff614e7d6e818746700ed9d29e583f">openage::log::log</a></div><div class="ttdeci">void log(const message &amp;msg)</div><div class="ttdef"><b>Definition:</b> <a href="log_8cpp_source.xhtml#l00013">log.cpp:13</a></div></div>
<div class="ttc" id="namespacestd_xhtml"><div class="ttname"><a href="namespacestd.xhtml">std</a></div><div class="ttdef"><b>Definition:</b> <a href="hash__functions_8h_source.xhtml#l00009">hash_functions.h:9</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_a3dceab170bbee853bcafd6fd924be208"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a3dceab170bbee853bcafd6fd924be208">openage::renderer::resources::Texture2dData::store</a></div><div class="ttdeci">void store(const util::Path &amp;file) const</div><div class="ttdoc">Stores this texture data in the given file in the PNG format.</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00150">texture_data.cpp:150</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a3fc6528c66f6d83e122e753f73511a3d"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a3fc6528c66f6d83e122e753f73511a3d">openage::util::Path::get_parent</a></div><div class="ttdeci">Path get_parent() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00247">path.cpp:247</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_afed5e82e9f515fc2d8e2cdc291edebca"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#afed5e82e9f515fc2d8e2cdc291edebca">openage::util::Path::get_stem</a></div><div class="ttdeci">std::string get_stem() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00282">path.cpp:282</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml">openage::renderer::resources::Texture2dData</a></div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8h_source.xhtml#l00019">texture_data.h:19</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_a01acf205a4e2c76612af7d0e36123496"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a01acf205a4e2c76612af7d0e36123496">openage::renderer::resources::Texture2dData::flip_y</a></div><div class="ttdeci">Texture2dData flip_y()</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00125">texture_data.cpp:125</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_aaee1fe41bf29e523195fff1eb571cf74"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#aaee1fe41bf29e523195fff1eb571cf74">openage::renderer::resources::Texture2dData::data</a></div><div class="ttdeci">std::vector&lt; uint8_t &gt; data</div><div class="ttdoc">The raw texture data.</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8h_source.xhtml#l00068">texture_data.h:68</a></div></div>
<div class="ttc" id="structopenage_1_1renderer_1_1resources_1_1_texture2d_sub_info_xhtml"><div class="ttname"><a href="structopenage_1_1renderer_1_1resources_1_1_texture2d_sub_info.xhtml">openage::renderer::resources::Texture2dSubInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="texture__subinfo_8h_source.xhtml#l00018">texture_subinfo.h:18</a></div></div>
<div class="ttc" id="namespaceopenage_1_1renderer_1_1resources_xhtml_a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a"><div class="ttname"><a href="namespaceopenage_1_1renderer_1_1resources.xhtml#a9c043ffb36fb67c86e45c74d0e83426ea0d16d8a03c4a015e24dca17617722c4a">openage::renderer::resources::pixel_format::rgb8</a></div><div class="ttdoc">24 bits per pixel, float, RGB order</div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_data_xhtml_a04a2df204bf7d3f7029b2e74ee417fec"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_data.xhtml#a04a2df204bf7d3f7029b2e74ee417fec">openage::renderer::resources::Texture2dData::get_data</a></div><div class="ttdeci">const uint8_t * get_data() const</div><div class="ttdoc">Returns a pointer to the raw texture data, in row-major order.</div><div class="ttdef"><b>Definition:</b> <a href="texture__data_8cpp_source.xhtml#l00146">texture_data.cpp:146</a></div></div>
<div class="ttc" id="texture__data_8h_xhtml"><div class="ttname"><a href="texture__data_8h.xhtml">texture_data.h</a></div></div>
<div class="ttc" id="namespaceopenage_xhtml"><div class="ttname"><a href="namespaceopenage.xhtml">openage</a></div><div class="ttdef"><b>Definition:</b> <a href="assetmanager_8cpp_source.xhtml#l00018">assetmanager.cpp:18</a></div></div>
<div class="ttc" id="classopenage_1_1renderer_1_1resources_1_1_texture2d_info_xhtml"><div class="ttname"><a href="classopenage_1_1renderer_1_1resources_1_1_texture2d_info.xhtml">openage::renderer::resources::Texture2dInfo</a></div><div class="ttdef"><b>Definition:</b> <a href="texture__info_8h_source.xhtml#l00054">texture_info.h:54</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1_path_xhtml_a1175be01a6df63d066ca6f2d3e2c4d3c"><div class="ttname"><a href="classopenage_1_1util_1_1_path.xhtml#a1175be01a6df63d066ca6f2d3e2c4d3c">openage::util::Path::resolve_native_path_w</a></div><div class="ttdeci">std::string resolve_native_path_w() const</div><div class="ttdef"><b>Definition:</b> <a href="util_2path_8cpp_source.xhtml#l00188">path.cpp:188</a></div></div>
<div class="ttc" id="namespaceopenage_1_1log_xhtml_a3f1815b698faf5786fc5e20bcac7704b"><div class="ttname"><a href="namespaceopenage_1_1log.xhtml#a3f1815b698faf5786fc5e20bcac7704b">openage::log.info</a></div><div class="ttdeci">def info(msg, *args, **kwargs)</div><div class="ttdoc">info message</div><div class="ttdef"><b>Definition:</b> <a href="log_2____init_____8py_source.xhtml#l00114">__init__.py:114</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_7a1433c2fe60c22d0d75c56b51397e23.xhtml">libopenage</a></li><li class="navelem"><a class="el" href="dir_4a01dee474130c13b802372087a79ed7.xhtml">renderer</a></li><li class="navelem"><a class="el" href="dir_0568487d55e2441d52cc8103196705cb.xhtml">resources</a></li><li class="navelem"><a class="el" href="texture__data_8cpp.xhtml">texture_data.cpp</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
