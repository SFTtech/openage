<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.15"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>openage: C:/Users/Jameson/Documents/git-projects/openage/openage/util/bytequeue.py Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
  $(document).ready(initResizable);
/* @license-end */</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">openage
   &#160;<span id="projectnumber">0.3.1</span>
   </div>
   <div id="projectbrief">Free (as in freedom) open source clone of the Age of Empires II engine</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.15 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('bytequeue_8py_source.xhtml','');});
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">bytequeue.py</div>  </div>
</div><!--header-->
<div class="contents">
<a href="bytequeue_8py.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno"><a class="line" href="namespaceopenage_1_1util_1_1bytequeue.xhtml">    1</a></span>&#160;<span class="comment"># Copyright 2015-2019 the openage authors. See copying.md for legal info.</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="stringliteral">Provides ByteQueue, a high-performance queue for bytes objects.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">from</span> collections <span class="keyword">import</span> deque</div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">from</span> bisect <span class="keyword">import</span> bisect</div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml">ByteQueue</a>:</div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="stringliteral">    Queue for bytes</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="stringliteral">    Can append bytes objects at the right,</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="stringliteral">    and pop arbitrary-size bytes objects at the left.</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="stringliteral">    The naive implementation would look like this:</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="stringliteral">    append(self, data):</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="stringliteral">        self.buf += data</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="stringliteral">    popleft(self, size):</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="stringliteral">        result, self.buf = self.buf[:size], self.buf[size:]</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="stringliteral">        return result</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="stringliteral">    However, due to python&#39;s nature, that would be extremely slow.</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="stringliteral">    Thus, the bytes objects are actually stored - unmodified -</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="stringliteral">    in an internal queue, and only concatenated during popleft().</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div><div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml">   32</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#afff888f3da7310e8777c220afc076a85">__init__</a>(self):</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">bufs</a> = deque()</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#afff888f3da7310e8777c220afc076a85">   34</a></span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">   35</a></span>&#160;        <span class="comment"># stores the amount of data that&#39;s currently available.</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">size</a> = 0</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">   38</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#add5a3f3759d00eaee5c849283a69d3e5">__len__</a>(self):</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="stringliteral">        Size of all currently-stored data.</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">size</a></div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#add5a3f3759d00eaee5c849283a69d3e5">   43</a></span>&#160;</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2d6e17c9eeb4c6bcd36887a46bd2d42b">append</a>(self, data):</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="stringliteral">        Adds bytes to the buffer.</span></div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(data, bytes):</div><div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2d6e17c9eeb4c6bcd36887a46bd2d42b">   49</a></span>&#160;            <span class="keywordflow">raise</span> TypeError(<span class="stringliteral">&quot;expected a bytes object, but got &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(data))</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">bufs</a>.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2d6e17c9eeb4c6bcd36887a46bd2d42b">append</a>(data)</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">size</a> += len(data)</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2f49ba3b91b8c7c37446dcd6e8c7b316">popleft</a>(self, size):</div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="stringliteral">        Returns the requested amount of bytes from the buffer.</span></div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;        <span class="keywordflow">if</span> size &gt; self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">size</a>:</div><div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2f49ba3b91b8c7c37446dcd6e8c7b316">   59</a></span>&#160;            <span class="keywordflow">raise</span> ValueError(<span class="stringliteral">&quot;ByteQueue does not contain enough bytes&quot;</span>)</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">size</a> -= size</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        resultbufs = []</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        required = size</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;        <span class="keywordflow">while</span> required &gt; 0:</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;            buf = self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">bufs</a>.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2f49ba3b91b8c7c37446dcd6e8c7b316">popleft</a>()</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;            resultbufs.append(buf)</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;            required -= len(buf)</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <span class="keywordflow">if</span> required &lt; 0:</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;            <span class="comment"># we requested too much; split the last buffer</span></div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;            buf = resultbufs.pop()</div><div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div><div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;            popped = buf[:required]</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;            kept = buf[required:]</div><div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;            resultbufs.append(popped)</div><div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">bufs</a>.appendleft(kept)</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;        <span class="keywordflow">return</span> b<span class="stringliteral">&quot;&quot;</span>.join(resultbufs)</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml">ByteBuffer</a>:</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="stringliteral">    Similar to ByteQueue, but instead of popleft, allows reading random slices,</span></div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="stringliteral">    and trimleft, which discards data from the left.</span></div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="stringliteral">    &quot;&quot;&quot;</span></div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#afff888f3da7310e8777c220afc076a85">__init__</a>(self):</div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml">   90</a></span>&#160;        <span class="comment"># holds all appended bytes objects</span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a1a65252620cb1d77527c18c0a0dc36d0">   91</a></span>&#160;        <span class="comment"># discarded bytes objects are replaced by None.</span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">bufs</a> = [<span class="keywordtype">None</span>]</div><div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">   94</a></span>&#160;        <span class="comment"># holds the absolute position of the end of each of the byte objects.</span></div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a> = [0]</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;</div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">   97</a></span>&#160;        <span class="comment"># holds the number of discarded buffers at the left of self.bufs</span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment"># (i.e. the index of the first non-discarded buffer)</span></div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#ad7247d326981f0413e482caf0c3b4895">discardedbufs</a> = 1</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#ad7247d326981f0413e482caf0c3b4895">  101</a></span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">discardedbytes</a> = 0</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">  103</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8722db6380bb4a3ebdcd2d13ba93e2e6">__len__</a>(self):</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keywordflow">return</span> self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a>[-1]</div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8722db6380bb4a3ebdcd2d13ba93e2e6">  105</a></span>&#160;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a85b720a4206241057c0feff293f38e90">append</a>(self, data):</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="stringliteral">        appends new data to the right of the buffer</span></div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(data, bytes):</div><div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a85b720a4206241057c0feff293f38e90">  111</a></span>&#160;            <span class="keywordflow">raise</span> TypeError(<span class="stringliteral">&quot;expected bytes, but got &quot;</span> + <a class="code" href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">repr</a>(data))</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">bufs</a>.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a85b720a4206241057c0feff293f38e90">append</a>(data)</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a>.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a85b720a4206241057c0feff293f38e90">append</a>(len(self) + len(data))</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a697e1352f957ef84d84a67b33ee7a6c6">discardleft</a>(self, keep):</div><div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="stringliteral">        discards data at the beginning of the buffer.</span></div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="stringliteral">        keeps at least the &#39;keep&#39; most recent bytes.</span></div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        discardamount = len(self) - keep</div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a697e1352f957ef84d84a67b33ee7a6c6">  122</a></span>&#160;        <span class="keywordflow">if</span> discardamount &lt;= self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">discardedbytes</a>:</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <span class="comment"># the index of the first block that is not to be discarded</span></div><div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        discardto = bisect(self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a>, discardamount)</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div><div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;        <span class="keywordflow">for</span> idx <span class="keywordflow">in</span> range(self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#ad7247d326981f0413e482caf0c3b4895">discardedbufs</a>, discardto):</div><div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;            self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">bufs</a>[idx] = <span class="keywordtype">None</span></div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#ad7247d326981f0413e482caf0c3b4895">discardedbufs</a> = discardto</div><div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">discardedbytes</a> = discardamount</div><div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a609749224fa2bf063e6200c4bd6b09ed">hasbeendiscarded</a>(self, position):</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="stringliteral">        returns True if the given position has already been discarded</span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="stringliteral">        and is no longer valid.</span></div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <span class="keywordflow">return</span> position &lt; self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">discardedbytes</a></div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a609749224fa2bf063e6200c4bd6b09ed">  140</a></span>&#160;</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8c0eddc43c1430a5397dbaba48d1d65e">__getitem__</a>(self, pos):</div><div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="stringliteral">        a slice with default stepping is required.</span></div><div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="stringliteral">        when attempting to access already-discarded data, a ValueError</span></div><div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="stringliteral">        is raised.</span></div><div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;</div><div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8c0eddc43c1430a5397dbaba48d1d65e">  149</a></span>&#160;        <span class="keywordflow">if</span> <span class="keywordflow">not</span> isinstance(pos, slice):</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;            <span class="keywordflow">raise</span> TypeError(<span class="stringliteral">&quot;expected slice&quot;</span>)</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">if</span> pos.step <span class="keywordflow">is</span> <span class="keywordflow">not</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;            <span class="keywordflow">raise</span> TypeError(<span class="stringliteral">&quot;slicing with steps is not supported&quot;</span>)</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        start, end = pos.start, pos.stop</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="comment"># emulate proper slicing behavior</span></div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">if</span> start <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;            start = 0</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">if</span> end <span class="keywordflow">is</span> <span class="keywordtype">None</span>:</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;            end = len(self)</div><div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;        <span class="keywordflow">if</span> start &lt; 0:</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;            start = len(self) + start</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;        <span class="keywordflow">if</span> end &lt; 0:</div><div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;            end = len(self) + end</div><div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;        <span class="keywordflow">return</span> b<span class="stringliteral">&quot;&quot;</span>.join(self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a11543b907256b66c6b74af27ebb7c82c">get_buffers</a>(start, end))</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="keyword">class </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_1_1_discarded_error.xhtml">DiscardedError</a>(Exception):</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="stringliteral">        raised by get_buffers and the indexing operator if the requested</span></div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="stringliteral">        data has already been discarded.</span></div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_1_1_discarded_error.xhtml">  178</a></span>&#160;    <span class="keyword">def </span><a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a11543b907256b66c6b74af27ebb7c82c">get_buffers</a>(self, start, end):</div><div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="stringliteral">&quot;&quot;&quot;</span></div><div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="stringliteral">        yields any amount of bytes objects that constitute the data</span></div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="stringliteral">        between start and end.</span></div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="stringliteral">        used internally by __getitem__, but may be useful externally</span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="stringliteral">        as well.</span></div><div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="stringliteral"></span></div><div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="stringliteral">        performs bounds checking, but end must be greater than start.</span></div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="stringliteral">        &quot;&quot;&quot;</span></div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <span class="comment"># sanitize the start and end values.</span></div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a11543b907256b66c6b74af27ebb7c82c">  189</a></span>&#160;        start = <a class="code" href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">max</a>(start, 0)</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        end = <a class="code" href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">min</a>(end, len(self))</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">if</span> end &lt;= start:</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;            <span class="keywordflow">yield</span> b<span class="stringliteral">&quot;&quot;</span></div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;            <span class="keywordflow">return</span></div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <span class="comment"># check for discard</span></div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        <span class="keywordflow">if</span> self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a609749224fa2bf063e6200c4bd6b09ed">hasbeendiscarded</a>(start):</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;            <span class="keywordflow">raise</span> self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_1_1_discarded_error.xhtml">DiscardedError</a>(start, end)</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        idx = bisect(self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a>, start)</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;        buf = self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">bufs</a>[idx]</div><div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;        <span class="comment"># cut off superfluous parts at the left of the first buffer.</span></div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;        <span class="comment"># the negative index is intentional.</span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;        <span class="comment"># pylint: disable=unsubscriptable-object</span></div><div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;        buf = buf[start - self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">index</a>[idx]:]</div><div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;        remaining = end - start</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">while</span> remaining &gt; len(buf):</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;            remaining -= len(buf)</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;            <span class="keywordflow">yield</span> buf</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;            <span class="comment"># get next buffer</span></div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;            idx += 1</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;            buf = self.<a class="code" href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">bufs</a>[idx]</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;        <span class="comment"># cut of superfluous parts at the right of the last buffer.</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;        buf = buf[:remaining]</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;        <span class="keywordflow">yield</span> buf</div><div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_ad7247d326981f0413e482caf0c3b4895"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#ad7247d326981f0413e482caf0c3b4895">openage::util.bytequeue.ByteBuffer.discardedbufs</a></div><div class="ttdeci">discardedbufs</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00101">bytequeue.py:101</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a85b720a4206241057c0feff293f38e90"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a85b720a4206241057c0feff293f38e90">openage::util.bytequeue.ByteBuffer.append</a></div><div class="ttdeci">def append(self, data)</div><div class="ttdoc">appends new data to the right of the buffer</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00111">bytequeue.py:111</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml">openage::util.bytequeue.ByteQueue</a></div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00032">bytequeue.py:32</a></div></div>
<div class="ttc" id="namespacestd_xhtml_a34591a1d8ee5da3f16f56554590d5e16"><div class="ttname"><a href="namespacestd.xhtml#a34591a1d8ee5da3f16f56554590d5e16">std::min</a></div><div class="ttdeci">constexpr openage::util::FixedPoint&lt; I, F &gt; min(openage::util::FixedPoint&lt; I, F &gt; x, openage::util::FixedPoint&lt; I, F &gt; y)</div><div class="ttdef"><b>Definition:</b> <a href="fixed__point_8h_source.xhtml#l00475">fixed_point.h:475</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_add5a3f3759d00eaee5c849283a69d3e5"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#add5a3f3759d00eaee5c849283a69d3e5">openage::util.bytequeue.ByteQueue.__len__</a></div><div class="ttdeci">def __len__(self)</div><div class="ttdoc">Size of all currently-stored data.</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00043">bytequeue.py:43</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a11543b907256b66c6b74af27ebb7c82c"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a11543b907256b66c6b74af27ebb7c82c">openage::util.bytequeue.ByteBuffer.get_buffers</a></div><div class="ttdeci">def get_buffers(self, start, end)</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00189">bytequeue.py:189</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a60669c78ad161b24f39f67aceb7133cb"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a60669c78ad161b24f39f67aceb7133cb">openage::util.bytequeue.ByteBuffer.bufs</a></div><div class="ttdeci">bufs</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00094">bytequeue.py:94</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a02c578c8742bad4dbce84f46e407f497"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a02c578c8742bad4dbce84f46e407f497">openage::util.bytequeue.ByteBuffer.discardedbytes</a></div><div class="ttdeci">discardedbytes</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00103">bytequeue.py:103</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a78672162d5ac03dfe3a133d4ebdd39bb"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a78672162d5ac03dfe3a133d4ebdd39bb">openage::util.bytequeue.ByteBuffer.index</a></div><div class="ttdeci">index</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00097">bytequeue.py:97</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a8c0eddc43c1430a5397dbaba48d1d65e"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8c0eddc43c1430a5397dbaba48d1d65e">openage::util.bytequeue.ByteBuffer.__getitem__</a></div><div class="ttdeci">def __getitem__(self, pos)</div><div class="ttdoc">a slice with default stepping is required.</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00149">bytequeue.py:149</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a609749224fa2bf063e6200c4bd6b09ed"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a609749224fa2bf063e6200c4bd6b09ed">openage::util.bytequeue.ByteBuffer.hasbeendiscarded</a></div><div class="ttdeci">def hasbeendiscarded(self, position)</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00140">bytequeue.py:140</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_a2f49ba3b91b8c7c37446dcd6e8c7b316"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2f49ba3b91b8c7c37446dcd6e8c7b316">openage::util.bytequeue.ByteQueue.popleft</a></div><div class="ttdeci">def popleft(self, size)</div><div class="ttdoc">Returns the requested amount of bytes from the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00059">bytequeue.py:59</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml">openage::util.bytequeue.ByteBuffer</a></div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00090">bytequeue.py:90</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_1_1_discarded_error_xhtml"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_1_1_discarded_error.xhtml">openage::util.bytequeue.ByteBuffer.DiscardedError</a></div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00178">bytequeue.py:178</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_a41b75b7e6e36eeea0cf35cbac3ad9519"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a41b75b7e6e36eeea0cf35cbac3ad9519">openage::util.bytequeue.ByteQueue.bufs</a></div><div class="ttdeci">bufs</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00035">bytequeue.py:35</a></div></div>
<div class="ttc" id="namespaceopenage_1_1util_xhtml_a7bc4421a5f0f57f3a0aba3f96eb8d19c"><div class="ttname"><a href="namespaceopenage_1_1util.xhtml#a7bc4421a5f0f57f3a0aba3f96eb8d19c">openage::util::repr</a></div><div class="ttdeci">std::string repr(const std::string &amp;arg)</div><div class="ttdoc">method that behaves similar to python's &quot;repr&quot;.</div><div class="ttdef"><b>Definition:</b> <a href="repr_8cpp_source.xhtml#l00012">repr.cpp:12</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_a2d6e17c9eeb4c6bcd36887a46bd2d42b"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a2d6e17c9eeb4c6bcd36887a46bd2d42b">openage::util.bytequeue.ByteQueue.append</a></div><div class="ttdeci">def append(self, data)</div><div class="ttdoc">Adds bytes to the buffer.</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00049">bytequeue.py:49</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a697e1352f957ef84d84a67b33ee7a6c6"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a697e1352f957ef84d84a67b33ee7a6c6">openage::util.bytequeue.ByteBuffer.discardleft</a></div><div class="ttdeci">def discardleft(self, keep)</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00122">bytequeue.py:122</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_a553ee1fda70a2f1c6e7f0d3575b73678"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#a553ee1fda70a2f1c6e7f0d3575b73678">openage::util.bytequeue.ByteQueue.size</a></div><div class="ttdeci">size</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00038">bytequeue.py:38</a></div></div>
<div class="ttc" id="namespaceopenage_1_1console_1_1tests_xhtml_a46ebd3333dc9196558ac9aced828d117"><div class="ttname"><a href="namespaceopenage_1_1console_1_1tests.xhtml#a46ebd3333dc9196558ac9aced828d117">openage::console::tests::max</a></div><div class="ttdeci">int max(int a, int b)</div><div class="ttdef"><b>Definition:</b> <a href="console_2tests_8cpp_source.xhtml#l00031">tests.cpp:31</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer_xhtml_a8722db6380bb4a3ebdcd2d13ba93e2e6"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_buffer.xhtml#a8722db6380bb4a3ebdcd2d13ba93e2e6">openage::util.bytequeue.ByteBuffer.__len__</a></div><div class="ttdeci">def __len__(self)</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00105">bytequeue.py:105</a></div></div>
<div class="ttc" id="classopenage_1_1util_1_1bytequeue_1_1_byte_queue_xhtml_afff888f3da7310e8777c220afc076a85"><div class="ttname"><a href="classopenage_1_1util_1_1bytequeue_1_1_byte_queue.xhtml#afff888f3da7310e8777c220afc076a85">openage::util.bytequeue.ByteQueue.__init__</a></div><div class="ttdeci">def __init__(self)</div><div class="ttdef"><b>Definition:</b> <a href="bytequeue_8py_source.xhtml#l00034">bytequeue.py:34</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_5432d0784b34fd012a3258f7fe2e6e8b.xhtml">openage</a></li><li class="navelem"><a class="el" href="dir_add32c31ab2cc20d9f874152de79d6bd.xhtml">util</a></li><li class="navelem"><a class="el" href="bytequeue_8py.xhtml">bytequeue.py</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.15 </li>
  </ul>
</div>
</body>
</html>
