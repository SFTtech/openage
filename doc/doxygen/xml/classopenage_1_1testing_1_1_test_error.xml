<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1testing_1_1_test_error" kind="class" language="C++" prot="public">
    <compoundname>openage::testing::TestError</compoundname>
    <basecompoundref refid="classopenage_1_1error_1_1_error" prot="public" virt="non-virtual">openage::error::Error</basecompoundref>
    <includes refid="testing_8h" local="no">testing.h</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classopenage_1_1testing_1_1_test_error_1a755a7891dfe08412bc2312f29b0e618d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::error::Error::Error</definition>
        <argsstring>(const log::message &amp;msg, bool generate_backtrace=true, bool store_cause=true)</argsstring>
        <name>Error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>As with <ref refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" kindref="member">log::log()</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>generate_backtrace</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, some platform-specific code is run to collect traceback information (e.g.: backtrace (3)) (default true). The performance impacts should be not too bad, as only program counter pointers are collected. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>store_cause</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, a pointer to the causing exception is collected and stored (default true). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/testing/testing.h" line="18" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/error/error.cpp" bodystart="20" bodyend="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>To be used by all tests to indicate an error condition.</para>
<para>An optional error message may be passed as part of the message, but the file name and line number are of primary concern. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5232">
        <label>openage::testing::TestError</label>
        <link refid="classopenage_1_1testing_1_1_test_error"/>
        <childnode refid="5233" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5234">
        <label>runtime_error</label>
      </node>
      <node id="5233">
        <label>openage::error::Error</label>
        <link refid="classopenage_1_1error_1_1_error"/>
        <childnode refid="5234" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5235">
        <label>openage::testing::TestError</label>
        <link refid="classopenage_1_1testing_1_1_test_error"/>
        <childnode refid="5236" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5237">
        <label>runtime_error</label>
      </node>
      <node id="5238">
        <label>openage::log::message</label>
        <link refid="structopenage_1_1log_1_1message"/>
        <childnode refid="5239" relation="usage">
          <edgelabel>+lvl</edgelabel>
        </childnode>
      </node>
      <node id="5243">
        <label>openage::util::EnumValue&lt; DerivedType, NumericType &gt;</label>
        <link refid="classopenage_1_1util_1_1_enum_value"/>
        <childnode refid="5244" relation="usage">
          <edgelabel>+numeric</edgelabel>
        </childnode>
      </node>
      <node id="5244">
        <label>NumericType</label>
      </node>
      <node id="5242">
        <label>openage::util::EnumValue&lt; level_value &gt;</label>
        <link refid="classopenage_1_1util_1_1_enum_value"/>
        <childnode refid="5243" relation="template-instance">
          <edgelabel>&lt; level_value &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5240">
        <label>openage::util::Enum&lt; level_value &gt;</label>
        <link refid="classopenage_1_1util_1_1_enum"/>
        <childnode refid="5241" relation="usage">
          <edgelabel>#value</edgelabel>
        </childnode>
        <childnode refid="5245" relation="template-instance">
          <edgelabel>&lt; level_value &gt;</edgelabel>
        </childnode>
      </node>
      <node id="5239">
        <label>openage::log::level</label>
        <link refid="structopenage_1_1log_1_1level"/>
        <childnode refid="5240" relation="public-inheritance">
        </childnode>
        <childnode refid="5241" relation="usage">
          <edgelabel>+NOOPTIMIZE</edgelabel>
        </childnode>
      </node>
      <node id="5245">
        <label>openage::util::Enum&lt; DerivedType &gt;</label>
        <link refid="classopenage_1_1util_1_1_enum"/>
        <childnode refid="5246" relation="usage">
          <edgelabel>#value</edgelabel>
        </childnode>
      </node>
      <node id="5246">
        <label>DerivedType</label>
      </node>
      <node id="5236">
        <label>openage::error::Error</label>
        <link refid="classopenage_1_1error_1_1_error"/>
        <childnode refid="5237" relation="public-inheritance">
        </childnode>
        <childnode refid="5238" relation="usage">
          <edgelabel>+msg</edgelabel>
        </childnode>
      </node>
      <node id="5241">
        <label>openage::log::level_value</label>
        <link refid="structopenage_1_1log_1_1level__value"/>
        <childnode refid="5242" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/testing/testing.h" line="17" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/testing/testing.h" bodystart="17" bodyend="19"/>
    <listofallmembers>
      <member refid="classopenage_1_1error_1_1_error_1a8ad0320b8e32d6f187d0f4a74bd89d69" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>backtrace</name></member>
      <member refid="classopenage_1_1error_1_1_error_1ad7fc5249c96f6c6e2c3bfa55dfe8235b" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>debug_break_on_create</name></member>
      <member refid="classopenage_1_1testing_1_1_test_error_1a755a7891dfe08412bc2312f29b0e618d" prot="private" virt="non-virtual"><scope>openage::testing::TestError</scope><name>Error</name></member>
      <member refid="classopenage_1_1error_1_1_error_1a755a7891dfe08412bc2312f29b0e618d" prot="public" virt="non-virtual" ambiguityscope="openage::error::Error::"><scope>openage::testing::TestError</scope><name>Error</name></member>
      <member refid="classopenage_1_1error_1_1_error_1aa06c25a19f000f6ec51993e123b6681f" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>msg</name></member>
      <member refid="classopenage_1_1error_1_1_error_1a2eac361ac1550421b68e453b9a710d4b" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>rethrow_cause</name></member>
      <member refid="classopenage_1_1error_1_1_error_1a27cbe56bc7dbab4d399072ef87fe2014" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>store_cause</name></member>
      <member refid="classopenage_1_1error_1_1_error_1a1a6de651093edf2d3673cd0d146992e4" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>trim_backtrace</name></member>
      <member refid="classopenage_1_1error_1_1_error_1a6c5c486df5943aa399b6c051d9eb9059" prot="public" virt="virtual"><scope>openage::testing::TestError</scope><name>type_name</name></member>
      <member refid="classopenage_1_1error_1_1_error_1aebb433114d67e8c71b37a3de18019571" prot="public" virt="non-virtual"><scope>openage::testing::TestError</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
