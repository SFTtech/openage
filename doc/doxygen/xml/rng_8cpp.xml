<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="rng_8cpp" kind="file" language="C++">
    <compoundname>rng.cpp</compoundname>
    <includes refid="rng_8h" local="yes">rng.h</includes>
    <includes local="no">random</includes>
    <includes local="no">sstream</includes>
    <includes local="no">array</includes>
    <includes refid="timing_8h" local="yes">../util/timing.h</includes>
    <includes refid="hash_8h" local="yes">../util/hash.h</includes>
    <includes refid="error_2error_8h" local="yes">../error/error.h</includes>
    <incdepgraph>
      <node id="23839">
        <label>list</label>
      </node>
      <node id="23830">
        <label>atomic</label>
      </node>
      <node id="23836">
        <label>iomanip</label>
      </node>
      <node id="23835">
        <label>functional</label>
      </node>
      <node id="23817">
        <label>cstdint</label>
      </node>
      <node id="23833">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="23834" relation="include">
        </childnode>
        <childnode refid="23835" relation="include">
        </childnode>
        <childnode refid="23836" relation="include">
        </childnode>
        <childnode refid="23821" relation="include">
        </childnode>
        <childnode refid="23814" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
        <childnode refid="23837" relation="include">
        </childnode>
      </node>
      <node id="23818">
        <label>../util/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="23819" relation="include">
        </childnode>
        <childnode refid="23815" relation="include">
        </childnode>
      </node>
      <node id="23809">
        <label>C:/Users/Jameson/Documents/git-projects/openage/libopenage/rng/rng.cpp</label>
        <link refid="rng_8cpp"/>
        <childnode refid="23810" relation="include">
        </childnode>
        <childnode refid="23813" relation="include">
        </childnode>
        <childnode refid="23814" relation="include">
        </childnode>
        <childnode refid="23815" relation="include">
        </childnode>
        <childnode refid="23816" relation="include">
        </childnode>
        <childnode refid="23818" relation="include">
        </childnode>
        <childnode refid="23820" relation="include">
        </childnode>
      </node>
      <node id="23822">
        <label>stdexcept</label>
      </node>
      <node id="23816">
        <label>../util/timing.h</label>
        <link refid="timing_8h"/>
        <childnode refid="23817" relation="include">
        </childnode>
      </node>
      <node id="23838">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="23839" relation="include">
        </childnode>
        <childnode refid="23840" relation="include">
        </childnode>
        <childnode refid="23841" relation="include">
        </childnode>
      </node>
      <node id="23834">
        <label>cstdarg</label>
      </node>
      <node id="23812">
        <label>string</label>
      </node>
      <node id="23826">
        <label>../log/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="23817" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
        <childnode refid="23827" relation="include">
        </childnode>
        <childnode refid="23828" relation="include">
        </childnode>
        <childnode refid="23829" relation="include">
        </childnode>
        <childnode refid="23838" relation="include">
        </childnode>
        <childnode refid="23841" relation="include">
        </childnode>
      </node>
      <node id="23828">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="23819" relation="include">
        </childnode>
      </node>
      <node id="23810">
        <label>rng.h</label>
        <link refid="rng_8h"/>
        <childnode refid="23811" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
      </node>
      <node id="23829">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="23830" relation="include">
        </childnode>
        <childnode refid="23821" relation="include">
        </childnode>
        <childnode refid="23831" relation="include">
        </childnode>
        <childnode refid="23823" relation="include">
        </childnode>
        <childnode refid="23832" relation="include">
        </childnode>
        <childnode refid="23833" relation="include">
        </childnode>
      </node>
      <node id="23820">
        <label>../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="23811" relation="include">
        </childnode>
        <childnode refid="23821" relation="include">
        </childnode>
        <childnode refid="23822" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
        <childnode refid="23823" relation="include">
        </childnode>
        <childnode refid="23826" relation="include">
        </childnode>
      </node>
      <node id="23813">
        <label>random</label>
      </node>
      <node id="23843">
        <label>typeinfo</label>
      </node>
      <node id="23837">
        <label>vector</label>
      </node>
      <node id="23824">
        <label>ciso646</label>
      </node>
      <node id="23815">
        <label>array</label>
      </node>
      <node id="23814">
        <label>sstream</label>
      </node>
      <node id="23823">
        <label>../util/compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="23824" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
        <childnode refid="23825" relation="include">
        </childnode>
      </node>
      <node id="23825">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="23825" relation="include">
        </childnode>
      </node>
      <node id="23832">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="23811" relation="include">
        </childnode>
        <childnode refid="23812" relation="include">
        </childnode>
      </node>
      <node id="23841">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="23842" relation="include">
        </childnode>
      </node>
      <node id="23819">
        <label>cstdlib</label>
      </node>
      <node id="23811">
        <label>iostream</label>
      </node>
      <node id="23840">
        <label>mutex</label>
      </node>
      <node id="23831">
        <label>type_traits</label>
      </node>
      <node id="23827">
        <label>config.h</label>
      </node>
      <node id="23821">
        <label>memory</label>
      </node>
      <node id="23842">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="23811" relation="include">
        </childnode>
        <childnode refid="23843" relation="include">
        </childnode>
        <childnode refid="23823" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1rng">openage::rng</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2017<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rng_8h" kindref="compound">rng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/timing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../util/hash.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../error/error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rng<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Key<sp/>for<sp/>seed<sp/>hashing,<sp/>just<sp/>some<sp/>hardcoded<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="namespaceopenage_1_1rng_1ade4748f2ea78310c4c2d84f1ce7d1990" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::array&lt;uint8_t,<sp/>16&gt;<sp/><ref refid="namespaceopenage_1_1rng_1ade4748f2ea78310c4c2d84f1ce7d1990" kindref="member">seed_key</ref><sp/>{{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>0xba,<sp/>0xda,<sp/>0x55,<sp/>0x00,<sp/>0x5e,<sp/>0xed,<sp/>0x00,<sp/>0x00,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>0xab,<sp/>0xcd,<sp/>0xef,<sp/>0x12,<sp/>0x34,<sp/>0x56,<sp/>0x78,<sp/>0x90</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classopenage_1_1rng_1_1_r_n_g_1ade1468036c9d6dcb19a7d32b500e049b" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1rng_1_1_r_n_g_1ade1468036c9d6dcb19a7d32b500e049b" kindref="member">RNG::RNG</ref>(uint64_t<sp/>v1)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" kindref="member">seed</ref>(v1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classopenage_1_1rng_1_1_r_n_g_1a7a75b6d2b1900c1166d7aeea9c777f6f" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1rng_1_1_r_n_g_1ade1468036c9d6dcb19a7d32b500e049b" kindref="member">RNG::RNG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" kindref="member">seed</ref>(data,<sp/>len);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classopenage_1_1rng_1_1_r_n_g_1a7afae418b44df4e10bbb3fcd09c21f56" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1rng_1_1_r_n_g_1ade1468036c9d6dcb19a7d32b500e049b" kindref="member">RNG::RNG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instr)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1ad4167cc984c7979737fe798e9b79265f" kindref="member">from_string</ref>(instr);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classopenage_1_1rng_1_1_r_n_g_1a7d14a4486213742ed28bcdd360cf0dc9" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1rng_1_1_r_n_g_1ade1468036c9d6dcb19a7d32b500e049b" kindref="member">RNG::RNG</ref>(std::istream<sp/>&amp;instream)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1ae7d9467b4f3d76c68a9a7f85a78510cd" kindref="member">from_stream</ref>(instream);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" kindref="member">RNG::seed</ref>(uint64_t<sp/><ref refid="constinit__vector_8cpp_1aa0ccb5ee6d882ee3605ff47745c6467b" kindref="member">val</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" kindref="member">seed</ref>(&amp;val,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="constinit__vector_8cpp_1aa0ccb5ee6d882ee3605ff47745c6467b" kindref="member">val</ref>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classopenage_1_1rng_1_1_r_n_g_1a196e215960939e55ac626c9c75a451e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a76d8d1e95491447e8b8ed7946ff4c695" kindref="member">RNG::seed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(<ref refid="namespaceopenage_1_1log_1a325b0901ddb3f2af36f93781b7dd9744" kindref="member">err</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>bytes<sp/>supplied<sp/>as<sp/>seed<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data<sp/>=<sp/>static_cast&lt;const<sp/>uint8_t<sp/>*&gt;(dat);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_siphash" kindref="compound">openage::util::Siphash</ref><sp/><ref refid="namespaceopenage_1_1util_1_1tests_1aec3c7190e428e8fd67bce6f0dd4d582f" kindref="member">siphash</ref>(<ref refid="namespaceopenage_1_1rng_1ade4748f2ea78310c4c2d84f1ce7d1990" kindref="member">seed_key</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0]<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1tests_1aec3c7190e428e8fd67bce6f0dd4d582f" kindref="member">siphash</ref>.digest(data,<sp/>count);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Previously,<sp/>for<sp/>state[1]<sp/>we<sp/>hashed<sp/>(data<sp/>^<sp/>state[0])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>`data`<sp/>now<sp/>has<sp/>variable<sp/>length<sp/>I<sp/>can&apos;t<sp/>do<sp/>that,<sp/>I<sp/>think<sp/>that<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hashing<sp/>`state[0]`<sp/>is<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[1]<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1tests_1aec3c7190e428e8fd67bce6f0dd4d582f" kindref="member">siphash</ref>.digest(<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0]);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>helps<sp/>prevent<sp/>low-zero<sp/>states<sp/>caused<sp/>by<sp/>a<sp/>bad<sp/>seed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a36e03ae10106b4de88c7af38f0c0dedc" kindref="member">discard</ref>(<ref refid="classopenage_1_1rng_1_1_r_n_g_1ad04d259df8af8d4f0bc1deed13641a12" kindref="member">discard_on_seed</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>actually<sp/>does<sp/>the<sp/>number<sp/>crunching<sp/>and<sp/>state<sp/>updates</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>http://en.wikipedia.org/wiki/Xorshift</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" kindref="member">do_rng</ref>(uint64_t<sp/>&amp;s0,<sp/>uint64_t<sp/>&amp;s1)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>^=<sp/>s1<sp/>&lt;&lt;<sp/>23;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>(s1<sp/>^<sp/>s0<sp/>^<sp/>(s1<sp/>&gt;&gt;<sp/>17)<sp/>^<sp/>(s0<sp/>&gt;&gt;<sp/>26));</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s1<sp/>+<sp/>s0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classopenage_1_1rng_1_1_r_n_g_1a95f8c2c7e00ab2531e0e6c33ae70e154" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a95f8c2c7e00ab2531e0e6c33ae70e154" kindref="member">RNG::random</ref>()<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>std::swap(this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0],<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[1]);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" kindref="member">do_rng</ref>(this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0],<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[1]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>Provides<sp/>serious<sp/>performance<sp/>optimizations<sp/>over<sp/>the<sp/>standard</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>generator<sp/>by<sp/>eliminating<sp/>memory<sp/>writes<sp/>and<sp/>data<sp/>dependencies.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Lambda&gt;</highlight></codeline>
<codeline lineno="100" refid="namespaceopenage_1_1rng_1acffdd6abc0140eac8c12d879172f8566" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1acffdd6abc0140eac8c12d879172f8566" kindref="member">act_fill</ref>(T<sp/>*dat,<sp/>uint64_t<sp/>*state,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Lambda<sp/>&amp;op)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>s0<sp/>=<sp/>state[0];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>s1<sp/>=<sp/>state[1];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ev_len<sp/>=<sp/>len<sp/>-<sp/>(len<sp/>&amp;<sp/>1);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ev_len;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op(<ref refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" kindref="member">do_rng</ref>(s1,<sp/>s0),<sp/>dat,<sp/>i);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op(<ref refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" kindref="member">do_rng</ref>(s0,<sp/>s1),<sp/>dat,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op(<ref refid="namespaceopenage_1_1rng_1af7d90437e58aaa4fe1d816ad7b62dc07" kindref="member">do_rng</ref>(s1,<sp/>s0),<sp/>dat,<sp/>len-1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::swap(s1,<sp/>s0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>state[0]<sp/>=<sp/>s0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>state[1]<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classopenage_1_1rng_1_1_r_n_g_1a77a4af9133abbcd242c9adf3921bbd89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a77a4af9133abbcd242c9adf3921bbd89" kindref="member">RNG::fill</ref>(uint64_t<sp/>*dat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>act_fill&lt;&gt;(</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat,<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>,<sp/>len,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](uint64_t<sp/>v,<sp/>uint64_t<sp/>*d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[i]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classopenage_1_1rng_1_1_r_n_g_1a36e03ae10106b4de88c7af38f0c0dedc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a36e03ae10106b4de88c7af38f0c0dedc" kindref="member">RNG::discard</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>act_fill&lt;uint64_t&gt;(</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>,<sp/>len,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](uint64_t,<sp/>uint64_t<sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classopenage_1_1rng_1_1_r_n_g_1ab7dbd0bef0c06a30b6724f2352af833c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1ab7dbd0bef0c06a30b6724f2352af833c" kindref="member">RNG::fill_real</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*dat,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1rng_1acffdd6abc0140eac8c12d879172f8566" kindref="member">act_fill</ref>(</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dat,<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>,<sp/>len,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[i]<sp/>=<sp/>v<sp/>/<sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1accd55f47ffd4049900e96f032f0a9375" kindref="member">RNG::max</ref>();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classopenage_1_1rng_1_1_r_n_g_1a144e524ab2720b65d7369fdfaf6f3136" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a144e524ab2720b65d7369fdfaf6f3136" kindref="member">RNG::to_stream</ref>(std::ostream<sp/>&amp;out)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((out<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">).good()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(out<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[1]).<ref refid="namespaceopenage_1_1testing_1ab47bedd0a44345aab4aadb8378800e45" kindref="member">fail</ref>())<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(<ref refid="namespaceopenage_1_1log_1a325b0901ddb3f2af36f93781b7dd9744" kindref="member">err</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>write<sp/>rng<sp/>state<sp/>serialization<sp/>to<sp/>output<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="classopenage_1_1rng_1_1_r_n_g_1ae7d9467b4f3d76c68a9a7f85a78510cd" refkind="member"><highlight class="normal">std::istream<sp/>&amp;<ref refid="classopenage_1_1rng_1_1_r_n_g_1ae7d9467b4f3d76c68a9a7f85a78510cd" kindref="member">RNG::from_stream</ref>(std::istream<sp/>&amp;in)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((in<sp/>&gt;&gt;<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[0]).good()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(in<sp/>&gt;&gt;<sp/>this-&gt;<ref refid="classopenage_1_1rng_1_1_r_n_g_1a6b0ce95fbbca6511dc9f1a683fa452f9" kindref="member">state</ref>[1]).<ref refid="namespaceopenage_1_1testing_1ab47bedd0a44345aab4aadb8378800e45" kindref="member">fail</ref>())<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(<ref refid="namespaceopenage_1_1log_1a325b0901ddb3f2af36f93781b7dd9744" kindref="member">err</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>read<sp/>rng<sp/>state<sp/>serialization<sp/>from<sp/>input<sp/>stream&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classopenage_1_1rng_1_1_r_n_g_1a3d2fc24293e9eb420a93a696b544d812" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1a3d2fc24293e9eb420a93a696b544d812" kindref="member">RNG::to_string</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_f_string" kindref="compound">util::FString</ref><sp/>fs;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>fs<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fs;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classopenage_1_1rng_1_1_r_n_g_1ad4167cc984c7979737fe798e9b79265f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g_1ad4167cc984c7979737fe798e9b79265f" kindref="member">RNG::from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;instr)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>strstr(instr);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>strstr<sp/>&gt;&gt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="namespaceopenage_1_1rng_1acb0200a44ab02cc735041096cad88fbe" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespaceopenage_1_1rng_1acb0200a44ab02cc735041096cad88fbe" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;ostream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g" kindref="compound">RNG</ref><sp/>&amp;inrng)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>inrng.<ref refid="classopenage_1_1rng_1_1_r_n_g_1a144e524ab2720b65d7369fdfaf6f3136" kindref="member">to_stream</ref>(ostream);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ostream;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="namespaceopenage_1_1rng_1ace26b663b1fa6bbbaeec1f5903bbc70c" refkind="member"><highlight class="normal">std::istream<sp/>&amp;<ref refid="namespaceopenage_1_1rng_1ace26b663b1fa6bbbaeec1f5903bbc70c" kindref="member">operator &gt;&gt;</ref>(std::istream<sp/>&amp;instream,<sp/><ref refid="classopenage_1_1rng_1_1_r_n_g" kindref="compound">RNG</ref><sp/>&amp;inrng)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>inrng.<ref refid="classopenage_1_1rng_1_1_r_n_g_1ae7d9467b4f3d76c68a9a7f85a78510cd" kindref="member">from_stream</ref>(instream);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instream;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="namespaceopenage_1_1rng_1a924b85bc82578378e68818dab9a247b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a924b85bc82578378e68818dab9a247b6" kindref="member">try_random_device</ref>()<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>rand1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::random_device<sp/>constructor<sp/>may<sp/>throw<sp/>if<sp/>it<sp/>isn&apos;t<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::random_device<sp/>rnd;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rnd.entropy()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rand1<sp/>=<sp/>rnd()<sp/>+<sp/>(uint64_t(rnd())<sp/>&lt;&lt;<sp/>32);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;e)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(<ref refid="namespaceopenage_1_1log_1a325b0901ddb3f2af36f93781b7dd9744" kindref="member">err</ref>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>using<sp/>std::random_device:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>e.what());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rand1;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="namespaceopenage_1_1rng_1a4bdd2cc5c7f7f5d81ff514287f65eef0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a4bdd2cc5c7f7f5d81ff514287f65eef0" kindref="member">time_seed</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>randomize)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>nanos<sp/>=<sp/><ref refid="namespaceopenage_1_1timing_1aea51f4c8e71a8c326e3dd9dcc05c00eb" kindref="member">timing::get_real_time</ref>();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randomize)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nanos<sp/>^=<sp/><ref refid="namespaceopenage_1_1rng_1a924b85bc82578378e68818dab9a247b6" kindref="member">try_random_device</ref>();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nanos;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="namespaceopenage_1_1rng_1adde6a014119705e9ea92a28bae96f385" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a4bdd2cc5c7f7f5d81ff514287f65eef0" kindref="member">time_seed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a4bdd2cc5c7f7f5d81ff514287f65eef0" kindref="member">time_seed</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222" refid="namespaceopenage_1_1rng_1a510f1a8aa7487e18b60b1844cd2af86a" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a510f1a8aa7487e18b60b1844cd2af86a" kindref="member">random_seed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a4bdd2cc5c7f7f5d81ff514287f65eef0" kindref="member">time_seed</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openage::rng</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/rng/rng.cpp"/>
  </compounddef>
</doxygen>
