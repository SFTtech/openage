<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="namespaceopenage_1_1testing" kind="namespace" language="C++">
    <compoundname>openage::testing</compoundname>
    <innerclass refid="classopenage_1_1testing_1_1_test_error" prot="public">openage::testing::TestError</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceopenage_1_1testing_1ab47bedd0a44345aab4aadb8378800e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::testing::fail</definition>
        <argsstring>(const log::message &amp;msg)</argsstring>
        <name>fail</name>
        <param>
          <type>const <ref refid="structopenage_1_1log_1_1message" kindref="compound">log::message</ref> &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raises <ref refid="classopenage_1_1testing_1_1_test_error" kindref="compound">TestError</ref> with the message msg. Mostly designed for usage with the TESTFAIL macro. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/testing/testing.cpp" line="9" column="1" bodyfile="libopenage/testing/testing.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="namespaceopenage_1_1testing_1a416af96b7ec2fb61d466c63325456e2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="compiler_8h_1aea581b919984cda327632efe3d11f8b3" kindref="member">OAAPI</ref> void</type>
        <definition>OAAPI void openage::testing::run_method</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>run_method</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invokes the test or demo with the given name.</para>
<para>pxd: void run_method(string name) except + </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/testing/testlist.h" line="21" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libopenage/testing/testing.cpp" line="6" column="1"/>
  </compounddef>
</doxygen>
