<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>openage::renderer::opengl::GlBuffer</compoundname>
    <basecompoundref refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object" prot="public" virt="non-virtual">openage::renderer::opengl::GlSimpleObject</basecompoundref>
    <includes refid="buffer_8h" local="no">buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a855347c5b5720a8c5d236fe0d70b159a" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t openage::renderer::opengl::GlBuffer::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
<para>The size in bytes of this buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="37" column="1" bodyfile="libopenage/renderer/opengl/buffer.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1aeddc8478dbd3daaf4de76c109a88a8bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::renderer::opengl::GlBuffer::GlBuffer</definition>
        <argsstring>(size_t size, GLenum usage=GL_STATIC_DRAW)</argsstring>
        <name>GlBuffer</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>usage</declname>
          <defval>GL_STATIC_DRAW</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty buffer of the specified size. Binds the GL_COPY_WRITE_BUFFER target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="18" column="1" bodyfile="libopenage/renderer/opengl/buffer.cpp" bodystart="12" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a904c48814ba7acaf8f93ce4963d11cdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::renderer::opengl::GlBuffer::GlBuffer</definition>
        <argsstring>(const uint8_t *data, size_t size, GLenum usage=GL_STATIC_DRAW)</argsstring>
        <name>GlBuffer</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>GLenum</type>
          <declname>usage</declname>
          <defval>GL_STATIC_DRAW</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a buffer of the specified size and fills it with the given data. Binds the GL_COPY_WRITE_BUFFER target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="22" column="1" bodyfile="libopenage/renderer/opengl/buffer.cpp" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a6b6867a9bcc96e5d36923ce98bd7a635" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t openage::renderer::opengl::GlBuffer::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <briefdescription>
<para>The size in bytes of this buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="25" column="1" bodyfile="libopenage/renderer/opengl/buffer.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a44250c2fc6c0a4fe5bf78595445cff57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::renderer::opengl::GlBuffer::upload_data</definition>
        <argsstring>(const uint8_t *data, size_t offset, size_t size)</argsstring>
        <name>upload_data</name>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Uploads <computeroutput>size</computeroutput> bytes of new data starting at <computeroutput>offset</computeroutput>. <computeroutput>offset + size</computeroutput> has to be less than or equal to <computeroutput><ref refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a6b6867a9bcc96e5d36923ce98bd7a635" kindref="member">get_size()</ref></computeroutput>. Binds the GL_COPY_WRITE_BUFFER target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="30" column="1" bodyfile="libopenage/renderer/opengl/buffer.cpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a25db93a238c2cd0056d897a04d87e35d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::renderer::opengl::GlBuffer::bind</definition>
        <argsstring>(GLenum target) const</argsstring>
        <name>bind</name>
        <param>
          <type>GLenum</type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>Bind this buffer to the specified GL target. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/buffer.h" line="33" column="1" bodyfile="libopenage/renderer/opengl/buffer.cpp" bodystart="47" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents an OpenGL buffer of memory allocated on the GPU. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2377">
        <label>openage::renderer::opengl::GlSimpleObject</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object"/>
      </node>
      <node id="2376">
        <label>openage::renderer::opengl::GlBuffer</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer"/>
        <childnode refid="2377" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2379">
        <label>openage::renderer::opengl::GlSimpleObject</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object"/>
      </node>
      <node id="2378">
        <label>openage::renderer::opengl::GlBuffer</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer"/>
        <childnode refid="2379" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libopenage/renderer/opengl/buffer.h" line="14" column="1" bodyfile="libopenage/renderer/opengl/buffer.h" bodystart="14" bodyend="38"/>
    <listofallmembers>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a25db93a238c2cd0056d897a04d87e35d" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>bind</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a6d235dc3bdf1323a5b3bfad20df78ef6" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>delete_fun</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1aeae2150c26a186110686373ad37cecf5" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>get_handle</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a6b6867a9bcc96e5d36923ce98bd7a635" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>get_size</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1aeddc8478dbd3daaf4de76c109a88a8bb" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>GlBuffer</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a904c48814ba7acaf8f93ce4963d11cdc" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>GlBuffer</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1ad01a0a9dfceabcf5ea48a6af86a805ed" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a9cb29e026e6097138f0e6d20d22eb6b9" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a24d175d087077438ddf0667d4f0bb210" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1ad59150afddeb64a473f500edee2f63f5" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>handle</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a19018330cb67b7f63271764b883ff19a" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>operator=</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1aa5c241e2d89ec1043b3540c6beb8a3a2" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>operator=</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a855347c5b5720a8c5d236fe0d70b159a" prot="private" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>size</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_buffer_1a44250c2fc6c0a4fe5bf78595445cff57" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>upload_data</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a52d36fe37bbca9529578795d1042530d" prot="public" virt="virtual"><scope>openage::renderer::opengl::GlBuffer</scope><name>~GlSimpleObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
