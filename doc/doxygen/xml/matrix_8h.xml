<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="matrix_8h" kind="file" language="C++">
    <compoundname>matrix.h</compoundname>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstring</includes>
    <includes local="no">iostream</includes>
    <includes local="no">type_traits</includes>
    <includes refid="vector_8h" local="yes">vector.h</includes>
    <includedby refid="matrix_8cpp" local="yes">libopenage/util/matrix.cpp</includedby>
    <includedby refid="matrix__test_8cpp" local="yes">libopenage/util/matrix_test.cpp</includedby>
    <includedby refid="quaternion_8h" local="yes">libopenage/util/quaternion.h</includedby>
    <incdepgraph>
      <node id="30939">
        <label>list</label>
      </node>
      <node id="30930">
        <label>atomic</label>
      </node>
      <node id="30935">
        <label>iomanip</label>
      </node>
      <node id="30934">
        <label>functional</label>
      </node>
      <node id="30925">
        <label>cstdint</label>
      </node>
      <node id="30910">
        <label>libopenage/util/matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="30911" relation="include">
        </childnode>
        <childnode refid="30912" relation="include">
        </childnode>
        <childnode refid="30913" relation="include">
        </childnode>
        <childnode refid="30914" relation="include">
        </childnode>
        <childnode refid="30915" relation="include">
        </childnode>
        <childnode refid="30916" relation="include">
        </childnode>
      </node>
      <node id="30932">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="30933" relation="include">
        </childnode>
        <childnode refid="30934" relation="include">
        </childnode>
        <childnode refid="30935" relation="include">
        </childnode>
        <childnode refid="30918" relation="include">
        </childnode>
        <childnode refid="30936" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
        <childnode refid="30937" relation="include">
        </childnode>
      </node>
      <node id="30912">
        <label>cmath</label>
      </node>
      <node id="30919">
        <label>stdexcept</label>
      </node>
      <node id="30938">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="30939" relation="include">
        </childnode>
        <childnode refid="30940" relation="include">
        </childnode>
        <childnode refid="30941" relation="include">
        </childnode>
      </node>
      <node id="30933">
        <label>cstdarg</label>
      </node>
      <node id="30920">
        <label>string</label>
      </node>
      <node id="30924">
        <label>../log/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="30925" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
        <childnode refid="30926" relation="include">
        </childnode>
        <childnode refid="30927" relation="include">
        </childnode>
        <childnode refid="30929" relation="include">
        </childnode>
        <childnode refid="30938" relation="include">
        </childnode>
        <childnode refid="30941" relation="include">
        </childnode>
      </node>
      <node id="30927">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="30928" relation="include">
        </childnode>
      </node>
      <node id="30916">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="30911" relation="include">
        </childnode>
        <childnode refid="30912" relation="include">
        </childnode>
        <childnode refid="30913" relation="include">
        </childnode>
        <childnode refid="30914" relation="include">
        </childnode>
        <childnode refid="30915" relation="include">
        </childnode>
        <childnode refid="30917" relation="include">
        </childnode>
        <childnode refid="30944" relation="include">
        </childnode>
      </node>
      <node id="30929">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="30930" relation="include">
        </childnode>
        <childnode refid="30918" relation="include">
        </childnode>
        <childnode refid="30915" relation="include">
        </childnode>
        <childnode refid="30921" relation="include">
        </childnode>
        <childnode refid="30931" relation="include">
        </childnode>
        <childnode refid="30932" relation="include">
        </childnode>
      </node>
      <node id="30917">
        <label>../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="30914" relation="include">
        </childnode>
        <childnode refid="30918" relation="include">
        </childnode>
        <childnode refid="30919" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
        <childnode refid="30921" relation="include">
        </childnode>
        <childnode refid="30924" relation="include">
        </childnode>
      </node>
      <node id="30943">
        <label>typeinfo</label>
      </node>
      <node id="30937">
        <label>vector</label>
      </node>
      <node id="30944">
        <label>../log/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="30941" relation="include">
        </childnode>
        <childnode refid="30924" relation="include">
        </childnode>
      </node>
      <node id="30922">
        <label>ciso646</label>
      </node>
      <node id="30911">
        <label>array</label>
      </node>
      <node id="30936">
        <label>sstream</label>
      </node>
      <node id="30921">
        <label>../util/compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="30922" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
        <childnode refid="30923" relation="include">
        </childnode>
      </node>
      <node id="30923">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="30923" relation="include">
        </childnode>
      </node>
      <node id="30931">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="30914" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
      </node>
      <node id="30941">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="30942" relation="include">
        </childnode>
      </node>
      <node id="30928">
        <label>cstdlib</label>
      </node>
      <node id="30914">
        <label>iostream</label>
      </node>
      <node id="30940">
        <label>mutex</label>
      </node>
      <node id="30915">
        <label>type_traits</label>
      </node>
      <node id="30926">
        <label>config.h</label>
      </node>
      <node id="30913">
        <label>cstring</label>
      </node>
      <node id="30918">
        <label>memory</label>
      </node>
      <node id="30942">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="30914" relation="include">
        </childnode>
        <childnode refid="30943" relation="include">
        </childnode>
        <childnode refid="30921" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="30945">
        <label>libopenage/util/matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="30946" relation="include">
        </childnode>
        <childnode refid="30947" relation="include">
        </childnode>
        <childnode refid="30948" relation="include">
        </childnode>
      </node>
      <node id="30948">
        <label>libopenage/util/quaternion.h</label>
        <link refid="quaternion_8h"/>
        <childnode refid="30949" relation="include">
        </childnode>
        <childnode refid="30950" relation="include">
        </childnode>
      </node>
      <node id="30950">
        <label>libopenage/util/quaternion_test.cpp</label>
        <link refid="quaternion__test_8cpp"/>
      </node>
      <node id="30949">
        <label>libopenage/util/quaternion.cpp</label>
        <link refid="quaternion_8cpp"/>
      </node>
      <node id="30946">
        <label>libopenage/util/matrix.cpp</label>
        <link refid="matrix_8cpp"/>
      </node>
      <node id="30947">
        <label>libopenage/util/matrix_test.cpp</label>
        <link refid="matrix__test_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classopenage_1_1util_1_1_matrix" prot="public">openage::util::Matrix</innerclass>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1util">openage::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2018<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector_8h" kindref="compound">vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage_1_1util" kindref="compound">openage::util</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="20" refid="classopenage_1_1util_1_1_matrix" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::array&lt;std::array&lt;T,<sp/>N&gt;,<sp/>M&gt;<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>static_assert(M<sp/>&gt;<sp/>0<sp/>and<sp/>N<sp/>&gt;<sp/>0,<sp/></highlight><highlight class="stringliteral">&quot;0-dimensional<sp/>matrix<sp/>not<sp/>allowed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, T&gt;</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" kindref="member">default_eps</ref><sp/>=<sp/>1e-5;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classopenage_1_1util_1_1_matrix_1a05cddcbaea57d38a247fc3f6bfe9732b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a05cddcbaea57d38a247fc3f6bfe9732b" kindref="member">rows</ref><sp/>=<sp/>M;</highlight></codeline>
<codeline lineno="29" refid="classopenage_1_1util_1_1_matrix_1a5e6ca60e377f5be70baace533d677b79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a5e6ca60e377f5be70baace533d677b79" kindref="member">cols</ref><sp/>=<sp/>N;</highlight></codeline>
<codeline lineno="30" refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" kindref="member">is_square</ref><sp/>=<sp/>(M<sp/>==<sp/>N);</highlight></codeline>
<codeline lineno="31" refid="classopenage_1_1util_1_1_matrix_1a797428914210319763ae300a914e9177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a797428914210319763ae300a914e9177" kindref="member">is_row_vector</ref><sp/>=<sp/>(M<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="32" refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" kindref="member">is_column_vector</ref><sp/>=<sp/>(N<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="classopenage_1_1util_1_1_matrix_1ac4b352fc7e312facc880e5715bd42f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix_1ac4b352fc7e312facc880e5715bd42f01" kindref="member">Matrix</ref>()<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix_1aceff6c42bedce3eb5850b05ab6145112" kindref="member">~Matrix</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cond=<ref refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" kindref="member">is_column_vector</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;cond&gt;::type&gt;</highlight></codeline>
<codeline lineno="52" refid="classopenage_1_1util_1_1_matrix_1aaf3e43eed1934588bcf877c435502934" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix_1aaf3e43eed1934588bcf877c435502934" kindref="member">Matrix</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector&lt;M, T&gt;</ref><sp/>&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[i][0]<sp/>=<sp/>vec[i];</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="62" refid="classopenage_1_1util_1_1_matrix_1a19707201a8fcd11cbeb9f91f72f7ccfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a19707201a8fcd11cbeb9f91f72f7ccfd" kindref="member">Matrix</ref>(Ts<sp/>...<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">...(args)<sp/>==<sp/>N*M,<sp/></highlight><highlight class="stringliteral">&quot;not<sp/>all<sp/>values<sp/>supplied&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;float,<sp/>N*M&gt;<sp/>temp{{static_cast&lt;T&gt;(args)...}};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N*M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[i<sp/>/<sp/>(N*M)][i<sp/>%<sp/>(N*M)]<sp/>=<sp/>temp[i];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cond=<ref refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" kindref="member">is_square</ref>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;cond&gt;::type&gt;</highlight></codeline>
<codeline lineno="76" refid="classopenage_1_1util_1_1_matrix_1a0ba437147db630d1ca901f870764a024" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a0ba437147db630d1ca901f870764a024" kindref="member">identity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>res;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i][i]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="classopenage_1_1util_1_1_matrix_1ac1bc212dbfd151ce922ba27cad25a074" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1ac1bc212dbfd151ce922ba27cad25a074" kindref="member">equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>&amp;other,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>eps=<ref refid="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" kindref="member">default_eps</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>M;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacestd_1a6af851cc1249a970adde4dc422ff824a" kindref="member">std::abs</ref>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)[i][j]<sp/>-<sp/>other[i][j])<sp/>&gt;=<sp/>eps)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="104" refid="classopenage_1_1util_1_1_matrix_1a23f79a50b5b6c3461e674e7b07432ff7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, P, T&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a23f79a50b5b6c3461e674e7b07432ff7" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;N, P, T&gt;</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, P, T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>P;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>N;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i][j]<sp/>+=<sp/>(*this)[i][k]<sp/>*<sp/>other[k][j];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classopenage_1_1util_1_1_matrix_1aa58e34206c0925efc722483e34ada587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix &lt;M, 1, T&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1aa58e34206c0925efc722483e34ada587" kindref="member">operator *</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector&lt;M, T&gt;</ref><sp/>&amp;vec)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)<sp/>*<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, 1, T&gt;</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vec);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classopenage_1_1util_1_1_matrix_1a7b100e3972d47f11b30e241809ec29a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a7b100e3972d47f11b30e241809ec29a4" kindref="member">operator +</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>res;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i][j]<sp/>=<sp/>(*this)[i][j]<sp/>+<sp/>other[i][j];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classopenage_1_1util_1_1_matrix_1ad13f1ffce8d8f40098cb63cb8a609330" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1ad13f1ffce8d8f40098cb63cb8a609330" kindref="member">operator -</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>res;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i][j]<sp/>=<sp/>(*this)[i][j]<sp/>-<sp/>other[i][j];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="classopenage_1_1util_1_1_matrix_1a7e2887f1612a7a82733967b1856434ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a7e2887f1612a7a82733967b1856434ac" kindref="member">operator *=</ref>(T<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[i][j]<sp/>*=<sp/>other;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classopenage_1_1util_1_1_matrix_1a7b93d69889c489a4137c3f7a07708050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a7b93d69889c489a4137c3f7a07708050" kindref="member">operator *</ref>(T<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>*=<sp/>other;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classopenage_1_1util_1_1_matrix_1a3d5d06bd34e0a9eea626b00b080ad3d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a3d5d06bd34e0a9eea626b00b080ad3d2" kindref="member">operator /=</ref>(T<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*this)[i][j]<sp/>/=<sp/>other;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="classopenage_1_1util_1_1_matrix_1a47559fde49b3a9634d95596d87fbea98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a47559fde49b3a9634d95596d87fbea98" kindref="member">operator /</ref>(T<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>res(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>/=<sp/>other;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classopenage_1_1util_1_1_matrix_1a4950945a55363fd77668b983001d55b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;N, M, T&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a4950945a55363fd77668b983001d55b5" kindref="member">transpose</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix &lt;N, M, T&gt;</ref><sp/>res;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>N;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[j][i]<sp/>=<sp/>(*this)[i][j];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cond=<ref refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" kindref="member">is_column_vector</ref>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;cond&gt;::type&gt;</highlight></codeline>
<codeline lineno="208" refid="classopenage_1_1util_1_1_matrix_1a58d27b46e7ceaddc0c7ff2e0e9f2a6cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector&lt;M, T&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1_matrix_1a58d27b46e7ceaddc0c7ff2e0e9f2a6cf" kindref="member">to_vector</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector&lt;M, T&gt;</ref><sp/>res{};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>M;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res[i]<sp/>=<sp/>(*this)[i][0];</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cond=<ref refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" kindref="member">is_square</ref>,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">=</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;cond&gt;::type&gt;</highlight></codeline>
<codeline lineno="221" refid="classopenage_1_1util_1_1_matrix_1ae8e23f59ac0793b10d8487abac1e2edb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classopenage_1_1util_1_1_matrix_1ae8e23f59ac0793b10d8487abac1e2edb" kindref="member">trace</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>+=<sp/>(*this)[i][i];</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="classopenage_1_1util_1_1_matrix_1a256d8ad5c2e631d1727aae6e813289f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="classopenage_1_1util_1_1_matrix_1a256d8ad5c2e631d1727aae6e813289f0" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;o,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">this_type</ref><sp/>&amp;mat)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>M-1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N-1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/>mat[j][i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/>mat[j][N-1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N-1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/>mat[M-1][i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>o<sp/>&lt;&lt;<sp/>mat[M-1][N-1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;))&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal">};</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="258" refid="namespaceopenage_1_1util_1af3f37a72fc7fc649b471cff17733f7ec" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, T&gt;</ref><sp/><ref refid="namespaceopenage_1_1util_1aa3949bf1d23f5c8446474135851399fc" kindref="member">operator *</ref>(T<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, T&gt;</ref><sp/>&amp;mat)<sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="268" refid="namespaceopenage_1_1util_1a759079d1391952faee3b693dba78382c" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, T&gt;</ref><sp/><ref refid="namespaceopenage_1_1util_1aa3949bf1d23f5c8446474135851399fc" kindref="member">operator *</ref>(int64_t<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, T&gt;</ref><sp/>&amp;mat)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T=</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="273" refid="namespaceopenage_1_1util_1aa62f335908f8f5e68345cb3386ab94c6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix2t</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;2, 2, T&gt;</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T=</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="276" refid="namespaceopenage_1_1util_1a748106aeb16275c1ebf6f0f9276381cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix3t</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;3, 3, T&gt;</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T=</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="279" refid="namespaceopenage_1_1util_1ae5976ba79c39027e28f3f02458e93e38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix4t</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;4, 4, T&gt;</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="282" refid="namespaceopenage_1_1util_1af077ef0b2ea660c4044917c60c4f0385" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrixf</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, float&gt;</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="285" refid="namespaceopenage_1_1util_1a21feb2f799e75fd645e0d663ec4712f9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrixd</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;M, N, double&gt;</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="namespaceopenage_1_1util_1a00694c43ac6582c643b2591d420ce472" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix2f</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;2, 2, float&gt;</ref>;</highlight></codeline>
<codeline lineno="288" refid="namespaceopenage_1_1util_1aaa417153128f83c6b7ee0b42efc418aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix3f</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;3, 3, float&gt;</ref>;</highlight></codeline>
<codeline lineno="289" refid="namespaceopenage_1_1util_1afd42b418dc20fcb64677b2f75ecd97b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix4f</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;4, 4, float&gt;</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="namespaceopenage_1_1util_1a94d988fc19451e9042116f14432ec1b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix2d</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;2, 2, double&gt;</ref>;</highlight></codeline>
<codeline lineno="292" refid="namespaceopenage_1_1util_1a157c43b340256c0f1124074fae7aa807" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix3d</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;3, 3, double&gt;</ref>;</highlight></codeline>
<codeline lineno="293" refid="namespaceopenage_1_1util_1a06158fd9e1e05c74de527f554486f2b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix4d</ref><sp/>=<sp/><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix&lt;4, 4, double&gt;</ref>;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>openage::util</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/util/matrix.h"/>
  </compounddef>
</doxygen>
