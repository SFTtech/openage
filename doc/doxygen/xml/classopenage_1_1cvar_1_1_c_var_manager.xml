<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1cvar_1_1_c_var_manager" kind="class" language="C++" prot="public">
    <compoundname>openage::cvar::CVarManager</compoundname>
    <includes refid="cvar_8h" local="no">cvar.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classopenage_1_1cvar_1_1_c_var_manager_1a200171b969c1254dc7c3258af7be3ce2" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::pair&lt; <ref refid="namespaceopenage_1_1cvar_1aebb2850e226c43da630c2dc95802f4ee" kindref="member">get_func</ref>, <ref refid="namespaceopenage_1_1cvar_1a9da0b79349923d4b334b76da9ea8828f" kindref="member">set_func</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::pair&lt;get_func, set_func&gt; &gt; openage::cvar::CVarManager::store</definition>
        <argsstring></argsstring>
        <name>store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store the key-value pair of config options. The clue is to store the &quot;what does the config do&quot;, not the actual value. That way the system is universal. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="84" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1a093074d20bdce055fac654ba01733f36" compoundref="cvar_8cpp" startline="16" endline="24">create</referencedby>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1abf47769212763bbf43146a97443779da" compoundref="cvar_8cpp" startline="27" endline="33">get</referencedby>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1a972739b7927c488b0761a10319653e8a" compoundref="cvar_8cpp" startline="36" endline="41">set</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1cvar_1_1_c_var_manager_1a0aa073ffda4e894c0f62a108da465a89" prot="private" static="no" mutable="no">
        <type><ref refid="classopenage_1_1util_1_1_path" kindref="compound">util::Path</ref></type>
        <definition>util::Path openage::cvar::CVarManager::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Magic path that stores config files. Auto-redirects to the default and write paths in the home folder. It is set up in <ref refid="location_8py" kindref="compound">openage/cvar/location.py</ref> and <ref refid="game_2main_8py" kindref="compound">openage/game/main.py</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="91" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory_1abbb32dc478b13e8cae25d6d505eefcbd" compoundref="directory_8py" startline="43" endline="45">openage.util.fslike.directory.Directory.__repr__</referencedby>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory_1ab533e87449e37812327d9a771186ab71" compoundref="directory_8py" startline="137" endline="139">openage.util.fslike.directory.CaseIgnoringDirectory.__repr__</referencedby>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory_1af57fc26b68b337aa0a8a36fce91a1790" compoundref="directory_8py" startline="144" endline="164">openage.util.fslike.directory.CaseIgnoringDirectory.actual_name</referencedby>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1ae47e10a45c7b6d8376d153937651ce34" compoundref="cvar_8cpp" startline="11" endline="13">CVarManager</referencedby>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1a8fcaa20636cab773dc70db2c74a4308e" compoundref="cvar_8cpp" startline="49" endline="52">load_all</referencedby>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1af7fcfc7c5b2700e1ed0feba06fc57a63" compoundref="cvar_8cpp" startline="44" endline="46">load_config</referencedby>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory_1a64bdaf726aac07d4913107cc5ba9fe65" compoundref="directory_8py" startline="47" endline="49">openage.util.fslike.directory.Directory.resolve</referencedby>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_case_ignoring_directory_1a5e6cb3d9ce1feb5718b7a30158faa45e" compoundref="directory_8py" startline="165" endline="185">openage.util.fslike.directory.CaseIgnoringDirectory.resolve</referencedby>
        <referencedby refid="classopenage_1_1util_1_1fslike_1_1directory_1_1_directory_1a593147786283242dd86370ad6f97e068" compoundref="directory_8py" startline="102" endline="114">openage.util.fslike.directory.Directory.writable</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1ae47e10a45c7b6d8376d153937651ce34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::cvar::CVarManager::CVarManager</definition>
        <argsstring>(const util::Path &amp;path)</argsstring>
        <name>CVarManager</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_path" kindref="compound">util::Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="45" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="11" bodyend="13"/>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a0aa073ffda4e894c0f62a108da465a89" compoundref="cvar_8h" startline="91">path</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1a093074d20bdce055fac654ba01733f36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::cvar::CVarManager::create</definition>
        <argsstring>(const std::string &amp;name, const std::pair&lt; get_func, set_func &gt; &amp;accessors)</argsstring>
        <name>create</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::pair&lt; <ref refid="namespaceopenage_1_1cvar_1aebb2850e226c43da630c2dc95802f4ee" kindref="member">get_func</ref>, <ref refid="namespaceopenage_1_1cvar_1a9da0b79349923d4b334b76da9ea8828f" kindref="member">set_func</ref> &gt; &amp;</type>
          <declname>accessors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates a configuration entry <simplesect kind="return"><para>if the entry name was successful. It won&apos;t be if the name was used before. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="52" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="16" bodyend="24"/>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a200171b969c1254dc7c3258af7be3ce2" compoundref="cvar_8h" startline="84">store</references>
        <referencedby refid="classopenage_1_1input_1_1_action_manager_1a172292484fa92f4c391479d6e656808a" compoundref="input_2action_8cpp" startline="117" endline="147">openage::input::ActionManager::create</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1abf47769212763bbf43146a97443779da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string openage::cvar::CVarManager::get</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the value of a config entry. Internally calls the stored get function. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="59" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="27" bodyend="33"/>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a200171b969c1254dc7c3258af7be3ce2" compoundref="cvar_8h" startline="84">store</references>
        <referencedby refid="classopenage_1_1console_1_1_console_1a4e0359f0f3cbbf66da045ba1a33ffa57" compoundref="console_8cpp" startline="124" endline="150">openage::console::Console::interpret</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1a972739b7927c488b0761a10319653e8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::cvar::CVarManager::set</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;value) const</argsstring>
        <name>set</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the config entry value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="64" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="36" bodyend="41"/>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a200171b969c1254dc7c3258af7be3ce2" compoundref="cvar_8h" startline="84">store</references>
        <referencedby refid="classopenage_1_1console_1_1_console_1a4e0359f0f3cbbf66da045ba1a33ffa57" compoundref="console_8cpp" startline="124" endline="150">openage::console::Console::interpret</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1af7fcfc7c5b2700e1ed0feba06fc57a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::cvar::CVarManager::load_config</definition>
        <argsstring>(const util::Path &amp;path)</argsstring>
        <name>load_config</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_path" kindref="compound">util::Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs the loading of a configuration file via the Python implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="70" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="44" bodyend="46"/>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a0aa073ffda4e894c0f62a108da465a89" compoundref="cvar_8h" startline="91">path</references>
        <references refid="namespaceopenage_1_1cvar_1a8f14b711d03e0856c0753a9b330ff5cb" compoundref="cvar_8cpp" startline="54">openage::cvar::pyx_load_config_file</references>
        <referencedby refid="classopenage_1_1cvar_1_1_c_var_manager_1a8fcaa20636cab773dc70db2c74a4308e" compoundref="cvar_8cpp" startline="49" endline="52">load_all</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1cvar_1_1_c_var_manager_1a8fcaa20636cab773dc70db2c74a4308e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::cvar::CVarManager::load_all</definition>
        <argsstring>()</argsstring>
        <name>load_all</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform the load of the default config files. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="75" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.cpp" bodystart="49" bodyend="52"/>
        <references refid="message_8h_1ae1103fea1e1b3c41ca3322d5389f7162" compoundref="message_8h" startline="177">INFO</references>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1af7fcfc7c5b2700e1ed0feba06fc57a63" compoundref="cvar_8cpp" startline="44" endline="46">load_config</references>
        <references refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" compoundref="log_8cpp" startline="13" endline="15">openage::log::log</references>
        <references refid="classopenage_1_1cvar_1_1_c_var_manager_1a0aa073ffda4e894c0f62a108da465a89" compoundref="cvar_8h" startline="91">path</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Configuration manager.</para>
<para>Stores key-value pairs of config data. Actually it doesn&apos;t store data, instead functions that perform/fetch the configuration at the appropriate place.</para>
<para>pxd:</para>
<para>cppclass <ref refid="classopenage_1_1cvar_1_1_c_var_manager" kindref="compound">CVarManager</ref>: string get(string name) except + void set(string name, string value) except + void load_config(Path path) except + </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1922">
        <label>openage::util::Path</label>
        <link refid="classopenage_1_1util_1_1_path"/>
      </node>
      <node id="1921">
        <label>openage::cvar::CVarManager</label>
        <link refid="classopenage_1_1cvar_1_1_c_var_manager"/>
        <childnode refid="1922" relation="usage">
          <edgelabel>-path</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" line="42" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/cvar/cvar.h" bodystart="42" bodyend="92"/>
    <listofallmembers>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1a093074d20bdce055fac654ba01733f36" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>create</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1ae47e10a45c7b6d8376d153937651ce34" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>CVarManager</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1abf47769212763bbf43146a97443779da" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>get</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1a8fcaa20636cab773dc70db2c74a4308e" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>load_all</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1af7fcfc7c5b2700e1ed0feba06fc57a63" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>load_config</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1a0aa073ffda4e894c0f62a108da465a89" prot="private" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>path</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1a972739b7927c488b0761a10319653e8a" prot="public" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>set</name></member>
      <member refid="classopenage_1_1cvar_1_1_c_var_manager_1a200171b969c1254dc7c3258af7be3ce2" prot="private" virt="non-virtual"><scope>openage::cvar::CVarManager</scope><name>store</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
