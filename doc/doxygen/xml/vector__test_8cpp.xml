<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="vector__test_8cpp" kind="file" language="C++">
    <compoundname>vector_test.cpp</compoundname>
    <includes refid="vector_8h" local="yes">vector.h</includes>
    <includes refid="testing_8h" local="yes">../testing/testing.h</includes>
    <incdepgraph>
      <node id="33261">
        <label>list</label>
      </node>
      <node id="33252">
        <label>atomic</label>
      </node>
      <node id="33257">
        <label>iomanip</label>
      </node>
      <node id="33256">
        <label>functional</label>
      </node>
      <node id="33247">
        <label>cstdint</label>
      </node>
      <node id="33254">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="33255" relation="include">
        </childnode>
        <childnode refid="33256" relation="include">
        </childnode>
        <childnode refid="33257" relation="include">
        </childnode>
        <childnode refid="33240" relation="include">
        </childnode>
        <childnode refid="33258" relation="include">
        </childnode>
        <childnode refid="33242" relation="include">
        </childnode>
        <childnode refid="33259" relation="include">
        </childnode>
      </node>
      <node id="33235">
        <label>cmath</label>
      </node>
      <node id="33241">
        <label>stdexcept</label>
      </node>
      <node id="33260">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="33261" relation="include">
        </childnode>
        <childnode refid="33262" relation="include">
        </childnode>
        <childnode refid="33263" relation="include">
        </childnode>
      </node>
      <node id="33255">
        <label>cstdarg</label>
      </node>
      <node id="33242">
        <label>string</label>
      </node>
      <node id="33246">
        <label>../log/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="33247" relation="include">
        </childnode>
        <childnode refid="33242" relation="include">
        </childnode>
        <childnode refid="33248" relation="include">
        </childnode>
        <childnode refid="33249" relation="include">
        </childnode>
        <childnode refid="33251" relation="include">
        </childnode>
        <childnode refid="33260" relation="include">
        </childnode>
        <childnode refid="33263" relation="include">
        </childnode>
      </node>
      <node id="33249">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="33250" relation="include">
        </childnode>
      </node>
      <node id="33233">
        <label>vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="33234" relation="include">
        </childnode>
        <childnode refid="33235" relation="include">
        </childnode>
        <childnode refid="33236" relation="include">
        </childnode>
        <childnode refid="33237" relation="include">
        </childnode>
        <childnode refid="33238" relation="include">
        </childnode>
        <childnode refid="33239" relation="include">
        </childnode>
        <childnode refid="33266" relation="include">
        </childnode>
      </node>
      <node id="33251">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="33252" relation="include">
        </childnode>
        <childnode refid="33240" relation="include">
        </childnode>
        <childnode refid="33238" relation="include">
        </childnode>
        <childnode refid="33243" relation="include">
        </childnode>
        <childnode refid="33253" relation="include">
        </childnode>
        <childnode refid="33254" relation="include">
        </childnode>
      </node>
      <node id="33232">
        <label>libopenage/util/vector_test.cpp</label>
        <link refid="vector__test_8cpp"/>
        <childnode refid="33233" relation="include">
        </childnode>
        <childnode refid="33267" relation="include">
        </childnode>
      </node>
      <node id="33239">
        <label>../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="33237" relation="include">
        </childnode>
        <childnode refid="33240" relation="include">
        </childnode>
        <childnode refid="33241" relation="include">
        </childnode>
        <childnode refid="33242" relation="include">
        </childnode>
        <childnode refid="33243" relation="include">
        </childnode>
        <childnode refid="33246" relation="include">
        </childnode>
      </node>
      <node id="33265">
        <label>typeinfo</label>
      </node>
      <node id="33259">
        <label>vector</label>
      </node>
      <node id="33266">
        <label>../log/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="33263" relation="include">
        </childnode>
        <childnode refid="33246" relation="include">
        </childnode>
      </node>
      <node id="33244">
        <label>ciso646</label>
      </node>
      <node id="33234">
        <label>array</label>
      </node>
      <node id="33258">
        <label>sstream</label>
      </node>
      <node id="33243">
        <label>../util/compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="33244" relation="include">
        </childnode>
        <childnode refid="33242" relation="include">
        </childnode>
        <childnode refid="33245" relation="include">
        </childnode>
      </node>
      <node id="33245">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="33245" relation="include">
        </childnode>
      </node>
      <node id="33253">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="33237" relation="include">
        </childnode>
        <childnode refid="33242" relation="include">
        </childnode>
      </node>
      <node id="33263">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="33264" relation="include">
        </childnode>
      </node>
      <node id="33250">
        <label>cstdlib</label>
      </node>
      <node id="33237">
        <label>iostream</label>
      </node>
      <node id="33267">
        <label>../testing/testing.h</label>
        <link refid="testing_8h"/>
        <childnode refid="33239" relation="include">
        </childnode>
      </node>
      <node id="33262">
        <label>mutex</label>
      </node>
      <node id="33238">
        <label>type_traits</label>
      </node>
      <node id="33248">
        <label>config.h</label>
      </node>
      <node id="33236">
        <label>cstring</label>
      </node>
      <node id="33240">
        <label>memory</label>
      </node>
      <node id="33264">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="33237" relation="include">
        </childnode>
        <childnode refid="33265" relation="include">
        </childnode>
        <childnode refid="33243" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1util">openage::util</innernamespace>
    <innernamespace refid="namespaceopenage_1_1util_1_1tests">openage::util::tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2018<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector_8h" kindref="compound">vector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testing/testing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tests<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespaceopenage_1_1util_1_1tests_1a7deb96e08e8e82e52d83fb34f6db25da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1tests_1a7deb96e08e8e82e52d83fb34f6db25da" kindref="member">vector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero-initialization<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;5&gt;</ref><sp/>zero_explicit{0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;5&gt;</ref><sp/>zero;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zero.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>(zero_explicit)<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tests<sp/>in<sp/>2<sp/>dimensions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>be<sp/>able<sp/>to<sp/>reuse<sp/>the<sp/>variable<sp/>names<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;2&gt;</ref><sp/>a(1.0,<sp/>2.0);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;2&gt;</ref><sp/>b(3.0,<sp/>4.0);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;2&gt;</ref><sp/>c;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>basic<sp/>operators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>a<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({4.0,<sp/>6.0})<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>a<sp/>-<sp/>b;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({-2.0,<sp/>-2.0})<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>5<sp/>*<sp/>a;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({5.0,<sp/>10.0})<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>a<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({0.125,<sp/>0.25})<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({13,<sp/>37})<sp/>and<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>dot<sp/>product,<sp/>norm<sp/>and<sp/>normalization.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testing_8h_1ae531a534fa7f4028ddf113ae72caa6aa" kindref="member">TESTEQUALS_FLOAT</ref>(a.<ref refid="classopenage_1_1util_1_1_vector_1ab534732ef33d7e047d612bdf8bc98322" kindref="member">dot</ref>(b),<sp/>11,<sp/>1e-7);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testing_8h_1ae531a534fa7f4028ddf113ae72caa6aa" kindref="member">TESTEQUALS_FLOAT</ref>(c.norm(),<sp/>5,<sp/>1e-7);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.normalize();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="testing_8h_1ae531a534fa7f4028ddf113ae72caa6aa" kindref="member">TESTEQUALS_FLOAT</ref>(c.norm(),<sp/>1,<sp/>1e-7);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>test<sp/>for<sp/>the<sp/>cross_product</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;3&gt;</ref><sp/>a(1.0,<sp/>2.0,<sp/>3.0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;3&gt;</ref><sp/>b(4.0,<sp/>5.0,<sp/>6.0);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vectorf&lt;3&gt;</ref><sp/>c<sp/>=<sp/>a.<ref refid="classopenage_1_1util_1_1_vector_1ab33cee057269a707f1f8a5f58944a5a4" kindref="member">cross_product</ref>(b);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="classopenage_1_1util_1_1_vector_1adb9d43a588f0d7044f201a2dff2db844" kindref="member">equals</ref>({-3.0,<sp/>6.0,<sp/>-3.0})<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::util::tests</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/util/vector_test.cpp"/>
  </compounddef>
</doxygen>
