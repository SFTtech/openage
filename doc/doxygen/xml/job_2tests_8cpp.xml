<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="job_2tests_8cpp" kind="file" language="C++">
    <compoundname>tests.cpp</compoundname>
    <includes refid="log_8h" local="yes">../log/log.h</includes>
    <includes refid="testing_8h" local="yes">../testing/testing.h</includes>
    <includes refid="job__manager_8h" local="yes">job_manager.h</includes>
    <includes local="no">atomic</includes>
    <incdepgraph>
      <node id="3011">
        <label>list</label>
      </node>
      <node id="3000">
        <label>atomic</label>
      </node>
      <node id="3007">
        <label>iomanip</label>
      </node>
      <node id="3006">
        <label>functional</label>
      </node>
      <node id="3018">
        <label>queue</label>
      </node>
      <node id="2984">
        <label>C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/tests.cpp</label>
        <link refid="job_2tests_8cpp"/>
        <childnode refid="2985" relation="include">
        </childnode>
        <childnode refid="3013" relation="include">
        </childnode>
        <childnode refid="3016" relation="include">
        </childnode>
        <childnode refid="3000" relation="include">
        </childnode>
      </node>
      <node id="2995">
        <label>cstdint</label>
      </node>
      <node id="3004">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="3005" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3007" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3008" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
        <childnode refid="3009" relation="include">
        </childnode>
      </node>
      <node id="3022">
        <label>job_aborted_exception.h</label>
        <link refid="job__aborted__exception_8h"/>
        <childnode refid="3015" relation="include">
        </childnode>
      </node>
      <node id="3021">
        <label>abortable_job_state.h</label>
        <link refid="abortable__job__state_8h"/>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3015">
        <label>stdexcept</label>
      </node>
      <node id="3010">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="3011" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="2986" relation="include">
        </childnode>
      </node>
      <node id="3005">
        <label>cstdarg</label>
      </node>
      <node id="2992">
        <label>string</label>
      </node>
      <node id="2994">
        <label>message.h</label>
        <link refid="message_8h"/>
        <childnode refid="2995" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
        <childnode refid="2996" relation="include">
        </childnode>
        <childnode refid="2997" relation="include">
        </childnode>
        <childnode refid="2999" relation="include">
        </childnode>
        <childnode refid="3010" relation="include">
        </childnode>
        <childnode refid="2986" relation="include">
        </childnode>
      </node>
      <node id="2997">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="2998" relation="include">
        </childnode>
      </node>
      <node id="2999">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3002" relation="include">
        </childnode>
        <childnode refid="2990" relation="include">
        </childnode>
        <childnode refid="3003" relation="include">
        </childnode>
        <childnode refid="3004" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>exception</label>
      </node>
      <node id="3026">
        <label>stddef.h</label>
      </node>
      <node id="3016">
        <label>job_manager.h</label>
        <link refid="job__manager_8h"/>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3012" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3020" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3014">
        <label>../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="2988" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3015" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
        <childnode refid="2990" relation="include">
        </childnode>
        <childnode refid="2994" relation="include">
        </childnode>
      </node>
      <node id="3032">
        <label>worker.h</label>
        <link refid="worker_8h"/>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3017" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3018" relation="include">
        </childnode>
        <childnode refid="3019" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3017">
        <label>condition_variable</label>
      </node>
      <node id="2989">
        <label>typeinfo</label>
      </node>
      <node id="3030">
        <label>job_group.h</label>
        <link refid="job__group_8h"/>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3021" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
      </node>
      <node id="3028">
        <label>types.h</label>
        <link refid="job_2types_8h"/>
        <childnode refid="3006" relation="include">
        </childnode>
      </node>
      <node id="3009">
        <label>vector</label>
      </node>
      <node id="2985">
        <label>../log/log.h</label>
        <link refid="log_8h"/>
        <childnode refid="2986" relation="include">
        </childnode>
        <childnode refid="2994" relation="include">
        </childnode>
      </node>
      <node id="2991">
        <label>ciso646</label>
      </node>
      <node id="3023">
        <label>typed_job_state_base.h</label>
        <link refid="typed__job__state__base_8h"/>
        <childnode refid="3000" relation="include">
        </childnode>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3025" relation="include">
        </childnode>
        <childnode refid="3014" relation="include">
        </childnode>
        <childnode refid="3022" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3008">
        <label>sstream</label>
      </node>
      <node id="2990">
        <label>compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="2991" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
        <childnode refid="2993" relation="include">
        </childnode>
      </node>
      <node id="2993">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="2993" relation="include">
        </childnode>
      </node>
      <node id="3003">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="2988" relation="include">
        </childnode>
        <childnode refid="2992" relation="include">
        </childnode>
      </node>
      <node id="2986">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="2987" relation="include">
        </childnode>
      </node>
      <node id="2998">
        <label>cstdlib</label>
      </node>
      <node id="2988">
        <label>iostream</label>
      </node>
      <node id="3029">
        <label>job.h</label>
        <link refid="job_8h"/>
        <childnode refid="3024" relation="include">
        </childnode>
        <childnode refid="3001" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
      </node>
      <node id="3020">
        <label>unordered_map</label>
      </node>
      <node id="3031">
        <label>job_state.h</label>
        <link refid="job__state_8h"/>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3023" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3013">
        <label>../testing/testing.h</label>
        <link refid="testing_8h"/>
        <childnode refid="3014" relation="include">
        </childnode>
      </node>
      <node id="3012">
        <label>mutex</label>
      </node>
      <node id="3025">
        <label>../util/thread_id.h</label>
        <link refid="thread__id_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
      </node>
      <node id="3019">
        <label>thread</label>
      </node>
      <node id="3002">
        <label>type_traits</label>
      </node>
      <node id="2996">
        <label>config.h</label>
      </node>
      <node id="3027">
        <label>job_state_base.h</label>
        <link refid="job__state__base_8h"/>
        <childnode refid="3006" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
      </node>
      <node id="3001">
        <label>memory</label>
      </node>
      <node id="2987">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="2988" relation="include">
        </childnode>
        <childnode refid="2989" relation="include">
        </childnode>
        <childnode refid="2990" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1job">openage::job</innernamespace>
    <innernamespace refid="namespaceopenage_1_1job_1_1tests">openage::job::tests</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2016<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../log/log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../testing/testing.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="job__manager_8h" kindref="compound">job_manager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">job<sp/>{</highlight></codeline>
<codeline lineno="12" refid="namespaceopenage_1_1job_1_1tests" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">tests<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="namespaceopenage_1_1job_1_1tests_1abca5d5e032e3cdbbe7176fde710f7abd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1job_1_1tests_1abca5d5e032e3cdbbe7176fde710f7abd" kindref="member">test_simple_job</ref>()<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1job_1_1_job_manager" kindref="compound">JobManager</ref><sp/>manager{4};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.<ref refid="classopenage_1_1job_1_1_job_manager_1ab2bf41f6b397b1acf10665ad93425b5e" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;int&gt;<sp/>finish_count(0);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>job_count<sp/>=<sp/>1337;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>job_function<sp/>=<sp/>[]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>42;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>job_callback<sp/>=<sp/>[&amp;](<ref refid="namespaceopenage_1_1job_1aa7f614139b9f8585d91285475c260c2f" kindref="member">result_function_t&lt;int&gt;</ref><sp/>get_result)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>job_result<sp/>=<sp/>get_result();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(job_result<sp/>==<sp/>42)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finish_count++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>job_count;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager.enqueue&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(job_function,<sp/>job_callback);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(finish_count.load()<sp/>&lt;<sp/>job_count)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager.execute_callbacks();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.stop();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1testing_1_1testing_1ac25bf81db406af62d08113ef7ae9fd6e" kindref="member">result</ref><sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespaceopenage_1_1job_1_1tests_1a9e15fa28b3f67065f69fb17a569e4ecc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1job_1_1tests_1a9e15fa28b3f67065f69fb17a569e4ecc" kindref="member">test_simple_job_with_exception</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1job_1_1_job_manager" kindref="compound">JobManager</ref><sp/>manager{4};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.<ref refid="classopenage_1_1job_1_1_job_manager_1ab2bf41f6b397b1acf10665ad93425b5e" kindref="member">start</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>good_jobs<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bad_jobs<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;int&gt;<sp/>finished(0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;int&gt;<sp/>errors(0);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>exception_job_function<sp/>=<sp/>[]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;error<sp/>string&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>job_function<sp/>=<sp/>[]()<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>42;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>job_callback<sp/>=<sp/>[&amp;](<ref refid="namespaceopenage_1_1job_1aa7f614139b9f8585d91285475c260c2f" kindref="member">result_function_t&lt;int&gt;</ref><sp/>get_result)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_result();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errors++;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finished++;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>good_jobs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager.enqueue&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(job_function,<sp/>job_callback);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bad_jobs;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager.enqueue&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;(exception_job_function,<sp/>job_callback);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(finished.load()<sp/>&lt;<sp/>good_jobs<sp/>+<sp/>bad_jobs)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manager.execute_callbacks();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>manager.stop();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>errors.load()<sp/>==<sp/>bad_jobs<sp/>or<sp/><ref refid="testing_8h_1a32253726c81e858197f39fbf0b56d17c" kindref="member">TESTFAIL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="namespaceopenage_1_1job_1_1tests_1af342bd56aa228b49c1a6867982aca505" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1job_1_1tests_1af342bd56aa228b49c1a6867982aca505" kindref="member">test_job_manager</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1job_1_1tests_1abca5d5e032e3cdbbe7176fde710f7abd" kindref="member">test_simple_job</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1job_1_1tests_1a9e15fa28b3f67065f69fb17a569e4ecc" kindref="member">test_simple_job_with_exception</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>openage::job::tests</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/job/tests.cpp"/>
  </compounddef>
</doxygen>
