<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer" kind="class" language="C++" prot="public" final="yes">
    <compoundname>openage::renderer::opengl::GlFramebuffer</compoundname>
    <basecompoundref refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object" prot="public" virt="non-virtual">openage::renderer::opengl::GlSimpleObject</basecompoundref>
    <includes refid="framebuffer_8h" local="no">framebuffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1a5d34c4c82d6685200365ae981b9c495a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::renderer::opengl::GlFramebuffer::GlFramebuffer</definition>
        <argsstring>(std::vector&lt; const GlTexture2d * &gt; textures)</argsstring>
        <name>GlFramebuffer</name>
        <param>
          <type>std::vector&lt; const <ref refid="classopenage_1_1renderer_1_1opengl_1_1_gl_texture2d" kindref="compound">GlTexture2d</ref> * &gt;</type>
          <declname>textures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a framebuffer pointing at the given textures. <ref refid="classopenage_1_1_texture" kindref="compound">Texture</ref> are attached to points specific to their pixel format, e.g. a depth texture will be set as the depth target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/framebuffer.h" line="23" column="1" bodyfile="libopenage/renderer/opengl/framebuffer.cpp" bodystart="12" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1ad56acbd6cd31f4dde51dd895b9be4891" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::renderer::opengl::GlFramebuffer::bind_read</definition>
        <argsstring>() const</argsstring>
        <name>bind_read</name>
        <briefdescription>
<para>Bind this framebuffer to GL_READ_FRAMEBUFFER. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/framebuffer.h" line="26" column="1" bodyfile="libopenage/renderer/opengl/framebuffer.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1ad3b4817ba31ee0d433c48d6c7f8aae89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::renderer::opengl::GlFramebuffer::bind_write</definition>
        <argsstring>() const</argsstring>
        <name>bind_write</name>
        <briefdescription>
<para>Bind this framebuffer to GL_DRAW_FRAMEBUFFER. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/opengl/framebuffer.h" line="29" column="1" bodyfile="libopenage/renderer/opengl/framebuffer.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Represents an OpenGL Framebuffer Object. It is a collection of bitmap targets that can be drawn into and read from. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2384">
        <label>openage::renderer::opengl::GlSimpleObject</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object"/>
      </node>
      <node id="2383">
        <label>openage::renderer::opengl::GlFramebuffer</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer"/>
        <childnode refid="2384" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2386">
        <label>openage::renderer::opengl::GlSimpleObject</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object"/>
      </node>
      <node id="2385">
        <label>openage::renderer::opengl::GlFramebuffer</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer"/>
        <childnode refid="2386" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libopenage/renderer/opengl/framebuffer.h" line="18" column="1" bodyfile="libopenage/renderer/opengl/framebuffer.h" bodystart="18" bodyend="30"/>
    <listofallmembers>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1ad56acbd6cd31f4dde51dd895b9be4891" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>bind_read</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1ad3b4817ba31ee0d433c48d6c7f8aae89" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>bind_write</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a6d235dc3bdf1323a5b3bfad20df78ef6" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>delete_fun</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1aeae2150c26a186110686373ad37cecf5" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>get_handle</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_framebuffer_1a5d34c4c82d6685200365ae981b9c495a" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>GlFramebuffer</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1ad01a0a9dfceabcf5ea48a6af86a805ed" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a9cb29e026e6097138f0e6d20d22eb6b9" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a24d175d087077438ddf0667d4f0bb210" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>GlSimpleObject</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1ad59150afddeb64a473f500edee2f63f5" prot="protected" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>handle</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a19018330cb67b7f63271764b883ff19a" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>operator=</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1aa5c241e2d89ec1043b3540c6beb8a3a2" prot="public" virt="non-virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>operator=</name></member>
      <member refid="classopenage_1_1renderer_1_1opengl_1_1_gl_simple_object_1a52d36fe37bbca9529578795d1042530d" prot="public" virt="virtual"><scope>openage::renderer::opengl::GlFramebuffer</scope><name>~GlSimpleObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
