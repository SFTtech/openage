<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1_game_spec" kind="class" language="C++" prot="public">
    <compoundname>openage::GameSpec</compoundname>
    <includes refid="game__spec_8h" local="no">game_spec.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1ae2b8a6bdf7a14d4dfa22a963edf0d24b" prot="private" static="no" mutable="no">
        <type><ref refid="classopenage_1_1_asset_manager" kindref="compound">AssetManager</ref> *</type>
        <definition>AssetManager* openage::GameSpec::assetmanager</definition>
        <argsstring></argsstring>
        <name>assetmanager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Asset management entity that is responsible for textures, sounds, etc. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="193" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="193" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1ae74164c6aad1ea4d1ed4c4368b91711a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; gamedata::empiresdat &gt;</type>
        <definition>std::vector&lt;gamedata::empiresdat&gt; openage::GameSpec::gamedata</definition>
        <argsstring></argsstring>
        <name>gamedata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The full original gamedata tree. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="198" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1a7fc2fe6626e99e9bab20b66287e5f58a" prot="private" static="no" mutable="no">
        <type><ref refid="structopenage_1_1terrain__meta" kindref="compound">terrain_meta</ref></type>
        <definition>terrain_meta openage::GameSpec::terrain_data</definition>
        <argsstring></argsstring>
        <name>terrain_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>data used for constructing terrain objects </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="203" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1a7cefb930be58e9a11ab308c2c1fca351" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref>, <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref> &gt;</type>
        <definition>std::unordered_map&lt;index_t, index_t&gt; openage::GameSpec::slp_to_graphic</definition>
        <argsstring></argsstring>
        <name>slp_to_graphic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>slp to graphic id reverse lookup </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="208" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1a6e01d394f1d6b8c85ee0922f4cee072b" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref>, const gamedata::graphic * &gt;</type>
        <definition>std::unordered_map&lt;index_t, const gamedata::graphic *&gt; openage::GameSpec::graphics</definition>
        <argsstring></argsstring>
        <name>graphics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>map graphic id to gamedata graphic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="213" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1a64c200779cfffebb00b3bdf830b781f5" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref>, std::vector&lt; const gamedata::unit_command * &gt; &gt;</type>
        <definition>std::unordered_map&lt;index_t, std::vector&lt;const gamedata::unit_command *&gt; &gt; openage::GameSpec::commands</definition>
        <argsstring></argsstring>
        <name>commands</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>commands available for each unit id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="218" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1ad3367d0a1791303b8198e31fd5b4a22d" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref>, std::shared_ptr&lt; <ref refid="classopenage_1_1_unit_texture" kindref="compound">UnitTexture</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;index_t, std::shared_ptr&lt;UnitTexture&gt; &gt; openage::GameSpec::unit_textures</definition>
        <argsstring></argsstring>
        <name>unit_textures</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>graphic ids -&gt; unit texture for that id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="223" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1aafe40f5b33c85b4d7266b85814c5292a" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; <ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref>, <ref refid="classopenage_1_1_sound" kindref="compound">Sound</ref> &gt;</type>
        <definition>std::unordered_map&lt;index_t, Sound&gt; openage::GameSpec::available_sounds</definition>
        <argsstring></argsstring>
        <name>available_sounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sound ids mapped to playable sounds for all available sounds. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="228" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1_game_spec_1a4cc5785668275bd468264822e2326acc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool openage::GameSpec::gamedata_loaded</definition>
        <argsstring></argsstring>
        <name>gamedata_loaded</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>has game data been load yet </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="233" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a223fd0aa6ecdf3163f76f97ac766628e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::GameSpec::GameSpec</definition>
        <argsstring>(AssetManager *am)</argsstring>
        <name>GameSpec</name>
        <param>
          <type><ref refid="classopenage_1_1_asset_manager" kindref="compound">AssetManager</ref> *</type>
          <declname>am</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="74" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="25" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a974dc4e7af42ddcc30b637f7e7861695" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>openage::GameSpec::~GameSpec</definition>
        <argsstring>()</argsstring>
        <name>~GameSpec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="75" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a4de64c8c4a5463dc086f082659147b02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::GameSpec::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>perform the main loading job. this loads all the data into the storage. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="81" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="34" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a19adf3ebe5c03a18675ef8dcd0a3c0d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::GameSpec::load_complete</definition>
        <argsstring>() const</argsstring>
        <name>load_complete</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if loading has been completed, a load percent would be nice </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="87" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a646cb1f106e9a5a853d8be6065836572" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structopenage_1_1terrain__meta" kindref="compound">terrain_meta</ref> *</type>
        <definition>terrain_meta * openage::GameSpec::get_terrain_meta</definition>
        <argsstring>()</argsstring>
        <name>get_terrain_meta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return data used for constructing terrain objects </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="92" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1ab7c5520835aa0ed3163340bb70e21f20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
        <definition>index_t openage::GameSpec::get_slp_graphic</definition>
        <argsstring>(index_t slp)</argsstring>
        <name>get_slp_graphic</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>slp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reverse lookup of slp </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="97" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a949e9f7d9b1017a7f399c55a2bd60c9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopenage_1_1_texture" kindref="compound">Texture</ref> *</type>
        <definition>Texture * openage::GameSpec::get_texture</definition>
        <argsstring>(index_t graphic_id) const</argsstring>
        <name>get_texture</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>graphic_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lookup using a texture id, this specifically avoids returning the missing placeholder texture </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="102" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="91" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a0d9bb7cf5c16889a6eab13c714b39ae1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopenage_1_1_texture" kindref="compound">Texture</ref> *</type>
        <definition>Texture * openage::GameSpec::get_texture</definition>
        <argsstring>(const std::string &amp;file_name, bool use_metafile=true) const</argsstring>
        <name>get_texture</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>file_name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_metafile</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>lookup using a texture file name </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="107" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a7ac1e52c333dbceea615911bd705fb88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classopenage_1_1_unit_texture" kindref="compound">UnitTexture</ref> &gt;</type>
        <definition>std::shared_ptr&lt; UnitTexture &gt; openage::GameSpec::get_unit_texture</definition>
        <argsstring>(index_t graphic_id) const</argsstring>
        <name>get_unit_texture</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>graphic_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get unit texture by graphic id <ndash/> this is an directional texture which also includes graphic deltas </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="113" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="115" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a1b83c8dcc455fd32056c418a993eb506" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classopenage_1_1_sound" kindref="compound">Sound</ref> *</type>
        <definition>const Sound * openage::GameSpec::get_sound</definition>
        <argsstring>(index_t sound_id) const</argsstring>
        <name>get_sound</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>sound_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get sound by sound id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="118" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="125" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1aa1f8784ca6aab9da489457d22b386443" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const gamedata::graphic *</type>
        <definition>const gamedata::graphic * openage::GameSpec::get_graphic_data</definition>
        <argsstring>(index_t grp_id) const</argsstring>
        <name>get_graphic_data</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>grp_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gamedata for a graphic nyan will have to replace this somehow </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="124" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a37f6ca1f38ef68e4521d7536fb7d49e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; const gamedata::unit_command * &gt;</type>
        <definition>std::vector&lt; const gamedata::unit_command * &gt; openage::GameSpec::get_command_data</definition>
        <argsstring>(index_t unit_id) const</argsstring>
        <name>get_command_data</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <declname>unit_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get available commands for a unit id nyan will have to replace this somehow </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="130" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a8589a31ec688308502a6d381a1a72235" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string openage::GameSpec::get_civ_name</definition>
        <argsstring>(int civ_id) const</argsstring>
        <name>get_civ_name</name>
        <param>
          <type>int</type>
          <declname>civ_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the name of a civ by index </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="135" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1ab009229f56624608b53820adf2895cbc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::create_unit_types</definition>
        <argsstring>(unit_meta_list &amp;objects, int civ_id) const</argsstring>
        <name>create_unit_types</name>
        <param>
          <type><ref refid="namespaceopenage_1a8a043d5389cb7a625dec595ea4b40636" kindref="member">unit_meta_list</ref> &amp;</type>
          <declname>objects</declname>
        </param>
        <param>
          <type>int</type>
          <declname>civ_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>makes initial unit types for a particular civ id </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="140" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="155" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a3a21c92c49ec4d0add95e8aacd83ebe0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classopenage_1_1_asset_manager" kindref="compound">AssetManager</ref> *</type>
        <definition>AssetManager * openage::GameSpec::get_asset_manager</definition>
        <argsstring>() const</argsstring>
        <name>get_asset_manager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the asset manager used for loading resources of this game specification. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="146" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="187" bodyend="189"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a4183e5b82dd51fd66629d287026b5daa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::GameSpec::valid_graphic_id</definition>
        <argsstring>(index_t) const</argsstring>
        <name>valid_graphic_id</name>
        <param>
          <type><ref refid="namespaceopenage_1a8f00ffffd7d8386f3c406ec373e100bf" kindref="member">index_t</ref></type>
          <defname>graphic_id</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>check graphic id is valid </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="152" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="272" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1ad72bef762bb38fb93c944d490bf5c113" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::create_abilities</definition>
        <argsstring>(const gamedata::empiresdat &amp;gamedata)</argsstring>
        <name>create_abilities</name>
        <param>
          <type>const gamedata::empiresdat &amp;</type>
          <declname>gamedata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create unit abilities from game data </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="157" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="404" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1acbe30bd72e3a9ef46c461e497d726711" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::load_building</definition>
        <argsstring>(const gamedata::building_unit &amp;, unit_meta_list &amp;) const</argsstring>
        <name>load_building</name>
        <param>
          <type>const gamedata::building_unit &amp;</type>
          <defname>building</defname>
        </param>
        <param>
          <type><ref refid="namespaceopenage_1a8a043d5389cb7a625dec595ea4b40636" kindref="member">unit_meta_list</ref> &amp;</type>
          <defname>list</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loads required assets to construct a buildings. adds to the type list if the object can be created safely. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="163" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="282" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a51a1664688173a588e6ead16703f8e82" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::load_living</definition>
        <argsstring>(const gamedata::living_unit &amp;, unit_meta_list &amp;) const</argsstring>
        <name>load_living</name>
        <param>
          <type>const gamedata::living_unit &amp;</type>
          <defname>unit</defname>
        </param>
        <param>
          <type><ref refid="namespaceopenage_1a8a043d5389cb7a625dec595ea4b40636" kindref="member">unit_meta_list</ref> &amp;</type>
          <defname>list</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loads assets for living things. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="168" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="293" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1af210d4508dea9f8f87aa98c3fc0e3359" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::load_object</definition>
        <argsstring>(const gamedata::unit_object &amp;, unit_meta_list &amp;) const</argsstring>
        <name>load_object</name>
        <param>
          <type>const gamedata::unit_object &amp;</type>
          <defname>object</defname>
        </param>
        <param>
          <type><ref refid="namespaceopenage_1a8a043d5389cb7a625dec595ea4b40636" kindref="member">unit_meta_list</ref> &amp;</type>
          <defname>list</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load assets for other game objects (not building and living). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="173" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="306" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a67579e89ee667f00dc301433a23458af" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::load_missile</definition>
        <argsstring>(const gamedata::missile_unit &amp;, unit_meta_list &amp;) const</argsstring>
        <name>load_missile</name>
        <param>
          <type>const gamedata::missile_unit &amp;</type>
          <defname>proj</defname>
        </param>
        <param>
          <type><ref refid="namespaceopenage_1a8a043d5389cb7a625dec595ea4b40636" kindref="member">unit_meta_list</ref> &amp;</type>
          <defname>list</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>load missile assets. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="178" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="317" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a6f6bbcfb3a4dd8586bbed00f62054bf1" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::load_terrain</definition>
        <argsstring>(const gamedata::empiresdat &amp;gamedata)</argsstring>
        <name>load_terrain</name>
        <param>
          <type>const gamedata::empiresdat &amp;</type>
          <declname>gamedata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>fill in the terrain_data attribute of this </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="183" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="329" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1_game_spec_1a979c8104ad4832b1912e703f19558bc9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::GameSpec::on_gamedata_loaded</definition>
        <argsstring>(const gamedata::empiresdat &amp;gamedata)</argsstring>
        <name>on_gamedata_loaded</name>
        <param>
          <type>const gamedata::empiresdat &amp;</type>
          <declname>gamedata</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Invoked when the gamedata has been loaded. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gamestate/game_spec.h" line="188" column="1" bodyfile="libopenage/gamestate/game_spec.cpp" bodystart="192" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classopenage_1_1_game_spec" kindref="compound">GameSpec</ref> gives a collection of all game elements this currently includes unit types and terrain types This provides a system which can easily allow game modding</para>
<para>uses the <ref refid="classopenage_1_1_asset_manager" kindref="compound">AssetManager</ref> to gather graphic data, composite textures and sounds.</para>
<para>all types are sorted and stored by id values, each data object is referenced by a type and id pair</para>
<para>dealing directly with files done by asset manager TODO: should the audio loading should be moved there? </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="2080">
        <label>CoordNeSeUpAbsolute&lt; phys_t, phys3, phys3_delta &gt;</label>
      </node>
      <node id="2048">
        <label>openage::util::Path</label>
        <link refid="classopenage_1_1util_1_1_path"/>
      </node>
      <node id="2056">
        <label>openage::EngineSignals</label>
        <link refid="classopenage_1_1_engine_signals"/>
        <childnode refid="2057" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2081">
        <label>openage::coord::camgame_delta</label>
        <link refid="structopenage_1_1coord_1_1camgame__delta"/>
        <childnode refid="2082" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2054">
        <label>openage::util::VariableBase</label>
        <link refid="classopenage_1_1util_1_1_variable_base"/>
      </node>
      <node id="2059">
        <label>openage::ScreenshotManager</label>
        <link refid="classopenage_1_1_screenshot_manager"/>
        <childnode refid="2060" relation="usage">
          <edgelabel>-job_manager</edgelabel>
        </childnode>
        <childnode refid="2061" relation="usage">
          <edgelabel>+window_size</edgelabel>
        </childnode>
      </node>
      <node id="2084">
        <label>qtsdl::GuiItemLink</label>
        <link refid="classqtsdl_1_1_gui_item_link"/>
      </node>
      <node id="2062">
        <label>CoordXYRelative&lt; pixel_t, viewport, viewport_delta &gt;</label>
      </node>
      <node id="2053">
        <label>openage::util::Variable&lt; bool &gt;</label>
        <link refid="classopenage_1_1util_1_1_variable"/>
        <childnode refid="2054" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2057">
        <label>QObject</label>
      </node>
      <node id="2058">
        <label>openage::cvar::CVarManager</label>
        <link refid="classopenage_1_1cvar_1_1_c_var_manager"/>
        <childnode refid="2048" relation="usage">
          <edgelabel>-path</edgelabel>
        </childnode>
      </node>
      <node id="2079">
        <label>openage::coord::phys3</label>
        <link refid="structopenage_1_1coord_1_1phys3"/>
        <childnode refid="2080" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2065">
        <label>openage::util::ExternalProfiler</label>
        <link refid="classopenage_1_1util_1_1_external_profiler"/>
      </node>
      <node id="2051">
        <label>openage::options::OptionNode</label>
        <link refid="classopenage_1_1options_1_1_option_node"/>
        <childnode refid="2051" relation="usage">
          <edgelabel>-parent</edgelabel>
        </childnode>
      </node>
      <node id="2077">
        <label>openage::coord::viewport</label>
        <link refid="structopenage_1_1coord_1_1viewport"/>
        <childnode refid="2078" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2073">
        <label>openage::input::ActionManager</label>
        <link refid="classopenage_1_1input_1_1_action_manager"/>
        <childnode refid="2058" relation="usage">
          <edgelabel>-cvar_manager</edgelabel>
        </childnode>
        <childnode refid="2066" relation="usage">
          <edgelabel>-input_manager</edgelabel>
        </childnode>
      </node>
      <node id="2075">
        <label>qtsdl::GuiSingletonItemsInfo</label>
        <link refid="classqtsdl_1_1_gui_singleton_items_info"/>
      </node>
      <node id="2061">
        <label>openage::coord::viewport_delta</label>
        <link refid="structopenage_1_1coord_1_1viewport__delta"/>
        <childnode refid="2062" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2046">
        <label>openage::GameSpec</label>
        <link refid="classopenage_1_1_game_spec"/>
        <childnode refid="2047" relation="usage">
          <edgelabel>-assetmanager</edgelabel>
        </childnode>
        <childnode refid="2085" relation="usage">
          <edgelabel>-terrain_data</edgelabel>
        </childnode>
      </node>
      <node id="2072">
        <label>CoordXYRelative&lt; pixel_t, input, input_delta &gt;</label>
      </node>
      <node id="2068">
        <label>openage::coord::input</label>
        <link refid="structopenage_1_1coord_1_1input"/>
        <childnode refid="2069" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2082">
        <label>CoordXYRelative&lt; pixel_t, camgame, camgame_delta &gt;</label>
      </node>
      <node id="2060">
        <label>openage::job::JobManager</label>
        <link refid="classopenage_1_1job_1_1_job_manager"/>
      </node>
      <node id="2069">
        <label>CoordXYAbsolute&lt; pixel_t, input, input_delta &gt;</label>
      </node>
      <node id="2063">
        <label>openage::util::FrameCounter</label>
        <link refid="classopenage_1_1util_1_1_frame_counter"/>
        <childnode refid="2064" relation="usage">
          <edgelabel>-frame_timer</edgelabel>
        </childnode>
      </node>
      <node id="2070">
        <label>openage::input::InputContext</label>
        <link refid="classopenage_1_1input_1_1_input_context"/>
        <childnode refid="2066" relation="usage">
          <edgelabel>-input_manager</edgelabel>
        </childnode>
      </node>
      <node id="2085">
        <label>openage::terrain_meta</label>
        <link refid="structopenage_1_1terrain__meta"/>
      </node>
      <node id="2074">
        <label>openage::gui::EngineQMLInfo</label>
        <link refid="classopenage_1_1gui_1_1_engine_q_m_l_info"/>
        <childnode refid="2075" relation="public-inheritance">
        </childnode>
        <childnode refid="2048" relation="usage">
          <edgelabel>+asset_dir</edgelabel>
        </childnode>
        <childnode refid="2049" relation="usage">
          <edgelabel>+engine</edgelabel>
        </childnode>
      </node>
      <node id="2083">
        <label>openage::audio::AudioManager</label>
        <link refid="classopenage_1_1audio_1_1_audio_manager"/>
        <childnode refid="2060" relation="usage">
          <edgelabel>-job_manager</edgelabel>
        </childnode>
      </node>
      <node id="2055">
        <label>openage::util::Profiler</label>
        <link refid="classopenage_1_1util_1_1_profiler"/>
        <childnode refid="2049" relation="usage">
          <edgelabel>-engine</edgelabel>
        </childnode>
      </node>
      <node id="2049">
        <label>openage::Engine</label>
        <link refid="classopenage_1_1_engine"/>
        <childnode refid="2050" relation="public-inheritance">
        </childnode>
        <childnode refid="2051" relation="public-inheritance">
        </childnode>
        <childnode refid="2052" relation="usage">
          <edgelabel>+drawing_huds</edgelabel>
          <edgelabel>+drawing_debug_overlay</edgelabel>
        </childnode>
        <childnode refid="2055" relation="usage">
          <edgelabel>-profiler</edgelabel>
        </childnode>
        <childnode refid="2048" relation="usage">
          <edgelabel>-root_dir</edgelabel>
        </childnode>
        <childnode refid="2056" relation="usage">
          <edgelabel>+gui_signals</edgelabel>
        </childnode>
        <childnode refid="2058" relation="usage">
          <edgelabel>-cvar_manager</edgelabel>
        </childnode>
        <childnode refid="2059" relation="usage">
          <edgelabel>-screenshot_manager</edgelabel>
        </childnode>
        <childnode refid="2063" relation="usage">
          <edgelabel>-fps_counter</edgelabel>
        </childnode>
        <childnode refid="2065" relation="usage">
          <edgelabel>+external_profiler</edgelabel>
        </childnode>
        <childnode refid="2066" relation="usage">
          <edgelabel>-input_manager</edgelabel>
        </childnode>
        <childnode refid="2074" relation="usage">
          <edgelabel>-qml_info</edgelabel>
        </childnode>
        <childnode refid="2076" relation="usage">
          <edgelabel>+coord</edgelabel>
        </childnode>
        <childnode refid="2060" relation="usage">
          <edgelabel>-job_manager</edgelabel>
        </childnode>
        <childnode refid="2073" relation="usage">
          <edgelabel>-action_manager</edgelabel>
        </childnode>
        <childnode refid="2083" relation="usage">
          <edgelabel>-audio_manager</edgelabel>
        </childnode>
      </node>
      <node id="2078">
        <label>CoordXYAbsolute&lt; pixel_t, viewport, viewport_delta &gt;</label>
      </node>
      <node id="2050">
        <label>openage::ResizeHandler</label>
        <link refid="classopenage_1_1_resize_handler"/>
      </node>
      <node id="2052">
        <label>openage::options::Var&lt; bool &gt;</label>
        <link refid="classopenage_1_1options_1_1_var"/>
        <childnode refid="2053" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2071">
        <label>openage::coord::input_delta</label>
        <link refid="structopenage_1_1coord_1_1input__delta"/>
        <childnode refid="2072" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2064">
        <label>openage::util::Timer</label>
        <link refid="classopenage_1_1util_1_1_timer"/>
      </node>
      <node id="2067">
        <label>openage::InputHandler</label>
        <link refid="classopenage_1_1_input_handler"/>
      </node>
      <node id="2066">
        <label>openage::input::InputManager</label>
        <link refid="classopenage_1_1input_1_1_input_manager"/>
        <childnode refid="2067" relation="public-inheritance">
        </childnode>
        <childnode refid="2068" relation="usage">
          <edgelabel>-mouse_position</edgelabel>
        </childnode>
        <childnode refid="2070" relation="usage">
          <edgelabel>-global_context</edgelabel>
        </childnode>
        <childnode refid="2071" relation="usage">
          <edgelabel>-mouse_motion</edgelabel>
        </childnode>
        <childnode refid="2073" relation="usage">
          <edgelabel>-action_manager</edgelabel>
        </childnode>
      </node>
      <node id="2047">
        <label>openage::AssetManager</label>
        <link refid="classopenage_1_1_asset_manager"/>
        <childnode refid="2048" relation="usage">
          <edgelabel>-asset_path</edgelabel>
        </childnode>
        <childnode refid="2049" relation="usage">
          <edgelabel>-engine</edgelabel>
        </childnode>
        <childnode refid="2084" relation="usage">
          <edgelabel>+gui_link</edgelabel>
        </childnode>
      </node>
      <node id="2076">
        <label>openage::coord::CoordManager</label>
        <link refid="classopenage_1_1coord_1_1_coord_manager"/>
        <childnode refid="2077" relation="usage">
          <edgelabel>+camgame_viewport</edgelabel>
          <edgelabel>+camhud_viewport</edgelabel>
        </childnode>
        <childnode refid="2079" relation="usage">
          <edgelabel>+camgame_phys</edgelabel>
        </childnode>
        <childnode refid="2081" relation="usage">
          <edgelabel>+tile_size</edgelabel>
        </childnode>
        <childnode refid="2061" relation="usage">
          <edgelabel>+viewport_size</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libopenage/gamestate/game_spec.h" line="72" column="1" bodyfile="libopenage/gamestate/game_spec.h" bodystart="72" bodyend="234"/>
    <listofallmembers>
      <member refid="classopenage_1_1_game_spec_1ae2b8a6bdf7a14d4dfa22a963edf0d24b" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>assetmanager</name></member>
      <member refid="classopenage_1_1_game_spec_1aafe40f5b33c85b4d7266b85814c5292a" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>available_sounds</name></member>
      <member refid="classopenage_1_1_game_spec_1a64c200779cfffebb00b3bdf830b781f5" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>commands</name></member>
      <member refid="classopenage_1_1_game_spec_1ad72bef762bb38fb93c944d490bf5c113" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>create_abilities</name></member>
      <member refid="classopenage_1_1_game_spec_1ab009229f56624608b53820adf2895cbc" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>create_unit_types</name></member>
      <member refid="classopenage_1_1_game_spec_1ae74164c6aad1ea4d1ed4c4368b91711a" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>gamedata</name></member>
      <member refid="classopenage_1_1_game_spec_1a4cc5785668275bd468264822e2326acc" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>gamedata_loaded</name></member>
      <member refid="classopenage_1_1_game_spec_1a223fd0aa6ecdf3163f76f97ac766628e" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>GameSpec</name></member>
      <member refid="classopenage_1_1_game_spec_1a3a21c92c49ec4d0add95e8aacd83ebe0" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_asset_manager</name></member>
      <member refid="classopenage_1_1_game_spec_1a8589a31ec688308502a6d381a1a72235" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_civ_name</name></member>
      <member refid="classopenage_1_1_game_spec_1a37f6ca1f38ef68e4521d7536fb7d49e8" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_command_data</name></member>
      <member refid="classopenage_1_1_game_spec_1aa1f8784ca6aab9da489457d22b386443" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_graphic_data</name></member>
      <member refid="classopenage_1_1_game_spec_1ab7c5520835aa0ed3163340bb70e21f20" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_slp_graphic</name></member>
      <member refid="classopenage_1_1_game_spec_1a1b83c8dcc455fd32056c418a993eb506" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_sound</name></member>
      <member refid="classopenage_1_1_game_spec_1a646cb1f106e9a5a853d8be6065836572" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_terrain_meta</name></member>
      <member refid="classopenage_1_1_game_spec_1a949e9f7d9b1017a7f399c55a2bd60c9a" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_texture</name></member>
      <member refid="classopenage_1_1_game_spec_1a0d9bb7cf5c16889a6eab13c714b39ae1" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_texture</name></member>
      <member refid="classopenage_1_1_game_spec_1a7ac1e52c333dbceea615911bd705fb88" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>get_unit_texture</name></member>
      <member refid="classopenage_1_1_game_spec_1a6e01d394f1d6b8c85ee0922f4cee072b" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>graphics</name></member>
      <member refid="classopenage_1_1_game_spec_1a4de64c8c4a5463dc086f082659147b02" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>initialize</name></member>
      <member refid="classopenage_1_1_game_spec_1acbe30bd72e3a9ef46c461e497d726711" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_building</name></member>
      <member refid="classopenage_1_1_game_spec_1a19adf3ebe5c03a18675ef8dcd0a3c0d5" prot="public" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_complete</name></member>
      <member refid="classopenage_1_1_game_spec_1a51a1664688173a588e6ead16703f8e82" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_living</name></member>
      <member refid="classopenage_1_1_game_spec_1a67579e89ee667f00dc301433a23458af" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_missile</name></member>
      <member refid="classopenage_1_1_game_spec_1af210d4508dea9f8f87aa98c3fc0e3359" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_object</name></member>
      <member refid="classopenage_1_1_game_spec_1a6f6bbcfb3a4dd8586bbed00f62054bf1" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>load_terrain</name></member>
      <member refid="classopenage_1_1_game_spec_1a979c8104ad4832b1912e703f19558bc9" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>on_gamedata_loaded</name></member>
      <member refid="classopenage_1_1_game_spec_1a7cefb930be58e9a11ab308c2c1fca351" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>slp_to_graphic</name></member>
      <member refid="classopenage_1_1_game_spec_1a7fc2fe6626e99e9bab20b66287e5f58a" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>terrain_data</name></member>
      <member refid="classopenage_1_1_game_spec_1ad3367d0a1791303b8198e31fd5b4a22d" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>unit_textures</name></member>
      <member refid="classopenage_1_1_game_spec_1a4183e5b82dd51fd66629d287026b5daa" prot="private" virt="non-virtual"><scope>openage::GameSpec</scope><name>valid_graphic_id</name></member>
      <member refid="classopenage_1_1_game_spec_1a974dc4e7af42ddcc30b637f7e7861695" prot="public" virt="virtual"><scope>openage::GameSpec</scope><name>~GameSpec</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
