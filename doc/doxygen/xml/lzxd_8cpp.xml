<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="lzxd_8cpp" kind="file" language="C++">
    <compoundname>lzxd.cpp</compoundname>
    <includes refid="lzxd_8h" local="yes">lzxd.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cinttypes</includes>
    <includes local="no">cerrno</includes>
    <includes local="no">cstdarg</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">cstring</includes>
    <includes local="no">climits</includes>
    <includes refid="error_2error_8h" local="yes">../../error/error.h</includes>
    <includes refid="compiler_8h" local="yes">../compiler.h</includes>
    <includes refid="bitstream_8h" local="yes">bitstream.h</includes>
    <incdepgraph>
      <node id="27702">
        <label>list</label>
      </node>
      <node id="27693">
        <label>atomic</label>
      </node>
      <node id="27698">
        <label>iomanip</label>
      </node>
      <node id="27679">
        <label>functional</label>
      </node>
      <node id="27689">
        <label>cstdint</label>
      </node>
      <node id="27696">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="27697" relation="include">
        </childnode>
        <childnode refid="27679" relation="include">
        </childnode>
        <childnode refid="27698" relation="include">
        </childnode>
        <childnode refid="27682" relation="include">
        </childnode>
        <childnode refid="27699" relation="include">
        </childnode>
        <childnode refid="27684" relation="include">
        </childnode>
        <childnode refid="27700" relation="include">
        </childnode>
      </node>
      <node id="27683">
        <label>stdexcept</label>
      </node>
      <node id="27701">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="27702" relation="include">
        </childnode>
        <childnode refid="27703" relation="include">
        </childnode>
        <childnode refid="27704" relation="include">
        </childnode>
      </node>
      <node id="27697">
        <label>cstdarg</label>
      </node>
      <node id="27684">
        <label>string</label>
      </node>
      <node id="27688">
        <label>../log/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="27689" relation="include">
        </childnode>
        <childnode refid="27684" relation="include">
        </childnode>
        <childnode refid="27690" relation="include">
        </childnode>
        <childnode refid="27691" relation="include">
        </childnode>
        <childnode refid="27692" relation="include">
        </childnode>
        <childnode refid="27701" relation="include">
        </childnode>
        <childnode refid="27704" relation="include">
        </childnode>
      </node>
      <node id="27691">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="27676" relation="include">
        </childnode>
      </node>
      <node id="27692">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="27693" relation="include">
        </childnode>
        <childnode refid="27682" relation="include">
        </childnode>
        <childnode refid="27694" relation="include">
        </childnode>
        <childnode refid="27685" relation="include">
        </childnode>
        <childnode refid="27695" relation="include">
        </childnode>
        <childnode refid="27696" relation="include">
        </childnode>
      </node>
      <node id="27708">
        <label>cinttypes</label>
      </node>
      <node id="27680">
        <label>../../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="27681" relation="include">
        </childnode>
        <childnode refid="27682" relation="include">
        </childnode>
        <childnode refid="27683" relation="include">
        </childnode>
        <childnode refid="27684" relation="include">
        </childnode>
        <childnode refid="27685" relation="include">
        </childnode>
        <childnode refid="27688" relation="include">
        </childnode>
      </node>
      <node id="27706">
        <label>typeinfo</label>
      </node>
      <node id="27710">
        <label>cstdio</label>
      </node>
      <node id="27677">
        <label>bitstream.h</label>
        <link refid="bitstream_8h"/>
        <childnode refid="27678" relation="include">
        </childnode>
        <childnode refid="27679" relation="include">
        </childnode>
        <childnode refid="27680" relation="include">
        </childnode>
        <childnode refid="27685" relation="include">
        </childnode>
      </node>
      <node id="27700">
        <label>vector</label>
      </node>
      <node id="27686">
        <label>ciso646</label>
      </node>
      <node id="27699">
        <label>sstream</label>
      </node>
      <node id="27685">
        <label>../util/compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="27686" relation="include">
        </childnode>
        <childnode refid="27684" relation="include">
        </childnode>
        <childnode refid="27687" relation="include">
        </childnode>
      </node>
      <node id="27687">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="27687" relation="include">
        </childnode>
      </node>
      <node id="27695">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="27681" relation="include">
        </childnode>
        <childnode refid="27684" relation="include">
        </childnode>
      </node>
      <node id="27704">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="27705" relation="include">
        </childnode>
      </node>
      <node id="27709">
        <label>cerrno</label>
      </node>
      <node id="27676">
        <label>cstdlib</label>
      </node>
      <node id="27681">
        <label>iostream</label>
      </node>
      <node id="27675">
        <label>lzxd.h</label>
        <link refid="lzxd_8h"/>
        <childnode refid="27676" relation="include">
        </childnode>
        <childnode refid="27677" relation="include">
        </childnode>
      </node>
      <node id="27711">
        <label>climits</label>
      </node>
      <node id="27703">
        <label>mutex</label>
      </node>
      <node id="27694">
        <label>type_traits</label>
      </node>
      <node id="27690">
        <label>config.h</label>
      </node>
      <node id="27674">
        <label>libopenage/util/compress/lzxd.cpp</label>
        <link refid="lzxd_8cpp"/>
        <childnode refid="27675" relation="include">
        </childnode>
        <childnode refid="27707" relation="include">
        </childnode>
        <childnode refid="27708" relation="include">
        </childnode>
        <childnode refid="27709" relation="include">
        </childnode>
        <childnode refid="27697" relation="include">
        </childnode>
        <childnode refid="27689" relation="include">
        </childnode>
        <childnode refid="27710" relation="include">
        </childnode>
        <childnode refid="27676" relation="include">
        </childnode>
        <childnode refid="27678" relation="include">
        </childnode>
        <childnode refid="27711" relation="include">
        </childnode>
        <childnode refid="27680" relation="include">
        </childnode>
        <childnode refid="27685" relation="include">
        </childnode>
        <childnode refid="27677" relation="include">
        </childnode>
      </node>
      <node id="27707">
        <label>algorithm</label>
      </node>
      <node id="27678">
        <label>cstring</label>
      </node>
      <node id="27682">
        <label>memory</label>
      </node>
      <node id="27705">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="27681" relation="include">
        </childnode>
        <childnode refid="27706" relation="include">
        </childnode>
        <childnode refid="27685" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classopenage_1_1util_1_1compress_1_1_huffman_table" prot="public">openage::util::compress::HuffmanTable</innerclass>
    <innerclass refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" prot="public">openage::util::compress::LZXDStream</innerclass>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1util">openage::util</innernamespace>
    <innernamespace refid="namespaceopenage_1_1util_1_1compress">openage::util::compress</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>This<sp/>file<sp/>was<sp/>adapted<sp/>from<sp/>cabextract/libmspack<sp/>&lt;http://www.cabextract.org.uk/&gt;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2003-2013<sp/>the<sp/>cabextract<sp/>contributors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It&apos;s<sp/>licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>version<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Modifications<sp/>Copyright<sp/>2014-2017<sp/>the<sp/>openage<sp/>authors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>copying.md<sp/>for<sp/>further<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>the<sp/>original<sp/>code<sp/>was<sp/>refactored<sp/>almost<sp/>beyond<sp/>recognition;</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>all<sp/>of<sp/>the<sp/>macros<sp/>and<sp/>optimizations<sp/>were<sp/>ripped<sp/>out<sp/>and<sp/>replaced<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>templated<sp/>C++<sp/>classes.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lzxd_8h" kindref="compound">lzxd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cinttypes&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cerrno&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdarg&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../error/error.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../compiler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bitstream_8h" kindref="compound">bitstream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">compress<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LZX<sp/>specification<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="namespaceopenage_1_1util_1_1compress_1aa0e09ec612ba2d2ea51ec2a4c8ff3d49" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aa0e09ec612ba2d2ea51ec2a4c8ff3d49" kindref="member">LZX_MIN_MATCH</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//constexpr<sp/>unsigned<sp/>LZX_MAX_MATCH<sp/>=<sp/>257;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>seems<sp/>to<sp/>be<sp/>unused.<sp/>I&apos;m<sp/>scared.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref><sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="39" refid="namespaceopenage_1_1util_1_1compress_1aebf8cb02777e89fdf7430467b0386ce4" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aebf8cb02777e89fdf7430467b0386ce4" kindref="member">LZX_BLOCKTYPE_INVALID</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>also<sp/>blocktypes<sp/>4-7<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceopenage_1_1util_1_1compress_1a4bd87f3542f41c380c17ab677e862def" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4bd87f3542f41c380c17ab677e862def" kindref="member">LZX_BLOCKTYPE_VERBATIM</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="41" refid="namespaceopenage_1_1util_1_1compress_1ae2792f791635463a2e096c00caa867f9" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ae2792f791635463a2e096c00caa867f9" kindref="member">LZX_BLOCKTYPE_ALIGNED</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="42" refid="namespaceopenage_1_1util_1_1compress_1a185998c032b4c2440610ff414caed40f" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a185998c032b4c2440610ff414caed40f" kindref="member">LZX_BLOCKTYPE_UNCOMPRESSED</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="43" refid="namespaceopenage_1_1util_1_1compress_1a59cc3709a73f2e23d1ccec9d2547db65" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a59cc3709a73f2e23d1ccec9d2547db65" kindref="member">LZX_PRETREE_NUM_ELEMENTS</ref><sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="44" refid="namespaceopenage_1_1util_1_1compress_1ade1bdb939220c6ecf6e11623d7370bfd" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ade1bdb939220c6ecf6e11623d7370bfd" kindref="member">LZX_ALIGNED_NUM_ELEMENTS</ref><sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="45" refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" kindref="member">LZX_NUM_PRIMARY_LENGTHS</ref><sp/>=<sp/>7;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>missing<sp/>from<sp/>spec!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="namespaceopenage_1_1util_1_1compress_1acc00b52c00f768cbc18595d59a8be848" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acc00b52c00f768cbc18595d59a8be848" kindref="member">LZX_NUM_SECONDARY_LENGTHS</ref><sp/>=<sp/>249;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>tree<sp/>#elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LZX<sp/>huffman<sp/>constants:<sp/>tweak<sp/>tablebits<sp/>as<sp/>desired</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="namespaceopenage_1_1util_1_1compress_1af91efa77f8f600907c489a0902749971" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1af91efa77f8f600907c489a0902749971" kindref="member">LZX_PRETREE_MAXSYMBOLS</ref><sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a59cc3709a73f2e23d1ccec9d2547db65" kindref="member">LZX_PRETREE_NUM_ELEMENTS</ref>;</highlight></codeline>
<codeline lineno="50" refid="namespaceopenage_1_1util_1_1compress_1a0332219afcf379226d035ccf047daaf6" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a0332219afcf379226d035ccf047daaf6" kindref="member">LZX_PRETREE_TABLEBITS</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="51" refid="namespaceopenage_1_1util_1_1compress_1a26cdb2480260be73fa269f982a416010" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a26cdb2480260be73fa269f982a416010" kindref="member">LZX_MAINTREE_MAXSYMBOLS</ref><sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref><sp/>+<sp/>50<sp/>*<sp/>8;</highlight></codeline>
<codeline lineno="52" refid="namespaceopenage_1_1util_1_1compress_1aa0fc34af35349c165672483bf156d07c" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aa0fc34af35349c165672483bf156d07c" kindref="member">LZX_MAINTREE_TABLEBITS</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="53" refid="namespaceopenage_1_1util_1_1compress_1ab6ee57ad31f7a4b2e5cbe80e5ff0bf78" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ab6ee57ad31f7a4b2e5cbe80e5ff0bf78" kindref="member">LZX_LENGTH_MAXSYMBOLS</ref><sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acc00b52c00f768cbc18595d59a8be848" kindref="member">LZX_NUM_SECONDARY_LENGTHS</ref><sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="54" refid="namespaceopenage_1_1util_1_1compress_1a277c86b93d58635990ad4fe855839fcb" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a277c86b93d58635990ad4fe855839fcb" kindref="member">LZX_LENGTH_TABLEBITS</ref><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="55" refid="namespaceopenage_1_1util_1_1compress_1acfbbec691511fb87c1df869972edcc13" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acfbbec691511fb87c1df869972edcc13" kindref="member">LZX_ALIGNED_MAXSYMBOLS</ref><sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ade1bdb939220c6ecf6e11623d7370bfd" kindref="member">LZX_ALIGNED_NUM_ELEMENTS</ref>;</highlight></codeline>
<codeline lineno="56" refid="namespaceopenage_1_1util_1_1compress_1ac7382afbfe3e70045b5471207c6f0b1c" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ac7382afbfe3e70045b5471207c6f0b1c" kindref="member">LZX_ALIGNED_TABLEBITS</ref><sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="57" refid="namespaceopenage_1_1util_1_1compress_1aaeed04374c06ce503ff18341be17e29e" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aaeed04374c06ce503ff18341be17e29e" kindref="member">LZX_LENTABLE_SAFETY</ref><sp/>=<sp/>64;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>table<sp/>decoding<sp/>overruns<sp/>are<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>LZX<sp/>static<sp/>data<sp/>tables:</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>LZX<sp/>uses<sp/>&apos;position<sp/>slots&apos;<sp/>to<sp/>represent<sp/>match<sp/>offsets.<sp/>For<sp/>every<sp/>match,</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>a<sp/>small<sp/>&apos;position<sp/>slot&apos;<sp/>number<sp/>and<sp/>a<sp/>small<sp/>offset<sp/>from<sp/>that<sp/>slot<sp/>are</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>encoded<sp/>instead<sp/>of<sp/>one<sp/>large<sp/>offset.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>position_base[]<sp/>is<sp/>an<sp/>index<sp/>to<sp/>the<sp/>position<sp/>slot<sp/>bases</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>extra_bits[]<sp/>states<sp/>how<sp/>many<sp/>bits<sp/>of<sp/>offset-from-base<sp/>data<sp/>is<sp/>needed.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>They<sp/>are<sp/>generated<sp/>like<sp/>so:</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>for<sp/>(i<sp/>=<sp/>0;<sp/><sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>extra_bits[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>for<sp/>(i<sp/>=<sp/>4,<sp/><sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>36;<sp/>i+=2)<sp/>extra_bits[i]<sp/>=<sp/>extra_bits[i+1]<sp/>=<sp/>j++;</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>for<sp/>(i<sp/>=<sp/>36;<sp/>i<sp/>&lt;<sp/>51;<sp/>i++)<sp/>extra_bits[i]<sp/>=<sp/>17;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>for<sp/>(i<sp/>=<sp/>0,<sp/><sp/>j<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>51;<sp/>j<sp/>+=<sp/>1<sp/>&lt;&lt;<sp/>extra_bits[i++])<sp/>position_base[i]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="namespaceopenage_1_1util_1_1compress_1a24c3f0ac8013e7040eb0fd87243e1972" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a24c3f0ac8013e7040eb0fd87243e1972" kindref="member">position_base</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>2,<sp/>3,<sp/>4,<sp/>6,<sp/>8,<sp/>12,<sp/>16,<sp/>24,<sp/>32,<sp/>48,<sp/>64,<sp/>96,<sp/>128,<sp/>192,<sp/>256,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>384,<sp/>512,<sp/>768,<sp/>1024,<sp/>1536,<sp/>2048,<sp/>3072,<sp/>4096,<sp/>6144,<sp/>8192,<sp/>12288,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>16384,<sp/>24576,<sp/>32768,<sp/>49152,<sp/>65536,<sp/>98304,<sp/>131072,<sp/>196608,<sp/>262144,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>393216,<sp/>524288,<sp/>655360,<sp/>786432,<sp/>917504,<sp/>1048576,<sp/>1179648,<sp/>1310720,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>1441792,<sp/>1572864,<sp/>1703936,<sp/>1835008,<sp/>1966080,<sp/>2097152</highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="namespaceopenage_1_1util_1_1compress_1a4124e3ae9c8211d05e8457cb16182896" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4124e3ae9c8211d05e8457cb16182896" kindref="member">extra_bits</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>1,<sp/>1,<sp/>2,<sp/>2,<sp/>3,<sp/>3,<sp/>4,<sp/>4,<sp/>5,<sp/>5,<sp/>6,<sp/>6,<sp/>7,<sp/>7,<sp/>8,<sp/>8,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>9,<sp/>9,<sp/>10,<sp/>10,<sp/>11,<sp/>11,<sp/>12,<sp/>12,<sp/>13,<sp/>13,<sp/>14,<sp/>14,<sp/>15,<sp/>15,<sp/>16,<sp/>16,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17,<sp/>17</highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsymbols_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tablebits_p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_empty=false&gt;</highlight></codeline>
<codeline lineno="94" refid="classopenage_1_1util_1_1compress_1_1_huffman_table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table" kindref="compound">HuffmanTable</ref><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a997dcfba10999b15243bc36218e0782a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>*<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a997dcfba10999b15243bc36218e0782a" kindref="member">lzx</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="99" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1abdc66dd010cb036245a0992a599ddff5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1abdc66dd010cb036245a0992a599ddff5" kindref="member">HUFF_MAXBITS</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="100" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1aaaea7324005ce900ce270da741c53640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1aaaea7324005ce900ce270da741c53640" kindref="member">maxsymbols</ref><sp/>=<sp/>maxsymbols_p;</highlight></codeline>
<codeline lineno="101" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a72edd87d81a878e15a73138240999bda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a72edd87d81a878e15a73138240999bda" kindref="member">tablebits</ref><sp/>=<sp/>tablebits_p;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a3bbe52e654dd6ad728e626cb84b1400e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a3bbe52e654dd6ad728e626cb84b1400e" kindref="member">len</ref>[maxsymbols_p<sp/>+<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aaeed04374c06ce503ff18341be17e29e" kindref="member">LZX_LENTABLE_SAFETY</ref>];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a2b93c25503f0c98e4420d82e7b104213" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a2b93c25503f0c98e4420d82e7b104213" kindref="member">table</ref>[(1<sp/>&lt;&lt;<sp/>tablebits_p)<sp/>+<sp/>(maxsymbols_p<sp/>*<sp/>2)];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" kindref="member">is_empty</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a041e0bae2c9b121a0c77682b940c42d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a041e0bae2c9b121a0c77682b940c42d3" kindref="member">HuffmanTable</ref>(</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>*<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a997dcfba10999b15243bc36218e0782a" kindref="member">lzx</ref>)<sp/>:<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a997dcfba10999b15243bc36218e0782a" kindref="member">lzx</ref>{<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a997dcfba10999b15243bc36218e0782a" kindref="member">lzx</ref>},<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" kindref="member">is_empty</ref>{</highlight><highlight class="keyword">true</highlight><highlight class="normal">}<sp/>{}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" kindref="member">make_decode_table</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" kindref="member">read_lengths</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1af44253d3e7adef12c7a4c4371b97a2fd" kindref="member">try_make_decode_table</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2a91fa7bf7fefb48ee08d52bd6ada15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>ssize_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2a91fa7bf7fefb48ee08d52bd6ada15" kindref="member">output_pos</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>output<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>*<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decoding<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decompression<sp/>offset<sp/>within<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" kindref="member">frame_posn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>frame<sp/>offset<sp/>within<sp/>in<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2b59324a0e966ee52206fc4140694a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2b59324a0e966ee52206fc4140694a2" kindref="member">frame</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>number<sp/>of<sp/>32kb<sp/>frames<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a87e92b9f13204a689ff6dc9d0983c718" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a87e92b9f13204a689ff6dc9d0983c718" kindref="member">reset_interval</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>frame<sp/>do<sp/>we<sp/>reset<sp/>the<sp/>compressor?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>,<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>,<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>LRU<sp/>offset<sp/>system</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae2350cf0b912903acccc36ecef023fe0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae2350cf0b912903acccc36ecef023fe0" kindref="member">block_length</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncompressed<sp/>length<sp/>of<sp/>this<sp/>LZX<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uncompressed<sp/>bytes<sp/>still<sp/>left<sp/>to<sp/>decode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>magic<sp/>value<sp/>that&apos;s<sp/>used<sp/>by<sp/>the<sp/>intel<sp/>E8<sp/>transform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>field<sp/>is<sp/>read<sp/>from<sp/>the<sp/>first<sp/>33<sp/>bits<sp/>of<sp/>the<sp/>stream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>reset,<sp/>and<sp/>called<sp/>intel_filesize<sp/>in<sp/>libmspack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ada584159bfea91c473a5a41e650a765d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ada584159bfea91c473a5a41e650a765d" kindref="member">header_read</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indicates<sp/>whether<sp/>the<sp/>e8_magic<sp/>header<sp/>has<sp/>been<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>of<sp/>the<sp/>current<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4e0e1171fcfe50f7d06e58c2a2923cd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4e0e1171fcfe50f7d06e58c2a2923cd3" kindref="member">posn_slots</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>how<sp/>many<sp/>posn<sp/>slots<sp/>in<sp/>stream?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IO<sp/>buffering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream" kindref="compound">BitStream&lt;4096&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>huffman<sp/>code<sp/>lenghts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a1c0734cf2170ca3e28f39602dc7f8219" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table" kindref="compound">HuffmanTable&lt;LZX_PRETREE_MAXSYMBOLS, LZX_PRETREE_TABLEBITS&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a1c0734cf2170ca3e28f39602dc7f8219" kindref="member">htpre</ref>;</highlight></codeline>
<codeline lineno="183" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table" kindref="compound">HuffmanTable&lt;LZX_MAINTREE_MAXSYMBOLS, LZX_MAINTREE_TABLEBITS&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>;</highlight></codeline>
<codeline lineno="184" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table" kindref="compound">HuffmanTable&lt;LZX_LENGTH_MAXSYMBOLS, LZX_LENGTH_TABLEBITS, true&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>;</highlight></codeline>
<codeline lineno="185" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table" kindref="compound">HuffmanTable&lt;LZX_ALIGNED_MAXSYMBOLS, LZX_ALIGNED_TABLEBITS&gt;</ref><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" kindref="member">htaligned</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a491af9a4f0c2abc632c70db8705f1782" kindref="member">LZXDStream</ref>(<ref refid="namespaceopenage_1_1util_1_1compress_1a129fc036a27a40e60785ce5bb1aa5627" kindref="member">read_callback_t</ref><sp/>callback,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_bits,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a87e92b9f13204a689ff6dc9d0983c718" kindref="member">reset_interval</ref>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ac5a5bf3c111860662413597ba63d5769" kindref="member">~LZXDStream</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a491af9a4f0c2abc632c70db8705f1782" kindref="member">LZXDStream</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a491af9a4f0c2abc632c70db8705f1782" kindref="member">LZXDStream</ref>(<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a738c1121848546e96e9272bbad5180db" kindref="member">operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a738c1121848546e96e9272bbad5180db" kindref="member">operator =</ref>(<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref><sp/>&amp;&amp;other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a12047565515e79d8fa7ae56c1459a724" kindref="member">decompress_next_frame</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_buf);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af98ef8408ba92de4f9e28010c3b2d6c8" kindref="member">init_next_block</ref>();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a2830bc244fc83678fc56f6e44c057e7c" kindref="member">decode_symbol_from_verbatim_block</ref>();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0ced870a816503c5ae2c42756dc0adb2" kindref="member">decode_symbol_from_aligned_block</ref>();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af408bfffcc2e2e086066e13e1f6b96b7" kindref="member">read_data_from_uncompressed_block</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae957302fdbdcb4e99f5264bfc8da3e42" kindref="member">postprocess_intel_e8</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_size);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a21cc21ce03f6a6aa488e48661666bdd7" kindref="member">reset_state</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal">};</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsymbols_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tablebits_p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_empty&gt;</highlight></codeline>
<codeline lineno="240" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">HuffmanTable&lt;maxsymbols_p, tablebits_p, allow_empty&gt;::read_sym</ref>()<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>lzx-&gt;bits.ensure_bits(HUFF_MAXBITS);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sym<sp/>=<sp/>table[lzx-&gt;bits.peek_bits(tablebits)];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(lzx-&gt;bits.bit_buffer)<sp/>*<sp/>8<sp/>-<sp/>tablebits);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(sym<sp/>&gt;=<sp/>maxsymbols)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>huff_traverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>((i<sp/>&gt;&gt;=<sp/>1)<sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;huff_error<sp/>in<sp/>huff_traverse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym<sp/>=<sp/>table[(sym<sp/>&lt;&lt;<sp/>1)<sp/>|<sp/>((lzx-&gt;bits.bit_buffer<sp/>&amp;<sp/>i)<sp/>?<sp/>1<sp/>:<sp/>0)];</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>lzx-&gt;bits.remove_bits(len[sym]);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sym;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsymbols_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tablebits_p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_empty&gt;</highlight></codeline>
<codeline lineno="259" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" kindref="member">HuffmanTable&lt;maxsymbols_p, tablebits_p, allow_empty&gt;::make_decode_table</ref>()<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;try_make_decode_table())<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;is_empty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allow_empty)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allow<sp/>an<sp/>empty<sp/>tree,<sp/>but<sp/>don&apos;t<sp/>decode<sp/>symbols<sp/>with<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>any<sp/>of<sp/>the<sp/>symbols<sp/>has<sp/>a<sp/>greater-than-zero<sp/>length,<sp/>fail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>maxsymbols;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;len[i]<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>build<sp/>HuffmanTable&lt;allow_empty=true&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;is_empty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>to<sp/>build<sp/>HuffmanTable&lt;allow_empty=false&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsymbols_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tablebits_p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_empty&gt;</highlight></codeline>
<codeline lineno="281" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1af44253d3e7adef12c7a4c4371b97a2fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1af44253d3e7adef12c7a4c4371b97a2fd" kindref="member">HuffmanTable&lt;maxsymbols_p, tablebits_p, allow_empty&gt;::try_make_decode_table</ref>()<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>sym,<sp/>next_symbol;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leaf,<sp/><ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bit_num;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>position<sp/>in<sp/>the<sp/>decode<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table_mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>tablebits;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_mask<sp/>=<sp/>table_mask<sp/>&gt;&gt;<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>do<sp/>0<sp/>length<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>entries<sp/>for<sp/>codes<sp/>short<sp/>enough<sp/>for<sp/>a<sp/>direct<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit_num<sp/>=<sp/>1;<sp/>bit_num<sp/>&lt;=<sp/>tablebits;<sp/>bit_num++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sym<sp/>=<sp/>0;<sp/>sym<sp/>&lt;<sp/>maxsymbols;<sp/>sym++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len[sym]<sp/>!=<sp/>bit_num)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>+=<sp/>bit_mask)<sp/>&gt;<sp/>table_mask)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>table<sp/>overrun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fill<sp/>all<sp/>possible<sp/>lookups<sp/>of<sp/>this<sp/>symbol<sp/>with<sp/>the<sp/>symbol<sp/>itself</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref><sp/>=<sp/>bit_mask;<sp/><ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref>--<sp/>&gt;<sp/>0;)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[leaf++]<sp/>=<sp/>sym;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exit<sp/>with<sp/>success<sp/>if<sp/>table<sp/>is<sp/>now<sp/>complete</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>table_mask)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mark<sp/>all<sp/>remaining<sp/>table<sp/>entries<sp/>as<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sym<sp/>=<sp/>pos;<sp/>sym<sp/>&lt;<sp/>table_mask;<sp/>sym++)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[sym]<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>next_symbol<sp/>=<sp/>base<sp/>of<sp/>allocation<sp/>for<sp/>long<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>next_symbol<sp/>=<sp/>((table_mask<sp/>&gt;&gt;<sp/>1)<sp/>&lt;<sp/>maxsymbols)<sp/>?<sp/>maxsymbols<sp/>:<sp/>(table_mask<sp/>&gt;&gt;<sp/>1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>give<sp/>ourselves<sp/>room<sp/>for<sp/>codes<sp/>to<sp/>grow<sp/>by<sp/>up<sp/>to<sp/>16<sp/>more<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codes<sp/>now<sp/>start<sp/>at<sp/>bit<sp/>(tablebits<sp/>+<sp/>16)<sp/>and<sp/>end<sp/>at<sp/>(tablebits<sp/>+<sp/>16<sp/>-<sp/>codelength)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>&lt;&lt;=<sp/>16;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>table_mask<sp/>&lt;&lt;=<sp/>16;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>bit_mask<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(bit_num<sp/>=<sp/>tablebits<sp/>+<sp/>1;<sp/>bit_num<sp/>&lt;=<sp/>HUFF_MAXBITS;<sp/>bit_num++)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(sym<sp/>=<sp/>0;<sp/>sym<sp/>&lt;<sp/>maxsymbols;<sp/>sym++)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len[sym]<sp/>!=<sp/>bit_num)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf<sp/>=<sp/>pos<sp/>&gt;&gt;<sp/>16;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref><sp/>=<sp/>0;<sp/><ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref><sp/>&lt;<sp/>(bit_num<sp/>-<sp/>tablebits);<sp/><ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>this<sp/>path<sp/>hasn&apos;t<sp/>been<sp/>taken<sp/>yet,<sp/>&apos;allocate&apos;<sp/>two<sp/>entries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table[leaf]<sp/>==<sp/>0xFFFF)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[(next_symbol<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>0]<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[(next_symbol<sp/>&lt;&lt;<sp/>1)<sp/>+<sp/>1]<sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[leaf]<sp/>=<sp/>next_symbol++;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>follow<sp/>the<sp/>path<sp/>and<sp/>select<sp/>either<sp/>left<sp/>or<sp/>right<sp/>for<sp/>next<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>leaf<sp/>=<sp/>table[leaf]<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>&gt;&gt;<sp/>(15-<ref refid="namespaceopenage_1_1rng_1_1tests_1a7c865b312f955cab3ff9ea078fd0cc95" kindref="member">fill</ref>))<sp/>&amp;<sp/>1)<sp/>leaf++;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table[leaf]<sp/>=<sp/>sym;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((pos<sp/>+=<sp/>bit_mask)<sp/>&gt;<sp/>table_mask)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>table<sp/>overflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bit_mask<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>full<sp/>table?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos<sp/>==<sp/>table_mask;</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsymbols_p,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tablebits_p,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allow_empty&gt;</highlight></codeline>
<codeline lineno="363" refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" kindref="member">HuffmanTable&lt;maxsymbols_p, tablebits_p, allow_empty&gt;::read_lengths</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bit<sp/>buffer<sp/>and<sp/>huffman<sp/>symbol<sp/>decode<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lengths<sp/>for<sp/>pretree<sp/>(20<sp/>symbols,<sp/>lengths<sp/>stored<sp/>in<sp/>fixed<sp/>4<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/>20;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lzx-&gt;htpre.len[x]<sp/>=<sp/>lzx-&gt;bits.read_bits(4);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>lzx-&gt;htpre.make_decode_table();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x<sp/>=<sp/>first;<sp/>x<sp/>&lt;<sp/>last;<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>lzx-&gt;htpre.read_sym();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/>17)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>=<sp/>17,<sp/>run<sp/>of<sp/>([read<sp/>4<sp/>bits]+4)<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>lzx-&gt;bits.read_bits(4);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(y--)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[x++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/>18)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>=<sp/>18,<sp/>run<sp/>of<sp/>([read<sp/>5<sp/>bits]+20)<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>lzx-&gt;bits.read_bits(5);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>20;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(y--)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[x++]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>==<sp/>19)<sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>=<sp/>19,<sp/>run<sp/>of<sp/>([read<sp/>1<sp/>bit]+4)<sp/>[read<sp/>huffman<sp/>symbol]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>lzx-&gt;bits.read_bits(1);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>lzx-&gt;htpre.read_sym();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>len[x]<sp/>-<sp/>z;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>+=<sp/>17;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(y--)<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[x++]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code<sp/>=<sp/>0<sp/>to<sp/>16,<sp/>delta<sp/>current<sp/>length<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>len[x]<sp/>-<sp/>z;<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>0)<sp/>z<sp/>+=<sp/>17;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len[x++]<sp/>=<sp/>z;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a491af9a4f0c2abc632c70db8705f1782" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a491af9a4f0c2abc632c70db8705f1782" kindref="member">LZXDStream::LZXDStream</ref>(<ref refid="namespaceopenage_1_1util_1_1compress_1a129fc036a27a40e60785ce5bb1aa5627" kindref="member">read_callback_t</ref><sp/>read_callback,</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_bits,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reset_interval)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_pos{0},</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_size{(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>1<sp/>&lt;&lt;<sp/>window_bits},</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_posn{0},</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_posn{0},</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame{0},</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_interval{reset_interval},</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits{read_callback},</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htpre{</highlight><highlight class="keyword">this</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htmain{</highlight><highlight class="keyword">this</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htlength{</highlight><highlight class="keyword">this</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>htaligned{</highlight><highlight class="keyword">this</highlight><highlight class="normal">}<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LZX<sp/>supports<sp/>window<sp/>sizes<sp/>of<sp/>2^15<sp/>(32<sp/>KiB)<sp/>through<sp/>2^21<sp/>(2<sp/>MiB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_bits<sp/>&lt;<sp/>15<sp/>||<sp/>window_bits<sp/>&gt;<sp/>21)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>Error(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>requested<sp/>window<sp/>size:<sp/>2^&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>window_bits<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>decompression<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;window<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[window_size];</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>window<sp/>bits:<sp/><sp/><sp/><sp/>15<sp/><sp/>16<sp/><sp/>17<sp/><sp/>18<sp/><sp/>19<sp/><sp/>20<sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>position<sp/>slots:<sp/>30<sp/><sp/>32<sp/><sp/>34<sp/><sp/>36<sp/><sp/>38<sp/><sp/>42<sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;posn_slots<sp/>=<sp/>2<sp/>*<sp/>window_bits;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_bits<sp/>==<sp/>21)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;posn_slots<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window_bits<sp/>==<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;posn_slots<sp/>=<sp/>42;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;reset_state();</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ac5a5bf3c111860662413597ba63d5769" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ac5a5bf3c111860662413597ba63d5769" kindref="member">LZXDStream::~LZXDStream</ref>()<sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="455"><highlight class="normal">}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a21cc21ce03f6a6aa488e48661666bdd7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a21cc21ce03f6a6aa488e48661666bdd7" kindref="member">LZXDStream::reset_state</ref>()<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ada584159bfea91c473a5a41e650a765d" kindref="member">header_read</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref><sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aebf8cb02777e89fdf7430467b0386ce4" kindref="member">LZX_BLOCKTYPE_INVALID</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>tables<sp/>to<sp/>0<sp/>(because<sp/>deltas<sp/>will<sp/>be<sp/>applied<sp/>to<sp/>them)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a26cdb2480260be73fa269f982a416010" kindref="member">LZX_MAINTREE_MAXSYMBOLS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a3bbe52e654dd6ad728e626cb84b1400e" kindref="member">len</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ab6ee57ad31f7a4b2e5cbe80e5ff0bf78" kindref="member">LZX_LENGTH_MAXSYMBOLS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a3bbe52e654dd6ad728e626cb84b1400e" kindref="member">len</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af98ef8408ba92de4f9e28010c3b2d6c8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af98ef8408ba92de4f9e28010c3b2d6c8" kindref="member">LZXDStream::init_next_block</ref>()<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>might<sp/>still<sp/>be<sp/>in<sp/>bytstream<sp/>mode<sp/>from<sp/>the<sp/>previous<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1a0a33a092ac1b0b664ecf4ced11e1a313" kindref="member">switch_to_bitstream_mode</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>block<sp/>type<sp/>(3<sp/>bits)<sp/>and<sp/>block<sp/>length<sp/>(24<sp/>bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(3);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae2350cf0b912903acccc36ecef023fe0" kindref="member">block_length</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(16)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae2350cf0b912903acccc36ecef023fe0" kindref="member">block_length</ref><sp/>|=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(8);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae2350cf0b912903acccc36ecef023fe0" kindref="member">block_length</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>individual<sp/>block<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ae2792f791635463a2e096c00caa867f9" kindref="member">LZX_BLOCKTYPE_ALIGNED</ref>:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lengths<sp/>of<sp/>and<sp/>build<sp/>aligned<sp/>huffman<sp/>decoding<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" kindref="member">htaligned</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a3bbe52e654dd6ad728e626cb84b1400e" kindref="member">len</ref>[i]<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(3);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" kindref="member">htaligned</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" kindref="member">make_decode_table</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Falls<sp/>through.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rest<sp/>of<sp/>aligned<sp/>header<sp/>is<sp/>same<sp/>as<sp/>verbatim</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4bd87f3542f41c380c17ab677e862def" kindref="member">LZX_BLOCKTYPE_VERBATIM</ref>:</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lengths<sp/>of<sp/>and<sp/>build<sp/>main<sp/>huffman<sp/>decoding<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" kindref="member">read_lengths</ref>(0,<sp/>256);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" kindref="member">read_lengths</ref>(256,<sp/>LZX_NUM_CHARS<sp/>+<sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4e0e1171fcfe50f7d06e58c2a2923cd3" kindref="member">posn_slots</ref><sp/>&lt;&lt;<sp/>3));</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" kindref="member">make_decode_table</ref>();</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>lengths<sp/>of<sp/>and<sp/>build<sp/>lengths<sp/>huffman<sp/>decoding<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a281ecfaf32eb7102310771c48034e107" kindref="member">read_lengths</ref>(0,<sp/>LZX_NUM_SECONDARY_LENGTHS);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" kindref="member">is_empty</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a1e2e81d74fd03fd894c4acf72227cc2d" kindref="member">make_decode_table</ref>();</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a185998c032b4c2440610ff414caed40f" kindref="member">LZX_BLOCKTYPE_UNCOMPRESSED</ref>:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af9c25fda38455fbfc348a777e109d03e" kindref="member">switch_to_bytestream_mode</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>12<sp/>bytes<sp/>of<sp/>stored<sp/>R0<sp/>/<sp/>R1<sp/>/<sp/>R2<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1a80c91d5b7ddc061dd9082827286f0e1e" kindref="member">read_4bytes_le</ref>();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1a80c91d5b7ddc061dd9082827286f0e1e" kindref="member">read_4bytes_le</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1a80c91d5b7ddc061dd9082827286f0e1e" kindref="member">read_4bytes_le</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>bad<sp/>block<sp/>type<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a2830bc244fc83678fc56f6e44c057e7c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a2830bc244fc83678fc56f6e44c057e7c" kindref="member">LZXDStream::decode_symbol_from_verbatim_block</ref>()<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_element<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main_element<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>literal:<sp/>0<sp/>to<sp/>LZX_NUM_CHARS-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>++]<sp/>=<sp/>main_element;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match:<sp/>LZX_NUM_CHARS<sp/>+<sp/>((slot&lt;&lt;3)<sp/>|<sp/>length_header<sp/>(3<sp/>bits))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>main_element<sp/>-=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>match<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>match_length<sp/>=<sp/>main_element<sp/>&amp;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" kindref="member">LZX_NUM_PRIMARY_LENGTHS</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_length<sp/>==<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" kindref="member">LZX_NUM_PRIMARY_LENGTHS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" kindref="member">is_empty</ref>))<sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>LENGTH<sp/>symbol<sp/>needed<sp/>byt<sp/>tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_footer<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_length<sp/>+=<sp/>length_footer;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>match_length<sp/>+=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aa0e09ec612ba2d2ea51ec2a4c8ff3d49" kindref="member">LZX_MIN_MATCH</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>match<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>match_offset<sp/>=<sp/>(main_element<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(match_offset)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref>;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4124e3ae9c8211d05e8457cb16182896" kindref="member">extra_bits</ref>[match_offset];</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbatim_bits<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(extra);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a24c3f0ac8013e7040eb0fd87243e1972" kindref="member">position_base</ref>[match_offset]<sp/>-<sp/>2<sp/>+<sp/>verbatim_bits;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>((this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>+<sp/>match_length)<sp/>&gt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>))<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>match<sp/>ran<sp/>over<sp/>window<sp/>wrap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rundest<sp/>=<sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>];</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>match_length;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>match<sp/>offset<sp/>wrap<sp/>the<sp/>window?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_offset<sp/>&gt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>j<sp/>=<sp/>length<sp/>from<sp/>match<sp/>offset<sp/>to<sp/>end<sp/>of<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>match_offset<sp/>-<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(j<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>))<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>match<sp/>offset<sp/>beyond<sp/>window<sp/>boundaries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runsrc<sp/>=<sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;window_size<sp/>-<sp/>j];</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>match<sp/>goes<sp/>over<sp/>the<sp/>window<sp/>edge,<sp/>do<sp/>two<sp/>copy<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-=<sp/>j;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runsrc<sp/>=<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runsrc<sp/>=<sp/>rundest<sp/>-<sp/>match_offset;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>+=<sp/>match_length;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_length;</highlight></codeline>
<codeline lineno="614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0ced870a816503c5ae2c42756dc0adb2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0ced870a816503c5ae2c42756dc0adb2" kindref="member">LZXDStream::decode_symbol_from_aligned_block</ref>()<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main_element<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a65b33752965b0f4b2ed1898603417ef1" kindref="member">htmain</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main_element<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>literal:<sp/>0<sp/>to<sp/>LZX_NUM_CHARS<sp/>-<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>++]<sp/>=<sp/>main_element;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>match:<sp/>LZX_NUM_CHARS<sp/>+<sp/>((slot&lt;&lt;3)<sp/>|<sp/>length_header<sp/>(3<sp/>bits))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>main_element<sp/>-=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1acab149685574ec8b787e3d805e036885" kindref="member">LZX_NUM_CHARS</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>match<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>match_length<sp/>=<sp/>main_element<sp/>&amp;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" kindref="member">LZX_NUM_PRIMARY_LENGTHS</ref>;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_length<sp/>==<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1abd6796af7934ef7bd5f8e84f3fb8af56" kindref="member">LZX_NUM_PRIMARY_LENGTHS</ref>)<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1a7df946fa968a570c9bde8aaa9437d1f2" kindref="member">is_empty</ref>))<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>length<sp/>symbol<sp/>needed<sp/>byt<sp/>tree<sp/>is<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length_footer<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1acd1ef6d1ea48f324c3a7fc293c4dcb68" kindref="member">htlength</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_length<sp/>+=<sp/>length_footer;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>match_length<sp/>+=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1aa0e09ec612ba2d2ea51ec2a4c8ff3d49" kindref="member">LZX_MIN_MATCH</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>match<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>match_offset<sp/>=<sp/>(main_element<sp/>&gt;&gt;<sp/>3);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(match_offset)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extra<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4124e3ae9c8211d05e8457cb16182896" kindref="member">extra_bits</ref>[match_offset];</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a24c3f0ac8013e7040eb0fd87243e1972" kindref="member">position_base</ref>[match_offset]<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extra<sp/>&gt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verbatim<sp/>and<sp/>aligned<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extra<sp/>-=<sp/>3;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbatim_bits<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(extra);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>+=<sp/>(verbatim_bits<sp/>&lt;&lt;<sp/>3);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aligned_bits<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" kindref="member">htaligned</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>+=<sp/>aligned_bits;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extra<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>aligned<sp/>bits<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aligned_bits<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8671f082432c89e05797093348f16af0" kindref="member">htaligned</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_huffman_table_1ae6b32648570816ac41436130bd87f3be" kindref="member">read_sym</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>+=<sp/>aligned_bits;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(extra<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra==1,<sp/>extra==2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verbatim<sp/>bits<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbatim_bits<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(extra);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>+=<sp/>verbatim_bits;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>==<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>???<sp/>not<sp/>defined<sp/>in<sp/>LZX<sp/>specification!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_offset<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>repeated<sp/>offset<sp/>LRU<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a53c1a5f708f3f6d444b4f496e8eb840a" kindref="member">R2</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0664accf0c6f29475dd801d580ce8ab8" kindref="member">R1</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ab5742fb4e2d4057d1a7d2d7bc233289e" kindref="member">R0</ref><sp/>=<sp/>match_offset;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>((this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>+<sp/>match_length)<sp/>&gt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>))<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>match<sp/>ran<sp/>over<sp/>window<sp/>wrap&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*rundest<sp/>=<sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>];</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>match_length;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>match<sp/>offset<sp/>wrap<sp/>the<sp/>window?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(match_offset<sp/>&gt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>j<sp/>=<sp/>length<sp/>from<sp/>match<sp/>offset<sp/>to<sp/>end<sp/>of<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>match_offset<sp/>-<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(j<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>))<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>match<sp/>offset<sp/>beyond<sp/>window<sp/>boundaries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runsrc<sp/>=<sp/>&amp;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;window_size<sp/>-<sp/>j];</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>match<sp/>goes<sp/>over<sp/>the<sp/>window<sp/>edge,<sp/>do<sp/>two<sp/>copy<sp/>runs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>-=<sp/>j;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runsrc<sp/>=<sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*runsrc<sp/>=<sp/>rundest<sp/>-<sp/>match_offset;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rundest++<sp/>=<sp/>*runsrc++;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>+=<sp/>match_length;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match_length;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af408bfffcc2e2e086066e13e1f6b96b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af408bfffcc2e2e086066e13e1f6b96b7" kindref="member">LZXDStream::read_data_from_uncompressed_block</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>remaining<sp/>=<sp/>size;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(remaining)<sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1ac38c2ac02d9fa968f2c3e74a404e4014" kindref="member">read_bytes</ref>(&amp;this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>],<sp/>remaining);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;window_posn<sp/>+=<sp/>amount;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>-=<sp/>amount;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a12047565515e79d8fa7ae56c1459a724" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a12047565515e79d8fa7ae56c1459a724" kindref="member">LZXDStream::decompress_next_frame</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_buf)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af838909174b3ceb524b2a84d601eae40" kindref="member">eof</ref>))<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>we<sp/>reached<sp/>the<sp/>reset<sp/>interval?<sp/>(if<sp/>there<sp/>is<sp/>one?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a87e92b9f13204a689ff6dc9d0983c718" kindref="member">reset_interval</ref><sp/>&amp;&amp;<sp/>((this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2b59324a0e966ee52206fc4140694a2" kindref="member">frame</ref><sp/>%<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a87e92b9f13204a689ff6dc9d0983c718" kindref="member">reset_interval</ref>)<sp/>==<sp/>0)))<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref>))<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes<sp/>remaining<sp/>at<sp/>reset<sp/>interval&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>re-read<sp/>the<sp/>intel<sp/>header<sp/>and<sp/>reset<sp/>the<sp/>huffman<sp/>lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a21cc21ce03f6a6aa488e48661666bdd7" kindref="member">reset_state</ref>();</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>header<sp/>if<sp/>necessary<sp/>(after<sp/>initializing<sp/>or<sp/>resetting<sp/>the<sp/>stream).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(!this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ada584159bfea91c473a5a41e650a765d" kindref="member">header_read</ref>))<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>bit<sp/>of<sp/>the<sp/>header<sp/>indicates<sp/>whether<sp/>the<sp/>e8_magic<sp/>field<sp/>is<sp/>present.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(1))<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>e8_magic<sp/>(32<sp/>bits).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref><sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(16)<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref><sp/>|=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af4522bbae0ee989e1f5b45606fb2e673" kindref="member">read_bits</ref>(16);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>e8_magic<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ada584159bfea91c473a5a41e650a765d" kindref="member">header_read</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>counter<sp/>that<sp/>stores<sp/>the<sp/>amount<sp/>of<sp/>data<sp/>that<sp/>has<sp/>been<sp/>accumulated<sp/>for<sp/>this<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" kindref="member">frame_posn</ref><sp/>-<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>))<sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>untested<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>theory,<sp/>a<sp/>symbol<sp/>may<sp/>have<sp/>overshot<sp/>the<sp/>last<sp/>frame&apos;s<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>did,<sp/>the<sp/>amount<sp/>of<sp/>data<sp/>would<sp/>be<sp/>available<sp/>in<sp/>frame_size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;untested<sp/>code<sp/>path:<sp/>extra<sp/>frame<sp/>data<sp/>available<sp/>from<sp/>last<sp/>frame.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;frame<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" kindref="member">frame_posn</ref><sp/>-<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref>);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>decode<sp/>symbols<sp/>until<sp/>we<sp/>have<sp/>enough<sp/>data<sp/>for<sp/>the<sp/>frame.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(frame_size<sp/>&lt;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a72fc5c91c3e79ff1d0e2348b50b8f013" kindref="member">LZX_FRAME_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialise<sp/>next<sp/>block,<sp/>if<sp/>one<sp/>is<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref><sp/>==<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1af838909174b3ceb524b2a84d601eae40" kindref="member">eof</ref>)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EOF<sp/>of<sp/>input<sp/>stream<sp/>was<sp/>reached<sp/>at<sp/>a<sp/>block<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>are<sp/>no<sp/>more<sp/>blocks.<sp/>Return<sp/>the<sp/>frame<sp/>as-is.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af98ef8408ba92de4f9e28010c3b2d6c8" kindref="member">init_next_block</ref>();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>symbol_size;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1aaaf627d2099d2d79354c730f59d77ddc" kindref="member">block_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a4bd87f3542f41c380c17ab677e862def" kindref="member">LZX_BLOCKTYPE_VERBATIM</ref>:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_size<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a2830bc244fc83678fc56f6e44c057e7c" kindref="member">decode_symbol_from_verbatim_block</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1ae2792f791635463a2e096c00caa867f9" kindref="member">LZX_BLOCKTYPE_ALIGNED</ref>:</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_size<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a0ced870a816503c5ae2c42756dc0adb2" kindref="member">decode_symbol_from_aligned_block</ref>();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a185998c032b4c2440610ff414caed40f" kindref="member">LZX_BLOCKTYPE_UNCOMPRESSED</ref>:</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol_size<sp/>=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1af408bfffcc2e2e086066e13e1f6b96b7" kindref="member">read_data_from_uncompressed_block</ref>(<ref refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" kindref="member">std::min</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref>,<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a72fc5c91c3e79ff1d0e2348b50b8f013" kindref="member">LZX_FRAME_SIZE</ref><sp/>-<sp/>frame_size));</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;this-&gt;blocktype<sp/>neither<sp/>verbatim<sp/>nor<sp/>aligned&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(symbol_size<sp/>&gt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref>))<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>overshot<sp/>the<sp/>block<sp/>boundary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>overrun<sp/>went<sp/>past<sp/>end<sp/>of<sp/>block<sp/>by<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>symbol_size<sp/>-<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a3ca62b7fff8b704f8429542206d4ddc3" kindref="member">block_remaining</ref><sp/>-=<sp/>symbol_size;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>+=<sp/>symbol_size;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(frame_size<sp/>&gt;<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a72fc5c91c3e79ff1d0e2348b50b8f013" kindref="member">LZX_FRAME_SIZE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warning:<sp/>untested<sp/>code.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>theory,<sp/>a<sp/>symbol<sp/>may<sp/>overshoot<sp/>a<sp/>frame<sp/>boundary.<sp/>If<sp/>it<sp/>does,<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>get<sp/>re-used<sp/>in<sp/>the<sp/>next<sp/>frame,<sp/>but<sp/>we<sp/>have<sp/>to<sp/>limit<sp/>frame_size<sp/>to<sp/>LZX_FRAME_SIZE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;untested<sp/>code<sp/>path:<sp/>frame_size<sp/>&gt;<sp/>LZX_FRAME_SIZE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame_size<sp/>=<sp/><ref refid="namespaceopenage_1_1util_1_1compress_1a72fc5c91c3e79ff1d0e2348b50b8f013" kindref="member">LZX_FRAME_SIZE</ref>;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>streams<sp/>don&apos;t<sp/>extend<sp/>over<sp/>frame<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>!=<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" kindref="member">frame_posn</ref><sp/>+<sp/>frame_size))<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_error" kindref="compound">Error</ref>(<ref refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" kindref="member">MSG</ref>(err)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;decrunch:<sp/>decode<sp/>beyond<sp/>output<sp/>frame<sp/>limits&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>frame<sp/>data<sp/>to<sp/>the<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(output_buf,<sp/>&amp;this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a75bf79fb077819e2f985cdeb99b4d558" kindref="member">window</ref>[this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a4fa5827f8aa17dca5216ddfa0274c4da" kindref="member">frame_posn</ref>],<sp/>frame_size);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>intel<sp/>e8-postprocess<sp/>the<sp/>frame<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae957302fdbdcb4e99f5264bfc8da3e42" kindref="member">postprocess_intel_e8</ref>(output_buf,<sp/>frame_size);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>frame<sp/>boundary;<sp/>re-align<sp/>the<sp/>bitstream,<sp/>if<sp/>it&apos;s<sp/>currently<sp/>in<sp/>bitstream<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1afbee9a6150c8c52cf8404bf343da4692" kindref="member">bits</ref>.<ref refid="classopenage_1_1util_1_1compress_1_1_bit_stream_1a7a9740c842e2425f54ddfc168c0df8bb" kindref="member">align_if_in_bitstream_mode</ref>();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>advance<sp/>frame<sp/>start<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;frame_posn<sp/>+=<sp/>frame_size;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wrap<sp/>window<sp/>/<sp/>frame<sp/>position<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>==<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a8ce8c008c7c4df2ab737f40a871cd261" kindref="member">window_posn</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;frame_posn<sp/>==<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a7451bf0e50d43622780af37485037ecc" kindref="member">window_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;frame_posn<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2a91fa7bf7fefb48ee08d52bd6ada15" kindref="member">output_pos</ref><sp/>+=<sp/>frame_size;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2b59324a0e966ee52206fc4140694a2" kindref="member">frame</ref>++;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame_size;</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae957302fdbdcb4e99f5264bfc8da3e42" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ae957302fdbdcb4e99f5264bfc8da3e42" kindref="member">LZXDStream::postprocess_intel_e8</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_size)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>lzx<sp/>stream<sp/>is<sp/>e8-processing-free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2b59324a0e966ee52206fc4140694a2" kindref="member">frame</ref><sp/>&gt;=<sp/>32768)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>frames<sp/>&gt;=<sp/>32768<sp/>(&gt;=<sp/>1GiB<sp/>of<sp/>plain<sp/>data)<sp/>there&apos;s<sp/>no<sp/>e8<sp/>processing<sp/>(WTF<sp/>WHY?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search<sp/>the<sp/>block<sp/>for<sp/>occurances<sp/>of<sp/>&apos;0xe8&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>last<sp/>10<sp/>bytes<sp/>of<sp/>the<sp/>frame<sp/>are<sp/>not<sp/>e8-handled,<sp/>because<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>0;<sp/>pos<sp/>&lt;<sp/>frame_size<sp/>-<sp/>10;<sp/>pos++)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_e8<sp/>=<sp/>(buf[pos]<sp/>==<sp/>0xe8);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_e8)<sp/>{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>found<sp/>an<sp/>E8<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>next<sp/>4<sp/>bytes<sp/>shall<sp/>be<sp/>translated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>file_pos<sp/>=<sp/>pos<sp/>+<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1ad2a91fa7bf7fefb48ee08d52bd6ada15" kindref="member">output_pos</ref>;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>next<sp/>4<sp/>bytes<sp/>as<sp/>little<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>abs_offset<sp/>=</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[pos<sp/>+<sp/>1]<sp/>&lt;&lt;<sp/><sp/>0)<sp/>|</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[pos<sp/>+<sp/>2]<sp/>&lt;&lt;<sp/><sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[pos<sp/>+<sp/>3]<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(buf[pos<sp/>+<sp/>4]<sp/>&lt;&lt;<sp/>24);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs_offset<sp/>&gt;=<sp/>-file_pos<sp/>&amp;&amp;<sp/>abs_offset<sp/>&lt;<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref>)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/>rel_offset;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs_offset<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_offset<sp/>=<sp/>abs_offset<sp/>-<sp/>file_pos;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rel_offset<sp/>=<sp/>abs_offset<sp/>+<sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a33e4a28cfa430c0a9f53fc36aa7784bb" kindref="member">e8_magic</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>next<sp/>4<sp/>bytes<sp/>as<sp/>little<sp/>endian</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[pos<sp/>+<sp/>1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(rel_offset<sp/>&gt;&gt;<sp/><sp/>0);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[pos<sp/>+<sp/>2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(rel_offset<sp/>&gt;&gt;<sp/><sp/>8);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[pos<sp/>+<sp/>3]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(rel_offset<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[pos<sp/>+<sp/>4]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(rel_offset<sp/>&gt;&gt;<sp/>24);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>skip<sp/>the<sp/>next<sp/>four<sp/>bytes<sp/>(they<sp/>are<sp/>what<sp/>we<sp/>just<sp/>translated).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1abfa293c286465cc46f6a84bda5a8f908" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1abfa293c286465cc46f6a84bda5a8f908" kindref="member">LZXDecompressor::LZXDecompressor</ref>(<ref refid="namespaceopenage_1_1util_1_1compress_1a129fc036a27a40e60785ce5bb1aa5627" kindref="member">read_callback_t</ref><sp/>read_callback,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>window_bits,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reset_interval)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/>stream{</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream" kindref="compound">LZXDStream</ref>{read_callback,<sp/>window_bits,<sp/>reset_interval}}<sp/>{}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1a6e8124b4f83027be7526c7fc25fd801d" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1a6e8124b4f83027be7526c7fc25fd801d" kindref="member">LZXDecompressor::~LZXDecompressor</ref>()<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1a476d05993567d0c02d6ced2e6216795e" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928" refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1ad03ce7fd20c3abe824f61dd382bab43c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1ad03ce7fd20c3abe824f61dd382bab43c" kindref="member">LZXDecompressor::decompress_next_frame</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*output_buf)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_decompressor_1a476d05993567d0c02d6ced2e6216795e" kindref="member">stream</ref>-&gt;<ref refid="classopenage_1_1util_1_1compress_1_1_l_z_x_d_stream_1a12047565515e79d8fa7ae56c1459a724" kindref="member">decompress_next_frame</ref>(output_buf);</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::util::compress</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/util/compress/lzxd.cpp"/>
  </compounddef>
</doxygen>
