<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1curve_1_1_discrete" kind="class" language="C++" prot="public">
    <compoundname>openage::curve::Discrete</compoundname>
    <basecompoundref refid="classopenage_1_1curve_1_1_value_container" prot="public" virt="non-virtual">openage::curve::ValueContainer&lt; T &gt;</basecompoundref>
    <includes refid="discrete_8h" local="no">discrete.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1curve_1_1_discrete_1ab4746bae3f4c7d01312e530b0e5150d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>T</type>
        <definition>T openage::curve::Discrete&lt; T &gt;::get</definition>
        <argsstring>(const time_t &amp;t) const override</argsstring>
        <name>get</name>
        <reimplements refid="classopenage_1_1curve_1_1_value_container_1af35f74af0eb47d6c852c5b8f8f83ae60">get</reimplements>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">time_t</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does not interpolate anything, just returns gives the raw value of the last keyframe with time &lt;= t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/curve/discrete.h" line="30" column="1" bodyfile="libopenage/curve/discrete.h" bodystart="45" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1curve_1_1_discrete_1a4b2bddacdb81de7e9d1f207ca7cd15c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">time_t</ref>, T &gt;</type>
        <definition>std::pair&lt; time_t, T &gt; openage::curve::Discrete&lt; T &gt;::get_time</definition>
        <argsstring>(const time_t &amp;t) const</argsstring>
        <name>get_time</name>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">time_t</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the last time and keyframe with time &lt;= t. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/curve/discrete.h" line="35" column="1" bodyfile="libopenage/curve/discrete.h" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1curve_1_1_discrete_1a9be982a0d41cb6b5f2968aafcf147c82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; std::pair&lt; <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">time_t</ref>, T &gt; &gt;</type>
        <definition>std::optional&lt; std::pair&lt; time_t, T &gt; &gt; openage::curve::Discrete&lt; T &gt;::get_previous</definition>
        <argsstring>(const time_t &amp;t) const</argsstring>
        <name>get_previous</name>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">time_t</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return, if existing, the time and value of keyframe with time &lt; t </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/curve/discrete.h" line="40" column="1" bodyfile="libopenage/curve/discrete.h" bodystart="61" bodyend="73"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Does not interpolate between values. The template type does only need to implement <computeroutput>operator=</computeroutput> and copy ctor. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1118">
        <label>openage::curve::Discrete&lt; T &gt;</label>
        <link refid="classopenage_1_1curve_1_1_discrete"/>
        <childnode refid="1119" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1120">
        <label>openage::event::EventTarget</label>
        <link refid="classopenage_1_1event_1_1_event_target"/>
      </node>
      <node id="1119">
        <label>openage::curve::ValueContainer&lt; T &gt;</label>
        <link refid="classopenage_1_1curve_1_1_value_container"/>
        <childnode refid="1120" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1121">
        <label>openage::curve::Discrete&lt; T &gt;</label>
        <link refid="classopenage_1_1curve_1_1_discrete"/>
        <childnode refid="1122" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1123">
        <label>openage::event::EventTarget</label>
        <link refid="classopenage_1_1event_1_1_event_target"/>
      </node>
      <node id="1122">
        <label>openage::curve::ValueContainer&lt; T &gt;</label>
        <link refid="classopenage_1_1curve_1_1_value_container"/>
        <childnode refid="1123" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libopenage/curve/discrete.h" line="18" column="1" bodyfile="libopenage/curve/discrete.h" bodystart="18" bodyend="41"/>
    <listofallmembers>
      <member refid="classopenage_1_1curve_1_1_value_container_1ab4f6249d04c614100240ca09d6704ba4" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>_id</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1a5d41d437a0e486181d290127de5cd9d7" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>add_dependent</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1a6da66e1f05d92d87ce931d06204b6d9b" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>changes</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1a565150e1c3965878953bca2afa1c1ad2" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>container</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1abe6736c7ec9aeba96a045c9e517bdf66" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>EventTarget</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1af22c2d98ebfbec213ca2257869022e3e" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>frame</name></member>
      <member refid="classopenage_1_1curve_1_1_discrete_1ab4746bae3f4c7d01312e530b0e5150d5" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>get</name></member>
      <member refid="classopenage_1_1curve_1_1_discrete_1a9be982a0d41cb6b5f2968aafcf147c82" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>get_previous</name></member>
      <member refid="classopenage_1_1curve_1_1_discrete_1a4b2bddacdb81de7e9d1f207ca7cd15c2" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>get_time</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1aa4ccad0b4eae016862241e5a662575c6" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>id</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1af307dc2d35246999cea18dfb1d478be9" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>last_element</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1a9af089eef9feb357fe0e36fad9397b8c" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>next_frame</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1a21af7f25367a85a49ed2d2391d8ffd3f" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>operator()</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1af7643c2abd7b18238a3092ac4f186368" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>set_insert</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1acb0b0b216cb64435edf52a01d16f70db" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>set_last</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1a0d2724ee9749bd54f75bfe5fa05a6512" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>show_dependents</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1a10a6498be4aac6daa9c254fbb59cd5cb" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>single_change_notifier</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1a69453fddcf70ac72c863f61e25bfb786" prot="protected" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>trigger</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1aa901d833956ff09b5fa00f3fb126e8fb" prot="public" virt="non-virtual"><scope>openage::curve::Discrete</scope><name>ValueContainer</name></member>
      <member refid="classopenage_1_1event_1_1_event_target_1af2ea4d43df8ac5dad62ce41a5a300dca" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>~EventTarget</name></member>
      <member refid="classopenage_1_1curve_1_1_value_container_1aa72ebf92805c7aed981f9c3fbf2c7efb" prot="public" virt="virtual"><scope>openage::curve::Discrete</scope><name>~ValueContainer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
