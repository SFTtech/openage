<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="binpack_8py" kind="file" language="Python">
    <compoundname>binpack.py</compoundname>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_packer" prot="public">openage::convert::binpack::Packer</innerclass>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_row_packer" prot="public">openage::convert::binpack::RowPacker</innerclass>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_column_packer" prot="public">openage::convert::binpack::ColumnPacker</innerclass>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_best_packer" prot="public">openage::convert::binpack::BestPacker</innerclass>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" prot="public">openage::convert::binpack::PackerNode</innerclass>
    <innerclass refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer" prot="public">openage::convert::binpack::BinaryTreePacker</innerclass>
    <innernamespace refid="namespaceopenage_1_1convert_1_1binpack">openage::convert::binpack</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceopenage_1_1convert_1_1binpack" refkind="compound"><highlight class="comment">#<sp/>Copyright<sp/>2016-2016<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Routines<sp/>for<sp/>2D<sp/>binpacking<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/>TODO<sp/>pylint:<sp/>disable=C,R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage_1_1convert_1_1binpack_1a74908a15b1ee442e6e51755393774a13" kindref="member">factor</ref>(n):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Return<sp/>two<sp/>(preferable<sp/>close)<sp/>factors<sp/>of<sp/>n.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(math.sqrt(n)),<sp/>0,<sp/>-1):</highlight></codeline>
<codeline lineno="14" refid="namespaceopenage_1_1convert_1_1binpack_1a74908a15b1ee442e6e51755393774a13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>n<sp/>%<sp/>a<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a,<sp/>n<sp/>//<sp/>a</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer" kindref="compound">Packer</ref>:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Packs<sp/>blocks.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classopenage_1_1convert_1_1binpack_1_1_packer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1adfd10fb188f5f1bd4336fe574dbe92ad" kindref="member">__init__</ref>(self,<sp/>margin):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref><sp/>=<sp/>margin</highlight></codeline>
<codeline lineno="23" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1adfd10fb188f5f1bd4336fe574dbe92ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="24" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1ac0edc354fd6c4e1d7396e66e877fc3f3" kindref="member">pack</ref>(self,<sp/>blocks):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pack<sp/>all<sp/>the<sp/>blocks.</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Each<sp/>block<sp/>must<sp/>have<sp/>a<sp/>width<sp/>and<sp/>height<sp/>attribute.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="32" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1ac0edc354fd6c4e1d7396e66e877fc3f3" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a9755eed59f354457fb58dcb946986c81" kindref="member">pos</ref>(self,<sp/>block):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>[block]</highlight></codeline>
<codeline lineno="35" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a9755eed59f354457fb58dcb946986c81" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a2975fbf546612145bd425fad338adf24" kindref="member">width</ref>(self):</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Gets<sp/>the<sp/>total<sp/>width<sp/>of<sp/>the<sp/>packing.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1console_1_1tests_1a46ebd3333dc9196558ac9aced828d117" kindref="member">max</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a9755eed59f354457fb58dcb946986c81" kindref="member">pos</ref>(block)[0]<sp/>+<sp/>block.width<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>)</highlight></codeline>
<codeline lineno="39" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a2975fbf546612145bd425fad338adf24" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a8916e3ed3816885ba27b052d461ac59e" kindref="member">height</ref>(self):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Gets<sp/>the<sp/>total<sp/>height<sp/>of<sp/>the<sp/>packing.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1console_1_1tests_1a46ebd3333dc9196558ac9aced828d117" kindref="member">max</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a9755eed59f354457fb58dcb946986c81" kindref="member">pos</ref>(block)[1]<sp/>+<sp/>block.height<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>)</highlight></codeline>
<codeline lineno="43" refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a8916e3ed3816885ba27b052d461ac59e" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_row_packer" kindref="compound">RowPacker</ref>(<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer" kindref="compound">Packer</ref>):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Packs<sp/>blocks<sp/>into<sp/>rows,<sp/>greedily<sp/>trying<sp/>to<sp/>minimize<sp/>the<sp/>maximum<sp/>width.</highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="classopenage_1_1convert_1_1binpack_1_1_row_packer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_row_packer_1aef2c5b7c7757e7a65cbd6ff368e8ebfb" kindref="member">pack</ref>(self,<sp/>blocks):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="52" refid="classopenage_1_1convert_1_1binpack_1_1_row_packer_1aef2c5b7c7757e7a65cbd6ff368e8ebfb" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classopenage_1_1convert_1_1binpack_1_1_row_packer_1a133b67ad00bc29240d6adbca15f41529" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rows,<sp/>_<sp/>=<sp/><ref refid="namespaceopenage_1_1convert_1_1binpack_1a74908a15b1ee442e6e51755393774a13" kindref="member">factor</ref>(len(blocks))</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rows<sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_rows)]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>blocks<sp/>into<sp/>rows.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blocks:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_row<sp/>=<sp/><ref refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" kindref="member">min</ref>(rows,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>row:<sp/>sum(b.width<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>row))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_row.append(block)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rows:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>row:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>[block]<sp/>=<sp/>(x,<sp/>y)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>block.width<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/><ref refid="namespaceopenage_1_1console_1_1tests_1a46ebd3333dc9196558ac9aced828d117" kindref="member">max</ref>(block.height<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>row)<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_column_packer" kindref="compound">ColumnPacker</ref>(<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer" kindref="compound">Packer</ref>):</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Packs<sp/>blocks<sp/>into<sp/>columns,<sp/>greedily<sp/>trying<sp/>to<sp/>minimize<sp/>the<sp/>maximum<sp/>height.</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classopenage_1_1convert_1_1binpack_1_1_column_packer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_column_packer_1a562a27648338ebfbdc76b7daab3307f3" kindref="member">pack</ref>(self,<sp/>blocks):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="80" refid="classopenage_1_1convert_1_1binpack_1_1_column_packer_1a562a27648338ebfbdc76b7daab3307f3" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classopenage_1_1convert_1_1binpack_1_1_column_packer_1a76f733e1f4a52cc1650872a4e8b913c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_columns,<sp/>_<sp/>=<sp/><ref refid="namespaceopenage_1_1convert_1_1binpack_1a74908a15b1ee442e6e51755393774a13" kindref="member">factor</ref>(len(blocks))</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns<sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>_<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(num_columns)]</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Put<sp/>blocks<sp/>into<sp/>columns.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>blocks:</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_col<sp/>=<sp/><ref refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" kindref="member">min</ref>(columns,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>col:<sp/>sum(b.height<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>col))</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_col.append(block)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>positions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>column<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>columns:</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>column:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>[block]<sp/>=<sp/>(x,<sp/>y)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>block.height<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/><ref refid="namespaceopenage_1_1console_1_1tests_1a46ebd3333dc9196558ac9aced828d117" kindref="member">max</ref>(block.width<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>column)<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer" kindref="compound">BestPacker</ref>:</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Chooses<sp/>the<sp/>best<sp/>result<sp/>from<sp/>all<sp/>the<sp/>given<sp/>packers.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a93752fad4fddfa93122c3ab659702a21" kindref="member">__init__</ref>(self,<sp/>packers):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1aafd6bfbbbcbb262326c530a6a6fcc8ab" kindref="member">packers</ref><sp/>=<sp/>packers</highlight></codeline>
<codeline lineno="106" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a93752fad4fddfa93122c3ab659702a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" kindref="member">current_best</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1aafd6bfbbbcbb262326c530a6a6fcc8ab" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1abcdd32b9d135c030c8ce5042e4071cc2" kindref="member">pack</ref>(self,<sp/>blocks):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>packer<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1aafd6bfbbbcbb262326c530a6a6fcc8ab" kindref="member">packers</ref>:</highlight></codeline>
<codeline lineno="110" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1abcdd32b9d135c030c8ce5042e4071cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packer.pack(blocks)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" kindref="member">current_best</ref><sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a94a5247cf3049d7b95b2937858d0db31" kindref="member">best_packer</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a94a5247cf3049d7b95b2937858d0db31" kindref="member">best_packer</ref>(self):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" kindref="member">min</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1aafd6bfbbbcbb262326c530a6a6fcc8ab" kindref="member">packers</ref>,<sp/>key=</highlight><highlight class="keyword">lambda</highlight><highlight class="normal"><sp/>p:<sp/>p.width()<sp/>*<sp/>p.height())</highlight></codeline>
<codeline lineno="116" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a94a5247cf3049d7b95b2937858d0db31" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ade031f2ad3bb8386ffb000f44323ad19" kindref="member">pos</ref>(self,<sp/>block):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" kindref="member">current_best</ref>.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ade031f2ad3bb8386ffb000f44323ad19" kindref="member">pos</ref>(block)</highlight></codeline>
<codeline lineno="119" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ade031f2ad3bb8386ffb000f44323ad19" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a194969df56d5b8df837c4aae21ab9060" kindref="member">width</ref>(self):</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" kindref="member">current_best</ref>.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a194969df56d5b8df837c4aae21ab9060" kindref="member">width</ref>()</highlight></codeline>
<codeline lineno="122" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a194969df56d5b8df837c4aae21ab9060" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a8d22836ef3fc3a4cd2175f2ec2d1ac5b" kindref="member">height</ref>(self):</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1ab80ec5d4b974f580f10a5d9eddb5d3f2" kindref="member">current_best</ref>.<ref refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a8d22836ef3fc3a4cd2175f2ec2d1ac5b" kindref="member">height</ref>()</highlight></codeline>
<codeline lineno="125" refid="classopenage_1_1convert_1_1binpack_1_1_best_packer_1a8d22836ef3fc3a4cd2175f2ec2d1ac5b" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;A<sp/>node<sp/>in<sp/>a<sp/>binary<sp/>packing<sp/>tree.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1ad9d0c357ad726b1a8b245dce7eb9c0a3" kindref="member">__init__</ref>(self,<sp/>x,<sp/>y,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a78d885f56a2895f94d637f99dbb8ed51" kindref="member">x</ref><sp/>=<sp/>x</highlight></codeline>
<codeline lineno="132" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1ad9d0c357ad726b1a8b245dce7eb9c0a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a7bd07d34739429f4763c0e5546a0bbf0" kindref="member">y</ref><sp/>=<sp/>y</highlight></codeline>
<codeline lineno="133" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a78d885f56a2895f94d637f99dbb8ed51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a2351e3691a81197bb2f4b80742810f77" kindref="member">width</ref><sp/>=<sp/>width</highlight></codeline>
<codeline lineno="134" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a7bd07d34739429f4763c0e5546a0bbf0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1af97af777b0d63dbf040b5cfc94581645" kindref="member">height</ref><sp/>=<sp/>height</highlight></codeline>
<codeline lineno="135" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a2351e3691a81197bb2f4b80742810f77" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1af97af777b0d63dbf040b5cfc94581645" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a881c0aca0e458fcc6401e373f34ce81c" kindref="member">used</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1ae6bd0e145f2aef5a847c67f182526bd9" kindref="member">down</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a881c0aca0e458fcc6401e373f34ce81c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a6c55bfd60db3b2651e3a9a30bf42944f" kindref="member">right</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1ae6bd0e145f2aef5a847c67f182526bd9" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classopenage_1_1convert_1_1binpack_1_1_packer_node_1a6c55bfd60db3b2651e3a9a30bf42944f" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage_1_1convert_1_1binpack_1ac86edd0acbc07bb4b440e2f911ca50f3" kindref="member">maxside_heuristic</ref>(block):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Heuristic:<sp/>Order<sp/>blocks<sp/>by<sp/>maximum<sp/>side.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="namespaceopenage_1_1console_1_1tests_1a46ebd3333dc9196558ac9aced828d117" kindref="member">max</ref>(block.width,<sp/>block.height),</highlight></codeline>
<codeline lineno="144" refid="namespaceopenage_1_1convert_1_1binpack_1ac86edd0acbc07bb4b440e2f911ca50f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" kindref="member">min</ref>(block.width,<sp/>block.height),</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.height,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.width)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer" kindref="compound">BinaryTreePacker</ref>(<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer" kindref="compound">Packer</ref>):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Binary<sp/>tree<sp/>bin<sp/>packing<sp/>strategy.</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Very<sp/>close<sp/>to<sp/>http://codeincomplete.com/posts/2011/5/7/bin_packing/.</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Aditionally<sp/>can<sp/>target<sp/>a<sp/>given<sp/>aspect<sp/>ratio.<sp/>97/49<sp/>is<sp/>optimal<sp/>for<sp/>terrain</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>textures.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">__init__(self,<sp/>margin,<sp/>aspect_ratio=1,<sp/>heuristic=maxside_heuristic):</highlight></codeline>
<codeline lineno="159" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super().<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a8b748f8896932ba15c26f98177ba7202" kindref="member">__init__</ref>(margin)</highlight></codeline>
<codeline lineno="160" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a8b748f8896932ba15c26f98177ba7202" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1aebf84e116a138514f0d139cb9201c788" kindref="member">aspect_ratio</ref><sp/>=<sp/>aspect_ratio</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a1a9fc5489b2784da4a4419a3cab18841" kindref="member">heuristic</ref><sp/>=<sp/>heuristic</highlight></codeline>
<codeline lineno="162" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1aebf84e116a138514f0d139cb9201c788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a1a9fc5489b2784da4a4419a3cab18841" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ada535734ec9cd8314c97b931843ee216" kindref="member">pack</ref>(self,<sp/>blocks):</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="166" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ada535734ec9cd8314c97b931843ee216" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a75eb8c7fa063315819779923a5a4f248" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>block<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>sorted(blocks,<sp/>key=self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a1a9fc5489b2784da4a4419a3cab18841" kindref="member">heuristic</ref>,<sp/>reverse=</highlight><highlight class="keyword">True</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ae48dccc105acdb2ded7629bc1060847c" kindref="member">fit</ref>(block)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a461f1dcbab5392fa90e45f52efe1c36e" kindref="member">pos</ref>(self,<sp/>block):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>[block]</highlight></codeline>
<codeline lineno="173" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a461f1dcbab5392fa90e45f52efe1c36e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.x,<sp/>node.y</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ae48dccc105acdb2ded7629bc1060847c" kindref="member">fit</ref>(self,<sp/>block):</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="177" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ae48dccc105acdb2ded7629bc1060847c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(0,<sp/>0,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.width<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.height<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.width<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.height<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a32c685bf642e7e1d51c8236da236e7d3" kindref="member">split_node</ref>(node,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.width<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.height<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a61f11eee28580e8d9f377e2a2a2be97f" kindref="member">grow_node</ref>(block.width<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block.height<sp/>+<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1aab5863f0f8c143b5fa635b1dc66cd67f" kindref="member">margin</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_1a6e7729bcab167b862bccfe18896d576c" kindref="member">mapping</ref>[block]<sp/>=<sp/>node</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(self,<sp/>root,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>root.used:</highlight></codeline>
<codeline lineno="197" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(root.right,<sp/>width,<sp/>height)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(root.down,<sp/>width,<sp/>height))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>width<sp/>&lt;=<sp/>root.width<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>height<sp/>&lt;=<sp/>root.height:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>root</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a32c685bf642e7e1d51c8236da236e7d3" kindref="member">split_node</ref>(self,<sp/>node,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.used<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a32c685bf642e7e1d51c8236da236e7d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.down<sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(node.x,<sp/>node.y<sp/>+<sp/>height,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.width,<sp/>node.height<sp/>-<sp/>height)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.right<sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(node.x<sp/>+<sp/>width,<sp/>node.y,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.width<sp/>-<sp/>width,<sp/>height)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a61f11eee28580e8d9f377e2a2a2be97f" kindref="member">grow_node</ref>(self,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_grow_down<sp/>=<sp/>width<sp/>&lt;=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.width</highlight></codeline>
<codeline lineno="212" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a61f11eee28580e8d9f377e2a2a2be97f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>can_grow_right<sp/>=<sp/>height<sp/>&lt;=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.height</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>can_grow_down<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>can_grow_right,<sp/></highlight><highlight class="stringliteral">&quot;Bad<sp/>block<sp/>ordering<sp/>heuristic&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_grow_right<sp/>=<sp/>((self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.height<sp/>*<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1aebf84e116a138514f0d139cb9201c788" kindref="member">aspect_ratio</ref>)<sp/>&gt;=</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.width<sp/>+<sp/>width))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should_grow_down<sp/>=<sp/>((self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.width<sp/>/<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1aebf84e116a138514f0d139cb9201c788" kindref="member">aspect_ratio</ref>)<sp/>&gt;=</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.height<sp/>+<sp/>height))</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>can_grow_right<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>should_grow_right:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1abf53a5df2edae1fc544296ab05c08ff9" kindref="member">grow_right</ref>(width,<sp/>height)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>can_grow_down<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>should_grow_down:</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ab2ad7afcbebffd5353e9004157b45644" kindref="member">grow_down</ref>(width,<sp/>height)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>can_grow_right:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1abf53a5df2edae1fc544296ab05c08ff9" kindref="member">grow_right</ref>(width,<sp/>height)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ab2ad7afcbebffd5353e9004157b45644" kindref="member">grow_down</ref>(width,<sp/>height)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1abf53a5df2edae1fc544296ab05c08ff9" kindref="member">grow_right</ref>(self,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_root<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref></highlight></codeline>
<codeline lineno="231" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1abf53a5df2edae1fc544296ab05c08ff9" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(0,<sp/>0,<sp/>old_root.width<sp/>+<sp/>width,<sp/>old_root.height)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.used<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.down<sp/>=<sp/>old_root</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.right<sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(old_root.width,<sp/>0,<sp/>width,<sp/>old_root.height)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>,<sp/>width,<sp/>height)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a32c685bf642e7e1d51c8236da236e7d3" kindref="member">split_node</ref>(node,<sp/>width,<sp/>height)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ab2ad7afcbebffd5353e9004157b45644" kindref="member">grow_down</ref>(self,<sp/>width,<sp/>height):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_root<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref></highlight></codeline>
<codeline lineno="243" refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1ab2ad7afcbebffd5353e9004157b45644" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref><sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(0,<sp/>0,<sp/>old_root.width,<sp/>old_root.height<sp/>+<sp/>height)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.used<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.down<sp/>=<sp/><ref refid="classopenage_1_1convert_1_1binpack_1_1_packer_node" kindref="compound">PackerNode</ref>(0,<sp/>old_root.height,<sp/>old_root.width,<sp/>height)</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>.right<sp/>=<sp/>old_root</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a3bc196b2ae9a97ca5e35fbd0c0d25ca1" kindref="member">find_node</ref>(self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1af79bf0a8e996808285dfc798f072e598" kindref="member">root</ref>,<sp/>width,<sp/>height)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>node<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="classopenage_1_1convert_1_1binpack_1_1_binary_tree_packer_1a32c685bf642e7e1d51c8236da236e7d3" kindref="member">split_node</ref>(node,<sp/>width,<sp/>height)</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/openage/convert/binpack.py"/>
  </compounddef>
</doxygen>
