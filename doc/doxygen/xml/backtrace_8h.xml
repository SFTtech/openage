<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="backtrace_8h" kind="file" language="C++">
    <compoundname>backtrace.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <includes local="no">functional</includes>
    <includedby refid="backtrace_8cpp" local="yes">libopenage/error/backtrace.cpp</includedby>
    <includedby refid="demo_8cpp" local="yes">libopenage/error/demo.cpp</includedby>
    <includedby refid="stackanalyzer_8h" local="yes">libopenage/error/stackanalyzer.h</includedby>
    <includedby refid="pyexception_8h" local="yes">libopenage/pyinterface/pyexception.h</includedby>
    <incdepgraph>
      <node id="6221">
        <label>functional</label>
      </node>
      <node id="6217">
        <label>libopenage/error/backtrace.h</label>
        <link refid="backtrace_8h"/>
        <childnode refid="6218" relation="include">
        </childnode>
        <childnode refid="6219" relation="include">
        </childnode>
        <childnode refid="6220" relation="include">
        </childnode>
        <childnode refid="6221" relation="include">
        </childnode>
      </node>
      <node id="6219">
        <label>string</label>
      </node>
      <node id="6218">
        <label>vector</label>
      </node>
      <node id="6220">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6225">
        <label>libopenage/error/stackanalyzer.h</label>
        <link refid="stackanalyzer_8h"/>
        <childnode refid="6226" relation="include">
        </childnode>
        <childnode refid="6227" relation="include">
        </childnode>
        <childnode refid="6228" relation="include">
        </childnode>
      </node>
      <node id="6226">
        <label>libopenage/error/error.cpp</label>
        <link refid="error_2error_8cpp"/>
      </node>
      <node id="6222">
        <label>libopenage/error/backtrace.h</label>
        <link refid="backtrace_8h"/>
        <childnode refid="6223" relation="include">
        </childnode>
        <childnode refid="6224" relation="include">
        </childnode>
        <childnode refid="6225" relation="include">
        </childnode>
        <childnode refid="6229" relation="include">
        </childnode>
      </node>
      <node id="6223">
        <label>libopenage/error/backtrace.cpp</label>
        <link refid="backtrace_8cpp"/>
      </node>
      <node id="6233">
        <label>libopenage/pyinterface/pyobject_tests.cpp</label>
        <link refid="pyobject__tests_8cpp"/>
      </node>
      <node id="6230">
        <label>libopenage/pyinterface/exctranslate.cpp</label>
        <link refid="exctranslate_8cpp"/>
      </node>
      <node id="6231">
        <label>libopenage/pyinterface/exctranslate_tests.cpp</label>
        <link refid="exctranslate__tests_8cpp"/>
      </node>
      <node id="6228">
        <label>libopenage/error/stackanalyzer.cpp</label>
        <link refid="stackanalyzer_8cpp"/>
      </node>
      <node id="6229">
        <label>libopenage/pyinterface/pyexception.h</label>
        <link refid="pyexception_8h"/>
        <childnode refid="6230" relation="include">
        </childnode>
        <childnode refid="6231" relation="include">
        </childnode>
        <childnode refid="6232" relation="include">
        </childnode>
        <childnode refid="6233" relation="include">
        </childnode>
      </node>
      <node id="6224">
        <label>libopenage/error/demo.cpp</label>
        <link refid="demo_8cpp"/>
      </node>
      <node id="6227">
        <label>libopenage/error/handlers.cpp</label>
        <link refid="error_2handlers_8cpp"/>
      </node>
      <node id="6232">
        <label>libopenage/pyinterface/pyexception.cpp</label>
        <link refid="pyexception_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenage_1_1error_1_1backtrace__symbol" prot="public">openage::error::backtrace_symbol</innerclass>
    <innerclass refid="classopenage_1_1error_1_1_backtrace" prot="public">openage::error::Backtrace</innerclass>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1error">openage::error</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2016<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pxd:<sp/>from<sp/>libcpp<sp/>cimport<sp/>bool<sp/>as<sp/>cppbool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pxd:<sp/>from<sp/>libcpp.string<sp/>cimport<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pxd:<sp/>from<sp/>libopenage.pyinterface.functional<sp/>cimport<sp/>Func1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">error<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>This<sp/>header<sp/>file<sp/>describes<sp/>a<sp/>fixed<sp/>frontend<sp/>for<sp/>all<sp/>sorts<sp/>of<sp/>backend<sp/>backtrace-getters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structopenage_1_1error_1_1backtrace__symbol" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenage_1_1error_1_1backtrace__symbol" kindref="compound">backtrace_symbol</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="structopenage_1_1error_1_1backtrace__symbol_1ad78e77b48944f5a063d51ab4ef9558fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structopenage_1_1error_1_1backtrace__symbol_1ad78e77b48944f5a063d51ab4ef9558fc" kindref="member">filename</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>if<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="structopenage_1_1error_1_1backtrace__symbol_1a4397241806d661bcc788a840b4e76492" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structopenage_1_1error_1_1backtrace__symbol_1a4397241806d661bcc788a840b4e76492" kindref="member">lineno</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>if<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structopenage_1_1error_1_1backtrace__symbol_1a0c86f0d485e213632b187f92a41af855" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="structopenage_1_1error_1_1backtrace__symbol_1a0c86f0d485e213632b187f92a41af855" kindref="member">functionname</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>empty<sp/>if<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structopenage_1_1error_1_1backtrace__symbol_1a5d15b8690b9644243452f21449e00fa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structopenage_1_1error_1_1backtrace__symbol_1a5d15b8690b9644243452f21449e00fa2" kindref="member">pc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nullptr<sp/>if<sp/>unknown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespaceopenage_1_1error_1a58eb7522d2a474098647490b1a6041f0" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenage_1_1error_1_1backtrace__symbol" kindref="compound">backtrace_symbol</ref><sp/>&amp;bt_sym);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classopenage_1_1error_1_1_backtrace" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1error_1_1_backtrace" kindref="compound">Backtrace</ref><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_backtrace_1ad4e4e82a65ad250f048f66667d810440" kindref="member">get_symbols</ref>(std::function&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structopenage_1_1error_1_1backtrace__symbol" kindref="compound">backtrace_symbol</ref><sp/>*)&gt;<sp/>cb,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reversed=</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classopenage_1_1error_1_1_backtrace_1a08fdb69045e972de1323464a09daad42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_backtrace_1a08fdb69045e972de1323464a09daad42" kindref="member">trim_to_current_stack_frame</ref>()<sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1error_1_1_backtrace_1abb0eb435370a245c3d5b73f083852d93" kindref="member">~Backtrace</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespaceopenage_1_1error_1a58eb7522d2a474098647490b1a6041f0" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Backtrace<sp/>&amp;bt);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>openage::error</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/error/backtrace.h"/>
  </compounddef>
</doxygen>
