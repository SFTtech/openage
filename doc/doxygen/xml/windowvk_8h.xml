<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="windowvk_8h" kind="file" language="C++">
    <compoundname>windowvk.h</compoundname>
    <includes local="no">set</includes>
    <includes local="no">cstring</includes>
    <includes local="no">optional</includes>
    <includes local="no">vulkan/vulkan.h</includes>
    <includes refid="window_8h" local="yes">../window.h</includes>
    <includes refid="loader_8h" local="yes">loader.h</includes>
    <includedby refid="windowvk_8cpp" local="yes">libopenage/renderer/vulkan/windowvk.cpp</includedby>
    <incdepgraph>
      <node id="23789">
        <label>functional</label>
      </node>
      <node id="23788">
        <label>../window.h</label>
        <link refid="window_8h"/>
        <childnode refid="23789" relation="include">
        </childnode>
        <childnode refid="23790" relation="include">
        </childnode>
        <childnode refid="23791" relation="include">
        </childnode>
        <childnode refid="23792" relation="include">
        </childnode>
        <childnode refid="23793" relation="include">
        </childnode>
      </node>
      <node id="23794">
        <label>loader.h</label>
        <link refid="loader_8h"/>
        <childnode refid="23787" relation="include">
        </childnode>
      </node>
      <node id="23792">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="23786">
        <label>optional</label>
      </node>
      <node id="23791">
        <label>vector</label>
      </node>
      <node id="23787">
        <label>vulkan/vulkan.h</label>
      </node>
      <node id="23793">
        <label>renderer.h</label>
        <link refid="renderer_8h"/>
        <childnode refid="23791" relation="include">
        </childnode>
        <childnode refid="23790" relation="include">
        </childnode>
      </node>
      <node id="23784">
        <label>set</label>
      </node>
      <node id="23783">
        <label>libopenage/renderer/vulkan/windowvk.h</label>
        <link refid="windowvk_8h"/>
        <childnode refid="23784" relation="include">
        </childnode>
        <childnode refid="23785" relation="include">
        </childnode>
        <childnode refid="23786" relation="include">
        </childnode>
        <childnode refid="23787" relation="include">
        </childnode>
        <childnode refid="23788" relation="include">
        </childnode>
        <childnode refid="23794" relation="include">
        </childnode>
      </node>
      <node id="23785">
        <label>cstring</label>
      </node>
      <node id="23790">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="23796">
        <label>libopenage/renderer/vulkan/windowvk.cpp</label>
        <link refid="windowvk_8cpp"/>
      </node>
      <node id="23795">
        <label>libopenage/renderer/vulkan/windowvk.h</label>
        <link refid="windowvk_8h"/>
        <childnode refid="23796" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities" prot="public">openage::renderer::vulkan::vlk_capabilities</innerclass>
    <innerclass refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window" prot="public">openage::renderer::vulkan::VlkWindow</innerclass>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1renderer">openage::renderer</innernamespace>
    <innernamespace refid="namespaceopenage_1_1renderer_1_1vulkan">openage::renderer::vulkan</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2017-2018<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vulkan/vulkan.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../window.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="loader_8h" kindref="compound">loader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">renderer<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">vulkan<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities" kindref="compound">vlk_capabilities</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities_1afbf76debda568a1cca8deabb182cfb17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/><ref refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities_1afbf76debda568a1cca8deabb182cfb17" kindref="member">layers</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>are<sp/>these<sp/>only<sp/>available<sp/>when<sp/>the<sp/>corresponding<sp/>layer<sp/>is<sp/>active?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities_1a9d640873c88ca19b45dc9eddea954a89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::string&gt;<sp/><ref refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities_1a9d640873c88ca19b45dc9eddea954a89" kindref="member">extensions</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO<sp/>dirty<sp/>hack<sp/>to<sp/>graft<sp/>vk<sp/>functionality<sp/>onto<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>needs<sp/>better<sp/>structure<sp/>(not<sp/>inheritance!<sp/>(?))<sp/>for<sp/>proper<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window" kindref="compound">VlkWindow</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1renderer_1_1_window" kindref="compound">openage::renderer::Window</ref><sp/>{</highlight></codeline>
<codeline lineno="31" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a44df2534a2dc9d0826d6650cc54d6af2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structopenage_1_1renderer_1_1vulkan_1_1vlk__capabilities" kindref="compound">vlk_capabilities</ref><sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a44df2534a2dc9d0826d6650cc54d6af2" kindref="member">capabilities</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ab6343f9eab77ee8717beaa6a637fea7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstance<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ab6343f9eab77ee8717beaa6a637fea7d" kindref="member">instance</ref>;</highlight></codeline>
<codeline lineno="34" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ab81090737841527274b10220811626ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ab81090737841527274b10220811626ed" kindref="member">surface</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ad0733957d19a25d744d0085538ae2013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>VkDebugReportCallbackEXT<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1ad0733957d19a25d744d0085538ae2013" kindref="member">debug_callback</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a53537d7fdc90f40b03069c3425b73b21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_loader" kindref="compound">VlkLoader</ref><sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a53537d7fdc90f40b03069c3425b73b21" kindref="member">loader</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1aaa0116239068200ddac4ce7c20dc6dce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SDL_Window*<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1aaa0116239068200ddac4ce7c20dc6dce" kindref="member">window</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a21953253160e4583181b0bbb21a56601" kindref="member">VlkWindow</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>title);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a5b80c390551f775211503e3baeedf02a" kindref="member">~VlkWindow</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>VkInstance<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a1a95d6a87cc1e0667957e894045d4ab7" kindref="member">get_instance</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>VkSurfaceKHR<sp/><ref refid="classopenage_1_1renderer_1_1vulkan_1_1_vlk_window_1a23c9e0ab58c22aea956ff90b4fd8666f" kindref="member">get_surface</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">}}}<sp/></highlight><highlight class="comment">//<sp/>openage::renderer::vulkan</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/renderer/vulkan/windowvk.h"/>
  </compounddef>
</doxygen>
