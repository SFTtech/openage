<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1event_1_1_loop" kind="class" language="C++" prot="public">
    <compoundname>openage::event::Loop</compoundname>
    <includes refid="event_2loop_8h" local="no">loop.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classopenage_1_1event_1_1_loop_1ac56f6ba1b5422a37dd76082d1f12d588" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_class" kindref="compound">EventClass</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::shared_ptr&lt;EventClass&gt; &gt; openage::event::Loop::classstore</definition>
        <argsstring></argsstring>
        <name>classstore</name>
        <briefdescription>
<para>Here we do the bookkeeping of registered event classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="113" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="113" bodyend="-1"/>
        <referencedby refid="classopenage_1_1event_1_1_loop_1a1904c3c6896c276199d5fd604663c3a2" compoundref="loop_8cpp" startline="16" endline="18">add_event_class</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1a345332e87684e73eeef16da46255882f" compoundref="loop_8cpp" startline="21" endline="33">create_event</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1event_1_1_loop_1a2aa3c5ecf7ac25ee07ae50e0e206cf95" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="classopenage_1_1event_1_1_event_filter" kindref="compound">EventFilter</ref> &gt;</type>
        <definition>std::list&lt;EventFilter&gt; openage::event::Loop::filters</definition>
        <argsstring></argsstring>
        <name>filters</name>
        <briefdescription>
<para>Here we store all running filters that shall be applied whenever a new obejct is added to our objectstore. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="119" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" prot="private" static="no" mutable="no">
        <type><ref refid="classopenage_1_1event_1_1_event_queue" kindref="compound">EventQueue</ref></type>
        <definition>EventQueue openage::event::Loop::queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
<para>All events are enqueued here. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="124" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="124" bodyend="-1"/>
        <referencedby refid="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_1a4b5d580d6081a28f13ddaaf2ebf857eb" compoundref="fifo_8py" startline="67" endline="69">openage.util.filelike.fifo.FIFO.__len__</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1adde017808ad3b24a4a95c6cad4fcd2db" compoundref="event_2loop_8h" startline="137" endline="144">create_change</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1a345332e87684e73eeef16da46255882f" compoundref="loop_8cpp" startline="21" endline="33">create_event</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1aa73104f71472a83e1afff4f11e0c619f" compoundref="loop_8cpp" startline="90" endline="155">execute_events</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1a2bd405975ded3f10fbf48eabd2a6cb49" compoundref="event_2loop_8h" startline="92" endline="94">get_queue</referencedby>
        <referencedby refid="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_1a9b982f9dc63389db10c765590221724c" compoundref="fifo_8py" startline="112" endline="114">openage.util.filelike.fifo.FIFO.get_size</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1aeba9e515057a87d7fbfddb8585095de6" compoundref="loop_8cpp" startline="56" endline="87">reach_time</referencedby>
        <referencedby refid="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_1a77dba0458d85fcf0bec2fd7d11b3737a" compoundref="fifo_8py" startline="99" endline="108">openage.util.filelike.fifo.FIFO.read</referencedby>
        <referencedby refid="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_1ace650d43f4634611321d48b48876c577" compoundref="fifo_8py" startline="50" endline="52">openage.util.filelike.fifo.FIFO.tellw</referencedby>
        <referencedby refid="classopenage_1_1event_1_1_loop_1a3cb0ae638435b575fe689c550b27a823" compoundref="loop_8cpp" startline="158" endline="215">update_changes</referencedby>
        <referencedby refid="classopenage_1_1util_1_1filelike_1_1fifo_1_1_f_i_f_o_1accebc5f8a3967df023b5be58c787ee94" compoundref="fifo_8py" startline="82" endline="87">openage.util.filelike.fifo.FIFO.write</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1event_1_1_loop_1a9f9201d7ad7a6dccf71e3a6502982963" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Event&gt; openage::event::Loop::active_event</definition>
        <argsstring></argsstring>
        <name>active_event</name>
        <briefdescription>
<para>The currently processed event. </para>
        </briefdescription>
        <detaileddescription>
<para>This is useful for event cancelations (so one can&apos;t cancel itself). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="130" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="130" bodyend="-1"/>
        <referencedby refid="classopenage_1_1event_1_1_loop_1aa73104f71472a83e1afff4f11e0c619f" compoundref="loop_8cpp" startline="90" endline="155">execute_events</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1event_1_1_loop_1a0c611cd54ec98d5f8e2b8486e6aa5d9e" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; uint64_t, std::weak_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_target" kindref="compound">EventTarget</ref> &gt; &gt;</type>
        <definition>std::unordered_map&lt;uint64_t, std::weak_ptr&lt;EventTarget&gt; &gt; openage::event::Loop::curveindex</definition>
        <argsstring></argsstring>
        <name>curveindex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="132" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classopenage_1_1event_1_1_loop_1a5951d4eb106c31663bdf480e12d382fb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend int</type>
        <definition>int demo::curvepong</definition>
        <argsstring>()</argsstring>
        <name>demo::curvepong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1a1904c3c6896c276199d5fd604663c3a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::event::Loop::add_event_class</definition>
        <argsstring>(const std::shared_ptr&lt; EventClass &gt; &amp;cls)</argsstring>
        <name>add_event_class</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_class" kindref="compound">EventClass</ref> &gt; &amp;</type>
          <declname>cls</declname>
        </param>
        <briefdescription>
<para>register a new event class </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="39" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="16" bodyend="18"/>
        <references refid="classopenage_1_1event_1_1_loop_1ac56f6ba1b5422a37dd76082d1f12d588" compoundref="event_2loop_8h" startline="113">classstore</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1a345332e87684e73eeef16da46255882f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::weak_ptr&lt; <ref refid="classopenage_1_1event_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>std::weak_ptr&lt; Event &gt; openage::event::Loop::create_event</definition>
        <argsstring>(const std::string &amp;name, const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;state, const curve::time_t &amp;reference_time, const EventClass::param_map &amp;params=EventClass::param_map({}))</argsstring>
        <name>create_event</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_target" kindref="compound">EventTarget</ref> &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">curve::time_t</ref> &amp;</type>
          <declname>reference_time</declname>
        </param>
        <param>
          <type>const <ref refid="classopenage_1_1event_1_1_event_class_1_1param__map" kindref="compound">EventClass::param_map</ref> &amp;</type>
          <declname>params</declname>
          <defval><ref refid="classopenage_1_1event_1_1_event_class_1_1param__map" kindref="compound">EventClass::param_map</ref>({})</defval>
        </param>
        <briefdescription>
<para>Add a new <ref refid="classopenage_1_1event_1_1_event" kindref="compound">Event</ref> to the queue. </para>
        </briefdescription>
        <detaileddescription>
<para>The event is from the given class (name) and is invoked for a target in a state.</para>
<para>The <computeroutput>reference_time</computeroutput> is used to calculate the actual event time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="48" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="21" bodyend="33"/>
        <references refid="classopenage_1_1event_1_1_loop_1ac56f6ba1b5422a37dd76082d1f12d588" compoundref="event_2loop_8h" startline="113">classstore</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1ac5abd71bf0167e4b7d36f19a29f4a611" compoundref="eventqueue_8cpp" startline="16" endline="73">openage::event::EventQueue::create_event</references>
        <references refid="namespaceopenage_1_1log_1a325b0901ddb3f2af36f93781b7dd9744" compoundref="log_2____init_____8py" startline="124" endline="127">openage::log.err</references>
        <references refid="message_8h_1a8adfad4f54eb306fbb8aaa1b159608a5" compoundref="message_8h" startline="171">MSG</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
        <referencedby refid="classopenage_1_1event_1_1demo_1_1_physics_1aaaafd5ac8b7a69517a6f26f9fa220984" compoundref="physics_8cpp" startline="489" endline="495">openage::event::demo::Physics::reset</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1aea3bb40d2dfbca8a48c8389af357ebb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::weak_ptr&lt; <ref refid="classopenage_1_1event_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>std::weak_ptr&lt; Event &gt; openage::event::Loop::create_event</definition>
        <argsstring>(const std::shared_ptr&lt; EventClass &gt; &amp;eventclass, const std::shared_ptr&lt; EventTarget &gt; &amp;target, const std::shared_ptr&lt; State &gt; &amp;state, const curve::time_t &amp;reference_time, const EventClass::param_map &amp;params=EventClass::param_map({}))</argsstring>
        <name>create_event</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_class" kindref="compound">EventClass</ref> &gt; &amp;</type>
          <declname>eventclass</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_target" kindref="compound">EventTarget</ref> &gt; &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">curve::time_t</ref> &amp;</type>
          <declname>reference_time</declname>
        </param>
        <param>
          <type>const <ref refid="classopenage_1_1event_1_1_event_class_1_1param__map" kindref="compound">EventClass::param_map</ref> &amp;</type>
          <declname>params</declname>
          <defval><ref refid="classopenage_1_1event_1_1_event_class_1_1param__map" kindref="compound">EventClass::param_map</ref>({})</defval>
        </param>
        <briefdescription>
<para>This will generate a new randomly named eventclass for this specific element. </para>
        </briefdescription>
        <detaileddescription>
<para>The <computeroutput>reference_time</computeroutput> is used to determine the actual event trigger time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="59" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="36" bodyend="53"/>
        <references refid="classopenage_1_1event_1_1_loop_1ac56f6ba1b5422a37dd76082d1f12d588" compoundref="event_2loop_8h" startline="113">classstore</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1ac5abd71bf0167e4b7d36f19a29f4a611" compoundref="eventqueue_8cpp" startline="16" endline="73">openage::event::EventQueue::create_event</references>
        <references refid="message_8h_1a735563036dced0b7d6cc98f97ea4978b" compoundref="message_8h" startline="179">ERR</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1aea43d31d3b22e6ae29087df21aa014a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::event::Loop::onfilter</definition>
        <argsstring>(const std::shared_ptr&lt; EventClass &gt; &amp;eventclass, const EventFilter &amp;)</argsstring>
        <name>onfilter</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_class" kindref="compound">EventClass</ref> &gt; &amp;</type>
          <declname>eventclass</declname>
        </param>
        <param>
          <type>const <ref refid="classopenage_1_1event_1_1_event_filter" kindref="compound">EventFilter</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="65" column="1"/>
        <referencedby refid="classopenage_1_1event_1_1_loop_1ada595233343c378554941df3ff039c4b" compoundref="event_2loop_8h" startline="68" endline="70">onfilter</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1ada595233343c378554941df3ff039c4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class evntclass_t</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void openage::event::Loop::onfilter</definition>
        <argsstring>(const EventFilter &amp;filter)</argsstring>
        <name>onfilter</name>
        <param>
          <type>const <ref refid="classopenage_1_1event_1_1_event_filter" kindref="compound">EventFilter</ref> &amp;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="68" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="68" bodyend="70"/>
        <references refid="classopenage_1_1event_1_1_loop_1aea43d31d3b22e6ae29087df21aa014a7">onfilter</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1a172ef3ff0f7d0586a06a6b356a7515f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::event::Loop::register_object</definition>
        <argsstring>(const std::shared_ptr&lt; EventTarget &gt; &amp;)</argsstring>
        <name>register_object</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event_target" kindref="compound">EventTarget</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1aeba9e515057a87d7fbfddb8585095de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::event::Loop::reach_time</definition>
        <argsstring>(const curve::time_t &amp;max_time, const std::shared_ptr&lt; State &gt; &amp;state)</argsstring>
        <name>reach_time</name>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">curve::time_t</ref> &amp;</type>
          <declname>max_time</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Execute all events that are registered until a certain point in time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="77" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="56" bodyend="87"/>
        <references refid="message_8h_1a49606be7356624568932ec81c0d429f4" compoundref="message_8h" startline="176">DBG</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa73104f71472a83e1afff4f11e0c619f" compoundref="loop_8cpp" startline="90" endline="155">execute_events</references>
        <references refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" compoundref="log_8cpp" startline="13" endline="15">openage::log::log</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1a11ac5f64f4344db4281924887f8bda1d" compoundref="eventqueue_8cpp" startline="189" endline="191">openage::event::EventQueue::swap_changesets</references>
        <references refid="classopenage_1_1event_1_1_loop_1a3cb0ae638435b575fe689c550b27a823" compoundref="loop_8cpp" startline="158" endline="215">update_changes</references>
        <references refid="message_8h_1a271d8f7f52be750e5c744a394ec71344" compoundref="message_8h" startline="178">WARN</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1adde017808ad3b24a4a95c6cad4fcd2db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void openage::event::Loop::create_change</definition>
        <argsstring>(const std::shared_ptr&lt; Event &gt; &amp;event, const curve::time_t &amp;changes_at, const T &amp;new_value)</argsstring>
        <name>create_change</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_event" kindref="compound">Event</ref> &gt; &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">curve::time_t</ref> &amp;</type>
          <declname>changes_at</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
<para>Register that a given event must be reevaluated at a time, this usually happens because this event depended on an eventtarget that got changed at this time. </para>
        </briefdescription>
        <detaileddescription>
<para>This inserts the event into the changes queue so it will be evaluated in the next loop iteration. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="88" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="137" bodyend="144"/>
        <references refid="classopenage_1_1event_1_1_event_queue_1a7115692628b99b277fead8b39603c885" compoundref="eventqueue_8cpp" startline="82" endline="126">openage::event::EventQueue::add_change</references>
        <references refid="message_8h_1a49606be7356624568932ec81c0d429f4" compoundref="message_8h" startline="176">DBG</references>
        <references refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" compoundref="log_8cpp" startline="13" endline="15">openage::log::log</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1a2bd405975ded3f10fbf48eabd2a6cb49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classopenage_1_1event_1_1_event_queue" kindref="compound">EventQueue</ref> &amp;</type>
        <definition>const EventQueue&amp; openage::event::Loop::get_queue</definition>
        <argsstring>() const</argsstring>
        <name>get_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="92" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="92" bodyend="94"/>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1aa73104f71472a83e1afff4f11e0c619f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int openage::event::Loop::execute_events</definition>
        <argsstring>(const curve::time_t &amp;max_time, const std::shared_ptr&lt; State &gt; &amp;state)</argsstring>
        <name>execute_events</name>
        <param>
          <type>const <ref refid="namespaceopenage_1_1curve_1af909cf1de79df6389fd9431b7424b48a" kindref="member">curve::time_t</ref> &amp;</type>
          <declname>max_time</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Execute the events. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of events processed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="102" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="90" bodyend="155"/>
        <references refid="classopenage_1_1event_1_1_loop_1a9f9201d7ad7a6dccf71e3a6502982963" compoundref="event_2loop_8h" startline="130">active_event</references>
        <references refid="message_8h_1a49606be7356624568932ec81c0d429f4" compoundref="message_8h" startline="176">DBG</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1a7da54eb03b82d893e26af2af2749dd62" compoundref="eventqueue_8cpp" startline="153" endline="155">openage::event::EventQueue::get_event_queue</references>
        <references refid="classopenage_1_1event_1_1_event_store_1af94747a58143a4d16b0f94bd184444be" compoundref="eventstore_8cpp" startline="99" endline="122">openage::event::EventStore::get_sorted_events</references>
        <references refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" compoundref="log_8cpp" startline="13" endline="15">openage::log::log</references>
        <references refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" compoundref="fixed__point_8h" startline="475" endline="480">std::min</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1ac4990fe7904f09c54158de776c6cb805" compoundref="eventqueue_8cpp" startline="148" endline="150">openage::event::EventQueue::reenqueue</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">openage::event::EventClass::REPEAT</references>
        <references refid="classopenage_1_1event_1_1_event_store_1a895a291c20860520abba447e1cd48fd0" compoundref="eventstore_8cpp" startline="89" endline="91">openage::event::EventStore::size</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1aec381e61d472643475de6fa50ae7b5d8" compoundref="eventqueue_8cpp" startline="158" endline="176">openage::event::EventQueue::take_event</references>
        <referencedby refid="classopenage_1_1event_1_1_loop_1aeba9e515057a87d7fbfddb8585095de6" compoundref="loop_8cpp" startline="56" endline="87">reach_time</referencedby>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1event_1_1_loop_1a3cb0ae638435b575fe689c550b27a823" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::event::Loop::update_changes</definition>
        <argsstring>(const std::shared_ptr&lt; State &gt; &amp;state)</argsstring>
        <name>update_changes</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classopenage_1_1event_1_1_state" kindref="compound">State</ref> &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Call all the time change functions. </para>
        </briefdescription>
        <detaileddescription>
<para>This is constant on the state! </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="108" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.cpp" bodystart="158" bodyend="215"/>
        <references refid="classopenage_1_1event_1_1_event_queue_1a2f04cadaa84a8629b94020cb26b999ad" compoundref="eventqueue_8cpp" startline="184" endline="186">openage::event::EventQueue::clear_changes</references>
        <references refid="message_8h_1a49606be7356624568932ec81c0d429f4" compoundref="message_8h" startline="176">DBG</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717a46e158d5ce615a4f0057515b9a242188">openage::event::EventClass::DEPENDENCY</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717a66ce7f5b73a0a164407078b598f45e09">openage::event::EventClass::DEPENDENCY_IMMEDIATELY</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1a8f45163ce661267cf80d811a776c8733" compoundref="eventqueue_8cpp" startline="138" endline="145">openage::event::EventQueue::enqueue_change</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1a501fe0a6571ddf1a97bf6d7a6328d924" compoundref="eventqueue_8cpp" startline="179" endline="181">openage::event::EventQueue::get_changes</references>
        <references refid="namespaceopenage_1_1log_1a0eff614e7d6e818746700ed9d29e583f" compoundref="log_8cpp" startline="13" endline="15">openage::log::log</references>
        <references refid="namespacestd_1a34591a1d8ee5da3f16f56554590d5e16" compoundref="fixed__point_8h" startline="475" endline="480">std::min</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717aa32d16355630f112473d1ae254519c24">openage::event::EventClass::ONCE</references>
        <references refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" compoundref="event_2loop_8h" startline="124">queue</references>
        <references refid="classopenage_1_1event_1_1_event_queue_1a42433f50adffb7e0a20c43889292e54c" compoundref="eventqueue_8cpp" startline="129" endline="135">openage::event::EventQueue::remove</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717a5be68175be14dfaa080165456c2e9555">openage::event::EventClass::REPEAT</references>
        <references refid="classopenage_1_1event_1_1_event_class_1a911de25538d1280c375a90ed694bb717ab8cd801b107a9a8f62c5b61ea5646620">openage::event::EventClass::TRIGGER</references>
        <referencedby refid="classopenage_1_1event_1_1_loop_1aeba9e515057a87d7fbfddb8585095de6" compoundref="loop_8cpp" startline="56" endline="87">reach_time</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The core class to manage event class and targets. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2278">
        <label>openage::datastructure::PairingHeap&lt; T, compare, heapnode_t &gt;</label>
        <link refid="classopenage_1_1datastructure_1_1_pairing_heap"/>
        <childnode refid="2279" relation="usage">
          <edgelabel>#cmp</edgelabel>
        </childnode>
      </node>
      <node id="2276">
        <label>openage::util::SharedPtrLess&lt; Event &gt;</label>
        <link refid="structopenage_1_1util_1_1_shared_ptr_less"/>
        <childnode refid="2277" relation="template-instance">
          <edgelabel>&lt; Event &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2274">
        <label>openage::event::EventStore</label>
        <link refid="classopenage_1_1event_1_1_event_store"/>
        <childnode refid="2275" relation="usage">
          <edgelabel>+heap</edgelabel>
        </childnode>
      </node>
      <node id="2277">
        <label>openage::util::SharedPtrLess&lt; T &gt;</label>
        <link refid="structopenage_1_1util_1_1_shared_ptr_less"/>
      </node>
      <node id="2279">
        <label>compare</label>
      </node>
      <node id="2273">
        <label>openage::event::EventQueue</label>
        <link refid="classopenage_1_1event_1_1_event_queue"/>
        <childnode refid="2274" relation="usage">
          <edgelabel>-event_queue</edgelabel>
        </childnode>
      </node>
      <node id="2275">
        <label>openage::datastructure::PairingHeap&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;</label>
        <link refid="classopenage_1_1datastructure_1_1_pairing_heap"/>
        <childnode refid="2276" relation="usage">
          <edgelabel>#cmp</edgelabel>
        </childnode>
        <childnode refid="2278" relation="template-instance">
          <edgelabel>&lt; std::shared_ptr&lt; Event &gt;, util::SharedPtrLess&lt; Event &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="2272">
        <label>openage::event::Loop</label>
        <link refid="classopenage_1_1event_1_1_loop"/>
        <childnode refid="2273" relation="usage">
          <edgelabel>-queue</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" line="32" column="1" bodyfile="C:/Users/Jameson/Documents/git-projects/openage/libopenage/event/loop.h" bodystart="32" bodyend="133"/>
    <listofallmembers>
      <member refid="classopenage_1_1event_1_1_loop_1a9f9201d7ad7a6dccf71e3a6502982963" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>active_event</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a1904c3c6896c276199d5fd604663c3a2" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>add_event_class</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1ac56f6ba1b5422a37dd76082d1f12d588" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>classstore</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1adde017808ad3b24a4a95c6cad4fcd2db" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>create_change</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a345332e87684e73eeef16da46255882f" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>create_event</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1aea3bb40d2dfbca8a48c8389af357ebb0" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>create_event</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a0c611cd54ec98d5f8e2b8486e6aa5d9e" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>curveindex</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a5951d4eb106c31663bdf480e12d382fb" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>demo::curvepong</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1aa73104f71472a83e1afff4f11e0c619f" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>execute_events</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a2aa3c5ecf7ac25ee07ae50e0e206cf95" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>filters</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a2bd405975ded3f10fbf48eabd2a6cb49" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>get_queue</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1aea43d31d3b22e6ae29087df21aa014a7" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>onfilter</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1ada595233343c378554941df3ff039c4b" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>onfilter</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1aa3e92d18681ac0167d1b67e7ab147328" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>queue</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1aeba9e515057a87d7fbfddb8585095de6" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>reach_time</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a172ef3ff0f7d0586a06a6b356a7515f1" prot="public" virt="non-virtual"><scope>openage::event::Loop</scope><name>register_object</name></member>
      <member refid="classopenage_1_1event_1_1_loop_1a3cb0ae638435b575fe689c550b27a823" prot="private" virt="non-virtual"><scope>openage::event::Loop</scope><name>update_changes</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
