<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="namespaceqtsdl" kind="namespace" language="C++">
    <compoundname>qtsdl</compoundname>
    <innerclass refid="structqtsdl_1_1can__call" prot="public">qtsdl::can_call</innerclass>
    <innerclass refid="structqtsdl_1_1can__call__test" prot="public">qtsdl::can_call_test</innerclass>
    <innerclass refid="classqtsdl_1_1_ctx_extraction_exception" prot="public">qtsdl::CtxExtractionException</innerclass>
    <innerclass refid="classqtsdl_1_1_ctx_extraction_mode" prot="public">qtsdl::CtxExtractionMode</innerclass>
    <innerclass refid="classqtsdl_1_1_deferred_initial_constant_property_values" prot="public">qtsdl::DeferredInitialConstantPropertyValues</innerclass>
    <innerclass refid="classqtsdl_1_1_event_handling_quick_window" prot="public">qtsdl::EventHandlingQuickWindow</innerclass>
    <innerclass refid="classqtsdl_1_1_game_logic_caller" prot="public">qtsdl::GameLogicCaller</innerclass>
    <innerclass refid="structqtsdl_1_1gl__debug__parameters" prot="public">qtsdl::gl_debug_parameters</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_application" prot="public">qtsdl::GuiApplication</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_application_impl" prot="public">qtsdl::GuiApplicationImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_callback" prot="public">qtsdl::GuiCallback</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_dedicated_thread" prot="public">qtsdl::GuiDedicatedThread</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_engine" prot="public">qtsdl::GuiEngine</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_engine_impl" prot="public">qtsdl::GuiEngineImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_engine_impl_connection" prot="public">qtsdl::GuiEngineImplConnection</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_event_queue" prot="public">qtsdl::GuiEventQueue</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_event_queue_impl" prot="public">qtsdl::GuiEventQueueImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_image_provider" prot="public">qtsdl::GuiImageProvider</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_image_provider_impl" prot="public">qtsdl::GuiImageProviderImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_input" prot="public">qtsdl::GuiInput</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_input_impl" prot="public">qtsdl::GuiInputImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item" prot="public">qtsdl::GuiItem</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_base" prot="public">qtsdl::GuiItemBase</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_core_instantiator" prot="public">qtsdl::GuiItemCoreInstantiator</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_interface" prot="public">qtsdl::GuiItemInterface</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_link" prot="public">qtsdl::GuiItemLink</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_list_model" prot="public">qtsdl::GuiItemListModel</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_methods" prot="public">qtsdl::GuiItemMethods</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_origin" prot="public">qtsdl::GuiItemOrigin</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_item_q_object" prot="public">qtsdl::GuiItemQObject</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_list_model" prot="public">qtsdl::GuiListModel</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_live_reloader" prot="public">qtsdl::GuiLiveReloader</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_live_reloader_attached_property" prot="public">qtsdl::GuiLiveReloaderAttachedProperty</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_live_reloader_attached_property_provider" prot="public">qtsdl::GuiLiveReloaderAttachedPropertyProvider</innerclass>
    <innerclass refid="structqtsdl_1_1_gui_property_map" prot="public">qtsdl::GuiPropertyMap</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_property_map_impl" prot="public">qtsdl::GuiPropertyMapImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_renderer" prot="public">qtsdl::GuiRenderer</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_renderer_impl" prot="public">qtsdl::GuiRendererImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_rendering_ctx_activator" prot="public">qtsdl::GuiRenderingCtxActivator</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_rendering_setup_routines" prot="public">qtsdl::GuiRenderingSetupRoutines</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_separate_rendering_context" prot="public">qtsdl::GuiSeparateRenderingContext</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_singleton_item" prot="public">qtsdl::GuiSingletonItem</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_singleton_items_info" prot="public">qtsdl::GuiSingletonItemsInfo</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_subtree" prot="public">qtsdl::GuiSubtree</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_subtree_impl" prot="public">qtsdl::GuiSubtreeImpl</innerclass>
    <innerclass refid="classqtsdl_1_1_gui_unique_rendering_context" prot="public">qtsdl::GuiUniqueRenderingContext</innerclass>
    <innerclass refid="classqtsdl_1_1_inherits" prot="public">qtsdl::Inherits</innerclass>
    <innerclass refid="classqtsdl_1_1_persistent_core_holder" prot="public">qtsdl::PersistentCoreHolder</innerclass>
    <innerclass refid="classqtsdl_1_1_persistent_core_holder_base" prot="public">qtsdl::PersistentCoreHolderBase</innerclass>
    <innerclass refid="classqtsdl_1_1_qml_engine_with_singleton_items_info" prot="public">qtsdl::QmlEngineWithSingletonItemsInfo</innerclass>
    <innerclass refid="classqtsdl_1_1_recursive_directory_watcher" prot="public">qtsdl::RecursiveDirectoryWatcher</innerclass>
    <innerclass refid="classqtsdl_1_1_recursive_directory_watcher_worker" prot="public">qtsdl::RecursiveDirectoryWatcherWorker</innerclass>
    <innerclass refid="classqtsdl_1_1_shadow" prot="public">qtsdl::Shadow</innerclass>
    <innerclass refid="classqtsdl_1_1_temporary_disable_gui_renderer_sync" prot="public">qtsdl::TemporaryDisableGuiRendererSync</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap" prot="public">qtsdl::Unwrap</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_action_mode_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::ActionModeLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_asset_manager_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::AssetManagerLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_create_mode_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::CreateModeLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_editor_mode_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::EditorModeLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_engine_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::EngineLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_game_control_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::GameControlLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_game_main_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::GameMainLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_game_spec_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::GameSpecLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_generator_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::GeneratorLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_unwrap_3_01openage_1_1gui_1_1_output_mode_link_01_4" prot="public">qtsdl::Unwrap&lt; openage::gui::OutputModeLink &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap" prot="public">qtsdl::Wrap</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_action_mode_01_4" prot="public">qtsdl::Wrap&lt; openage::ActionMode &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_asset_manager_01_4" prot="public">qtsdl::Wrap&lt; openage::AssetManager &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_create_mode_01_4" prot="public">qtsdl::Wrap&lt; openage::CreateMode &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_editor_mode_01_4" prot="public">qtsdl::Wrap&lt; openage::EditorMode &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_engine_01_4" prot="public">qtsdl::Wrap&lt; openage::Engine &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_game_control_01_4" prot="public">qtsdl::Wrap&lt; openage::GameControl &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_game_main_handle_01_4" prot="public">qtsdl::Wrap&lt; openage::GameMainHandle &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_game_spec_handle_01_4" prot="public">qtsdl::Wrap&lt; openage::GameSpecHandle &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_generator_01_4" prot="public">qtsdl::Wrap&lt; openage::Generator &gt;</innerclass>
    <innerclass refid="structqtsdl_1_1_wrap_3_01openage_1_1_output_mode_01_4" prot="public">qtsdl::Wrap&lt; openage::OutputMode &gt;</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceqtsdl_1adfa85f2323dd14fc4cd2381acab77960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString qtsdl::name_tidier</definition>
        <argsstring>(const char *name)</argsstring>
        <name>name_tidier</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cleans a text from unneeded content like &quot;qtsdl&quot;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item.cpp" line="8" column="1" bodyfile="libopenage/gui/guisys/link/gui_item.cpp" bodystart="8" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1af1666c815e9f0f5791315530fd76b18d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="structqtsdl_1_1_unwrap" kindref="compound">Unwrap</ref>&lt; T &gt;::Type *</type>
        <definition>Unwrap&lt;T&gt;::Type* qtsdl::unwrap</definition>
        <argsstring>(T *t)</argsstring>
        <name>unwrap</name>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="37" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a82d73e11702a9770cca7fd06eb671a63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="structqtsdl_1_1_unwrap" kindref="compound">Unwrap</ref>&lt; T &gt;::Type *</type>
        <definition>const Unwrap&lt;T&gt;::Type* qtsdl::unwrap</definition>
        <argsstring>(const T *t)</argsstring>
        <name>unwrap</name>
        <param>
          <type>const T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="42" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a5a0a6c84da4886196d22ea5de4477e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>const <ref refid="structqtsdl_1_1_wrap" kindref="compound">Wrap</ref>&lt; U &gt;::Type *</type>
        <definition>const Wrap&lt;U&gt;::Type* qtsdl::wrap</definition>
        <argsstring>(const U *u)</argsstring>
        <name>wrap</name>
        <param>
          <type>const U *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="47" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a47e2bf10f69ccb92b771184271a47241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structqtsdl_1_1_wrap" kindref="compound">Wrap</ref>&lt; U &gt;::Type *</type>
        <definition>Wrap&lt;U&gt;::Type* qtsdl::wrap</definition>
        <argsstring>(U *u, typename std::enable_if&lt;!std::is_base_of&lt; GuiSingletonItem, typename Wrap&lt; U &gt;::Type &gt;::value &gt;::type *=nullptr)</argsstring>
        <name>wrap</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt;!std::is_base_of&lt; <ref refid="classqtsdl_1_1_gui_singleton_item" kindref="compound">GuiSingletonItem</ref>, typename <ref refid="structqtsdl_1_1_wrap" kindref="compound">Wrap</ref>&lt; U &gt;::Type &gt;::value &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="57" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a82f72a1001442aaeee79d5952de48b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type><ref refid="structqtsdl_1_1_wrap" kindref="compound">Wrap</ref>&lt; U &gt;::Type *</type>
        <definition>Wrap&lt;U&gt;::Type* qtsdl::wrap</definition>
        <argsstring>(U *u, typename std::enable_if&lt; std::is_base_of&lt; GuiSingletonItem, typename Wrap&lt; U &gt;::Type &gt;::value &gt;::type *=nullptr)</argsstring>
        <name>wrap</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt; std::is_base_of&lt; <ref refid="classqtsdl_1_1_gui_singleton_item" kindref="compound">GuiSingletonItem</ref>, typename <ref refid="structqtsdl_1_1_wrap" kindref="compound">Wrap</ref>&lt; U &gt;::Type &gt;::value &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="62" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a37d1caf872154786b3438feecde53449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>constexpr P &amp;&amp;</type>
        <definition>constexpr P&amp;&amp; qtsdl::wrap_if_can</definition>
        <argsstring>(typename std::remove_reference&lt; P &gt;::type &amp;&amp;p) noexcept</argsstring>
        <name>wrap_if_can</name>
        <param>
          <type>typename std::remove_reference&lt; P &gt;::type &amp;&amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="67" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a182757d03b4347d5c8577102b0c3259f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T qtsdl::wrap_if_can</definition>
        <argsstring>(typename Unwrap&lt; typename std::remove_pointer&lt; T &gt;::type &gt;::Type *u)</argsstring>
        <name>wrap_if_can</name>
        <param>
          <type>typename <ref refid="structqtsdl_1_1_unwrap" kindref="compound">Unwrap</ref>&lt; typename std::remove_pointer&lt; T &gt;::type &gt;::Type *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="72" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a83a6e7a16478b7ba6d336c26542afa71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename P</type>
          </param>
        </templateparamlist>
        <type>P</type>
        <definition>P qtsdl::unwrap_if_can</definition>
        <argsstring>(P &amp;p)</argsstring>
        <name>unwrap_if_can</name>
        <param>
          <type>P &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="77" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a993df7502f716e746ca8c9a2568c3292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Unwrap&lt; T &gt;::Type *</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type><ref refid="structqtsdl_1_1_unwrap" kindref="compound">Unwrap</ref>&lt; T &gt;::Type *</type>
        <definition>Unwrap&lt;T&gt;::Type* qtsdl::unwrap_if_can</definition>
        <argsstring>(T *t)</argsstring>
        <name>unwrap_if_can</name>
        <param>
          <type>T *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="82" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a6ccef384f823460943a2aaf5b074dce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Args</declname>
            <defname>Args</defname>
          </param>
        </templateparamlist>
        <type>constexpr void</type>
        <definition>constexpr void qtsdl::static_assert_about_unwrapping</definition>
        <argsstring>()</argsstring>
        <name>static_assert_about_unwrapping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>To print our own error message that warns about possible cause of the argument mismatch.</para>
<para>Unwrapping uses type trait &quot;Unwrap&quot; that is defined in the header with corresponding type. If the header is not included, then compiler considers it as a basic type and tries to pass it wrapped to a function that expects an unwrapped type.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>F</parametername>
</parameternamelist>
<parameterdescription>
<para>callable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments to test against the callable </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/gui_item_link.h" line="117" column="1" bodyfile="libopenage/gui/guisys/link/gui_item_link.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a220ce9f0bb41d3f42a8b559e454ed4bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T qtsdl::checked_static_cast</definition>
        <argsstring>(U *u)</argsstring>
        <name>checked_static_cast</name>
        <param>
          <type>U *</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/link/qtsdl_checked_static_cast.h" line="10" column="1" bodyfile="libopenage/gui/guisys/link/qtsdl_checked_static_cast.h" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1ac53ee23059783401c6e7bcdfc1dfd314" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structqtsdl_1_1gl__debug__parameters" kindref="compound">gl_debug_parameters</ref></type>
        <definition>gl_debug_parameters qtsdl::get_current_opengl_debug_parameters</definition>
        <argsstring>(const QOpenGLContext &amp;current_source_context)</argsstring>
        <name>get_current_opengl_debug_parameters</name>
        <param>
          <type>const QOpenGLContext &amp;</type>
          <declname>current_source_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get debugging settings of the current GL context</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>current_source_context</parametername>
</parameternamelist>
<parameterdescription>
<para>current GL context </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>debugging settings </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/private/opengl_debug_logger.cpp" line="18" column="1" bodyfile="libopenage/gui/guisys/private/opengl_debug_logger.cpp" bodystart="18" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1ab9d9e0ee6419f87d80c1ed0067c3c08f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void qtsdl::apply_opengl_debug_parameters</definition>
        <argsstring>(gl_debug_parameters params, QOpenGLContext &amp;current_dest_context)</argsstring>
        <name>apply_opengl_debug_parameters</name>
        <param>
          <type><ref refid="structqtsdl_1_1gl__debug__parameters" kindref="compound">gl_debug_parameters</ref></type>
          <declname>params</declname>
        </param>
        <param>
          <type>QOpenGLContext &amp;</type>
          <declname>current_dest_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a GL logger in the current GL context</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>debugging settings </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>current_dest_context</parametername>
</parameternamelist>
<parameterdescription>
<para>current GL context to which parameters will be applied </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/private/opengl_debug_logger.cpp" line="30" column="1" bodyfile="libopenage/gui/guisys/private/opengl_debug_logger.cpp" bodystart="30" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1afe4ced3b28358a42a4c178c3e85d64ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; QVariant, WId &gt;</type>
        <definition>std::tuple&lt; QVariant, WId &gt; qtsdl::extract_native_context</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>extract_native_context</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current context (or null) and id of the window </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/private/platforms/context_extraction.h" line="18" column="1" bodyfile="libopenage/gui/guisys/private/platforms/context_extraction_cocoa.mm" bodystart="14" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a4932b95840fb2a53ea19d235b68dc6c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; QVariant, std::function&lt; void()&gt; &gt;</type>
        <definition>std::tuple&lt; QVariant, std::function&lt; void()&gt; &gt; qtsdl::extract_native_context_and_switchback_func</definition>
        <argsstring>(SDL_Window *window)</argsstring>
        <name>extract_native_context_and_switchback_func</name>
        <param>
          <type>SDL_Window *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current context (or null) and function to get it back to the window </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/private/platforms/context_extraction.h" line="23" column="1" bodyfile="libopenage/gui/guisys/private/platforms/context_extraction_cocoa.mm" bodystart="35" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1aca5f9f84e1ed643cfcc32eda09cae365" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string qtsdl::GuiPropertyMap::getv&lt; std::string &gt;</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>GuiPropertyMap::getv&lt; std::string &gt;</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/public/gui_property_map.cpp" line="100" column="1" bodyfile="libopenage/gui/guisys/public/gui_property_map.cpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a48d15a444bc80695bf6dc177097de411" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void qtsdl::GuiPropertyMap::setv&lt; const std::string &amp; &gt;</definition>
        <argsstring>(const char *name, const std::string &amp;v)</argsstring>
        <name>GuiPropertyMap::setv&lt; const std::string &amp; &gt;</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/public/gui_property_map.cpp" line="105" column="1" bodyfile="libopenage/gui/guisys/public/gui_property_map.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a52fafee7e81c09f448f3606473fd6f92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; qtsdl::GuiPropertyMap::getv&lt; std::vector&lt; std::string &gt; &gt;</definition>
        <argsstring>(const char *name) const</argsstring>
        <name>GuiPropertyMap::getv&lt; std::vector&lt; std::string &gt; &gt;</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/public/gui_property_map.cpp" line="110" column="1" bodyfile="libopenage/gui/guisys/public/gui_property_map.cpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespaceqtsdl_1a4f0cb678fe41ddc34eb16568a756fcf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void qtsdl::GuiPropertyMap::setv&lt; const std::vector&lt; std::string &gt; &amp; &gt;</definition>
        <argsstring>(const char *name, const std::vector&lt; std::string &gt; &amp;v)</argsstring>
        <name>GuiPropertyMap::setv&lt; const std::vector&lt; std::string &gt; &amp; &gt;</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/gui/guisys/public/gui_property_map.cpp" line="120" column="1" bodyfile="libopenage/gui/guisys/public/gui_property_map.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libopenage/assetmanager.h" line="14" column="1"/>
  </compounddef>
</doxygen>
