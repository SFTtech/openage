<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1util_1_1_matrix" kind="class" language="C++" prot="public">
    <compoundname>openage::util::Matrix</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::array&lt; std::array&lt; T, N &gt;, M &gt;</basecompoundref>
    <includes refid="matrix_8h" local="no">matrix.h</includes>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" prot="public" static="no">
        <type><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref>&lt; M, N, T &gt;</type>
        <definition>using openage::util::Matrix&lt; M, N, T &gt;::this_type =  Matrix&lt;M, N, T&gt;</definition>
        <argsstring></argsstring>
        <name>this_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="24" column="1" bodyfile="libopenage/util/matrix.h" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" prot="public" static="yes" mutable="no">
        <type>constexpr float</type>
        <definition>constexpr float openage::util::Matrix&lt; M, N, T &gt;::default_eps</definition>
        <argsstring></argsstring>
        <name>default_eps</name>
        <initializer>= 1e-5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="26" column="1" bodyfile="libopenage/util/matrix.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a05cddcbaea57d38a247fc3f6bfe9732b" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t openage::util::Matrix&lt; M, N, T &gt;::rows</definition>
        <argsstring></argsstring>
        <name>rows</name>
        <initializer>= M</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="28" column="1" bodyfile="libopenage/util/matrix.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a5e6ca60e377f5be70baace533d677b79" prot="public" static="yes" mutable="no">
        <type>constexpr size_t</type>
        <definition>constexpr size_t openage::util::Matrix&lt; M, N, T &gt;::cols</definition>
        <argsstring></argsstring>
        <name>cols</name>
        <initializer>= N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="29" column="1" bodyfile="libopenage/util/matrix.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool openage::util::Matrix&lt; M, N, T &gt;::is_square</definition>
        <argsstring></argsstring>
        <name>is_square</name>
        <initializer>= (M == N)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="30" column="1" bodyfile="libopenage/util/matrix.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a797428914210319763ae300a914e9177" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool openage::util::Matrix&lt; M, N, T &gt;::is_row_vector</definition>
        <argsstring></argsstring>
        <name>is_row_vector</name>
        <initializer>= (M == 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="31" column="1" bodyfile="libopenage/util/matrix.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" prot="public" static="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool openage::util::Matrix&lt; M, N, T &gt;::is_column_vector</definition>
        <argsstring></argsstring>
        <name>is_column_vector</name>
        <initializer>= (N == 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="32" column="1" bodyfile="libopenage/util/matrix.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1ac4b352fc7e312facc880e5715bd42f01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>openage::util::Matrix&lt; M, N, T &gt;::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize the matrix to zeroes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="37" column="1" bodyfile="libopenage/util/matrix.h" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1aceff6c42bedce3eb5850b05ab6145112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::util::Matrix&lt; M, N, T &gt;::~Matrix</definition>
        <argsstring>()=default</argsstring>
        <name>~Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1aaf3e43eed1934588bcf877c435502934" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>cond</declname>
            <defname>cond</defname>
            <defval><ref refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" kindref="member">is_column_vector</ref></defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;cond&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>openage::util::Matrix&lt; M, N, T &gt;::Matrix</definition>
        <argsstring>(const Vector&lt; M, T &gt; &amp;vec)</argsstring>
        <name>Matrix</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector</ref>&lt; M, T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor from <ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="52" column="1" bodyfile="libopenage/util/matrix.h" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a19707201a8fcd11cbeb9f91f72f7ccfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type></type>
        <definition>openage::util::Matrix&lt; M, N, T &gt;::Matrix</definition>
        <argsstring>(Ts ... args)</argsstring>
        <name>Matrix</name>
        <param>
          <type>Ts ...</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor with N*M values </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="62" column="1" bodyfile="libopenage/util/matrix.h" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1ac1bc212dbfd151ce922ba27cad25a074" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool openage::util::Matrix&lt; M, N, T &gt;::equals</definition>
        <argsstring>(const this_type &amp;other, float eps=default_eps) const</argsstring>
        <name>equals</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>float</type>
          <declname>eps</declname>
          <defval><ref refid="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" kindref="member">default_eps</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if both matrices contain the same values within epsilon. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="89" column="1" bodyfile="libopenage/util/matrix.h" bodystart="89" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a23f79a50b5b6c3461e674e7b07432ff7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>P</declname>
            <defname>P</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref>&lt; M, P, T &gt;</type>
        <definition>Matrix&lt;M, P, T&gt; openage::util::Matrix&lt; M, N, T &gt;::operator *</definition>
        <argsstring>(const Matrix&lt; N, P, T &gt; &amp;other) const</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref>&lt; N, P, T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref> multiplication </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="104" column="1" bodyfile="libopenage/util/matrix.h" bodystart="104" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1aa58e34206c0925efc722483e34ada587" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref>&lt; M, 1, T &gt;</type>
        <definition>Matrix&lt;M, 1, T&gt; openage::util::Matrix&lt; M, N, T &gt;::operator *</definition>
        <argsstring>(const Vector&lt; M, T &gt; &amp;vec) const</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector</ref>&lt; M, T &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Matrix-Vector multiplication </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="120" column="1" bodyfile="libopenage/util/matrix.h" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a7b100e3972d47f11b30e241809ec29a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref></type>
        <definition>this_type openage::util::Matrix&lt; M, N, T &gt;::operator+</definition>
        <argsstring>(const this_type &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref> addition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="127" column="1" bodyfile="libopenage/util/matrix.h" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1ad13f1ffce8d8f40098cb63cb8a609330" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref></type>
        <definition>this_type openage::util::Matrix&lt; M, N, T &gt;::operator -</definition>
        <argsstring>(const this_type &amp;other) const</argsstring>
        <name>operator -</name>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref> subtraction </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="140" column="1" bodyfile="libopenage/util/matrix.h" bodystart="140" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a7e2887f1612a7a82733967b1856434ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void openage::util::Matrix&lt; M, N, T &gt;::operator *=</definition>
        <argsstring>(T other)</argsstring>
        <name>operator *=</name>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar multiplication with assignment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="153" column="1" bodyfile="libopenage/util/matrix.h" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a7b93d69889c489a4137c3f7a07708050" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref></type>
        <definition>this_type openage::util::Matrix&lt; M, N, T &gt;::operator *</definition>
        <argsstring>(T other) const</argsstring>
        <name>operator *</name>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar multiplication </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="164" column="1" bodyfile="libopenage/util/matrix.h" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a3d5d06bd34e0a9eea626b00b080ad3d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void openage::util::Matrix&lt; M, N, T &gt;::operator/=</definition>
        <argsstring>(T other)</argsstring>
        <name>operator/=</name>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar division with assignment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="173" column="1" bodyfile="libopenage/util/matrix.h" bodystart="173" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a47559fde49b3a9634d95596d87fbea98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref></type>
        <definition>this_type openage::util::Matrix&lt; M, N, T &gt;::operator/</definition>
        <argsstring>(T other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar division </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="184" column="1" bodyfile="libopenage/util/matrix.h" bodystart="184" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a4950945a55363fd77668b983001d55b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref>&lt; N, M, T &gt;</type>
        <definition>Matrix&lt;N, M, T&gt; openage::util::Matrix&lt; M, N, T &gt;::transpose</definition>
        <argsstring>() const</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transposition </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="193" column="1" bodyfile="libopenage/util/matrix.h" bodystart="193" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a58d27b46e7ceaddc0c7ff2e0e9f2a6cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>cond</declname>
            <defname>cond</defname>
            <defval><ref refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" kindref="member">is_column_vector</ref></defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;cond&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector</ref>&lt; M, T &gt;</type>
        <definition>Vector&lt;M, T&gt; openage::util::Matrix&lt; M, N, T &gt;::to_vector</definition>
        <argsstring>() const</argsstring>
        <name>to_vector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Conversion to <ref refid="classopenage_1_1util_1_1_vector" kindref="compound">Vector</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="208" column="1" bodyfile="libopenage/util/matrix.h" bodystart="208" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1ae8e23f59ac0793b10d8487abac1e2edb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>cond</declname>
            <defname>cond</defname>
            <defval><ref refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" kindref="member">is_square</ref></defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;cond&gt;::type</defval>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T openage::util::Matrix&lt; M, N, T &gt;::trace</definition>
        <argsstring>() const</argsstring>
        <name>trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref> trace: the sum of all diagonal entries </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="221" column="1" bodyfile="libopenage/util/matrix.h" bodystart="221" bodyend="229"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classopenage_1_1util_1_1_matrix_1a0ba437147db630d1ca901f870764a024" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>cond</declname>
            <defname>cond</defname>
            <defval><ref refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" kindref="member">is_square</ref></defval>
          </param>
          <param>
            <type>typename</type>
            <defval>typename std::enable_if&lt;cond&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref></type>
        <definition>static this_type openage::util::Matrix&lt; M, N, T &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructs the identity matrix for the current size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="76" column="1" bodyfile="libopenage/util/matrix.h" bodystart="76" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classopenage_1_1util_1_1_matrix_1a256d8ad5c2e631d1727aae6e813289f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;o, const this_type &amp;mat)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" kindref="member">this_type</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print to output stream using &apos;&lt;&lt;&apos; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/util/matrix.h" line="234" column="1" bodyfile="libopenage/util/matrix.h" bodystart="234" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classopenage_1_1util_1_1_matrix" kindref="compound">Matrix</ref> class with arithmetic. M rows, N columns. T = underlying single value type (float, double, ...) </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3187">
        <label>std::array&lt; std::array&lt; T, N &gt;, M &gt;</label>
      </node>
      <node id="3186">
        <label>openage::util::Matrix&lt; M, N, T &gt;</label>
        <link refid="classopenage_1_1util_1_1_matrix"/>
        <childnode refid="3187" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3189">
        <label>std::array&lt; std::array&lt; T, N &gt;, M &gt;</label>
      </node>
      <node id="3188">
        <label>openage::util::Matrix&lt; M, N, T &gt;</label>
        <link refid="classopenage_1_1util_1_1_matrix"/>
        <childnode refid="3189" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libopenage/util/matrix.h" line="20" column="1" bodyfile="libopenage/util/matrix.h" bodystart="20" bodyend="252"/>
    <listofallmembers>
      <member refid="classopenage_1_1util_1_1_matrix_1a5e6ca60e377f5be70baace533d677b79" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>cols</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a17a9f1eb11a77fa366b55f0a1143b541" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>default_eps</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1ac1bc212dbfd151ce922ba27cad25a074" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>equals</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a0ba437147db630d1ca901f870764a024" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>identity</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a7eeb76d6d746657e82580bca16bd0b95" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>is_column_vector</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a797428914210319763ae300a914e9177" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>is_row_vector</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a775ebdbef36a23cf8a7e62d7517f9303" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>is_square</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1ac4b352fc7e312facc880e5715bd42f01" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>Matrix</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1aaf3e43eed1934588bcf877c435502934" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>Matrix</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a19707201a8fcd11cbeb9f91f72f7ccfd" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>Matrix</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a23f79a50b5b6c3461e674e7b07432ff7" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator *</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1aa58e34206c0925efc722483e34ada587" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator *</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a7b93d69889c489a4137c3f7a07708050" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator *</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a7e2887f1612a7a82733967b1856434ac" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator *=</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1ad13f1ffce8d8f40098cb63cb8a609330" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator -</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a7b100e3972d47f11b30e241809ec29a4" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator+</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a47559fde49b3a9634d95596d87fbea98" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator/</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a3d5d06bd34e0a9eea626b00b080ad3d2" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator/=</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a256d8ad5c2e631d1727aae6e813289f0" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>operator&lt;&lt;</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a05cddcbaea57d38a247fc3f6bfe9732b" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>rows</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a5ea0a61c6ed750526162578bb981ee24" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>this_type</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a58d27b46e7ceaddc0c7ff2e0e9f2a6cf" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>to_vector</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1ae8e23f59ac0793b10d8487abac1e2edb" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>trace</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1a4950945a55363fd77668b983001d55b5" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>transpose</name></member>
      <member refid="classopenage_1_1util_1_1_matrix_1aceff6c42bedce3eb5850b05ab6145112" prot="public" virt="non-virtual"><scope>openage::util::Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
