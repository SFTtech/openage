<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classopenage_1_1renderer_1_1_geometry" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>openage::renderer::Geometry</compoundname>
    <derivedcompoundref refid="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry" prot="public" virt="non-virtual">openage::renderer::opengl::GlGeometry</derivedcompoundref>
    <includes refid="geometry_8h" local="no">geometry.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classopenage_1_1renderer_1_1_geometry_1a2dcfbb664dc397e48d177243d0c57731" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceopenage_1_1renderer_1af2d33145c158a54c1817ae1fc0aae8cc" kindref="member">geometry_t</ref></type>
        <definition>geometry_t openage::renderer::Geometry::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="46" column="1" bodyfile="libopenage/renderer/geometry.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classopenage_1_1renderer_1_1_geometry_1a711a56b1b5c4bb7f0f7daa350fb9f9b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual openage::renderer::Geometry::~Geometry</definition>
        <argsstring>()=default</argsstring>
        <name>~Geometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1_geometry_1af798beba5997d99d6cd882ac4451cc25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceopenage_1_1renderer_1af2d33145c158a54c1817ae1fc0aae8cc" kindref="member">geometry_t</ref></type>
        <definition>geometry_t openage::renderer::Geometry::get_type</definition>
        <argsstring>() const</argsstring>
        <name>get_type</name>
        <briefdescription>
<para>Returns the type of this geometry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="28" column="1" bodyfile="libopenage/renderer/geometry.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1_geometry_1afb295fcb36abc50ddc3925caf0fb5d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void openage::renderer::Geometry::update_verts</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; const &amp;verts)</argsstring>
        <name>update_verts</name>
        <param>
          <type>std::vector&lt; uint8_t &gt; const &amp;</type>
          <declname>verts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In a meshed geometry, updates the vertex data. The size and type of the vertex data has to be the same as before. If the mesh is indexed, indices will stay the same. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>if</parametername>
</parameternamelist>
<parameterdescription>
<para>there is a size mismatch between the new and old vertex data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="33" column="1" bodyfile="libopenage/renderer/geometry.cpp" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="classopenage_1_1renderer_1_1_geometry_1a37b4e546a79628294086815a670b3376" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void openage::renderer::Geometry::update_verts_offset</definition>
        <argsstring>(std::vector&lt; uint8_t &gt; const &amp;verts, size_t offset)=0</argsstring>
        <name>update_verts_offset</name>
        <reimplementedby refid="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry_1ab1574744e9d7afafa476f648c2abcf21">update_verts_offset</reimplementedby>
        <param>
          <type>std::vector&lt; uint8_t &gt; const &amp;</type>
          <declname>verts</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In a meshed geometry, updates the vertex data starting from the offset-th vertex. The type of the vertex data has to be the same as it was on initializing the geometry. The size plus the offset cannot exceed the previous size of the vertex data. If the mesh is indexed, indices will stay the same. <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>if</parametername>
</parameternamelist>
<parameterdescription>
<para>there is a size mismatch between the new and old vertex data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="39" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classopenage_1_1renderer_1_1_geometry_1abd04967c368d566677e44d49f370135d" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>openage::renderer::Geometry::Geometry</definition>
        <argsstring>(geometry_t type)</argsstring>
        <name>Geometry</name>
        <param>
          <type><ref refid="namespaceopenage_1_1renderer_1af2d33145c158a54c1817ae1fc0aae8cc" kindref="member">geometry_t</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Initialize the geometry to a given type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libopenage/renderer/geometry.h" line="43" column="1" bodyfile="libopenage/renderer/geometry.cpp" bodystart="9" bodyend="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A class representing geometry to be passed to a draw call. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2367">
        <label>openage::renderer::Geometry</label>
        <link refid="classopenage_1_1renderer_1_1_geometry"/>
      </node>
      <node id="2368">
        <label>openage::renderer::opengl::GlGeometry</label>
        <link refid="classopenage_1_1renderer_1_1opengl_1_1_gl_geometry"/>
        <childnode refid="2367" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2369">
        <label>openage::renderer::Geometry</label>
        <link refid="classopenage_1_1renderer_1_1_geometry"/>
      </node>
    </collaborationgraph>
    <location file="libopenage/renderer/geometry.h" line="23" column="1" bodyfile="libopenage/renderer/geometry.h" bodystart="23" bodyend="47"/>
    <listofallmembers>
      <member refid="classopenage_1_1renderer_1_1_geometry_1abd04967c368d566677e44d49f370135d" prot="protected" virt="non-virtual"><scope>openage::renderer::Geometry</scope><name>Geometry</name></member>
      <member refid="classopenage_1_1renderer_1_1_geometry_1af798beba5997d99d6cd882ac4451cc25" prot="public" virt="non-virtual"><scope>openage::renderer::Geometry</scope><name>get_type</name></member>
      <member refid="classopenage_1_1renderer_1_1_geometry_1a2dcfbb664dc397e48d177243d0c57731" prot="private" virt="non-virtual"><scope>openage::renderer::Geometry</scope><name>type</name></member>
      <member refid="classopenage_1_1renderer_1_1_geometry_1afb295fcb36abc50ddc3925caf0fb5d03" prot="public" virt="non-virtual"><scope>openage::renderer::Geometry</scope><name>update_verts</name></member>
      <member refid="classopenage_1_1renderer_1_1_geometry_1a37b4e546a79628294086815a670b3376" prot="public" virt="pure-virtual"><scope>openage::renderer::Geometry</scope><name>update_verts_offset</name></member>
      <member refid="classopenage_1_1renderer_1_1_geometry_1a711a56b1b5c4bb7f0f7daa350fb9f9b7" prot="public" virt="virtual"><scope>openage::renderer::Geometry</scope><name>~Geometry</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
