<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="pyobject_8cpp" kind="file" language="C++">
    <compoundname>pyobject.cpp</compoundname>
    <includes refid="pyobject_8h" local="yes">pyobject.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">functional</includes>
    <incdepgraph>
      <node id="19943">
        <label>list</label>
      </node>
      <node id="19935">
        <label>atomic</label>
      </node>
      <node id="19940">
        <label>iomanip</label>
      </node>
      <node id="19919">
        <label>functional</label>
      </node>
      <node id="19947">
        <label>setup.h</label>
        <link refid="setup_8h"/>
        <childnode refid="19919" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
      </node>
      <node id="19914">
        <label>cstdint</label>
      </node>
      <node id="19938">
        <label>strings.h</label>
        <link refid="strings_8h"/>
        <childnode refid="19939" relation="include">
        </childnode>
        <childnode refid="19919" relation="include">
        </childnode>
        <childnode refid="19940" relation="include">
        </childnode>
        <childnode refid="19928" relation="include">
        </childnode>
        <childnode refid="19941" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
        <childnode refid="19916" relation="include">
        </childnode>
      </node>
      <node id="19925">
        <label>exctranslate.h</label>
        <link refid="exctranslate_8h"/>
        <childnode refid="19926" relation="include">
        </childnode>
      </node>
      <node id="19929">
        <label>stdexcept</label>
      </node>
      <node id="19924">
        <label>../util/language.h</label>
        <link refid="language_8h"/>
      </node>
      <node id="19942">
        <label>logsink.h</label>
        <link refid="logsink_8h"/>
        <childnode refid="19943" relation="include">
        </childnode>
        <childnode refid="19920" relation="include">
        </childnode>
        <childnode refid="19944" relation="include">
        </childnode>
      </node>
      <node id="19939">
        <label>cstdarg</label>
      </node>
      <node id="19915">
        <label>string</label>
      </node>
      <node id="19930">
        <label>../log/message.h</label>
        <link refid="message_8h"/>
        <childnode refid="19914" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
        <childnode refid="19931" relation="include">
        </childnode>
        <childnode refid="19932" relation="include">
        </childnode>
        <childnode refid="19934" relation="include">
        </childnode>
        <childnode refid="19942" relation="include">
        </childnode>
        <childnode refid="19944" relation="include">
        </childnode>
      </node>
      <node id="19932">
        <label>../util/constexpr.h</label>
        <link refid="constexpr_8h"/>
        <childnode refid="19933" relation="include">
        </childnode>
      </node>
      <node id="19934">
        <label>../util/stringformatter.h</label>
        <link refid="stringformatter_8h"/>
        <childnode refid="19935" relation="include">
        </childnode>
        <childnode refid="19928" relation="include">
        </childnode>
        <childnode refid="19936" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
        <childnode refid="19937" relation="include">
        </childnode>
        <childnode refid="19938" relation="include">
        </childnode>
      </node>
      <node id="19913">
        <label>pyobject.h</label>
        <link refid="pyobject_8h"/>
        <childnode refid="19914" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
        <childnode refid="19916" relation="include">
        </childnode>
        <childnode refid="19917" relation="include">
        </childnode>
        <childnode refid="19918" relation="include">
        </childnode>
      </node>
      <node id="19926">
        <label>../error/error.h</label>
        <link refid="error_2error_8h"/>
        <childnode refid="19927" relation="include">
        </childnode>
        <childnode refid="19928" relation="include">
        </childnode>
        <childnode refid="19929" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
        <childnode refid="19930" relation="include">
        </childnode>
      </node>
      <node id="19912">
        <label>libopenage/pyinterface/pyobject.cpp</label>
        <link refid="pyobject_8cpp"/>
        <childnode refid="19913" relation="include">
        </childnode>
        <childnode refid="19948" relation="include">
        </childnode>
        <childnode refid="19919" relation="include">
        </childnode>
      </node>
      <node id="19946">
        <label>typeinfo</label>
      </node>
      <node id="19916">
        <label>vector</label>
      </node>
      <node id="19922">
        <label>ciso646</label>
      </node>
      <node id="19941">
        <label>sstream</label>
      </node>
      <node id="19921">
        <label>../util/compiler.h</label>
        <link refid="compiler_8h"/>
        <childnode refid="19922" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
        <childnode refid="19923" relation="include">
        </childnode>
      </node>
      <node id="19923">
        <label>signal.h</label>
        <link refid="signal_8h"/>
        <childnode refid="19923" relation="include">
        </childnode>
      </node>
      <node id="19937">
        <label>externalsstream.h</label>
        <link refid="externalsstream_8h"/>
        <childnode refid="19927" relation="include">
        </childnode>
        <childnode refid="19915" relation="include">
        </childnode>
      </node>
      <node id="19944">
        <label>level.h</label>
        <link refid="level_8h"/>
        <childnode refid="19945" relation="include">
        </childnode>
      </node>
      <node id="19933">
        <label>cstdlib</label>
      </node>
      <node id="19927">
        <label>iostream</label>
      </node>
      <node id="19918">
        <label>functional.h</label>
        <link refid="functional_8h"/>
        <childnode refid="19919" relation="include">
        </childnode>
        <childnode refid="19920" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
        <childnode refid="19924" relation="include">
        </childnode>
        <childnode refid="19925" relation="include">
        </childnode>
        <childnode refid="19947" relation="include">
        </childnode>
      </node>
      <node id="19920">
        <label>mutex</label>
      </node>
      <node id="19917">
        <label>defs.h</label>
        <link refid="defs_8h"/>
      </node>
      <node id="19936">
        <label>type_traits</label>
      </node>
      <node id="19931">
        <label>config.h</label>
      </node>
      <node id="19948">
        <label>algorithm</label>
      </node>
      <node id="19928">
        <label>memory</label>
      </node>
      <node id="19945">
        <label>../util/enum.h</label>
        <link refid="enum_8h"/>
        <childnode refid="19927" relation="include">
        </childnode>
        <childnode refid="19946" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1pyinterface">openage::pyinterface</innernamespace>
    <innernamespace refid="namespaceopenage_1_1py">openage::py</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2019<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pyobject_8h" kindref="compound">pyobject.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">pyinterface<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>()<sp/>noexcept</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>{</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">}<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0c2f2bd7dfd4f04b439793b220e02db9" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(<ref refid="defs_8h_1afcb7b4d4ac414eefbeef02c60e6acb52" kindref="member">PyObject</ref><sp/>*<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>{<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>}<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" kindref="member">py_xincref</ref>.call(this-&gt;<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a2a19b9d28f9745e7225678d18d905733" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;other)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>{other.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>}<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" kindref="member">py_xincref</ref>.call(this-&gt;<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a5f19d6f1fda831508e171d79373c2903" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;&amp;other)<sp/>noexcept</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>{other.ref}<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>incref,<sp/>because<sp/>we<sp/>simultaneously<sp/>clear<sp/>other.ref.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>other.ref<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a1c1b91b6056f0e370402678645129d8a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a1c1b91b6056f0e370402678645129d8a" kindref="member">PyObjectRef::operator =</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>=<sp/>other.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" kindref="member">py_xincref</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ab39e1ac132d7e685d0f818039db849c0" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a1c1b91b6056f0e370402678645129d8a" kindref="member">PyObjectRef::operator =</ref>(<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;&amp;other)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>=<sp/>other.ref;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>incref,<sp/>because<sp/>we<sp/>simultaneously<sp/>clear<sp/>other.ref.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>other.ref<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="73" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aa9fbbec1a69f4d747749d1c664aec737" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref>(py::<ref refid="namespaceopenage_1_1py_1a1f03713cea0d4ee15fc445111404e7d7" kindref="member">integer</ref>(number))<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="82" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a4bb8cbf285476e6ef7cd7a4bf5961a65" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref>(py::<ref refid="namespaceopenage_1_1py_1a5108334e805e942718d59b97160775d1" kindref="member">bytes</ref>(data))<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="91" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a1dc37921549165a63be1eecf48c31859" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a780793e26a1e574fda456f688e8d2f11" kindref="member">PyObjectRef::PyObjectRef</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;txt)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref>(py::<ref refid="namespaceopenage_1_1py_1a5108334e805e942718d59b97160775d1" kindref="member">bytes</ref>(txt))<sp/>{}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ad9e8f1a9f289eb345ec3565f888ae23a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ad9e8f1a9f289eb345ec3565f888ae23a" kindref="member">PyObjectRef::~PyObjectRef</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0e0024ba18b74f15b0aa56986a911d95" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0e0024ba18b74f15b0aa56986a911d95" kindref="member">PyObjectRef::set_ref</ref>(<ref refid="defs_8h_1afcb7b4d4ac414eefbeef02c60e6acb52" kindref="member">PyObject</ref><sp/>*<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;ref<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>.call(this-&gt;ref);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ref<sp/>=<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" kindref="member">py_xincref</ref>.call(this-&gt;ref);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a626ecb36c29963065f287ac3529641dc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a626ecb36c29963065f287ac3529641dc" kindref="member">PyObjectRef::set_ref_without_incrementing</ref>(<ref refid="defs_8h_1afcb7b4d4ac414eefbeef02c60e6acb52" kindref="member">PyObject</ref><sp/>*<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(this-&gt;ref<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>.call(this-&gt;ref);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ref<sp/>=<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1acd17e87d491659af8fb3ac621f9f4732" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1acd17e87d491659af8fb3ac621f9f4732" kindref="member">PyObjectRef::str</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1aee648d1c95091e0207f3bf9d4f69dd01" kindref="member">py_str</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afc75f5918216b0b5c64c7a3f83626ea6" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afc75f5918216b0b5c64c7a3f83626ea6" kindref="member">PyObjectRef::repr</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1afc5196e488904c84cd675b55494f3695" kindref="member">py_repr</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a76e2c7f1e3147d1d726d5c277daff1f8" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a76e2c7f1e3147d1d726d5c277daff1f8" kindref="member">PyObjectRef::bytes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a1da67fe4551652e4267a218123e27309" kindref="member">py_bytes</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a09ea43fdc78d2458748887fa72ae1a9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a09ea43fdc78d2458748887fa72ae1a9d" kindref="member">PyObjectRef::len</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad0be0c0750d33fff88a405db89a1dbe7" kindref="member">py_len</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a2790fe7f033dc93a820a13535421aa98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a2790fe7f033dc93a820a13535421aa98" kindref="member">PyObjectRef::callable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a2ff686c130c1870c58243e9f9530685a" kindref="member">py_callable</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aaacc1330b0393004944477d15e9d82b0" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aaacc1330b0393004944477d15e9d82b0" kindref="member">PyObjectRef::call_impl</ref>(std::vector&lt;PyObjectRef&gt;<sp/>&amp;args)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>result;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(args.empty())<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a63957aa9bf0c9835493a16ff6b543418" kindref="member">py_call0</ref>.call(&amp;result,<sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;PyObject<sp/>*&gt;<sp/>py_args{args.size()};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(args.begin(),<sp/>args.end(),<sp/>py_args.begin(),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::mem_fn(&amp;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">PyObjectRef::get_ref</ref>));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a8aa560a3c62f746b36bb98e84bf1934c" kindref="member">py_calln</ref>.call(&amp;result,<sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>py_args);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0298b14066d342bc4b85a679ad777f28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0298b14066d342bc4b85a679ad777f28" kindref="member">PyObjectRef::hasattr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a72f6244131021857b5da82ec1a2b60b4" kindref="member">py_hasattr</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afb0f22eaba43f4419e7edf3eaa1f957a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afb0f22eaba43f4419e7edf3eaa1f957a" kindref="member">PyObjectRef::getattr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>result;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3cf5d417d7e8b932bd437163d1aa86d5" kindref="member">py_getattr</ref>.call(&amp;result,<sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a9c0069c03b9c5ab553f49b6cc790f8e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a9c0069c03b9c5ab553f49b6cc790f8e0" kindref="member">PyObjectRef::setattr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;attr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3316eef7fb6fbfced2f80c600bad8908" kindref="member">py_setattr</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>name,<sp/>attr.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>());</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a02b9a4b5f4123474f3d2c7be438eed21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a02b9a4b5f4123474f3d2c7be438eed21" kindref="member">PyObjectRef::to_bool</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad6ddd0e21b23d1b521586e0694a80a04" kindref="member">py_to_bool</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ab33e45c3e5b581e5c1dbc74282f6f168" refkind="member"><highlight class="normal">int64_t<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ab33e45c3e5b581e5c1dbc74282f6f168" kindref="member">PyObjectRef::to_int</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a4c514ea8f04bb945cd0d0086c89e8aa3" kindref="member">py_to_int</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a2b5e4fb00fdfa866cf3cf0abf78e07e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a2b5e4fb00fdfa866cf3cf0abf78e07e1" kindref="member">PyObjectRef::isinstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1afea8e32a161fe2e4644bda2196185215" kindref="member">py_isinstance</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>type.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>());</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a9a0172d320ad1f5f696dfe04d35570d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a9a0172d320ad1f5f696dfe04d35570d5" kindref="member">PyObjectRef::dir</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_func" kindref="compound">Func&lt;void, std::string&gt;</ref><sp/>&amp;callback)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7dd7680eb550d5db3c7f902316a748c1" kindref="member">py_dir</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>callback);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a078ffdebeb6488c9b045d8d49f0f47de" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a078ffdebeb6488c9b045d8d49f0f47de" kindref="member">PyObjectRef::is</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref><sp/>==<sp/>other.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>();</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ad14d4168fbabc89c1b48186ba1df98b2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ad14d4168fbabc89c1b48186ba1df98b2" kindref="member">PyObjectRef::equals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1acf53a5711df9e4c084c8db8a0da7c742" kindref="member">py_equals</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>other.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>());</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a17d24db4d17d8aba1a9b71c79fe3aa40" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a17d24db4d17d8aba1a9b71c79fe3aa40" kindref="member">PyObjectRef::eval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;expression)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>result;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a63919a2347c856579a992996c9c26d8a" kindref="member">py_eval</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>&amp;result,<sp/>expression);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0d7ef968ad02a1d4a52251ccd16eb85f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a0d7ef968ad02a1d4a52251ccd16eb85f" kindref="member">PyObjectRef::exec</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;statement)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a22d3d2911cba5872786856d0cd41bf53" kindref="member">py_exec</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>statement);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" kindref="member">PyObjectRef::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>result;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a26ef6836021b3dc7fe2215b7fab97e9d" kindref="member">py_get</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>&amp;result,<sp/>key.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>());</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aaff2674b9d1b7ffcf0a67f8ecba9f1b6" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" kindref="member">PyObjectRef::get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>keyobj<sp/>=<sp/><ref refid="namespaceopenage_1_1py_1a4d2bbe46a5d10404c658b54f3b199551" kindref="member">py::str</ref>(key);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" kindref="member">get</ref>(keyobj);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a6ff52951c29472ef3fd427f8c627f33c" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" kindref="member">PyObjectRef::get</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>keyobj<sp/>=<sp/><ref refid="namespaceopenage_1_1py_1a1f03713cea0d4ee15fc445111404e7d7" kindref="member">py::integer</ref>(key);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a853f15a5d55d1143418e208fac044119" kindref="member">get</ref>(keyobj);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aae0a4f1161486c40b41b7f47e5b9fb96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aae0a4f1161486c40b41b7f47e5b9fb96" kindref="member">PyObjectRef::in</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;<ref refid="namespaceopenage_1_1curve_1_1tests_1afc4e799a037edab37e1e35a74da593b7" kindref="member">container</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a963c22d15551b5aa2e567e9603ef79e1" kindref="member">py_in</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>container.<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1ac75d8f60c25c4a7570dcdf83b601d639" kindref="member">get_ref</ref>());</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aad12aea6d10bda9d75570193f562645e" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1aad12aea6d10bda9d75570193f562645e" kindref="member">PyObjectRef::type</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>result;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad33eb5ce8235933127b3d7ed2f519ce7" kindref="member">py_type</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>,<sp/>&amp;result);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afd545e1817cad9ab9f5c84934d83e428" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1afd545e1817cad9ab9f5c84934d83e428" kindref="member">PyObjectRef::modulename</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1aec589471ebd2cf0deea9cb901fa5b120" kindref="member">py_modulename</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a912e76dc7854f9c1816533f6f8571767" refkind="member"><highlight class="normal">std::string<sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a912e76dc7854f9c1816533f6f8571767" kindref="member">PyObjectRef::classname</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1pyinterface_1a4912d8bb9e44d51c84e6363694941f42" kindref="member">py_classname</ref>.call(this-&gt;<ref refid="classopenage_1_1pyinterface_1_1_py_object_ref_1a71d239927cc521d7d6cd2ff3f0e724ba" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="namespaceopenage_1_1pyinterface_1a75f2b534b1258ff5d4578f171c3f1caa" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespaceopenage_1_1pyinterface_1a75f2b534b1258ff5d4578f171c3f1caa" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/>&amp;<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="compiler_8h_1ac6c45889010c1bd68631771b64f18101" kindref="member">unlikely</ref>(<ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>.get_ref()<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PyObjectRef[null]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PyObjectRef[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="constinit__vector_8cpp_1aad68795cb6d982f4dda0a4b91a8c1577" kindref="member">ref</ref>.repr()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a7866f2cf6f90156274ac6b83776e73d9" kindref="member">py_xincref</ref>;</highlight></codeline>
<codeline lineno="273" refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1ab5131b0e0209f78e76c5556cd7371dd7" kindref="member">py_xdecref</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="namespaceopenage_1_1pyinterface_1aee648d1c95091e0207f3bf9d4f69dd01" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1aee648d1c95091e0207f3bf9d4f69dd01" kindref="member">py_str</ref>;</highlight></codeline>
<codeline lineno="276" refid="namespaceopenage_1_1pyinterface_1afc5196e488904c84cd675b55494f3695" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1afc5196e488904c84cd675b55494f3695" kindref="member">py_repr</ref>;</highlight></codeline>
<codeline lineno="277" refid="namespaceopenage_1_1pyinterface_1a1da67fe4551652e4267a218123e27309" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a1da67fe4551652e4267a218123e27309" kindref="member">py_bytes</ref>;</highlight></codeline>
<codeline lineno="278" refid="namespaceopenage_1_1pyinterface_1ad0be0c0750d33fff88a405db89a1dbe7" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;int, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad0be0c0750d33fff88a405db89a1dbe7" kindref="member">py_len</ref>;</highlight></codeline>
<codeline lineno="279" refid="namespaceopenage_1_1pyinterface_1a2ff686c130c1870c58243e9f9530685a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a2ff686c130c1870c58243e9f9530685a" kindref="member">py_callable</ref>;</highlight></codeline>
<codeline lineno="280" refid="namespaceopenage_1_1pyinterface_1a63957aa9bf0c9835493a16ff6b543418" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a63957aa9bf0c9835493a16ff6b543418" kindref="member">py_call0</ref>;</highlight></codeline>
<codeline lineno="281" refid="namespaceopenage_1_1pyinterface_1a8aa560a3c62f746b36bb98e84bf1934c" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::vector&lt;PyObject *&gt;</ref>&amp;&gt;<sp/><ref refid="namespaceopenage_1_1pyinterface_1a8aa560a3c62f746b36bb98e84bf1934c" kindref="member">py_calln</ref>;</highlight></codeline>
<codeline lineno="282" refid="namespaceopenage_1_1pyinterface_1a72f6244131021857b5da82ec1a2b60b4" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *, std::string&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a72f6244131021857b5da82ec1a2b60b4" kindref="member">py_hasattr</ref>;</highlight></codeline>
<codeline lineno="283" refid="namespaceopenage_1_1pyinterface_1a3cf5d417d7e8b932bd437163d1aa86d5" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, PyObject *, std::string&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3cf5d417d7e8b932bd437163d1aa86d5" kindref="member">py_getattr</ref>;</highlight></codeline>
<codeline lineno="284" refid="namespaceopenage_1_1pyinterface_1a3316eef7fb6fbfced2f80c600bad8908" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3316eef7fb6fbfced2f80c600bad8908" kindref="member">py_setattr</ref>;</highlight></codeline>
<codeline lineno="285" refid="namespaceopenage_1_1pyinterface_1afea8e32a161fe2e4644bda2196185215" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1afea8e32a161fe2e4644bda2196185215" kindref="member">py_isinstance</ref>;</highlight></codeline>
<codeline lineno="286" refid="namespaceopenage_1_1pyinterface_1ad6ddd0e21b23d1b521586e0694a80a04" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad6ddd0e21b23d1b521586e0694a80a04" kindref="member">py_to_bool</ref>;</highlight></codeline>
<codeline lineno="287" refid="namespaceopenage_1_1pyinterface_1a4c514ea8f04bb945cd0d0086c89e8aa3" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;int64_t, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a4c514ea8f04bb945cd0d0086c89e8aa3" kindref="member">py_to_int</ref>;</highlight></codeline>
<codeline lineno="288" refid="namespaceopenage_1_1pyinterface_1a7dd7680eb550d5db3c7f902316a748c1" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, Func&lt;void, std::string&gt;</ref>&gt;<sp/><ref refid="namespaceopenage_1_1pyinterface_1a7dd7680eb550d5db3c7f902316a748c1" kindref="member">py_dir</ref>;</highlight></codeline>
<codeline lineno="289" refid="namespaceopenage_1_1pyinterface_1acf53a5711df9e4c084c8db8a0da7c742" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1acf53a5711df9e4c084c8db8a0da7c742" kindref="member">py_equals</ref>;</highlight></codeline>
<codeline lineno="290" refid="namespaceopenage_1_1pyinterface_1a22d3d2911cba5872786856d0cd41bf53" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, std::string&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a22d3d2911cba5872786856d0cd41bf53" kindref="member">py_exec</ref>;</highlight></codeline>
<codeline lineno="291" refid="namespaceopenage_1_1pyinterface_1a63919a2347c856579a992996c9c26d8a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, PyObjectRef *, std::string&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a63919a2347c856579a992996c9c26d8a" kindref="member">py_eval</ref>;</highlight></codeline>
<codeline lineno="292" refid="namespaceopenage_1_1pyinterface_1a26ef6836021b3dc7fe2215b7fab97e9d" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, PyObjectRef *, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a26ef6836021b3dc7fe2215b7fab97e9d" kindref="member">py_get</ref>;</highlight></codeline>
<codeline lineno="293" refid="namespaceopenage_1_1pyinterface_1a963c22d15551b5aa2e567e9603ef79e1" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;bool, PyObject *, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a963c22d15551b5aa2e567e9603ef79e1" kindref="member">py_in</ref>;</highlight></codeline>
<codeline lineno="294" refid="namespaceopenage_1_1pyinterface_1ad33eb5ce8235933127b3d7ed2f519ce7" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObject *, PyObjectRef *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad33eb5ce8235933127b3d7ed2f519ce7" kindref="member">py_type</ref>;</highlight></codeline>
<codeline lineno="295" refid="namespaceopenage_1_1pyinterface_1aec589471ebd2cf0deea9cb901fa5b120" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1aec589471ebd2cf0deea9cb901fa5b120" kindref="member">py_modulename</ref>;</highlight></codeline>
<codeline lineno="296" refid="namespaceopenage_1_1pyinterface_1a4912d8bb9e44d51c84e6363694941f42" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;std::string, PyObject *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a4912d8bb9e44d51c84e6363694941f42" kindref="member">py_classname</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="namespaceopenage_1_1pyinterface_1a5e10f968ee5f44d64489eff5791a2b93" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a5e10f968ee5f44d64489eff5791a2b93" kindref="member">py_builtin</ref>;</highlight></codeline>
<codeline lineno="299" refid="namespaceopenage_1_1pyinterface_1a019072ec9dc9b26854864b8d639545f6" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a019072ec9dc9b26854864b8d639545f6" kindref="member">py_import</ref>;</highlight></codeline>
<codeline lineno="300" refid="namespaceopenage_1_1pyinterface_1acf94e2be78e15a835eef9c8346c16f14" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1acf94e2be78e15a835eef9c8346c16f14" kindref="member">py_createstr</ref>;</highlight></codeline>
<codeline lineno="301" refid="namespaceopenage_1_1pyinterface_1abc65c10c883e9b61d86316e6e0d71318" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, const std::string&amp;&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1abc65c10c883e9b61d86316e6e0d71318" kindref="member">py_createbytes</ref>;</highlight></codeline>
<codeline lineno="302" refid="namespaceopenage_1_1pyinterface_1afdb5d7025dc1ed4583dfdf6d14ecbb2c" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *, int&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1afdb5d7025dc1ed4583dfdf6d14ecbb2c" kindref="member">py_createint</ref>;</highlight></codeline>
<codeline lineno="303" refid="namespaceopenage_1_1pyinterface_1afd53890300da035a2fa6cf0366f3f755" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1afd53890300da035a2fa6cf0366f3f755" kindref="member">py_createdict</ref>;</highlight></codeline>
<codeline lineno="304" refid="namespaceopenage_1_1pyinterface_1a3b908fa94eb8b9a2209772fb111795a9" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_if_func" kindref="compound">PyIfFunc&lt;void, PyObjectRef *&gt;</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3b908fa94eb8b9a2209772fb111795a9" kindref="member">py_createlist</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="namespaceopenage_1_1pyinterface_1a71a44ad87b997a932215fa57c7643a19" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a71a44ad87b997a932215fa57c7643a19" kindref="member">None</ref>;</highlight></codeline>
<codeline lineno="307" refid="namespaceopenage_1_1pyinterface_1a09953e7373020e0af78c70ea155754ee" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1a09953e7373020e0af78c70ea155754ee" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="308" refid="namespaceopenage_1_1pyinterface_1ad71d6296abe650b46217af0efb0725a2" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">PyObjectRef</ref><sp/><ref refid="namespaceopenage_1_1pyinterface_1ad71d6296abe650b46217af0efb0725a2" kindref="member">False</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>pyinterface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="namespaceopenage_1_1py" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">pyinterface;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="namespaceopenage_1_1py_1ac68b5313b47c4615286f64c7d996a903" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1ac68b5313b47c4615286f64c7d996a903" kindref="member">builtin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a5e10f968ee5f44d64489eff5791a2b93" kindref="member">py_builtin</ref>.call(&amp;result,<sp/>name);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="namespaceopenage_1_1py_1a74056a2f34d9bc9aed2a687a85794e7a" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a019072ec9dc9b26854864b8d639545f6" kindref="member">py_import</ref>.call(&amp;result,<sp/>name);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="namespaceopenage_1_1py_1a4d2bbe46a5d10404c658b54f3b199551" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1a4d2bbe46a5d10404c658b54f3b199551" kindref="member">str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1acf94e2be78e15a835eef9c8346c16f14" kindref="member">py_createstr</ref>.call(&amp;result,<sp/>value);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="namespaceopenage_1_1py_1a5108334e805e942718d59b97160775d1" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1a5108334e805e942718d59b97160775d1" kindref="member">bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;value)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1abc65c10c883e9b61d86316e6e0d71318" kindref="member">py_createbytes</ref>.call(&amp;result,<sp/>value);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="namespaceopenage_1_1py_1a1f03713cea0d4ee15fc445111404e7d7" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1a1f03713cea0d4ee15fc445111404e7d7" kindref="member">integer</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1afdb5d7025dc1ed4583dfdf6d14ecbb2c" kindref="member">py_createint</ref>.call(&amp;result,<sp/>value);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="namespaceopenage_1_1py_1a5ba80af3e9224d2de11179ce232f75d9" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1a5ba80af3e9224d2de11179ce232f75d9" kindref="member">dict</ref>()<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1afd53890300da035a2fa6cf0366f3f755" kindref="member">py_createdict</ref>.call(&amp;result);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359" refid="namespaceopenage_1_1py_1a58cbca251b8e2118e0a6b9b0b78a7b32" refkind="member"><highlight class="normal"><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/><ref refid="namespaceopenage_1_1py_1a58cbca251b8e2118e0a6b9b0b78a7b32" kindref="member">list</ref>()<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classopenage_1_1pyinterface_1_1_py_object_ref" kindref="compound">Obj</ref><sp/>result;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceopenage_1_1pyinterface_1a3b908fa94eb8b9a2209772fb111795a9" kindref="member">py_createlist</ref>.call(&amp;result);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>py</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>openage</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libopenage/pyinterface/pyobject.cpp"/>
  </compounddef>
</doxygen>
