<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="global__rng_8cpp" kind="file" language="C++">
    <compoundname>global_rng.cpp</compoundname>
    <includes refid="rng_8h" local="yes">rng.h</includes>
    <includes refid="global__rng_8h" local="yes">global_rng.h</includes>
    <includes local="no">mutex</includes>
    <incdepgraph>
      <node id="23797">
        <label>C:/Users/Jameson/Documents/git-projects/openage/libopenage/rng/global_rng.cpp</label>
        <link refid="global__rng_8cpp"/>
        <childnode refid="23798" relation="include">
        </childnode>
        <childnode refid="23801" relation="include">
        </childnode>
        <childnode refid="23802" relation="include">
        </childnode>
      </node>
      <node id="23800">
        <label>string</label>
      </node>
      <node id="23798">
        <label>rng.h</label>
        <link refid="rng_8h"/>
        <childnode refid="23799" relation="include">
        </childnode>
        <childnode refid="23800" relation="include">
        </childnode>
      </node>
      <node id="23799">
        <label>iostream</label>
      </node>
      <node id="23801">
        <label>global_rng.h</label>
        <link refid="global__rng_8h"/>
      </node>
      <node id="23802">
        <label>mutex</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaceopenage">openage</innernamespace>
    <innernamespace refid="namespaceopenage_1_1rng">openage::rng</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2015-2016<sp/>the<sp/>openage<sp/>authors.<sp/>See<sp/>copying.md<sp/>for<sp/>legal<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rng_8h" kindref="compound">rng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="global__rng_8h" kindref="compound">global_rng.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceopenage" kindref="compound">openage</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">rng<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/><ref refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" kindref="member">rand_mutex</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classopenage_1_1rng_1_1_r_n_g" kindref="compound">RNG</ref><sp/><ref refid="namespaceopenage_1_1rng_1a02d68ac1512d65be1f7ab591f925b734" kindref="member">global_rand_gen</ref>(<ref refid="namespaceopenage_1_1rng_1a595e7ab593687bbb092d69186c65c45a" kindref="member">global_seed</ref>());</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="namespaceopenage_1_1rng_1a595e7ab593687bbb092d69186c65c45a" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a595e7ab593687bbb092d69186c65c45a" kindref="member">global_seed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>seed<sp/>=<sp/><ref refid="namespaceopenage_1_1rng_1a510f1a8aa7487e18b60b1844cd2af86a" kindref="member">random_seed</ref>();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seed;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespaceopenage_1_1rng_1ac3379af641e8c899794429fd6e8fa70a" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1ac3379af641e8c899794429fd6e8fa70a" kindref="member">random</ref>()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>rand_lock(<ref refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" kindref="member">rand_mutex</ref>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a02d68ac1512d65be1f7ab591f925b734" kindref="member">global_rand_gen</ref>.<ref refid="classopenage_1_1rng_1_1_r_n_g_1a95f8c2c7e00ab2531e0e6c33ae70e154" kindref="member">random</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="namespaceopenage_1_1rng_1a398e36f7942536cd461ca212dfee6cb5" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespaceopenage_1_1rng_1a398e36f7942536cd461ca212dfee6cb5" kindref="member">random_range</ref>(uint64_t<sp/>lower,<sp/>uint64_t<sp/>upper)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>rand_lock(<ref refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" kindref="member">rand_mutex</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a02d68ac1512d65be1f7ab591f925b734" kindref="member">global_rand_gen</ref>.<ref refid="classopenage_1_1rng_1_1_r_n_g_1ad7b2ba8c495b7ee100b7708b633bc060" kindref="member">random_range</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceopenage_1_1rng_1aadfcdd4f8b418047382e29828d81b157" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1aadfcdd4f8b418047382e29828d81b157" kindref="member">real</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>rand_lock(<ref refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" kindref="member">rand_mutex</ref>);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a02d68ac1512d65be1f7ab591f925b734" kindref="member">global_rand_gen</ref>.<ref refid="classopenage_1_1rng_1_1_r_n_g_1a2d906c2de63a31a89589a34bac2a3dd8" kindref="member">real</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="namespaceopenage_1_1rng_1a459eb99bb9ad49587a1cbb0bb3de8750" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a459eb99bb9ad49587a1cbb0bb3de8750" kindref="member">real_range</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lower,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upper)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>rand_lock(<ref refid="namespaceopenage_1_1rng_1a30037f3422443d178167adf0e31acc05" kindref="member">rand_mutex</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceopenage_1_1rng_1a02d68ac1512d65be1f7ab591f925b734" kindref="member">global_rand_gen</ref>.<ref refid="classopenage_1_1rng_1_1_r_n_g_1a7f8fa5c414eb4888ee638441585fdcec" kindref="member">real_range</ref>(lower,<sp/>upper);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}}<sp/></highlight><highlight class="comment">//<sp/>rng::openage</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/Jameson/Documents/git-projects/openage/libopenage/rng/global_rng.cpp"/>
  </compounddef>
</doxygen>
